var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __commonJS = (callback, module) => () => {
  if (!module) {
    module = {exports: {}};
    callback(module.exports, module);
  }
  return module.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module, desc) => {
  __markAsModule(target);
  if (module && typeof module === "object" || typeof module === "function") {
    for (let key of __getOwnPropNames(module))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module) => {
  if (module && module.__esModule)
    return module;
  return __exportStar(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", {value: module, enumerable: true}), module);
};
var __publicField = (obj, key, value2) => {
  if (typeof key !== "symbol")
    key += "";
  if (key in obj)
    return __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value: value2});
  return obj[key] = value2;
};

// snowpack/pkg/@visx/tooltip.js
var require_tooltip = __commonJS((exports, module) => {
  __export(exports, {
    defaultStyles: () => defaultStyles3,
    useTooltip: () => useTooltip4,
    useTooltipInPortal: () => useTooltipInPortal2
  });
  function _objectWithoutPropertiesLoose11(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _extends13() {
    _extends13 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends13.apply(this, arguments);
  }
  function useTooltip4(initialTooltipState) {
    var _useState = react.useState(_extends13({
      tooltipOpen: false
    }, initialTooltipState)), tooltipState = _useState[0], setTooltipState = _useState[1];
    var showTooltip = react.useCallback(function(showArgs) {
      return setTooltipState(typeof showArgs === "function" ? function(_ref) {
        _ref.tooltipOpen;
        var show2 = _objectWithoutPropertiesLoose11(_ref, ["tooltipOpen"]);
        return _extends13({}, showArgs(show2), {
          tooltipOpen: true
        });
      } : {
        tooltipOpen: true,
        tooltipLeft: showArgs.tooltipLeft,
        tooltipTop: showArgs.tooltipTop,
        tooltipData: showArgs.tooltipData
      });
    }, [setTooltipState]);
    var hideTooltip2 = react.useCallback(function() {
      return setTooltipState({
        tooltipOpen: false,
        tooltipLeft: void 0,
        tooltipTop: void 0,
        tooltipData: void 0
      });
    }, [setTooltipState]);
    return {
      tooltipOpen: tooltipState.tooltipOpen,
      tooltipLeft: tooltipState.tooltipLeft,
      tooltipTop: tooltipState.tooltipTop,
      tooltipData: tooltipState.tooltipData,
      updateTooltip: setTooltipState,
      showTooltip,
      hideTooltip: hideTooltip2
    };
  }
  function debounce2(func, wait, immediate) {
    var timeout3, args, context, timestamp, result;
    if (wait == null)
      wait = 100;
    function later() {
      var last2 = Date.now() - timestamp;
      if (last2 < wait && last2 >= 0) {
        timeout3 = setTimeout(later, wait - last2);
      } else {
        timeout3 = null;
        if (!immediate) {
          result = func.apply(context, args);
          context = args = null;
        }
      }
    }
    var debounced = function() {
      context = this;
      args = arguments;
      timestamp = Date.now();
      var callNow = immediate && !timeout3;
      if (!timeout3)
        timeout3 = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }
      return result;
    };
    debounced.clear = function() {
      if (timeout3) {
        clearTimeout(timeout3);
        timeout3 = null;
      }
    };
    debounced.flush = function() {
      if (timeout3) {
        result = func.apply(context, args);
        context = args = null;
        clearTimeout(timeout3);
        timeout3 = null;
      }
    };
    return debounced;
  }
  debounce2.debounce = debounce2;
  var debounce_12 = debounce2;
  function useMeasure3({
    debounce: debounce$1,
    scroll,
    polyfill: polyfill3
  } = {
    debounce: 0,
    scroll: false
  }) {
    const ResizeObserver2 = polyfill3 || (typeof window === "undefined" ? class ResizeObserver {
    } : window.ResizeObserver);
    if (!ResizeObserver2) {
      throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");
    }
    const [bounds, set4] = react.useState({
      left: 0,
      top: 0,
      width: 0,
      height: 0,
      bottom: 0,
      right: 0,
      x: 0,
      y: 0
    });
    const state = react.useRef({
      element: null,
      scrollContainers: null,
      resizeObserver: null,
      lastBounds: bounds
    });
    const scrollDebounce = debounce$1 ? typeof debounce$1 === "number" ? debounce$1 : debounce$1.scroll : null;
    const resizeDebounce = debounce$1 ? typeof debounce$1 === "number" ? debounce$1 : debounce$1.resize : null;
    const [forceRefresh, resizeChange, scrollChange] = react.useMemo(() => {
      const callback = () => {
        if (!state.current.element)
          return;
        const {
          left: left2,
          top: top2,
          width,
          height,
          bottom: bottom2,
          right: right2,
          x: x5,
          y: y7
        } = state.current.element.getBoundingClientRect();
        const size = {
          left: left2,
          top: top2,
          width,
          height,
          bottom: bottom2,
          right: right2,
          x: x5,
          y: y7
        };
        Object.freeze(size);
        if (!areBoundsEqual(state.current.lastBounds, size))
          set4(state.current.lastBounds = size);
      };
      return [callback, resizeDebounce ? debounce_12.debounce(callback, resizeDebounce) : callback, scrollDebounce ? debounce_12.debounce(callback, scrollDebounce) : callback];
    }, [set4, scrollDebounce, resizeDebounce]);
    function removeListeners() {
      if (state.current.scrollContainers) {
        state.current.scrollContainers.forEach((element) => element.removeEventListener("scroll", scrollChange, true));
        state.current.scrollContainers = null;
      }
      if (state.current.resizeObserver) {
        state.current.resizeObserver.disconnect();
        state.current.resizeObserver = null;
      }
    }
    function addListeners() {
      if (!state.current.element)
        return;
      state.current.resizeObserver = new ResizeObserver2(scrollChange);
      state.current.resizeObserver.observe(state.current.element);
      if (scroll && state.current.scrollContainers) {
        state.current.scrollContainers.forEach((scrollContainer) => scrollContainer.addEventListener("scroll", scrollChange, {
          capture: true,
          passive: true
        }));
      }
    }
    const ref = (node) => {
      if (!node || node === state.current.element)
        return;
      removeListeners();
      state.current.element = node;
      state.current.scrollContainers = findScrollContainers(node);
      addListeners();
    };
    useOnWindowScroll(scrollChange, Boolean(scroll));
    useOnWindowResize(resizeChange);
    react.useEffect(() => {
      removeListeners();
      addListeners();
    }, [scroll, scrollChange, resizeChange]);
    react.useEffect(() => removeListeners, []);
    return [ref, bounds, forceRefresh];
  }
  function useOnWindowResize(onWindowResize) {
    react.useEffect(() => {
      const cb2 = onWindowResize;
      window.addEventListener("resize", cb2);
      return () => void window.removeEventListener("resize", cb2);
    }, [onWindowResize]);
  }
  function useOnWindowScroll(onScroll, enabled) {
    react.useEffect(() => {
      if (enabled) {
        const cb2 = onScroll;
        window.addEventListener("scroll", cb2, {
          capture: true,
          passive: true
        });
        return () => void window.removeEventListener("scroll", cb2, true);
      }
    }, [onScroll, enabled]);
  }
  function findScrollContainers(element) {
    const result = [];
    if (!element || element === document.body)
      return result;
    const {
      overflow,
      overflowX,
      overflowY
    } = window.getComputedStyle(element);
    if ([overflow, overflowX, overflowY].some((prop) => prop === "auto" || prop === "scroll"))
      result.push(element);
    return [...result, ...findScrollContainers(element.parentElement)];
  }
  var keys4 = ["x", "y", "top", "bottom", "left", "right", "width", "height"];
  var areBoundsEqual = (a3, b10) => keys4.every((key) => a3[key] === b10[key]);
  if (typeof module !== "undefined" && Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(module, "exports").writable) {
    module.exports = useMeasure3;
  }
  function _assertThisInitialized4(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  function _inheritsLoose3(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _defineProperty8(obj, key, value2) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value2;
    }
    return obj;
  }
  var Portal3 = /* @__PURE__ */ function(_React$PureComponent) {
    _inheritsLoose3(Portal4, _React$PureComponent);
    function Portal4() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
      _defineProperty8(_assertThisInitialized4(_this), "node", void 0);
      return _this;
    }
    var _proto = Portal4.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this.node && document.body) {
        document.body.removeChild(this.node);
        delete this.node;
      }
    };
    _proto.render = function render2() {
      if (!this.node && typeof document !== "undefined") {
        this.node = document.createElement("div");
        if (this.props.zIndex != null)
          this.node.style.zIndex = "" + this.props.zIndex;
        document.body.append(this.node);
      }
      if (!this.node) {
        return null;
      }
      return /* @__PURE__ */ reactDom.createPortal(this.props.children, this.node);
    };
    return Portal4;
  }(react.PureComponent);
  _defineProperty8(Portal3, "propTypes", {
    zIndex: propTypes.number
  });
  function _extends$19() {
    _extends$19 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends$19.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose$18(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  var defaultStyles3 = {
    position: "absolute",
    backgroundColor: "white",
    color: "#666666",
    padding: ".3rem .5rem",
    borderRadius: "3px",
    fontSize: "14px",
    boxShadow: "0 1px 2px rgba(33,33,33,0.2)",
    lineHeight: "1em",
    pointerEvents: "none"
  };
  function Tooltip4(_ref) {
    var className = _ref.className, top2 = _ref.top, left2 = _ref.left, _ref$offsetLeft = _ref.offsetLeft, offsetLeft = _ref$offsetLeft === void 0 ? 10 : _ref$offsetLeft, _ref$offsetTop = _ref.offsetTop, offsetTop = _ref$offsetTop === void 0 ? 10 : _ref$offsetTop, _ref$style = _ref.style, style = _ref$style === void 0 ? defaultStyles3 : _ref$style, children2 = _ref.children, _ref$unstyled = _ref.unstyled, unstyled = _ref$unstyled === void 0 ? false : _ref$unstyled, _ref$applyPositionSty = _ref.applyPositionStyle, applyPositionStyle = _ref$applyPositionSty === void 0 ? false : _ref$applyPositionSty, restProps = _objectWithoutPropertiesLoose$18(_ref, ["className", "top", "left", "offsetLeft", "offsetTop", "style", "children", "unstyled", "applyPositionStyle"]);
    return /* @__PURE__ */ react.createElement("div", _extends$19({
      className: classnames("visx-tooltip", className),
      style: _extends$19({
        top: top2 == null || offsetTop == null ? top2 : top2 + offsetTop,
        left: left2 == null || offsetLeft == null ? left2 : left2 + offsetLeft
      }, applyPositionStyle && {
        position: "absolute"
      }, !unstyled && style)
    }, restProps), children2);
  }
  Tooltip4.propTypes = {
    children: propTypes.node,
    className: propTypes.string,
    left: propTypes.number,
    offsetLeft: propTypes.number,
    offsetTop: propTypes.number,
    top: propTypes.number,
    applyPositionStyle: propTypes.bool,
    unstyled: propTypes.bool
  };
  function _extends$29() {
    _extends$29 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends$29.apply(this, arguments);
  }
  function _assertThisInitialized$14(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  function _inheritsLoose$12(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _defineProperty$16(obj, key, value2) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value2;
    }
    return obj;
  }
  var emptyRect2 = {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    width: 0,
    height: 0
  };
  function withBoundingRects(BaseComponent) {
    var _class, _temp;
    return _temp = _class = /* @__PURE__ */ function(_React$PureComponent) {
      _inheritsLoose$12(WrappedComponent, _React$PureComponent);
      function WrappedComponent(props) {
        var _this;
        _this = _React$PureComponent.call(this, props) || this;
        _defineProperty$16(_assertThisInitialized$14(_this), "node", void 0);
        _this.state = {
          rect: void 0,
          parentRect: void 0
        };
        _this.getRects = _this.getRects.bind(_assertThisInitialized$14(_this));
        return _this;
      }
      var _proto = WrappedComponent.prototype;
      _proto.componentDidMount = function componentDidMount() {
        var _this2 = this;
        this.node = reactDom.findDOMNode(this);
        this.setState(function() {
          return _this2.getRects();
        });
      };
      _proto.getRects = function getRects() {
        if (!this.node)
          return this.state;
        var node = this.node;
        var parentNode = node.parentNode;
        var rect = node.getBoundingClientRect ? node.getBoundingClientRect() : emptyRect2;
        var parentRect = parentNode && parentNode.getBoundingClientRect ? parentNode.getBoundingClientRect() : emptyRect2;
        return {
          rect,
          parentRect
        };
      };
      _proto.render = function render2() {
        return /* @__PURE__ */ react.createElement(BaseComponent, _extends$29({
          getRects: this.getRects
        }, this.state, this.props));
      };
      return WrappedComponent;
    }(react.PureComponent), _defineProperty$16(_class, "displayName", "withBoundingRects(" + (BaseComponent.displayName || "") + ")"), _temp;
  }
  function _extends$37() {
    _extends$37 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends$37.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose$27(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function TooltipWithBounds(_ref) {
    var children2 = _ref.children;
    _ref.getRects;
    var _ref$left = _ref.left, initialLeft = _ref$left === void 0 ? 0 : _ref$left, _ref$offsetLeft = _ref.offsetLeft, offsetLeft = _ref$offsetLeft === void 0 ? 10 : _ref$offsetLeft, _ref$offsetTop = _ref.offsetTop, offsetTop = _ref$offsetTop === void 0 ? 10 : _ref$offsetTop, parentBounds = _ref.parentRect, ownBounds = _ref.rect, _ref$style = _ref.style, style = _ref$style === void 0 ? defaultStyles3 : _ref$style, _ref$top = _ref.top, initialTop = _ref$top === void 0 ? 0 : _ref$top, _ref$unstyled = _ref.unstyled, unstyled = _ref$unstyled === void 0 ? false : _ref$unstyled, otherProps = _objectWithoutPropertiesLoose$27(_ref, ["children", "getRects", "left", "offsetLeft", "offsetTop", "parentRect", "rect", "style", "top", "unstyled"]);
    var left2 = initialLeft;
    var top2 = initialTop;
    if (ownBounds && parentBounds) {
      var placeTooltipLeft = false;
      var placeTooltipUp = false;
      if (parentBounds.width) {
        var rightPlacementClippedPx = left2 + offsetLeft + ownBounds.width - parentBounds.width;
        var leftPlacementClippedPx = ownBounds.width - left2 - offsetLeft;
        placeTooltipLeft = rightPlacementClippedPx > 0 && rightPlacementClippedPx > leftPlacementClippedPx;
      } else {
        var _rightPlacementClippedPx = left2 + offsetLeft + ownBounds.width - window.innerWidth;
        var _leftPlacementClippedPx = ownBounds.width - left2 - offsetLeft;
        placeTooltipLeft = _rightPlacementClippedPx > 0 && _rightPlacementClippedPx > _leftPlacementClippedPx;
      }
      if (parentBounds.height) {
        var bottomPlacementClippedPx = top2 + offsetTop + ownBounds.height - parentBounds.height;
        var topPlacementClippedPx = ownBounds.height - top2 - offsetTop;
        placeTooltipUp = bottomPlacementClippedPx > 0 && bottomPlacementClippedPx > topPlacementClippedPx;
      } else {
        placeTooltipUp = top2 + offsetTop + ownBounds.height > window.innerHeight;
      }
      left2 = placeTooltipLeft ? left2 - ownBounds.width - offsetLeft : left2 + offsetLeft;
      top2 = placeTooltipUp ? top2 - ownBounds.height - offsetTop : top2 + offsetTop;
    }
    left2 = Math.round(left2);
    top2 = Math.round(top2);
    return /* @__PURE__ */ react.createElement(Tooltip4, _extends$37({
      style: _extends$37({
        left: 0,
        top: 0,
        transform: "translate(" + left2 + "px, " + top2 + "px)"
      }, !unstyled && style)
    }, otherProps), children2);
  }
  var TooltipWithBounds$1 = withBoundingRects(TooltipWithBounds);
  function _extends$47() {
    _extends$47 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends$47.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose$33(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function useTooltipInPortal2(_temp) {
    var _ref = _temp === void 0 ? {} : _temp, _ref$detectBounds = _ref.detectBounds, detectBoundsOption = _ref$detectBounds === void 0 ? true : _ref$detectBounds, useMeasureOptions = _objectWithoutPropertiesLoose$33(_ref, ["detectBounds"]);
    var _useMeasure = useMeasure3(useMeasureOptions), containerRef = _useMeasure[0], containerBounds = _useMeasure[1];
    var TooltipInPortal = react.useMemo(function() {
      return function(_ref2) {
        var _ref2$left = _ref2.left, containerLeft = _ref2$left === void 0 ? 0 : _ref2$left, _ref2$top = _ref2.top, containerTop = _ref2$top === void 0 ? 0 : _ref2$top, detectBoundsProp = _ref2.detectBounds, tooltipProps = _objectWithoutPropertiesLoose$33(_ref2, ["left", "top", "detectBounds"]);
        var detectBounds = detectBoundsProp == null ? detectBoundsOption : detectBoundsProp;
        var TooltipComponent = detectBounds ? TooltipWithBounds$1 : Tooltip4;
        var portalLeft = containerLeft + (containerBounds.left || 0) + window.scrollX;
        var portalTop = containerTop + (containerBounds.top || 0) + window.scrollY;
        return /* @__PURE__ */ react.createElement(Portal3, null, /* @__PURE__ */ react.createElement(TooltipComponent, _extends$47({
          left: portalLeft,
          top: portalTop
        }, tooltipProps)));
      };
    }, [detectBoundsOption, containerBounds.left, containerBounds.top]);
    return {
      containerRef,
      containerBounds,
      TooltipInPortal
    };
  }
});

// snowpack/env.js
var env_exports = {};
__export(env_exports, {
  MODE: () => MODE,
  NODE_ENV: () => NODE_ENV,
  SSR: () => SSR
});
var MODE = "production";
var NODE_ENV = "production";
var SSR = false;

// snowpack/pkg/common/_commonjsHelpers-4f955397.js
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x5) {
  return x5 && x5.__esModule && Object.prototype.hasOwnProperty.call(x5, "default") ? x5["default"] : x5;
}
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path3, base) {
      return commonjsRequire(path3, base === void 0 || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}

// snowpack/pkg/common/index-abdc4d2d.js
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n3) {
      return test2[n3];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
  var from;
  var to2 = toObject(target);
  var symbols2;
  for (var s4 = 1; s4 < arguments.length; s4++) {
    from = Object(arguments[s4]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to2[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols2 = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols2.length; i++) {
        if (propIsEnumerable.call(from, symbols2[i])) {
          to2[symbols2[i]] = from[symbols2[i]];
        }
      }
    }
  }
  return to2;
};
var react_production_min = createCommonjsModule(function(module, exports) {
  var n3 = 60103, p3 = 60106;
  exports.Fragment = 60107;
  exports.StrictMode = 60108;
  exports.Profiler = 60114;
  var q2 = 60109, r3 = 60110, t4 = 60112;
  exports.Suspense = 60113;
  var u2 = 60115, v3 = 60116;
  if (typeof Symbol === "function" && Symbol.for) {
    var w3 = Symbol.for;
    n3 = w3("react.element");
    p3 = w3("react.portal");
    exports.Fragment = w3("react.fragment");
    exports.StrictMode = w3("react.strict_mode");
    exports.Profiler = w3("react.profiler");
    q2 = w3("react.provider");
    r3 = w3("react.context");
    t4 = w3("react.forward_ref");
    exports.Suspense = w3("react.suspense");
    u2 = w3("react.memo");
    v3 = w3("react.lazy");
  }
  var x5 = typeof Symbol === "function" && Symbol.iterator;
  function y7(a3) {
    if (a3 === null || typeof a3 !== "object")
      return null;
    a3 = x5 && a3[x5] || a3["@@iterator"];
    return typeof a3 === "function" ? a3 : null;
  }
  function z3(a3) {
    for (var b10 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a3, c5 = 1; c5 < arguments.length; c5++)
      b10 += "&args[]=" + encodeURIComponent(arguments[c5]);
    return "Minified React error #" + a3 + "; visit " + b10 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var A6 = {isMounted: function() {
    return false;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  }}, B6 = {};
  function C5(a3, b10, c5) {
    this.props = a3;
    this.context = b10;
    this.refs = B6;
    this.updater = c5 || A6;
  }
  C5.prototype.isReactComponent = {};
  C5.prototype.setState = function(a3, b10) {
    if (typeof a3 !== "object" && typeof a3 !== "function" && a3 != null)
      throw Error(z3(85));
    this.updater.enqueueSetState(this, a3, b10, "setState");
  };
  C5.prototype.forceUpdate = function(a3) {
    this.updater.enqueueForceUpdate(this, a3, "forceUpdate");
  };
  function D6() {
  }
  D6.prototype = C5.prototype;
  function E5(a3, b10, c5) {
    this.props = a3;
    this.context = b10;
    this.refs = B6;
    this.updater = c5 || A6;
  }
  var F4 = E5.prototype = new D6();
  F4.constructor = E5;
  objectAssign(F4, C5.prototype);
  F4.isPureReactComponent = true;
  var G4 = {current: null}, H4 = Object.prototype.hasOwnProperty, I3 = {key: true, ref: true, __self: true, __source: true};
  function J3(a3, b10, c5) {
    var e3, d2 = {}, k6 = null, h2 = null;
    if (b10 != null)
      for (e3 in b10.ref !== void 0 && (h2 = b10.ref), b10.key !== void 0 && (k6 = "" + b10.key), b10)
        H4.call(b10, e3) && !I3.hasOwnProperty(e3) && (d2[e3] = b10[e3]);
    var g2 = arguments.length - 2;
    if (g2 === 1)
      d2.children = c5;
    else if (1 < g2) {
      for (var f3 = Array(g2), m3 = 0; m3 < g2; m3++)
        f3[m3] = arguments[m3 + 2];
      d2.children = f3;
    }
    if (a3 && a3.defaultProps)
      for (e3 in g2 = a3.defaultProps, g2)
        d2[e3] === void 0 && (d2[e3] = g2[e3]);
    return {$$typeof: n3, type: a3, key: k6, ref: h2, props: d2, _owner: G4.current};
  }
  function K5(a3, b10) {
    return {$$typeof: n3, type: a3.type, key: b10, ref: a3.ref, props: a3.props, _owner: a3._owner};
  }
  function L3(a3) {
    return typeof a3 === "object" && a3 !== null && a3.$$typeof === n3;
  }
  function escape(a3) {
    var b10 = {"=": "=0", ":": "=2"};
    return "$" + a3.replace(/[=:]/g, function(a4) {
      return b10[a4];
    });
  }
  var M5 = /\/+/g;
  function N3(a3, b10) {
    return typeof a3 === "object" && a3 !== null && a3.key != null ? escape("" + a3.key) : b10.toString(36);
  }
  function O3(a3, b10, c5, e3, d2) {
    var k6 = typeof a3;
    if (k6 === "undefined" || k6 === "boolean")
      a3 = null;
    var h2 = false;
    if (a3 === null)
      h2 = true;
    else
      switch (k6) {
        case "string":
        case "number":
          h2 = true;
          break;
        case "object":
          switch (a3.$$typeof) {
            case n3:
            case p3:
              h2 = true;
          }
      }
    if (h2)
      return h2 = a3, d2 = d2(h2), a3 = e3 === "" ? "." + N3(h2, 0) : e3, Array.isArray(d2) ? (c5 = "", a3 != null && (c5 = a3.replace(M5, "$&/") + "/"), O3(d2, b10, c5, "", function(a4) {
        return a4;
      })) : d2 != null && (L3(d2) && (d2 = K5(d2, c5 + (!d2.key || h2 && h2.key === d2.key ? "" : ("" + d2.key).replace(M5, "$&/") + "/") + a3)), b10.push(d2)), 1;
    h2 = 0;
    e3 = e3 === "" ? "." : e3 + ":";
    if (Array.isArray(a3))
      for (var g2 = 0; g2 < a3.length; g2++) {
        k6 = a3[g2];
        var f3 = e3 + N3(k6, g2);
        h2 += O3(k6, b10, c5, f3, d2);
      }
    else if (f3 = y7(a3), typeof f3 === "function")
      for (a3 = f3.call(a3), g2 = 0; !(k6 = a3.next()).done; )
        k6 = k6.value, f3 = e3 + N3(k6, g2++), h2 += O3(k6, b10, c5, f3, d2);
    else if (k6 === "object")
      throw b10 = "" + a3, Error(z3(31, b10 === "[object Object]" ? "object with keys {" + Object.keys(a3).join(", ") + "}" : b10));
    return h2;
  }
  function P5(a3, b10, c5) {
    if (a3 == null)
      return a3;
    var e3 = [], d2 = 0;
    O3(a3, e3, "", "", function(a4) {
      return b10.call(c5, a4, d2++);
    });
    return e3;
  }
  function Q3(a3) {
    if (a3._status === -1) {
      var b10 = a3._result;
      b10 = b10();
      a3._status = 0;
      a3._result = b10;
      b10.then(function(b11) {
        a3._status === 0 && (b11 = b11.default, a3._status = 1, a3._result = b11);
      }, function(b11) {
        a3._status === 0 && (a3._status = 2, a3._result = b11);
      });
    }
    if (a3._status === 1)
      return a3._result;
    throw a3._result;
  }
  var R3 = {current: null};
  function S4() {
    var a3 = R3.current;
    if (a3 === null)
      throw Error(z3(321));
    return a3;
  }
  var T4 = {ReactCurrentDispatcher: R3, ReactCurrentBatchConfig: {transition: 0}, ReactCurrentOwner: G4, IsSomeRendererActing: {current: false}, assign: objectAssign};
  exports.Children = {map: P5, forEach: function(a3, b10, c5) {
    P5(a3, function() {
      b10.apply(this, arguments);
    }, c5);
  }, count: function(a3) {
    var b10 = 0;
    P5(a3, function() {
      b10++;
    });
    return b10;
  }, toArray: function(a3) {
    return P5(a3, function(a4) {
      return a4;
    }) || [];
  }, only: function(a3) {
    if (!L3(a3))
      throw Error(z3(143));
    return a3;
  }};
  exports.Component = C5;
  exports.PureComponent = E5;
  exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T4;
  exports.cloneElement = function(a3, b10, c5) {
    if (a3 === null || a3 === void 0)
      throw Error(z3(267, a3));
    var e3 = objectAssign({}, a3.props), d2 = a3.key, k6 = a3.ref, h2 = a3._owner;
    if (b10 != null) {
      b10.ref !== void 0 && (k6 = b10.ref, h2 = G4.current);
      b10.key !== void 0 && (d2 = "" + b10.key);
      if (a3.type && a3.type.defaultProps)
        var g2 = a3.type.defaultProps;
      for (f3 in b10)
        H4.call(b10, f3) && !I3.hasOwnProperty(f3) && (e3[f3] = b10[f3] === void 0 && g2 !== void 0 ? g2[f3] : b10[f3]);
    }
    var f3 = arguments.length - 2;
    if (f3 === 1)
      e3.children = c5;
    else if (1 < f3) {
      g2 = Array(f3);
      for (var m3 = 0; m3 < f3; m3++)
        g2[m3] = arguments[m3 + 2];
      e3.children = g2;
    }
    return {
      $$typeof: n3,
      type: a3.type,
      key: d2,
      ref: k6,
      props: e3,
      _owner: h2
    };
  };
  exports.createContext = function(a3, b10) {
    b10 === void 0 && (b10 = null);
    a3 = {$$typeof: r3, _calculateChangedBits: b10, _currentValue: a3, _currentValue2: a3, _threadCount: 0, Provider: null, Consumer: null};
    a3.Provider = {$$typeof: q2, _context: a3};
    return a3.Consumer = a3;
  };
  exports.createElement = J3;
  exports.createFactory = function(a3) {
    var b10 = J3.bind(null, a3);
    b10.type = a3;
    return b10;
  };
  exports.createRef = function() {
    return {current: null};
  };
  exports.forwardRef = function(a3) {
    return {$$typeof: t4, render: a3};
  };
  exports.isValidElement = L3;
  exports.lazy = function(a3) {
    return {$$typeof: v3, _payload: {_status: -1, _result: a3}, _init: Q3};
  };
  exports.memo = function(a3, b10) {
    return {$$typeof: u2, type: a3, compare: b10 === void 0 ? null : b10};
  };
  exports.useCallback = function(a3, b10) {
    return S4().useCallback(a3, b10);
  };
  exports.useContext = function(a3, b10) {
    return S4().useContext(a3, b10);
  };
  exports.useDebugValue = function() {
  };
  exports.useEffect = function(a3, b10) {
    return S4().useEffect(a3, b10);
  };
  exports.useImperativeHandle = function(a3, b10, c5) {
    return S4().useImperativeHandle(a3, b10, c5);
  };
  exports.useLayoutEffect = function(a3, b10) {
    return S4().useLayoutEffect(a3, b10);
  };
  exports.useMemo = function(a3, b10) {
    return S4().useMemo(a3, b10);
  };
  exports.useReducer = function(a3, b10, c5) {
    return S4().useReducer(a3, b10, c5);
  };
  exports.useRef = function(a3) {
    return S4().useRef(a3);
  };
  exports.useState = function(a3) {
    return S4().useState(a3);
  };
  exports.version = "17.0.1";
});
var react = createCommonjsModule(function(module) {
  {
    module.exports = react_production_min;
  }
});

// snowpack/pkg/react.js
var PureComponent = react.PureComponent;
var useCallback = react.useCallback;
var useEffect = react.useEffect;
var useLayoutEffect = react.useLayoutEffect;
var useMemo = react.useMemo;
var useRef = react.useRef;
var useState = react.useState;

// snowpack/pkg/common/index-2be6b7dd.js
var scheduler_production_min = createCommonjsModule(function(module, exports) {
  var f3, g2, h2, k6;
  if (typeof performance === "object" && typeof performance.now === "function") {
    var l3 = performance;
    exports.unstable_now = function() {
      return l3.now();
    };
  } else {
    var p3 = Date, q2 = p3.now();
    exports.unstable_now = function() {
      return p3.now() - q2;
    };
  }
  if (typeof window === "undefined" || typeof MessageChannel !== "function") {
    var t4 = null, u2 = null, w3 = function() {
      if (t4 !== null)
        try {
          var a3 = exports.unstable_now();
          t4(true, a3);
          t4 = null;
        } catch (b10) {
          throw setTimeout(w3, 0), b10;
        }
    };
    f3 = function(a3) {
      t4 !== null ? setTimeout(f3, 0, a3) : (t4 = a3, setTimeout(w3, 0));
    };
    g2 = function(a3, b10) {
      u2 = setTimeout(a3, b10);
    };
    h2 = function() {
      clearTimeout(u2);
    };
    exports.unstable_shouldYield = function() {
      return false;
    };
    k6 = exports.unstable_forceFrameRate = function() {
    };
  } else {
    var x5 = window.setTimeout, y7 = window.clearTimeout;
    if (typeof console !== "undefined") {
      var z3 = window.cancelAnimationFrame;
      typeof window.requestAnimationFrame !== "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
      typeof z3 !== "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    }
    var A6 = false, B6 = null, C5 = -1, D6 = 5, E5 = 0;
    exports.unstable_shouldYield = function() {
      return exports.unstable_now() >= E5;
    };
    k6 = function() {
    };
    exports.unstable_forceFrameRate = function(a3) {
      0 > a3 || 125 < a3 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D6 = 0 < a3 ? Math.floor(1e3 / a3) : 5;
    };
    var F4 = new MessageChannel(), G4 = F4.port2;
    F4.port1.onmessage = function() {
      if (B6 !== null) {
        var a3 = exports.unstable_now();
        E5 = a3 + D6;
        try {
          B6(true, a3) ? G4.postMessage(null) : (A6 = false, B6 = null);
        } catch (b10) {
          throw G4.postMessage(null), b10;
        }
      } else
        A6 = false;
    };
    f3 = function(a3) {
      B6 = a3;
      A6 || (A6 = true, G4.postMessage(null));
    };
    g2 = function(a3, b10) {
      C5 = x5(function() {
        a3(exports.unstable_now());
      }, b10);
    };
    h2 = function() {
      y7(C5);
      C5 = -1;
    };
  }
  function H4(a3, b10) {
    var c5 = a3.length;
    a3.push(b10);
    a:
      for (; ; ) {
        var d2 = c5 - 1 >>> 1, e3 = a3[d2];
        if (e3 !== void 0 && 0 < I3(e3, b10))
          a3[d2] = b10, a3[c5] = e3, c5 = d2;
        else
          break a;
      }
  }
  function J3(a3) {
    a3 = a3[0];
    return a3 === void 0 ? null : a3;
  }
  function K5(a3) {
    var b10 = a3[0];
    if (b10 !== void 0) {
      var c5 = a3.pop();
      if (c5 !== b10) {
        a3[0] = c5;
        a:
          for (var d2 = 0, e3 = a3.length; d2 < e3; ) {
            var m3 = 2 * (d2 + 1) - 1, n3 = a3[m3], v3 = m3 + 1, r3 = a3[v3];
            if (n3 !== void 0 && 0 > I3(n3, c5))
              r3 !== void 0 && 0 > I3(r3, n3) ? (a3[d2] = r3, a3[v3] = c5, d2 = v3) : (a3[d2] = n3, a3[m3] = c5, d2 = m3);
            else if (r3 !== void 0 && 0 > I3(r3, c5))
              a3[d2] = r3, a3[v3] = c5, d2 = v3;
            else
              break a;
          }
      }
      return b10;
    }
    return null;
  }
  function I3(a3, b10) {
    var c5 = a3.sortIndex - b10.sortIndex;
    return c5 !== 0 ? c5 : a3.id - b10.id;
  }
  var L3 = [], M5 = [], N3 = 1, O3 = null, P5 = 3, Q3 = false, R3 = false, S4 = false;
  function T4(a3) {
    for (var b10 = J3(M5); b10 !== null; ) {
      if (b10.callback === null)
        K5(M5);
      else if (b10.startTime <= a3)
        K5(M5), b10.sortIndex = b10.expirationTime, H4(L3, b10);
      else
        break;
      b10 = J3(M5);
    }
  }
  function U4(a3) {
    S4 = false;
    T4(a3);
    if (!R3)
      if (J3(L3) !== null)
        R3 = true, f3(V4);
      else {
        var b10 = J3(M5);
        b10 !== null && g2(U4, b10.startTime - a3);
      }
  }
  function V4(a3, b10) {
    R3 = false;
    S4 && (S4 = false, h2());
    Q3 = true;
    var c5 = P5;
    try {
      T4(b10);
      for (O3 = J3(L3); O3 !== null && (!(O3.expirationTime > b10) || a3 && !exports.unstable_shouldYield()); ) {
        var d2 = O3.callback;
        if (typeof d2 === "function") {
          O3.callback = null;
          P5 = O3.priorityLevel;
          var e3 = d2(O3.expirationTime <= b10);
          b10 = exports.unstable_now();
          typeof e3 === "function" ? O3.callback = e3 : O3 === J3(L3) && K5(L3);
          T4(b10);
        } else
          K5(L3);
        O3 = J3(L3);
      }
      if (O3 !== null)
        var m3 = true;
      else {
        var n3 = J3(M5);
        n3 !== null && g2(U4, n3.startTime - b10);
        m3 = false;
      }
      return m3;
    } finally {
      O3 = null, P5 = c5, Q3 = false;
    }
  }
  var W4 = k6;
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a3) {
    a3.callback = null;
  };
  exports.unstable_continueExecution = function() {
    R3 || Q3 || (R3 = true, f3(V4));
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return P5;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return J3(L3);
  };
  exports.unstable_next = function(a3) {
    switch (P5) {
      case 1:
      case 2:
      case 3:
        var b10 = 3;
        break;
      default:
        b10 = P5;
    }
    var c5 = P5;
    P5 = b10;
    try {
      return a3();
    } finally {
      P5 = c5;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = W4;
  exports.unstable_runWithPriority = function(a3, b10) {
    switch (a3) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a3 = 3;
    }
    var c5 = P5;
    P5 = a3;
    try {
      return b10();
    } finally {
      P5 = c5;
    }
  };
  exports.unstable_scheduleCallback = function(a3, b10, c5) {
    var d2 = exports.unstable_now();
    typeof c5 === "object" && c5 !== null ? (c5 = c5.delay, c5 = typeof c5 === "number" && 0 < c5 ? d2 + c5 : d2) : c5 = d2;
    switch (a3) {
      case 1:
        var e3 = -1;
        break;
      case 2:
        e3 = 250;
        break;
      case 5:
        e3 = 1073741823;
        break;
      case 4:
        e3 = 1e4;
        break;
      default:
        e3 = 5e3;
    }
    e3 = c5 + e3;
    a3 = {id: N3++, callback: b10, priorityLevel: a3, startTime: c5, expirationTime: e3, sortIndex: -1};
    c5 > d2 ? (a3.sortIndex = c5, H4(M5, a3), J3(L3) === null && a3 === J3(M5) && (S4 ? h2() : S4 = true, g2(U4, c5 - d2))) : (a3.sortIndex = e3, H4(L3, a3), R3 || Q3 || (R3 = true, f3(V4)));
    return a3;
  };
  exports.unstable_wrapCallback = function(a3) {
    var b10 = P5;
    return function() {
      var c5 = P5;
      P5 = b10;
      try {
        return a3.apply(this, arguments);
      } finally {
        P5 = c5;
      }
    };
  };
});
var scheduler = createCommonjsModule(function(module) {
  {
    module.exports = scheduler_production_min;
  }
});
function y(a3) {
  for (var b10 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a3, c5 = 1; c5 < arguments.length; c5++)
    b10 += "&args[]=" + encodeURIComponent(arguments[c5]);
  return "Minified React error #" + a3 + "; visit " + b10 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
if (!react)
  throw Error(y(227));
var ba = new Set();
var ca = {};
function da(a3, b10) {
  ea(a3, b10);
  ea(a3 + "Capture", b10);
}
function ea(a3, b10) {
  ca[a3] = b10;
  for (a3 = 0; a3 < b10.length; a3++)
    ba.add(b10[a3]);
}
var fa = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined");
var ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/;
var ia = Object.prototype.hasOwnProperty;
var ja = {};
var ka = {};
function la(a3) {
  if (ia.call(ka, a3))
    return true;
  if (ia.call(ja, a3))
    return false;
  if (ha.test(a3))
    return ka[a3] = true;
  ja[a3] = true;
  return false;
}
function ma(a3, b10, c5, d2) {
  if (c5 !== null && c5.type === 0)
    return false;
  switch (typeof b10) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (c5 !== null)
        return !c5.acceptsBooleans;
      a3 = a3.toLowerCase().slice(0, 5);
      return a3 !== "data-" && a3 !== "aria-";
    default:
      return false;
  }
}
function na(a3, b10, c5, d2) {
  if (b10 === null || typeof b10 === "undefined" || ma(a3, b10, c5, d2))
    return true;
  if (d2)
    return false;
  if (c5 !== null)
    switch (c5.type) {
      case 3:
        return !b10;
      case 4:
        return b10 === false;
      case 5:
        return isNaN(b10);
      case 6:
        return isNaN(b10) || 1 > b10;
    }
  return false;
}
function B(a3, b10, c5, d2, e3, f3, g2) {
  this.acceptsBooleans = b10 === 2 || b10 === 3 || b10 === 4;
  this.attributeName = d2;
  this.attributeNamespace = e3;
  this.mustUseProperty = c5;
  this.propertyName = a3;
  this.type = b10;
  this.sanitizeURL = f3;
  this.removeEmptyString = g2;
}
var D = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a3) {
  D[a3] = new B(a3, 0, false, a3, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a3) {
  var b10 = a3[0];
  D[b10] = new B(b10, 1, false, a3[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a3) {
  D[a3] = new B(a3, 2, false, a3.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a3) {
  D[a3] = new B(a3, 2, false, a3, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a3) {
  D[a3] = new B(a3, 3, false, a3.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a3) {
  D[a3] = new B(a3, 3, true, a3, null, false, false);
});
["capture", "download"].forEach(function(a3) {
  D[a3] = new B(a3, 4, false, a3, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a3) {
  D[a3] = new B(a3, 6, false, a3, null, false, false);
});
["rowSpan", "start"].forEach(function(a3) {
  D[a3] = new B(a3, 5, false, a3.toLowerCase(), null, false, false);
});
var oa = /[\-:]([a-z])/g;
function pa(a3) {
  return a3[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a3) {
  var b10 = a3.replace(oa, pa);
  D[b10] = new B(b10, 1, false, a3, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a3) {
  var b10 = a3.replace(oa, pa);
  D[b10] = new B(b10, 1, false, a3, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a3) {
  var b10 = a3.replace(oa, pa);
  D[b10] = new B(b10, 1, false, a3, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a3) {
  D[a3] = new B(a3, 1, false, a3.toLowerCase(), null, false, false);
});
D.xlinkHref = new B("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a3) {
  D[a3] = new B(a3, 1, false, a3.toLowerCase(), null, true, true);
});
function qa(a3, b10, c5, d2) {
  var e3 = D.hasOwnProperty(b10) ? D[b10] : null;
  var f3 = e3 !== null ? e3.type === 0 : d2 ? false : !(2 < b10.length) || b10[0] !== "o" && b10[0] !== "O" || b10[1] !== "n" && b10[1] !== "N" ? false : true;
  f3 || (na(b10, c5, e3, d2) && (c5 = null), d2 || e3 === null ? la(b10) && (c5 === null ? a3.removeAttribute(b10) : a3.setAttribute(b10, "" + c5)) : e3.mustUseProperty ? a3[e3.propertyName] = c5 === null ? e3.type === 3 ? false : "" : c5 : (b10 = e3.attributeName, d2 = e3.attributeNamespace, c5 === null ? a3.removeAttribute(b10) : (e3 = e3.type, c5 = e3 === 3 || e3 === 4 && c5 === true ? "" : "" + c5, d2 ? a3.setAttributeNS(d2, b10, c5) : a3.setAttribute(b10, c5))));
}
var ra = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var sa = 60103;
var ta = 60106;
var ua = 60107;
var wa = 60108;
var xa = 60114;
var ya = 60109;
var za = 60110;
var Aa = 60112;
var Ba = 60113;
var Ca = 60120;
var Da = 60115;
var Ea = 60116;
var Fa = 60121;
var Ga = 60128;
var Ha = 60129;
var Ia = 60130;
var Ja = 60131;
if (typeof Symbol === "function" && Symbol.for) {
  E5 = Symbol.for;
  sa = E5("react.element");
  ta = E5("react.portal");
  ua = E5("react.fragment");
  wa = E5("react.strict_mode");
  xa = E5("react.profiler");
  ya = E5("react.provider");
  za = E5("react.context");
  Aa = E5("react.forward_ref");
  Ba = E5("react.suspense");
  Ca = E5("react.suspense_list");
  Da = E5("react.memo");
  Ea = E5("react.lazy");
  Fa = E5("react.block");
  E5("react.scope");
  Ga = E5("react.opaque.id");
  Ha = E5("react.debug_trace_mode");
  Ia = E5("react.offscreen");
  Ja = E5("react.legacy_hidden");
}
var E5;
var Ka = typeof Symbol === "function" && Symbol.iterator;
function La(a3) {
  if (a3 === null || typeof a3 !== "object")
    return null;
  a3 = Ka && a3[Ka] || a3["@@iterator"];
  return typeof a3 === "function" ? a3 : null;
}
var Ma;
function Na(a3) {
  if (Ma === void 0)
    try {
      throw Error();
    } catch (c5) {
      var b10 = c5.stack.trim().match(/\n( *(at )?)/);
      Ma = b10 && b10[1] || "";
    }
  return "\n" + Ma + a3;
}
var Oa = false;
function Pa(a3, b10) {
  if (!a3 || Oa)
    return "";
  Oa = true;
  var c5 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b10)
      if (b10 = function() {
        throw Error();
      }, Object.defineProperty(b10.prototype, "props", {set: function() {
        throw Error();
      }}), typeof Reflect === "object" && Reflect.construct) {
        try {
          Reflect.construct(b10, []);
        } catch (k6) {
          var d2 = k6;
        }
        Reflect.construct(a3, [], b10);
      } else {
        try {
          b10.call();
        } catch (k6) {
          d2 = k6;
        }
        a3.call(b10.prototype);
      }
    else {
      try {
        throw Error();
      } catch (k6) {
        d2 = k6;
      }
      a3();
    }
  } catch (k6) {
    if (k6 && d2 && typeof k6.stack === "string") {
      for (var e3 = k6.stack.split("\n"), f3 = d2.stack.split("\n"), g2 = e3.length - 1, h2 = f3.length - 1; 1 <= g2 && 0 <= h2 && e3[g2] !== f3[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e3[g2] !== f3[h2]) {
          if (g2 !== 1 || h2 !== 1) {
            do
              if (g2--, h2--, 0 > h2 || e3[g2] !== f3[h2])
                return "\n" + e3[g2].replace(" at new ", " at ");
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Oa = false, Error.prepareStackTrace = c5;
  }
  return (a3 = a3 ? a3.displayName || a3.name : "") ? Na(a3) : "";
}
function Qa(a3) {
  switch (a3.tag) {
    case 5:
      return Na(a3.type);
    case 16:
      return Na("Lazy");
    case 13:
      return Na("Suspense");
    case 19:
      return Na("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a3 = Pa(a3.type, false), a3;
    case 11:
      return a3 = Pa(a3.type.render, false), a3;
    case 22:
      return a3 = Pa(a3.type._render, false), a3;
    case 1:
      return a3 = Pa(a3.type, true), a3;
    default:
      return "";
  }
}
function Ra(a3) {
  if (a3 == null)
    return null;
  if (typeof a3 === "function")
    return a3.displayName || a3.name || null;
  if (typeof a3 === "string")
    return a3;
  switch (a3) {
    case ua:
      return "Fragment";
    case ta:
      return "Portal";
    case xa:
      return "Profiler";
    case wa:
      return "StrictMode";
    case Ba:
      return "Suspense";
    case Ca:
      return "SuspenseList";
  }
  if (typeof a3 === "object")
    switch (a3.$$typeof) {
      case za:
        return (a3.displayName || "Context") + ".Consumer";
      case ya:
        return (a3._context.displayName || "Context") + ".Provider";
      case Aa:
        var b10 = a3.render;
        b10 = b10.displayName || b10.name || "";
        return a3.displayName || (b10 !== "" ? "ForwardRef(" + b10 + ")" : "ForwardRef");
      case Da:
        return Ra(a3.type);
      case Fa:
        return Ra(a3._render);
      case Ea:
        b10 = a3._payload;
        a3 = a3._init;
        try {
          return Ra(a3(b10));
        } catch (c5) {
        }
    }
  return null;
}
function Sa(a3) {
  switch (typeof a3) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a3;
    default:
      return "";
  }
}
function Ta(a3) {
  var b10 = a3.type;
  return (a3 = a3.nodeName) && a3.toLowerCase() === "input" && (b10 === "checkbox" || b10 === "radio");
}
function Ua(a3) {
  var b10 = Ta(a3) ? "checked" : "value", c5 = Object.getOwnPropertyDescriptor(a3.constructor.prototype, b10), d2 = "" + a3[b10];
  if (!a3.hasOwnProperty(b10) && typeof c5 !== "undefined" && typeof c5.get === "function" && typeof c5.set === "function") {
    var e3 = c5.get, f3 = c5.set;
    Object.defineProperty(a3, b10, {configurable: true, get: function() {
      return e3.call(this);
    }, set: function(a4) {
      d2 = "" + a4;
      f3.call(this, a4);
    }});
    Object.defineProperty(a3, b10, {enumerable: c5.enumerable});
    return {getValue: function() {
      return d2;
    }, setValue: function(a4) {
      d2 = "" + a4;
    }, stopTracking: function() {
      a3._valueTracker = null;
      delete a3[b10];
    }};
  }
}
function Va(a3) {
  a3._valueTracker || (a3._valueTracker = Ua(a3));
}
function Wa(a3) {
  if (!a3)
    return false;
  var b10 = a3._valueTracker;
  if (!b10)
    return true;
  var c5 = b10.getValue();
  var d2 = "";
  a3 && (d2 = Ta(a3) ? a3.checked ? "true" : "false" : a3.value);
  a3 = d2;
  return a3 !== c5 ? (b10.setValue(a3), true) : false;
}
function Xa(a3) {
  a3 = a3 || (typeof document !== "undefined" ? document : void 0);
  if (typeof a3 === "undefined")
    return null;
  try {
    return a3.activeElement || a3.body;
  } catch (b10) {
    return a3.body;
  }
}
function Ya(a3, b10) {
  var c5 = b10.checked;
  return objectAssign({}, b10, {defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c5 != null ? c5 : a3._wrapperState.initialChecked});
}
function Za(a3, b10) {
  var c5 = b10.defaultValue == null ? "" : b10.defaultValue, d2 = b10.checked != null ? b10.checked : b10.defaultChecked;
  c5 = Sa(b10.value != null ? b10.value : c5);
  a3._wrapperState = {initialChecked: d2, initialValue: c5, controlled: b10.type === "checkbox" || b10.type === "radio" ? b10.checked != null : b10.value != null};
}
function $a(a3, b10) {
  b10 = b10.checked;
  b10 != null && qa(a3, "checked", b10, false);
}
function ab(a3, b10) {
  $a(a3, b10);
  var c5 = Sa(b10.value), d2 = b10.type;
  if (c5 != null)
    if (d2 === "number") {
      if (c5 === 0 && a3.value === "" || a3.value != c5)
        a3.value = "" + c5;
    } else
      a3.value !== "" + c5 && (a3.value = "" + c5);
  else if (d2 === "submit" || d2 === "reset") {
    a3.removeAttribute("value");
    return;
  }
  b10.hasOwnProperty("value") ? bb(a3, b10.type, c5) : b10.hasOwnProperty("defaultValue") && bb(a3, b10.type, Sa(b10.defaultValue));
  b10.checked == null && b10.defaultChecked != null && (a3.defaultChecked = !!b10.defaultChecked);
}
function cb(a3, b10, c5) {
  if (b10.hasOwnProperty("value") || b10.hasOwnProperty("defaultValue")) {
    var d2 = b10.type;
    if (!(d2 !== "submit" && d2 !== "reset" || b10.value !== void 0 && b10.value !== null))
      return;
    b10 = "" + a3._wrapperState.initialValue;
    c5 || b10 === a3.value || (a3.value = b10);
    a3.defaultValue = b10;
  }
  c5 = a3.name;
  c5 !== "" && (a3.name = "");
  a3.defaultChecked = !!a3._wrapperState.initialChecked;
  c5 !== "" && (a3.name = c5);
}
function bb(a3, b10, c5) {
  if (b10 !== "number" || Xa(a3.ownerDocument) !== a3)
    c5 == null ? a3.defaultValue = "" + a3._wrapperState.initialValue : a3.defaultValue !== "" + c5 && (a3.defaultValue = "" + c5);
}
function db(a3) {
  var b10 = "";
  react.Children.forEach(a3, function(a4) {
    a4 != null && (b10 += a4);
  });
  return b10;
}
function eb(a3, b10) {
  a3 = objectAssign({children: void 0}, b10);
  if (b10 = db(b10.children))
    a3.children = b10;
  return a3;
}
function fb(a3, b10, c5, d2) {
  a3 = a3.options;
  if (b10) {
    b10 = {};
    for (var e3 = 0; e3 < c5.length; e3++)
      b10["$" + c5[e3]] = true;
    for (c5 = 0; c5 < a3.length; c5++)
      e3 = b10.hasOwnProperty("$" + a3[c5].value), a3[c5].selected !== e3 && (a3[c5].selected = e3), e3 && d2 && (a3[c5].defaultSelected = true);
  } else {
    c5 = "" + Sa(c5);
    b10 = null;
    for (e3 = 0; e3 < a3.length; e3++) {
      if (a3[e3].value === c5) {
        a3[e3].selected = true;
        d2 && (a3[e3].defaultSelected = true);
        return;
      }
      b10 !== null || a3[e3].disabled || (b10 = a3[e3]);
    }
    b10 !== null && (b10.selected = true);
  }
}
function gb(a3, b10) {
  if (b10.dangerouslySetInnerHTML != null)
    throw Error(y(91));
  return objectAssign({}, b10, {value: void 0, defaultValue: void 0, children: "" + a3._wrapperState.initialValue});
}
function hb(a3, b10) {
  var c5 = b10.value;
  if (c5 == null) {
    c5 = b10.children;
    b10 = b10.defaultValue;
    if (c5 != null) {
      if (b10 != null)
        throw Error(y(92));
      if (Array.isArray(c5)) {
        if (!(1 >= c5.length))
          throw Error(y(93));
        c5 = c5[0];
      }
      b10 = c5;
    }
    b10 == null && (b10 = "");
    c5 = b10;
  }
  a3._wrapperState = {initialValue: Sa(c5)};
}
function ib(a3, b10) {
  var c5 = Sa(b10.value), d2 = Sa(b10.defaultValue);
  c5 != null && (c5 = "" + c5, c5 !== a3.value && (a3.value = c5), b10.defaultValue == null && a3.defaultValue !== c5 && (a3.defaultValue = c5));
  d2 != null && (a3.defaultValue = "" + d2);
}
function jb(a3) {
  var b10 = a3.textContent;
  b10 === a3._wrapperState.initialValue && b10 !== "" && b10 !== null && (a3.value = b10);
}
var kb = {html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg"};
function lb(a3) {
  switch (a3) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function mb(a3, b10) {
  return a3 == null || a3 === "http://www.w3.org/1999/xhtml" ? lb(b10) : a3 === "http://www.w3.org/2000/svg" && b10 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a3;
}
var nb;
var ob = function(a3) {
  return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b10, c5, d2, e3) {
    MSApp.execUnsafeLocalFunction(function() {
      return a3(b10, c5, d2, e3);
    });
  } : a3;
}(function(a3, b10) {
  if (a3.namespaceURI !== kb.svg || "innerHTML" in a3)
    a3.innerHTML = b10;
  else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b10.valueOf().toString() + "</svg>";
    for (b10 = nb.firstChild; a3.firstChild; )
      a3.removeChild(a3.firstChild);
    for (; b10.firstChild; )
      a3.appendChild(b10.firstChild);
  }
});
function pb(a3, b10) {
  if (b10) {
    var c5 = a3.firstChild;
    if (c5 && c5 === a3.lastChild && c5.nodeType === 3) {
      c5.nodeValue = b10;
      return;
    }
  }
  a3.textContent = b10;
}
var qb = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function(a3) {
  rb.forEach(function(b10) {
    b10 = b10 + a3.charAt(0).toUpperCase() + a3.substring(1);
    qb[b10] = qb[a3];
  });
});
function sb(a3, b10, c5) {
  return b10 == null || typeof b10 === "boolean" || b10 === "" ? "" : c5 || typeof b10 !== "number" || b10 === 0 || qb.hasOwnProperty(a3) && qb[a3] ? ("" + b10).trim() : b10 + "px";
}
function tb(a3, b10) {
  a3 = a3.style;
  for (var c5 in b10)
    if (b10.hasOwnProperty(c5)) {
      var d2 = c5.indexOf("--") === 0, e3 = sb(c5, b10[c5], d2);
      c5 === "float" && (c5 = "cssFloat");
      d2 ? a3.setProperty(c5, e3) : a3[c5] = e3;
    }
}
var ub = objectAssign({menuitem: true}, {area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true});
function vb(a3, b10) {
  if (b10) {
    if (ub[a3] && (b10.children != null || b10.dangerouslySetInnerHTML != null))
      throw Error(y(137, a3));
    if (b10.dangerouslySetInnerHTML != null) {
      if (b10.children != null)
        throw Error(y(60));
      if (!(typeof b10.dangerouslySetInnerHTML === "object" && "__html" in b10.dangerouslySetInnerHTML))
        throw Error(y(61));
    }
    if (b10.style != null && typeof b10.style !== "object")
      throw Error(y(62));
  }
}
function wb(a3, b10) {
  if (a3.indexOf("-") === -1)
    return typeof b10.is === "string";
  switch (a3) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
function xb(a3) {
  a3 = a3.target || a3.srcElement || window;
  a3.correspondingUseElement && (a3 = a3.correspondingUseElement);
  return a3.nodeType === 3 ? a3.parentNode : a3;
}
var yb = null;
var zb = null;
var Ab = null;
function Bb(a3) {
  if (a3 = Cb(a3)) {
    if (typeof yb !== "function")
      throw Error(y(280));
    var b10 = a3.stateNode;
    b10 && (b10 = Db(b10), yb(a3.stateNode, a3.type, b10));
  }
}
function Eb(a3) {
  zb ? Ab ? Ab.push(a3) : Ab = [a3] : zb = a3;
}
function Fb() {
  if (zb) {
    var a3 = zb, b10 = Ab;
    Ab = zb = null;
    Bb(a3);
    if (b10)
      for (a3 = 0; a3 < b10.length; a3++)
        Bb(b10[a3]);
  }
}
function Gb(a3, b10) {
  return a3(b10);
}
function Hb(a3, b10, c5, d2, e3) {
  return a3(b10, c5, d2, e3);
}
function Ib() {
}
var Jb = Gb;
var Kb = false;
var Lb = false;
function Mb() {
  if (zb !== null || Ab !== null)
    Ib(), Fb();
}
function Nb(a3, b10, c5) {
  if (Lb)
    return a3(b10, c5);
  Lb = true;
  try {
    return Jb(a3, b10, c5);
  } finally {
    Lb = false, Mb();
  }
}
function Ob(a3, b10) {
  var c5 = a3.stateNode;
  if (c5 === null)
    return null;
  var d2 = Db(c5);
  if (d2 === null)
    return null;
  c5 = d2[b10];
  a:
    switch (b10) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a3 = a3.type, d2 = !(a3 === "button" || a3 === "input" || a3 === "select" || a3 === "textarea"));
        a3 = !d2;
        break a;
      default:
        a3 = false;
    }
  if (a3)
    return null;
  if (c5 && typeof c5 !== "function")
    throw Error(y(231, b10, typeof c5));
  return c5;
}
var Pb = false;
if (fa)
  try {
    Qb = {};
    Object.defineProperty(Qb, "passive", {get: function() {
      Pb = true;
    }});
    window.addEventListener("test", Qb, Qb);
    window.removeEventListener("test", Qb, Qb);
  } catch (a3) {
    Pb = false;
  }
var Qb;
function Rb(a3, b10, c5, d2, e3, f3, g2, h2, k6) {
  var l3 = Array.prototype.slice.call(arguments, 3);
  try {
    b10.apply(c5, l3);
  } catch (n3) {
    this.onError(n3);
  }
}
var Sb = false;
var Tb = null;
var Ub = false;
var Vb = null;
var Wb = {onError: function(a3) {
  Sb = true;
  Tb = a3;
}};
function Xb(a3, b10, c5, d2, e3, f3, g2, h2, k6) {
  Sb = false;
  Tb = null;
  Rb.apply(Wb, arguments);
}
function Yb(a3, b10, c5, d2, e3, f3, g2, h2, k6) {
  Xb.apply(this, arguments);
  if (Sb) {
    if (Sb) {
      var l3 = Tb;
      Sb = false;
      Tb = null;
    } else
      throw Error(y(198));
    Ub || (Ub = true, Vb = l3);
  }
}
function Zb(a3) {
  var b10 = a3, c5 = a3;
  if (a3.alternate)
    for (; b10.return; )
      b10 = b10.return;
  else {
    a3 = b10;
    do
      b10 = a3, (b10.flags & 1026) !== 0 && (c5 = b10.return), a3 = b10.return;
    while (a3);
  }
  return b10.tag === 3 ? c5 : null;
}
function $b(a3) {
  if (a3.tag === 13) {
    var b10 = a3.memoizedState;
    b10 === null && (a3 = a3.alternate, a3 !== null && (b10 = a3.memoizedState));
    if (b10 !== null)
      return b10.dehydrated;
  }
  return null;
}
function ac(a3) {
  if (Zb(a3) !== a3)
    throw Error(y(188));
}
function bc(a3) {
  var b10 = a3.alternate;
  if (!b10) {
    b10 = Zb(a3);
    if (b10 === null)
      throw Error(y(188));
    return b10 !== a3 ? null : a3;
  }
  for (var c5 = a3, d2 = b10; ; ) {
    var e3 = c5.return;
    if (e3 === null)
      break;
    var f3 = e3.alternate;
    if (f3 === null) {
      d2 = e3.return;
      if (d2 !== null) {
        c5 = d2;
        continue;
      }
      break;
    }
    if (e3.child === f3.child) {
      for (f3 = e3.child; f3; ) {
        if (f3 === c5)
          return ac(e3), a3;
        if (f3 === d2)
          return ac(e3), b10;
        f3 = f3.sibling;
      }
      throw Error(y(188));
    }
    if (c5.return !== d2.return)
      c5 = e3, d2 = f3;
    else {
      for (var g2 = false, h2 = e3.child; h2; ) {
        if (h2 === c5) {
          g2 = true;
          c5 = e3;
          d2 = f3;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e3;
          c5 = f3;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f3.child; h2; ) {
          if (h2 === c5) {
            g2 = true;
            c5 = f3;
            d2 = e3;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f3;
            c5 = e3;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(y(189));
      }
    }
    if (c5.alternate !== d2)
      throw Error(y(190));
  }
  if (c5.tag !== 3)
    throw Error(y(188));
  return c5.stateNode.current === c5 ? a3 : b10;
}
function cc(a3) {
  a3 = bc(a3);
  if (!a3)
    return null;
  for (var b10 = a3; ; ) {
    if (b10.tag === 5 || b10.tag === 6)
      return b10;
    if (b10.child)
      b10.child.return = b10, b10 = b10.child;
    else {
      if (b10 === a3)
        break;
      for (; !b10.sibling; ) {
        if (!b10.return || b10.return === a3)
          return null;
        b10 = b10.return;
      }
      b10.sibling.return = b10.return;
      b10 = b10.sibling;
    }
  }
  return null;
}
function dc(a3, b10) {
  for (var c5 = a3.alternate; b10 !== null; ) {
    if (b10 === a3 || b10 === c5)
      return true;
    b10 = b10.return;
  }
  return false;
}
var ec;
var fc;
var gc;
var hc;
var ic = false;
var jc = [];
var kc = null;
var lc = null;
var mc = null;
var nc = new Map();
var oc = new Map();
var pc = [];
var qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a3, b10, c5, d2, e3) {
  return {blockedOn: a3, domEventName: b10, eventSystemFlags: c5 | 16, nativeEvent: e3, targetContainers: [d2]};
}
function sc(a3, b10) {
  switch (a3) {
    case "focusin":
    case "focusout":
      kc = null;
      break;
    case "dragenter":
    case "dragleave":
      lc = null;
      break;
    case "mouseover":
    case "mouseout":
      mc = null;
      break;
    case "pointerover":
    case "pointerout":
      nc.delete(b10.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      oc.delete(b10.pointerId);
  }
}
function tc(a3, b10, c5, d2, e3, f3) {
  if (a3 === null || a3.nativeEvent !== f3)
    return a3 = rc(b10, c5, d2, e3, f3), b10 !== null && (b10 = Cb(b10), b10 !== null && fc(b10)), a3;
  a3.eventSystemFlags |= d2;
  b10 = a3.targetContainers;
  e3 !== null && b10.indexOf(e3) === -1 && b10.push(e3);
  return a3;
}
function uc(a3, b10, c5, d2, e3) {
  switch (b10) {
    case "focusin":
      return kc = tc(kc, a3, b10, c5, d2, e3), true;
    case "dragenter":
      return lc = tc(lc, a3, b10, c5, d2, e3), true;
    case "mouseover":
      return mc = tc(mc, a3, b10, c5, d2, e3), true;
    case "pointerover":
      var f3 = e3.pointerId;
      nc.set(f3, tc(nc.get(f3) || null, a3, b10, c5, d2, e3));
      return true;
    case "gotpointercapture":
      return f3 = e3.pointerId, oc.set(f3, tc(oc.get(f3) || null, a3, b10, c5, d2, e3)), true;
  }
  return false;
}
function vc(a3) {
  var b10 = wc(a3.target);
  if (b10 !== null) {
    var c5 = Zb(b10);
    if (c5 !== null) {
      if (b10 = c5.tag, b10 === 13) {
        if (b10 = $b(c5), b10 !== null) {
          a3.blockedOn = b10;
          hc(a3.lanePriority, function() {
            scheduler.unstable_runWithPriority(a3.priority, function() {
              gc(c5);
            });
          });
          return;
        }
      } else if (b10 === 3 && c5.stateNode.hydrate) {
        a3.blockedOn = c5.tag === 3 ? c5.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a3.blockedOn = null;
}
function xc(a3) {
  if (a3.blockedOn !== null)
    return false;
  for (var b10 = a3.targetContainers; 0 < b10.length; ) {
    var c5 = yc(a3.domEventName, a3.eventSystemFlags, b10[0], a3.nativeEvent);
    if (c5 !== null)
      return b10 = Cb(c5), b10 !== null && fc(b10), a3.blockedOn = c5, false;
    b10.shift();
  }
  return true;
}
function zc(a3, b10, c5) {
  xc(a3) && c5.delete(b10);
}
function Ac() {
  for (ic = false; 0 < jc.length; ) {
    var a3 = jc[0];
    if (a3.blockedOn !== null) {
      a3 = Cb(a3.blockedOn);
      a3 !== null && ec(a3);
      break;
    }
    for (var b10 = a3.targetContainers; 0 < b10.length; ) {
      var c5 = yc(a3.domEventName, a3.eventSystemFlags, b10[0], a3.nativeEvent);
      if (c5 !== null) {
        a3.blockedOn = c5;
        break;
      }
      b10.shift();
    }
    a3.blockedOn === null && jc.shift();
  }
  kc !== null && xc(kc) && (kc = null);
  lc !== null && xc(lc) && (lc = null);
  mc !== null && xc(mc) && (mc = null);
  nc.forEach(zc);
  oc.forEach(zc);
}
function Bc(a3, b10) {
  a3.blockedOn === b10 && (a3.blockedOn = null, ic || (ic = true, scheduler.unstable_scheduleCallback(scheduler.unstable_NormalPriority, Ac)));
}
function Cc(a3) {
  function b10(b11) {
    return Bc(b11, a3);
  }
  if (0 < jc.length) {
    Bc(jc[0], a3);
    for (var c5 = 1; c5 < jc.length; c5++) {
      var d2 = jc[c5];
      d2.blockedOn === a3 && (d2.blockedOn = null);
    }
  }
  kc !== null && Bc(kc, a3);
  lc !== null && Bc(lc, a3);
  mc !== null && Bc(mc, a3);
  nc.forEach(b10);
  oc.forEach(b10);
  for (c5 = 0; c5 < pc.length; c5++)
    d2 = pc[c5], d2.blockedOn === a3 && (d2.blockedOn = null);
  for (; 0 < pc.length && (c5 = pc[0], c5.blockedOn === null); )
    vc(c5), c5.blockedOn === null && pc.shift();
}
function Dc(a3, b10) {
  var c5 = {};
  c5[a3.toLowerCase()] = b10.toLowerCase();
  c5["Webkit" + a3] = "webkit" + b10;
  c5["Moz" + a3] = "moz" + b10;
  return c5;
}
var Ec = {animationend: Dc("Animation", "AnimationEnd"), animationiteration: Dc("Animation", "AnimationIteration"), animationstart: Dc("Animation", "AnimationStart"), transitionend: Dc("Transition", "TransitionEnd")};
var Fc = {};
var Gc = {};
fa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);
function Hc(a3) {
  if (Fc[a3])
    return Fc[a3];
  if (!Ec[a3])
    return a3;
  var b10 = Ec[a3], c5;
  for (c5 in b10)
    if (b10.hasOwnProperty(c5) && c5 in Gc)
      return Fc[a3] = b10[c5];
  return a3;
}
var Ic = Hc("animationend");
var Jc = Hc("animationiteration");
var Kc = Hc("animationstart");
var Lc = Hc("transitionend");
var Mc = new Map();
var Nc = new Map();
var Oc = [
  "abort",
  "abort",
  Ic,
  "animationEnd",
  Jc,
  "animationIteration",
  Kc,
  "animationStart",
  "canplay",
  "canPlay",
  "canplaythrough",
  "canPlayThrough",
  "durationchange",
  "durationChange",
  "emptied",
  "emptied",
  "encrypted",
  "encrypted",
  "ended",
  "ended",
  "error",
  "error",
  "gotpointercapture",
  "gotPointerCapture",
  "load",
  "load",
  "loadeddata",
  "loadedData",
  "loadedmetadata",
  "loadedMetadata",
  "loadstart",
  "loadStart",
  "lostpointercapture",
  "lostPointerCapture",
  "playing",
  "playing",
  "progress",
  "progress",
  "seeking",
  "seeking",
  "stalled",
  "stalled",
  "suspend",
  "suspend",
  "timeupdate",
  "timeUpdate",
  Lc,
  "transitionEnd",
  "waiting",
  "waiting"
];
function Pc(a3, b10) {
  for (var c5 = 0; c5 < a3.length; c5 += 2) {
    var d2 = a3[c5], e3 = a3[c5 + 1];
    e3 = "on" + (e3[0].toUpperCase() + e3.slice(1));
    Nc.set(d2, b10);
    Mc.set(d2, e3);
    da(e3, [d2]);
  }
}
var Qc = scheduler.unstable_now;
Qc();
var F = 8;
function Rc(a3) {
  if ((1 & a3) !== 0)
    return F = 15, 1;
  if ((2 & a3) !== 0)
    return F = 14, 2;
  if ((4 & a3) !== 0)
    return F = 13, 4;
  var b10 = 24 & a3;
  if (b10 !== 0)
    return F = 12, b10;
  if ((a3 & 32) !== 0)
    return F = 11, 32;
  b10 = 192 & a3;
  if (b10 !== 0)
    return F = 10, b10;
  if ((a3 & 256) !== 0)
    return F = 9, 256;
  b10 = 3584 & a3;
  if (b10 !== 0)
    return F = 8, b10;
  if ((a3 & 4096) !== 0)
    return F = 7, 4096;
  b10 = 4186112 & a3;
  if (b10 !== 0)
    return F = 6, b10;
  b10 = 62914560 & a3;
  if (b10 !== 0)
    return F = 5, b10;
  if (a3 & 67108864)
    return F = 4, 67108864;
  if ((a3 & 134217728) !== 0)
    return F = 3, 134217728;
  b10 = 805306368 & a3;
  if (b10 !== 0)
    return F = 2, b10;
  if ((1073741824 & a3) !== 0)
    return F = 1, 1073741824;
  F = 8;
  return a3;
}
function Sc(a3) {
  switch (a3) {
    case 99:
      return 15;
    case 98:
      return 10;
    case 97:
    case 96:
      return 8;
    case 95:
      return 2;
    default:
      return 0;
  }
}
function Tc(a3) {
  switch (a3) {
    case 15:
    case 14:
      return 99;
    case 13:
    case 12:
    case 11:
    case 10:
      return 98;
    case 9:
    case 8:
    case 7:
    case 6:
    case 4:
    case 5:
      return 97;
    case 3:
    case 2:
    case 1:
      return 95;
    case 0:
      return 90;
    default:
      throw Error(y(358, a3));
  }
}
function Uc(a3, b10) {
  var c5 = a3.pendingLanes;
  if (c5 === 0)
    return F = 0;
  var d2 = 0, e3 = 0, f3 = a3.expiredLanes, g2 = a3.suspendedLanes, h2 = a3.pingedLanes;
  if (f3 !== 0)
    d2 = f3, e3 = F = 15;
  else if (f3 = c5 & 134217727, f3 !== 0) {
    var k6 = f3 & ~g2;
    k6 !== 0 ? (d2 = Rc(k6), e3 = F) : (h2 &= f3, h2 !== 0 && (d2 = Rc(h2), e3 = F));
  } else
    f3 = c5 & ~g2, f3 !== 0 ? (d2 = Rc(f3), e3 = F) : h2 !== 0 && (d2 = Rc(h2), e3 = F);
  if (d2 === 0)
    return 0;
  d2 = 31 - Vc(d2);
  d2 = c5 & ((0 > d2 ? 0 : 1 << d2) << 1) - 1;
  if (b10 !== 0 && b10 !== d2 && (b10 & g2) === 0) {
    Rc(b10);
    if (e3 <= F)
      return b10;
    F = e3;
  }
  b10 = a3.entangledLanes;
  if (b10 !== 0)
    for (a3 = a3.entanglements, b10 &= d2; 0 < b10; )
      c5 = 31 - Vc(b10), e3 = 1 << c5, d2 |= a3[c5], b10 &= ~e3;
  return d2;
}
function Wc(a3) {
  a3 = a3.pendingLanes & -1073741825;
  return a3 !== 0 ? a3 : a3 & 1073741824 ? 1073741824 : 0;
}
function Xc(a3, b10) {
  switch (a3) {
    case 15:
      return 1;
    case 14:
      return 2;
    case 12:
      return a3 = Yc(24 & ~b10), a3 === 0 ? Xc(10, b10) : a3;
    case 10:
      return a3 = Yc(192 & ~b10), a3 === 0 ? Xc(8, b10) : a3;
    case 8:
      return a3 = Yc(3584 & ~b10), a3 === 0 && (a3 = Yc(4186112 & ~b10), a3 === 0 && (a3 = 512)), a3;
    case 2:
      return b10 = Yc(805306368 & ~b10), b10 === 0 && (b10 = 268435456), b10;
  }
  throw Error(y(358, a3));
}
function Yc(a3) {
  return a3 & -a3;
}
function Zc(a3) {
  for (var b10 = [], c5 = 0; 31 > c5; c5++)
    b10.push(a3);
  return b10;
}
function $c(a3, b10, c5) {
  a3.pendingLanes |= b10;
  var d2 = b10 - 1;
  a3.suspendedLanes &= d2;
  a3.pingedLanes &= d2;
  a3 = a3.eventTimes;
  b10 = 31 - Vc(b10);
  a3[b10] = c5;
}
var Vc = Math.clz32 ? Math.clz32 : ad;
var bd = Math.log;
var cd = Math.LN2;
function ad(a3) {
  return a3 === 0 ? 32 : 31 - (bd(a3) / cd | 0) | 0;
}
var dd = scheduler.unstable_UserBlockingPriority;
var ed = scheduler.unstable_runWithPriority;
var fd = true;
function gd(a3, b10, c5, d2) {
  Kb || Ib();
  var e3 = hd, f3 = Kb;
  Kb = true;
  try {
    Hb(e3, a3, b10, c5, d2);
  } finally {
    (Kb = f3) || Mb();
  }
}
function id(a3, b10, c5, d2) {
  ed(dd, hd.bind(null, a3, b10, c5, d2));
}
function hd(a3, b10, c5, d2) {
  if (fd) {
    var e3;
    if ((e3 = (b10 & 4) === 0) && 0 < jc.length && -1 < qc.indexOf(a3))
      a3 = rc(null, a3, b10, c5, d2), jc.push(a3);
    else {
      var f3 = yc(a3, b10, c5, d2);
      if (f3 === null)
        e3 && sc(a3, d2);
      else {
        if (e3) {
          if (-1 < qc.indexOf(a3)) {
            a3 = rc(f3, a3, b10, c5, d2);
            jc.push(a3);
            return;
          }
          if (uc(f3, a3, b10, c5, d2))
            return;
          sc(a3, d2);
        }
        jd(a3, b10, d2, null, c5);
      }
    }
  }
}
function yc(a3, b10, c5, d2) {
  var e3 = xb(d2);
  e3 = wc(e3);
  if (e3 !== null) {
    var f3 = Zb(e3);
    if (f3 === null)
      e3 = null;
    else {
      var g2 = f3.tag;
      if (g2 === 13) {
        e3 = $b(f3);
        if (e3 !== null)
          return e3;
        e3 = null;
      } else if (g2 === 3) {
        if (f3.stateNode.hydrate)
          return f3.tag === 3 ? f3.stateNode.containerInfo : null;
        e3 = null;
      } else
        f3 !== e3 && (e3 = null);
    }
  }
  jd(a3, b10, d2, e3, c5);
  return null;
}
var kd = null;
var ld = null;
var md = null;
function nd() {
  if (md)
    return md;
  var a3, b10 = ld, c5 = b10.length, d2, e3 = "value" in kd ? kd.value : kd.textContent, f3 = e3.length;
  for (a3 = 0; a3 < c5 && b10[a3] === e3[a3]; a3++)
    ;
  var g2 = c5 - a3;
  for (d2 = 1; d2 <= g2 && b10[c5 - d2] === e3[f3 - d2]; d2++)
    ;
  return md = e3.slice(a3, 1 < d2 ? 1 - d2 : void 0);
}
function od(a3) {
  var b10 = a3.keyCode;
  "charCode" in a3 ? (a3 = a3.charCode, a3 === 0 && b10 === 13 && (a3 = 13)) : a3 = b10;
  a3 === 10 && (a3 = 13);
  return 32 <= a3 || a3 === 13 ? a3 : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a3) {
  function b10(b11, d2, e3, f3, g2) {
    this._reactName = b11;
    this._targetInst = e3;
    this.type = d2;
    this.nativeEvent = f3;
    this.target = g2;
    this.currentTarget = null;
    for (var c5 in a3)
      a3.hasOwnProperty(c5) && (b11 = a3[c5], this[c5] = b11 ? b11(f3) : f3[c5]);
    this.isDefaultPrevented = (f3.defaultPrevented != null ? f3.defaultPrevented : f3.returnValue === false) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  objectAssign(b10.prototype, {preventDefault: function() {
    this.defaultPrevented = true;
    var a4 = this.nativeEvent;
    a4 && (a4.preventDefault ? a4.preventDefault() : typeof a4.returnValue !== "unknown" && (a4.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a4 = this.nativeEvent;
    a4 && (a4.stopPropagation ? a4.stopPropagation() : typeof a4.cancelBubble !== "unknown" && (a4.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd});
  return b10;
}
var sd = {eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a3) {
  return a3.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0};
var td = rd(sd);
var ud = objectAssign({}, sd, {view: 0, detail: 0});
var vd = rd(ud);
var wd;
var xd;
var yd;
var Ad = objectAssign({}, ud, {screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a3) {
  return a3.relatedTarget === void 0 ? a3.fromElement === a3.srcElement ? a3.toElement : a3.fromElement : a3.relatedTarget;
}, movementX: function(a3) {
  if ("movementX" in a3)
    return a3.movementX;
  a3 !== yd && (yd && a3.type === "mousemove" ? (wd = a3.screenX - yd.screenX, xd = a3.screenY - yd.screenY) : xd = wd = 0, yd = a3);
  return wd;
}, movementY: function(a3) {
  return "movementY" in a3 ? a3.movementY : xd;
}});
var Bd = rd(Ad);
var Cd = objectAssign({}, Ad, {dataTransfer: 0});
var Dd = rd(Cd);
var Ed = objectAssign({}, ud, {relatedTarget: 0});
var Fd = rd(Ed);
var Gd = objectAssign({}, sd, {animationName: 0, elapsedTime: 0, pseudoElement: 0});
var Hd = rd(Gd);
var Id = objectAssign({}, sd, {clipboardData: function(a3) {
  return "clipboardData" in a3 ? a3.clipboardData : window.clipboardData;
}});
var Jd = rd(Id);
var Kd = objectAssign({}, sd, {data: 0});
var Ld = rd(Kd);
var Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
};
var Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
};
var Od = {Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey"};
function Pd(a3) {
  var b10 = this.nativeEvent;
  return b10.getModifierState ? b10.getModifierState(a3) : (a3 = Od[a3]) ? !!b10[a3] : false;
}
function zd() {
  return Pd;
}
var Qd = objectAssign({}, ud, {key: function(a3) {
  if (a3.key) {
    var b10 = Md[a3.key] || a3.key;
    if (b10 !== "Unidentified")
      return b10;
  }
  return a3.type === "keypress" ? (a3 = od(a3), a3 === 13 ? "Enter" : String.fromCharCode(a3)) : a3.type === "keydown" || a3.type === "keyup" ? Nd[a3.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a3) {
  return a3.type === "keypress" ? od(a3) : 0;
}, keyCode: function(a3) {
  return a3.type === "keydown" || a3.type === "keyup" ? a3.keyCode : 0;
}, which: function(a3) {
  return a3.type === "keypress" ? od(a3) : a3.type === "keydown" || a3.type === "keyup" ? a3.keyCode : 0;
}});
var Rd = rd(Qd);
var Sd = objectAssign({}, Ad, {pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0});
var Td = rd(Sd);
var Ud = objectAssign({}, ud, {touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd});
var Vd = rd(Ud);
var Wd = objectAssign({}, sd, {propertyName: 0, elapsedTime: 0, pseudoElement: 0});
var Xd = rd(Wd);
var Yd = objectAssign({}, Ad, {
  deltaX: function(a3) {
    return "deltaX" in a3 ? a3.deltaX : "wheelDeltaX" in a3 ? -a3.wheelDeltaX : 0;
  },
  deltaY: function(a3) {
    return "deltaY" in a3 ? a3.deltaY : "wheelDeltaY" in a3 ? -a3.wheelDeltaY : "wheelDelta" in a3 ? -a3.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
});
var Zd = rd(Yd);
var $d = [9, 13, 27, 32];
var ae = fa && "CompositionEvent" in window;
var be = null;
fa && "documentMode" in document && (be = document.documentMode);
var ce = fa && "TextEvent" in window && !be;
var de = fa && (!ae || be && 8 < be && 11 >= be);
var ee = String.fromCharCode(32);
var fe = false;
function ge(a3, b10) {
  switch (a3) {
    case "keyup":
      return $d.indexOf(b10.keyCode) !== -1;
    case "keydown":
      return b10.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a3) {
  a3 = a3.detail;
  return typeof a3 === "object" && "data" in a3 ? a3.data : null;
}
var ie = false;
function je(a3, b10) {
  switch (a3) {
    case "compositionend":
      return he(b10);
    case "keypress":
      if (b10.which !== 32)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a3 = b10.data, a3 === ee && fe ? null : a3;
    default:
      return null;
  }
}
function ke(a3, b10) {
  if (ie)
    return a3 === "compositionend" || !ae && ge(a3, b10) ? (a3 = nd(), md = ld = kd = null, ie = false, a3) : null;
  switch (a3) {
    case "paste":
      return null;
    case "keypress":
      if (!(b10.ctrlKey || b10.altKey || b10.metaKey) || b10.ctrlKey && b10.altKey) {
        if (b10.char && 1 < b10.char.length)
          return b10.char;
        if (b10.which)
          return String.fromCharCode(b10.which);
      }
      return null;
    case "compositionend":
      return de && b10.locale !== "ko" ? null : b10.data;
    default:
      return null;
  }
}
var le = {color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true};
function me(a3) {
  var b10 = a3 && a3.nodeName && a3.nodeName.toLowerCase();
  return b10 === "input" ? !!le[a3.type] : b10 === "textarea" ? true : false;
}
function ne(a3, b10, c5, d2) {
  Eb(d2);
  b10 = oe(b10, "onChange");
  0 < b10.length && (c5 = new td("onChange", "change", null, c5, d2), a3.push({event: c5, listeners: b10}));
}
var pe = null;
var qe = null;
function re(a3) {
  se(a3, 0);
}
function te(a3) {
  var b10 = ue(a3);
  if (Wa(b10))
    return a3;
}
function ve(a3, b10) {
  if (a3 === "change")
    return b10;
}
var we = false;
if (fa) {
  if (fa) {
    ye = "oninput" in document;
    if (!ye) {
      ze2 = document.createElement("div");
      ze2.setAttribute("oninput", "return;");
      ye = typeof ze2.oninput === "function";
    }
    xe2 = ye;
  } else
    xe2 = false;
  we = xe2 && (!document.documentMode || 9 < document.documentMode);
}
var xe2;
var ye;
var ze2;
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a3) {
  if (a3.propertyName === "value" && te(qe)) {
    var b10 = [];
    ne(b10, qe, a3, xb(a3));
    a3 = re;
    if (Kb)
      a3(b10);
    else {
      Kb = true;
      try {
        Gb(a3, b10);
      } finally {
        Kb = false, Mb();
      }
    }
  }
}
function Ce(a3, b10, c5) {
  a3 === "focusin" ? (Ae(), pe = b10, qe = c5, pe.attachEvent("onpropertychange", Be)) : a3 === "focusout" && Ae();
}
function De(a3) {
  if (a3 === "selectionchange" || a3 === "keyup" || a3 === "keydown")
    return te(qe);
}
function Ee(a3, b10) {
  if (a3 === "click")
    return te(b10);
}
function Fe(a3, b10) {
  if (a3 === "input" || a3 === "change")
    return te(b10);
}
function Ge(a3, b10) {
  return a3 === b10 && (a3 !== 0 || 1 / a3 === 1 / b10) || a3 !== a3 && b10 !== b10;
}
var He = typeof Object.is === "function" ? Object.is : Ge;
var Ie = Object.prototype.hasOwnProperty;
function Je(a3, b10) {
  if (He(a3, b10))
    return true;
  if (typeof a3 !== "object" || a3 === null || typeof b10 !== "object" || b10 === null)
    return false;
  var c5 = Object.keys(a3), d2 = Object.keys(b10);
  if (c5.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c5.length; d2++)
    if (!Ie.call(b10, c5[d2]) || !He(a3[c5[d2]], b10[c5[d2]]))
      return false;
  return true;
}
function Ke(a3) {
  for (; a3 && a3.firstChild; )
    a3 = a3.firstChild;
  return a3;
}
function Le(a3, b10) {
  var c5 = Ke(a3);
  a3 = 0;
  for (var d2; c5; ) {
    if (c5.nodeType === 3) {
      d2 = a3 + c5.textContent.length;
      if (a3 <= b10 && d2 >= b10)
        return {node: c5, offset: b10 - a3};
      a3 = d2;
    }
    a: {
      for (; c5; ) {
        if (c5.nextSibling) {
          c5 = c5.nextSibling;
          break a;
        }
        c5 = c5.parentNode;
      }
      c5 = void 0;
    }
    c5 = Ke(c5);
  }
}
function Me(a3, b10) {
  return a3 && b10 ? a3 === b10 ? true : a3 && a3.nodeType === 3 ? false : b10 && b10.nodeType === 3 ? Me(a3, b10.parentNode) : "contains" in a3 ? a3.contains(b10) : a3.compareDocumentPosition ? !!(a3.compareDocumentPosition(b10) & 16) : false : false;
}
function Ne() {
  for (var a3 = window, b10 = Xa(); b10 instanceof a3.HTMLIFrameElement; ) {
    try {
      var c5 = typeof b10.contentWindow.location.href === "string";
    } catch (d2) {
      c5 = false;
    }
    if (c5)
      a3 = b10.contentWindow;
    else
      break;
    b10 = Xa(a3.document);
  }
  return b10;
}
function Oe(a3) {
  var b10 = a3 && a3.nodeName && a3.nodeName.toLowerCase();
  return b10 && (b10 === "input" && (a3.type === "text" || a3.type === "search" || a3.type === "tel" || a3.type === "url" || a3.type === "password") || b10 === "textarea" || a3.contentEditable === "true");
}
var Pe = fa && "documentMode" in document && 11 >= document.documentMode;
var Qe = null;
var Re = null;
var Se = null;
var Te = false;
function Ue(a3, b10, c5) {
  var d2 = c5.window === c5 ? c5.document : c5.nodeType === 9 ? c5 : c5.ownerDocument;
  Te || Qe == null || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Oe(d2) ? d2 = {start: d2.selectionStart, end: d2.selectionEnd} : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = {anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset}), Se && Je(Se, d2) || (Se = d2, d2 = oe(Re, "onSelect"), 0 < d2.length && (b10 = new td("onSelect", "select", null, b10, c5), a3.push({event: b10, listeners: d2}), b10.target = Qe)));
}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
Pc(Oc, 2);
for (var Ve2 = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve2.length; We++)
  Nc.set(Ve2[We], 0);
ea("onMouseEnter", ["mouseout", "mouseover"]);
ea("onMouseLeave", ["mouseout", "mouseover"]);
ea("onPointerEnter", ["pointerout", "pointerover"]);
ea("onPointerLeave", ["pointerout", "pointerover"]);
da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
da("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");
var Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a3, b10, c5) {
  var d2 = a3.type || "unknown-event";
  a3.currentTarget = c5;
  Yb(d2, b10, void 0, a3);
  a3.currentTarget = null;
}
function se(a3, b10) {
  b10 = (b10 & 4) !== 0;
  for (var c5 = 0; c5 < a3.length; c5++) {
    var d2 = a3[c5], e3 = d2.event;
    d2 = d2.listeners;
    a: {
      var f3 = void 0;
      if (b10)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k6 = h2.instance, l3 = h2.currentTarget;
          h2 = h2.listener;
          if (k6 !== f3 && e3.isPropagationStopped())
            break a;
          Ze(e3, h2, l3);
          f3 = k6;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k6 = h2.instance;
          l3 = h2.currentTarget;
          h2 = h2.listener;
          if (k6 !== f3 && e3.isPropagationStopped())
            break a;
          Ze(e3, h2, l3);
          f3 = k6;
        }
    }
  }
  if (Ub)
    throw a3 = Vb, Ub = false, Vb = null, a3;
}
function G(a3, b10) {
  var c5 = $e(b10), d2 = a3 + "__bubble";
  c5.has(d2) || (af(b10, a3, 2, false), c5.add(d2));
}
var bf = "_reactListening" + Math.random().toString(36).slice(2);
function cf(a3) {
  a3[bf] || (a3[bf] = true, ba.forEach(function(b10) {
    Ye.has(b10) || df(b10, false, a3, null);
    df(b10, true, a3, null);
  }));
}
function df(a3, b10, c5, d2) {
  var e3 = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0, f3 = c5;
  a3 === "selectionchange" && c5.nodeType !== 9 && (f3 = c5.ownerDocument);
  if (d2 !== null && !b10 && Ye.has(a3)) {
    if (a3 !== "scroll")
      return;
    e3 |= 2;
    f3 = d2;
  }
  var g2 = $e(f3), h2 = a3 + "__" + (b10 ? "capture" : "bubble");
  g2.has(h2) || (b10 && (e3 |= 4), af(f3, a3, e3, b10), g2.add(h2));
}
function af(a3, b10, c5, d2) {
  var e3 = Nc.get(b10);
  switch (e3 === void 0 ? 2 : e3) {
    case 0:
      e3 = gd;
      break;
    case 1:
      e3 = id;
      break;
    default:
      e3 = hd;
  }
  c5 = e3.bind(null, b10, c5, a3);
  e3 = void 0;
  !Pb || b10 !== "touchstart" && b10 !== "touchmove" && b10 !== "wheel" || (e3 = true);
  d2 ? e3 !== void 0 ? a3.addEventListener(b10, c5, {capture: true, passive: e3}) : a3.addEventListener(b10, c5, true) : e3 !== void 0 ? a3.addEventListener(b10, c5, {passive: e3}) : a3.addEventListener(b10, c5, false);
}
function jd(a3, b10, c5, d2, e3) {
  var f3 = d2;
  if ((b10 & 1) === 0 && (b10 & 2) === 0 && d2 !== null)
    a:
      for (; ; ) {
        if (d2 === null)
          return;
        var g2 = d2.tag;
        if (g2 === 3 || g2 === 4) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e3 || h2.nodeType === 8 && h2.parentNode === e3)
            break;
          if (g2 === 4)
            for (g2 = d2.return; g2 !== null; ) {
              var k6 = g2.tag;
              if (k6 === 3 || k6 === 4) {
                if (k6 = g2.stateNode.containerInfo, k6 === e3 || k6.nodeType === 8 && k6.parentNode === e3)
                  return;
              }
              g2 = g2.return;
            }
          for (; h2 !== null; ) {
            g2 = wc(h2);
            if (g2 === null)
              return;
            k6 = g2.tag;
            if (k6 === 5 || k6 === 6) {
              d2 = f3 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Nb(function() {
    var d4 = f3, e4 = xb(c5), g3 = [];
    a: {
      var h3 = Mc.get(a3);
      if (h3 !== void 0) {
        var k7 = td, x5 = a3;
        switch (a3) {
          case "keypress":
            if (od(c5) === 0)
              break a;
          case "keydown":
          case "keyup":
            k7 = Rd;
            break;
          case "focusin":
            x5 = "focus";
            k7 = Fd;
            break;
          case "focusout":
            x5 = "blur";
            k7 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k7 = Fd;
            break;
          case "click":
            if (c5.button === 2)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k7 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k7 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k7 = Vd;
            break;
          case Ic:
          case Jc:
          case Kc:
            k7 = Hd;
            break;
          case Lc:
            k7 = Xd;
            break;
          case "scroll":
            k7 = vd;
            break;
          case "wheel":
            k7 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k7 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k7 = Td;
        }
        var w3 = (b10 & 4) !== 0, z3 = !w3 && a3 === "scroll", u2 = w3 ? h3 !== null ? h3 + "Capture" : null : h3;
        w3 = [];
        for (var t4 = d4, q2; t4 !== null; ) {
          q2 = t4;
          var v3 = q2.stateNode;
          q2.tag === 5 && v3 !== null && (q2 = v3, u2 !== null && (v3 = Ob(t4, u2), v3 != null && w3.push(ef(t4, v3, q2))));
          if (z3)
            break;
          t4 = t4.return;
        }
        0 < w3.length && (h3 = new k7(h3, x5, null, c5, e4), g3.push({event: h3, listeners: w3}));
      }
    }
    if ((b10 & 7) === 0) {
      a: {
        h3 = a3 === "mouseover" || a3 === "pointerover";
        k7 = a3 === "mouseout" || a3 === "pointerout";
        if (h3 && (b10 & 16) === 0 && (x5 = c5.relatedTarget || c5.fromElement) && (wc(x5) || x5[ff]))
          break a;
        if (k7 || h3) {
          h3 = e4.window === e4 ? e4 : (h3 = e4.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k7) {
            if (x5 = c5.relatedTarget || c5.toElement, k7 = d4, x5 = x5 ? wc(x5) : null, x5 !== null && (z3 = Zb(x5), x5 !== z3 || x5.tag !== 5 && x5.tag !== 6))
              x5 = null;
          } else
            k7 = null, x5 = d4;
          if (k7 !== x5) {
            w3 = Bd;
            v3 = "onMouseLeave";
            u2 = "onMouseEnter";
            t4 = "mouse";
            if (a3 === "pointerout" || a3 === "pointerover")
              w3 = Td, v3 = "onPointerLeave", u2 = "onPointerEnter", t4 = "pointer";
            z3 = k7 == null ? h3 : ue(k7);
            q2 = x5 == null ? h3 : ue(x5);
            h3 = new w3(v3, t4 + "leave", k7, c5, e4);
            h3.target = z3;
            h3.relatedTarget = q2;
            v3 = null;
            wc(e4) === d4 && (w3 = new w3(u2, t4 + "enter", x5, c5, e4), w3.target = q2, w3.relatedTarget = z3, v3 = w3);
            z3 = v3;
            if (k7 && x5)
              b: {
                w3 = k7;
                u2 = x5;
                t4 = 0;
                for (q2 = w3; q2; q2 = gf(q2))
                  t4++;
                q2 = 0;
                for (v3 = u2; v3; v3 = gf(v3))
                  q2++;
                for (; 0 < t4 - q2; )
                  w3 = gf(w3), t4--;
                for (; 0 < q2 - t4; )
                  u2 = gf(u2), q2--;
                for (; t4--; ) {
                  if (w3 === u2 || u2 !== null && w3 === u2.alternate)
                    break b;
                  w3 = gf(w3);
                  u2 = gf(u2);
                }
                w3 = null;
              }
            else
              w3 = null;
            k7 !== null && hf(g3, h3, k7, w3, false);
            x5 !== null && z3 !== null && hf(g3, z3, x5, w3, true);
          }
        }
      }
      a: {
        h3 = d4 ? ue(d4) : window;
        k7 = h3.nodeName && h3.nodeName.toLowerCase();
        if (k7 === "select" || k7 === "input" && h3.type === "file")
          var J3 = ve;
        else if (me(h3))
          if (we)
            J3 = Fe;
          else {
            J3 = De;
            var K5 = Ce;
          }
        else
          (k7 = h3.nodeName) && k7.toLowerCase() === "input" && (h3.type === "checkbox" || h3.type === "radio") && (J3 = Ee);
        if (J3 && (J3 = J3(a3, d4))) {
          ne(g3, J3, c5, e4);
          break a;
        }
        K5 && K5(a3, h3, d4);
        a3 === "focusout" && (K5 = h3._wrapperState) && K5.controlled && h3.type === "number" && bb(h3, "number", h3.value);
      }
      K5 = d4 ? ue(d4) : window;
      switch (a3) {
        case "focusin":
          if (me(K5) || K5.contentEditable === "true")
            Qe = K5, Re = d4, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c5, e4);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c5, e4);
      }
      var Q3;
      if (ae)
        b: {
          switch (a3) {
            case "compositionstart":
              var L3 = "onCompositionStart";
              break b;
            case "compositionend":
              L3 = "onCompositionEnd";
              break b;
            case "compositionupdate":
              L3 = "onCompositionUpdate";
              break b;
          }
          L3 = void 0;
        }
      else
        ie ? ge(a3, c5) && (L3 = "onCompositionEnd") : a3 === "keydown" && c5.keyCode === 229 && (L3 = "onCompositionStart");
      L3 && (de && c5.locale !== "ko" && (ie || L3 !== "onCompositionStart" ? L3 === "onCompositionEnd" && ie && (Q3 = nd()) : (kd = e4, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), K5 = oe(d4, L3), 0 < K5.length && (L3 = new Ld(L3, a3, null, c5, e4), g3.push({event: L3, listeners: K5}), Q3 ? L3.data = Q3 : (Q3 = he(c5), Q3 !== null && (L3.data = Q3))));
      if (Q3 = ce ? je(a3, c5) : ke(a3, c5))
        d4 = oe(d4, "onBeforeInput"), 0 < d4.length && (e4 = new Ld("onBeforeInput", "beforeinput", null, c5, e4), g3.push({event: e4, listeners: d4}), e4.data = Q3);
    }
    se(g3, b10);
  });
}
function ef(a3, b10, c5) {
  return {instance: a3, listener: b10, currentTarget: c5};
}
function oe(a3, b10) {
  for (var c5 = b10 + "Capture", d2 = []; a3 !== null; ) {
    var e3 = a3, f3 = e3.stateNode;
    e3.tag === 5 && f3 !== null && (e3 = f3, f3 = Ob(a3, c5), f3 != null && d2.unshift(ef(a3, f3, e3)), f3 = Ob(a3, b10), f3 != null && d2.push(ef(a3, f3, e3)));
    a3 = a3.return;
  }
  return d2;
}
function gf(a3) {
  if (a3 === null)
    return null;
  do
    a3 = a3.return;
  while (a3 && a3.tag !== 5);
  return a3 ? a3 : null;
}
function hf(a3, b10, c5, d2, e3) {
  for (var f3 = b10._reactName, g2 = []; c5 !== null && c5 !== d2; ) {
    var h2 = c5, k6 = h2.alternate, l3 = h2.stateNode;
    if (k6 !== null && k6 === d2)
      break;
    h2.tag === 5 && l3 !== null && (h2 = l3, e3 ? (k6 = Ob(c5, f3), k6 != null && g2.unshift(ef(c5, k6, h2))) : e3 || (k6 = Ob(c5, f3), k6 != null && g2.push(ef(c5, k6, h2))));
    c5 = c5.return;
  }
  g2.length !== 0 && a3.push({event: b10, listeners: g2});
}
function jf() {
}
var kf = null;
var lf = null;
function mf(a3, b10) {
  switch (a3) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b10.autoFocus;
  }
  return false;
}
function nf(a3, b10) {
  return a3 === "textarea" || a3 === "option" || a3 === "noscript" || typeof b10.children === "string" || typeof b10.children === "number" || typeof b10.dangerouslySetInnerHTML === "object" && b10.dangerouslySetInnerHTML !== null && b10.dangerouslySetInnerHTML.__html != null;
}
var of = typeof setTimeout === "function" ? setTimeout : void 0;
var pf = typeof clearTimeout === "function" ? clearTimeout : void 0;
function qf(a3) {
  a3.nodeType === 1 ? a3.textContent = "" : a3.nodeType === 9 && (a3 = a3.body, a3 != null && (a3.textContent = ""));
}
function rf(a3) {
  for (; a3 != null; a3 = a3.nextSibling) {
    var b10 = a3.nodeType;
    if (b10 === 1 || b10 === 3)
      break;
  }
  return a3;
}
function sf(a3) {
  a3 = a3.previousSibling;
  for (var b10 = 0; a3; ) {
    if (a3.nodeType === 8) {
      var c5 = a3.data;
      if (c5 === "$" || c5 === "$!" || c5 === "$?") {
        if (b10 === 0)
          return a3;
        b10--;
      } else
        c5 === "/$" && b10++;
    }
    a3 = a3.previousSibling;
  }
  return null;
}
var tf = 0;
function uf(a3) {
  return {$$typeof: Ga, toString: a3, valueOf: a3};
}
var vf = Math.random().toString(36).slice(2);
var wf = "__reactFiber$" + vf;
var xf = "__reactProps$" + vf;
var ff = "__reactContainer$" + vf;
var yf = "__reactEvents$" + vf;
function wc(a3) {
  var b10 = a3[wf];
  if (b10)
    return b10;
  for (var c5 = a3.parentNode; c5; ) {
    if (b10 = c5[ff] || c5[wf]) {
      c5 = b10.alternate;
      if (b10.child !== null || c5 !== null && c5.child !== null)
        for (a3 = sf(a3); a3 !== null; ) {
          if (c5 = a3[wf])
            return c5;
          a3 = sf(a3);
        }
      return b10;
    }
    a3 = c5;
    c5 = a3.parentNode;
  }
  return null;
}
function Cb(a3) {
  a3 = a3[wf] || a3[ff];
  return !a3 || a3.tag !== 5 && a3.tag !== 6 && a3.tag !== 13 && a3.tag !== 3 ? null : a3;
}
function ue(a3) {
  if (a3.tag === 5 || a3.tag === 6)
    return a3.stateNode;
  throw Error(y(33));
}
function Db(a3) {
  return a3[xf] || null;
}
function $e(a3) {
  var b10 = a3[yf];
  b10 === void 0 && (b10 = a3[yf] = new Set());
  return b10;
}
var zf = [];
var Af = -1;
function Bf(a3) {
  return {current: a3};
}
function H(a3) {
  0 > Af || (a3.current = zf[Af], zf[Af] = null, Af--);
}
function I(a3, b10) {
  Af++;
  zf[Af] = a3.current;
  a3.current = b10;
}
var Cf = {};
var M = Bf(Cf);
var N = Bf(false);
var Df = Cf;
function Ef(a3, b10) {
  var c5 = a3.type.contextTypes;
  if (!c5)
    return Cf;
  var d2 = a3.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b10)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e3 = {}, f3;
  for (f3 in c5)
    e3[f3] = b10[f3];
  d2 && (a3 = a3.stateNode, a3.__reactInternalMemoizedUnmaskedChildContext = b10, a3.__reactInternalMemoizedMaskedChildContext = e3);
  return e3;
}
function Ff(a3) {
  a3 = a3.childContextTypes;
  return a3 !== null && a3 !== void 0;
}
function Gf() {
  H(N);
  H(M);
}
function Hf(a3, b10, c5) {
  if (M.current !== Cf)
    throw Error(y(168));
  I(M, b10);
  I(N, c5);
}
function If(a3, b10, c5) {
  var d2 = a3.stateNode;
  a3 = b10.childContextTypes;
  if (typeof d2.getChildContext !== "function")
    return c5;
  d2 = d2.getChildContext();
  for (var e3 in d2)
    if (!(e3 in a3))
      throw Error(y(108, Ra(b10) || "Unknown", e3));
  return objectAssign({}, c5, d2);
}
function Jf(a3) {
  a3 = (a3 = a3.stateNode) && a3.__reactInternalMemoizedMergedChildContext || Cf;
  Df = M.current;
  I(M, a3);
  I(N, N.current);
  return true;
}
function Kf(a3, b10, c5) {
  var d2 = a3.stateNode;
  if (!d2)
    throw Error(y(169));
  c5 ? (a3 = If(a3, b10, Df), d2.__reactInternalMemoizedMergedChildContext = a3, H(N), H(M), I(M, a3)) : H(N);
  I(N, c5);
}
var Lf = null;
var Mf = null;
var Nf = scheduler.unstable_runWithPriority;
var Of = scheduler.unstable_scheduleCallback;
var Pf = scheduler.unstable_cancelCallback;
var Qf = scheduler.unstable_shouldYield;
var Rf = scheduler.unstable_requestPaint;
var Sf = scheduler.unstable_now;
var Tf = scheduler.unstable_getCurrentPriorityLevel;
var Uf = scheduler.unstable_ImmediatePriority;
var Vf = scheduler.unstable_UserBlockingPriority;
var Wf = scheduler.unstable_NormalPriority;
var Xf = scheduler.unstable_LowPriority;
var Yf = scheduler.unstable_IdlePriority;
var Zf = {};
var $f = Rf !== void 0 ? Rf : function() {
};
var ag = null;
var bg = null;
var cg = false;
var dg = Sf();
var O = 1e4 > dg ? Sf : function() {
  return Sf() - dg;
};
function eg() {
  switch (Tf()) {
    case Uf:
      return 99;
    case Vf:
      return 98;
    case Wf:
      return 97;
    case Xf:
      return 96;
    case Yf:
      return 95;
    default:
      throw Error(y(332));
  }
}
function fg(a3) {
  switch (a3) {
    case 99:
      return Uf;
    case 98:
      return Vf;
    case 97:
      return Wf;
    case 96:
      return Xf;
    case 95:
      return Yf;
    default:
      throw Error(y(332));
  }
}
function gg(a3, b10) {
  a3 = fg(a3);
  return Nf(a3, b10);
}
function hg(a3, b10, c5) {
  a3 = fg(a3);
  return Of(a3, b10, c5);
}
function ig() {
  if (bg !== null) {
    var a3 = bg;
    bg = null;
    Pf(a3);
  }
  jg();
}
function jg() {
  if (!cg && ag !== null) {
    cg = true;
    var a3 = 0;
    try {
      var b10 = ag;
      gg(99, function() {
        for (; a3 < b10.length; a3++) {
          var c5 = b10[a3];
          do
            c5 = c5(true);
          while (c5 !== null);
        }
      });
      ag = null;
    } catch (c5) {
      throw ag !== null && (ag = ag.slice(a3 + 1)), Of(Uf, ig), c5;
    } finally {
      cg = false;
    }
  }
}
var kg = ra.ReactCurrentBatchConfig;
function lg(a3, b10) {
  if (a3 && a3.defaultProps) {
    b10 = objectAssign({}, b10);
    a3 = a3.defaultProps;
    for (var c5 in a3)
      b10[c5] === void 0 && (b10[c5] = a3[c5]);
    return b10;
  }
  return b10;
}
var mg = Bf(null);
var ng = null;
var og = null;
var pg = null;
function qg() {
  pg = og = ng = null;
}
function rg(a3) {
  var b10 = mg.current;
  H(mg);
  a3.type._context._currentValue = b10;
}
function sg(a3, b10) {
  for (; a3 !== null; ) {
    var c5 = a3.alternate;
    if ((a3.childLanes & b10) === b10)
      if (c5 === null || (c5.childLanes & b10) === b10)
        break;
      else
        c5.childLanes |= b10;
    else
      a3.childLanes |= b10, c5 !== null && (c5.childLanes |= b10);
    a3 = a3.return;
  }
}
function tg(a3, b10) {
  ng = a3;
  pg = og = null;
  a3 = a3.dependencies;
  a3 !== null && a3.firstContext !== null && ((a3.lanes & b10) !== 0 && (ug = true), a3.firstContext = null);
}
function vg(a3, b10) {
  if (pg !== a3 && b10 !== false && b10 !== 0) {
    if (typeof b10 !== "number" || b10 === 1073741823)
      pg = a3, b10 = 1073741823;
    b10 = {context: a3, observedBits: b10, next: null};
    if (og === null) {
      if (ng === null)
        throw Error(y(308));
      og = b10;
      ng.dependencies = {lanes: 0, firstContext: b10, responders: null};
    } else
      og = og.next = b10;
  }
  return a3._currentValue;
}
var wg = false;
function xg(a3) {
  a3.updateQueue = {baseState: a3.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: {pending: null}, effects: null};
}
function yg(a3, b10) {
  a3 = a3.updateQueue;
  b10.updateQueue === a3 && (b10.updateQueue = {baseState: a3.baseState, firstBaseUpdate: a3.firstBaseUpdate, lastBaseUpdate: a3.lastBaseUpdate, shared: a3.shared, effects: a3.effects});
}
function zg(a3, b10) {
  return {eventTime: a3, lane: b10, tag: 0, payload: null, callback: null, next: null};
}
function Ag(a3, b10) {
  a3 = a3.updateQueue;
  if (a3 !== null) {
    a3 = a3.shared;
    var c5 = a3.pending;
    c5 === null ? b10.next = b10 : (b10.next = c5.next, c5.next = b10);
    a3.pending = b10;
  }
}
function Bg(a3, b10) {
  var c5 = a3.updateQueue, d2 = a3.alternate;
  if (d2 !== null && (d2 = d2.updateQueue, c5 === d2)) {
    var e3 = null, f3 = null;
    c5 = c5.firstBaseUpdate;
    if (c5 !== null) {
      do {
        var g2 = {eventTime: c5.eventTime, lane: c5.lane, tag: c5.tag, payload: c5.payload, callback: c5.callback, next: null};
        f3 === null ? e3 = f3 = g2 : f3 = f3.next = g2;
        c5 = c5.next;
      } while (c5 !== null);
      f3 === null ? e3 = f3 = b10 : f3 = f3.next = b10;
    } else
      e3 = f3 = b10;
    c5 = {baseState: d2.baseState, firstBaseUpdate: e3, lastBaseUpdate: f3, shared: d2.shared, effects: d2.effects};
    a3.updateQueue = c5;
    return;
  }
  a3 = c5.lastBaseUpdate;
  a3 === null ? c5.firstBaseUpdate = b10 : a3.next = b10;
  c5.lastBaseUpdate = b10;
}
function Cg(a3, b10, c5, d2) {
  var e3 = a3.updateQueue;
  wg = false;
  var f3 = e3.firstBaseUpdate, g2 = e3.lastBaseUpdate, h2 = e3.shared.pending;
  if (h2 !== null) {
    e3.shared.pending = null;
    var k6 = h2, l3 = k6.next;
    k6.next = null;
    g2 === null ? f3 = l3 : g2.next = l3;
    g2 = k6;
    var n3 = a3.alternate;
    if (n3 !== null) {
      n3 = n3.updateQueue;
      var A6 = n3.lastBaseUpdate;
      A6 !== g2 && (A6 === null ? n3.firstBaseUpdate = l3 : A6.next = l3, n3.lastBaseUpdate = k6);
    }
  }
  if (f3 !== null) {
    A6 = e3.baseState;
    g2 = 0;
    n3 = l3 = k6 = null;
    do {
      h2 = f3.lane;
      var p3 = f3.eventTime;
      if ((d2 & h2) === h2) {
        n3 !== null && (n3 = n3.next = {
          eventTime: p3,
          lane: 0,
          tag: f3.tag,
          payload: f3.payload,
          callback: f3.callback,
          next: null
        });
        a: {
          var C5 = a3, x5 = f3;
          h2 = b10;
          p3 = c5;
          switch (x5.tag) {
            case 1:
              C5 = x5.payload;
              if (typeof C5 === "function") {
                A6 = C5.call(p3, A6, h2);
                break a;
              }
              A6 = C5;
              break a;
            case 3:
              C5.flags = C5.flags & -4097 | 64;
            case 0:
              C5 = x5.payload;
              h2 = typeof C5 === "function" ? C5.call(p3, A6, h2) : C5;
              if (h2 === null || h2 === void 0)
                break a;
              A6 = objectAssign({}, A6, h2);
              break a;
            case 2:
              wg = true;
          }
        }
        f3.callback !== null && (a3.flags |= 32, h2 = e3.effects, h2 === null ? e3.effects = [f3] : h2.push(f3));
      } else
        p3 = {eventTime: p3, lane: h2, tag: f3.tag, payload: f3.payload, callback: f3.callback, next: null}, n3 === null ? (l3 = n3 = p3, k6 = A6) : n3 = n3.next = p3, g2 |= h2;
      f3 = f3.next;
      if (f3 === null)
        if (h2 = e3.shared.pending, h2 === null)
          break;
        else
          f3 = h2.next, h2.next = null, e3.lastBaseUpdate = h2, e3.shared.pending = null;
    } while (1);
    n3 === null && (k6 = A6);
    e3.baseState = k6;
    e3.firstBaseUpdate = l3;
    e3.lastBaseUpdate = n3;
    Dg |= g2;
    a3.lanes = g2;
    a3.memoizedState = A6;
  }
}
function Eg(a3, b10, c5) {
  a3 = b10.effects;
  b10.effects = null;
  if (a3 !== null)
    for (b10 = 0; b10 < a3.length; b10++) {
      var d2 = a3[b10], e3 = d2.callback;
      if (e3 !== null) {
        d2.callback = null;
        d2 = c5;
        if (typeof e3 !== "function")
          throw Error(y(191, e3));
        e3.call(d2);
      }
    }
}
var Fg = new react.Component().refs;
function Gg(a3, b10, c5, d2) {
  b10 = a3.memoizedState;
  c5 = c5(d2, b10);
  c5 = c5 === null || c5 === void 0 ? b10 : objectAssign({}, b10, c5);
  a3.memoizedState = c5;
  a3.lanes === 0 && (a3.updateQueue.baseState = c5);
}
var Kg = {isMounted: function(a3) {
  return (a3 = a3._reactInternals) ? Zb(a3) === a3 : false;
}, enqueueSetState: function(a3, b10, c5) {
  a3 = a3._reactInternals;
  var d2 = Hg(), e3 = Ig(a3), f3 = zg(d2, e3);
  f3.payload = b10;
  c5 !== void 0 && c5 !== null && (f3.callback = c5);
  Ag(a3, f3);
  Jg(a3, e3, d2);
}, enqueueReplaceState: function(a3, b10, c5) {
  a3 = a3._reactInternals;
  var d2 = Hg(), e3 = Ig(a3), f3 = zg(d2, e3);
  f3.tag = 1;
  f3.payload = b10;
  c5 !== void 0 && c5 !== null && (f3.callback = c5);
  Ag(a3, f3);
  Jg(a3, e3, d2);
}, enqueueForceUpdate: function(a3, b10) {
  a3 = a3._reactInternals;
  var c5 = Hg(), d2 = Ig(a3), e3 = zg(c5, d2);
  e3.tag = 2;
  b10 !== void 0 && b10 !== null && (e3.callback = b10);
  Ag(a3, e3);
  Jg(a3, d2, c5);
}};
function Lg(a3, b10, c5, d2, e3, f3, g2) {
  a3 = a3.stateNode;
  return typeof a3.shouldComponentUpdate === "function" ? a3.shouldComponentUpdate(d2, f3, g2) : b10.prototype && b10.prototype.isPureReactComponent ? !Je(c5, d2) || !Je(e3, f3) : true;
}
function Mg(a3, b10, c5) {
  var d2 = false, e3 = Cf;
  var f3 = b10.contextType;
  typeof f3 === "object" && f3 !== null ? f3 = vg(f3) : (e3 = Ff(b10) ? Df : M.current, d2 = b10.contextTypes, f3 = (d2 = d2 !== null && d2 !== void 0) ? Ef(a3, e3) : Cf);
  b10 = new b10(c5, f3);
  a3.memoizedState = b10.state !== null && b10.state !== void 0 ? b10.state : null;
  b10.updater = Kg;
  a3.stateNode = b10;
  b10._reactInternals = a3;
  d2 && (a3 = a3.stateNode, a3.__reactInternalMemoizedUnmaskedChildContext = e3, a3.__reactInternalMemoizedMaskedChildContext = f3);
  return b10;
}
function Ng(a3, b10, c5, d2) {
  a3 = b10.state;
  typeof b10.componentWillReceiveProps === "function" && b10.componentWillReceiveProps(c5, d2);
  typeof b10.UNSAFE_componentWillReceiveProps === "function" && b10.UNSAFE_componentWillReceiveProps(c5, d2);
  b10.state !== a3 && Kg.enqueueReplaceState(b10, b10.state, null);
}
function Og(a3, b10, c5, d2) {
  var e3 = a3.stateNode;
  e3.props = c5;
  e3.state = a3.memoizedState;
  e3.refs = Fg;
  xg(a3);
  var f3 = b10.contextType;
  typeof f3 === "object" && f3 !== null ? e3.context = vg(f3) : (f3 = Ff(b10) ? Df : M.current, e3.context = Ef(a3, f3));
  Cg(a3, c5, e3, d2);
  e3.state = a3.memoizedState;
  f3 = b10.getDerivedStateFromProps;
  typeof f3 === "function" && (Gg(a3, b10, f3, c5), e3.state = a3.memoizedState);
  typeof b10.getDerivedStateFromProps === "function" || typeof e3.getSnapshotBeforeUpdate === "function" || typeof e3.UNSAFE_componentWillMount !== "function" && typeof e3.componentWillMount !== "function" || (b10 = e3.state, typeof e3.componentWillMount === "function" && e3.componentWillMount(), typeof e3.UNSAFE_componentWillMount === "function" && e3.UNSAFE_componentWillMount(), b10 !== e3.state && Kg.enqueueReplaceState(e3, e3.state, null), Cg(a3, c5, e3, d2), e3.state = a3.memoizedState);
  typeof e3.componentDidMount === "function" && (a3.flags |= 4);
}
var Pg = Array.isArray;
function Qg(a3, b10, c5) {
  a3 = c5.ref;
  if (a3 !== null && typeof a3 !== "function" && typeof a3 !== "object") {
    if (c5._owner) {
      c5 = c5._owner;
      if (c5) {
        if (c5.tag !== 1)
          throw Error(y(309));
        var d2 = c5.stateNode;
      }
      if (!d2)
        throw Error(y(147, a3));
      var e3 = "" + a3;
      if (b10 !== null && b10.ref !== null && typeof b10.ref === "function" && b10.ref._stringRef === e3)
        return b10.ref;
      b10 = function(a4) {
        var b11 = d2.refs;
        b11 === Fg && (b11 = d2.refs = {});
        a4 === null ? delete b11[e3] : b11[e3] = a4;
      };
      b10._stringRef = e3;
      return b10;
    }
    if (typeof a3 !== "string")
      throw Error(y(284));
    if (!c5._owner)
      throw Error(y(290, a3));
  }
  return a3;
}
function Rg(a3, b10) {
  if (a3.type !== "textarea")
    throw Error(y(31, Object.prototype.toString.call(b10) === "[object Object]" ? "object with keys {" + Object.keys(b10).join(", ") + "}" : b10));
}
function Sg(a3) {
  function b10(b11, c6) {
    if (a3) {
      var d4 = b11.lastEffect;
      d4 !== null ? (d4.nextEffect = c6, b11.lastEffect = c6) : b11.firstEffect = b11.lastEffect = c6;
      c6.nextEffect = null;
      c6.flags = 8;
    }
  }
  function c5(c6, d4) {
    if (!a3)
      return null;
    for (; d4 !== null; )
      b10(c6, d4), d4 = d4.sibling;
    return null;
  }
  function d2(a4, b11) {
    for (a4 = new Map(); b11 !== null; )
      b11.key !== null ? a4.set(b11.key, b11) : a4.set(b11.index, b11), b11 = b11.sibling;
    return a4;
  }
  function e3(a4, b11) {
    a4 = Tg(a4, b11);
    a4.index = 0;
    a4.sibling = null;
    return a4;
  }
  function f3(b11, c6, d4) {
    b11.index = d4;
    if (!a3)
      return c6;
    d4 = b11.alternate;
    if (d4 !== null)
      return d4 = d4.index, d4 < c6 ? (b11.flags = 2, c6) : d4;
    b11.flags = 2;
    return c6;
  }
  function g2(b11) {
    a3 && b11.alternate === null && (b11.flags = 2);
    return b11;
  }
  function h2(a4, b11, c6, d4) {
    if (b11 === null || b11.tag !== 6)
      return b11 = Ug(c6, a4.mode, d4), b11.return = a4, b11;
    b11 = e3(b11, c6);
    b11.return = a4;
    return b11;
  }
  function k6(a4, b11, c6, d4) {
    if (b11 !== null && b11.elementType === c6.type)
      return d4 = e3(b11, c6.props), d4.ref = Qg(a4, b11, c6), d4.return = a4, d4;
    d4 = Vg(c6.type, c6.key, c6.props, null, a4.mode, d4);
    d4.ref = Qg(a4, b11, c6);
    d4.return = a4;
    return d4;
  }
  function l3(a4, b11, c6, d4) {
    if (b11 === null || b11.tag !== 4 || b11.stateNode.containerInfo !== c6.containerInfo || b11.stateNode.implementation !== c6.implementation)
      return b11 = Wg(c6, a4.mode, d4), b11.return = a4, b11;
    b11 = e3(b11, c6.children || []);
    b11.return = a4;
    return b11;
  }
  function n3(a4, b11, c6, d4, f4) {
    if (b11 === null || b11.tag !== 7)
      return b11 = Xg(c6, a4.mode, d4, f4), b11.return = a4, b11;
    b11 = e3(b11, c6);
    b11.return = a4;
    return b11;
  }
  function A6(a4, b11, c6) {
    if (typeof b11 === "string" || typeof b11 === "number")
      return b11 = Ug("" + b11, a4.mode, c6), b11.return = a4, b11;
    if (typeof b11 === "object" && b11 !== null) {
      switch (b11.$$typeof) {
        case sa:
          return c6 = Vg(b11.type, b11.key, b11.props, null, a4.mode, c6), c6.ref = Qg(a4, null, b11), c6.return = a4, c6;
        case ta:
          return b11 = Wg(b11, a4.mode, c6), b11.return = a4, b11;
      }
      if (Pg(b11) || La(b11))
        return b11 = Xg(b11, a4.mode, c6, null), b11.return = a4, b11;
      Rg(a4, b11);
    }
    return null;
  }
  function p3(a4, b11, c6, d4) {
    var e4 = b11 !== null ? b11.key : null;
    if (typeof c6 === "string" || typeof c6 === "number")
      return e4 !== null ? null : h2(a4, b11, "" + c6, d4);
    if (typeof c6 === "object" && c6 !== null) {
      switch (c6.$$typeof) {
        case sa:
          return c6.key === e4 ? c6.type === ua ? n3(a4, b11, c6.props.children, d4, e4) : k6(a4, b11, c6, d4) : null;
        case ta:
          return c6.key === e4 ? l3(a4, b11, c6, d4) : null;
      }
      if (Pg(c6) || La(c6))
        return e4 !== null ? null : n3(a4, b11, c6, d4, null);
      Rg(a4, c6);
    }
    return null;
  }
  function C5(a4, b11, c6, d4, e4) {
    if (typeof d4 === "string" || typeof d4 === "number")
      return a4 = a4.get(c6) || null, h2(b11, a4, "" + d4, e4);
    if (typeof d4 === "object" && d4 !== null) {
      switch (d4.$$typeof) {
        case sa:
          return a4 = a4.get(d4.key === null ? c6 : d4.key) || null, d4.type === ua ? n3(b11, a4, d4.props.children, e4, d4.key) : k6(b11, a4, d4, e4);
        case ta:
          return a4 = a4.get(d4.key === null ? c6 : d4.key) || null, l3(b11, a4, d4, e4);
      }
      if (Pg(d4) || La(d4))
        return a4 = a4.get(c6) || null, n3(b11, a4, d4, e4, null);
      Rg(b11, d4);
    }
    return null;
  }
  function x5(e4, g3, h3, k7) {
    for (var l4 = null, t4 = null, u2 = g3, z3 = g3 = 0, q2 = null; u2 !== null && z3 < h3.length; z3++) {
      u2.index > z3 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var n4 = p3(e4, u2, h3[z3], k7);
      if (n4 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a3 && u2 && n4.alternate === null && b10(e4, u2);
      g3 = f3(n4, g3, z3);
      t4 === null ? l4 = n4 : t4.sibling = n4;
      t4 = n4;
      u2 = q2;
    }
    if (z3 === h3.length)
      return c5(e4, u2), l4;
    if (u2 === null) {
      for (; z3 < h3.length; z3++)
        u2 = A6(e4, h3[z3], k7), u2 !== null && (g3 = f3(u2, g3, z3), t4 === null ? l4 = u2 : t4.sibling = u2, t4 = u2);
      return l4;
    }
    for (u2 = d2(e4, u2); z3 < h3.length; z3++)
      q2 = C5(u2, e4, z3, h3[z3], k7), q2 !== null && (a3 && q2.alternate !== null && u2.delete(q2.key === null ? z3 : q2.key), g3 = f3(q2, g3, z3), t4 === null ? l4 = q2 : t4.sibling = q2, t4 = q2);
    a3 && u2.forEach(function(a4) {
      return b10(e4, a4);
    });
    return l4;
  }
  function w3(e4, g3, h3, k7) {
    var l4 = La(h3);
    if (typeof l4 !== "function")
      throw Error(y(150));
    h3 = l4.call(h3);
    if (h3 == null)
      throw Error(y(151));
    for (var t4 = l4 = null, u2 = g3, z3 = g3 = 0, q2 = null, n4 = h3.next(); u2 !== null && !n4.done; z3++, n4 = h3.next()) {
      u2.index > z3 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var w4 = p3(e4, u2, n4.value, k7);
      if (w4 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a3 && u2 && w4.alternate === null && b10(e4, u2);
      g3 = f3(w4, g3, z3);
      t4 === null ? l4 = w4 : t4.sibling = w4;
      t4 = w4;
      u2 = q2;
    }
    if (n4.done)
      return c5(e4, u2), l4;
    if (u2 === null) {
      for (; !n4.done; z3++, n4 = h3.next())
        n4 = A6(e4, n4.value, k7), n4 !== null && (g3 = f3(n4, g3, z3), t4 === null ? l4 = n4 : t4.sibling = n4, t4 = n4);
      return l4;
    }
    for (u2 = d2(e4, u2); !n4.done; z3++, n4 = h3.next())
      n4 = C5(u2, e4, z3, n4.value, k7), n4 !== null && (a3 && n4.alternate !== null && u2.delete(n4.key === null ? z3 : n4.key), g3 = f3(n4, g3, z3), t4 === null ? l4 = n4 : t4.sibling = n4, t4 = n4);
    a3 && u2.forEach(function(a4) {
      return b10(e4, a4);
    });
    return l4;
  }
  return function(a4, d4, f4, h3) {
    var k7 = typeof f4 === "object" && f4 !== null && f4.type === ua && f4.key === null;
    k7 && (f4 = f4.props.children);
    var l4 = typeof f4 === "object" && f4 !== null;
    if (l4)
      switch (f4.$$typeof) {
        case sa:
          a: {
            l4 = f4.key;
            for (k7 = d4; k7 !== null; ) {
              if (k7.key === l4) {
                switch (k7.tag) {
                  case 7:
                    if (f4.type === ua) {
                      c5(a4, k7.sibling);
                      d4 = e3(k7, f4.props.children);
                      d4.return = a4;
                      a4 = d4;
                      break a;
                    }
                    break;
                  default:
                    if (k7.elementType === f4.type) {
                      c5(a4, k7.sibling);
                      d4 = e3(k7, f4.props);
                      d4.ref = Qg(a4, k7, f4);
                      d4.return = a4;
                      a4 = d4;
                      break a;
                    }
                }
                c5(a4, k7);
                break;
              } else
                b10(a4, k7);
              k7 = k7.sibling;
            }
            f4.type === ua ? (d4 = Xg(f4.props.children, a4.mode, h3, f4.key), d4.return = a4, a4 = d4) : (h3 = Vg(f4.type, f4.key, f4.props, null, a4.mode, h3), h3.ref = Qg(a4, d4, f4), h3.return = a4, a4 = h3);
          }
          return g2(a4);
        case ta:
          a: {
            for (k7 = f4.key; d4 !== null; ) {
              if (d4.key === k7)
                if (d4.tag === 4 && d4.stateNode.containerInfo === f4.containerInfo && d4.stateNode.implementation === f4.implementation) {
                  c5(a4, d4.sibling);
                  d4 = e3(d4, f4.children || []);
                  d4.return = a4;
                  a4 = d4;
                  break a;
                } else {
                  c5(a4, d4);
                  break;
                }
              else
                b10(a4, d4);
              d4 = d4.sibling;
            }
            d4 = Wg(f4, a4.mode, h3);
            d4.return = a4;
            a4 = d4;
          }
          return g2(a4);
      }
    if (typeof f4 === "string" || typeof f4 === "number")
      return f4 = "" + f4, d4 !== null && d4.tag === 6 ? (c5(a4, d4.sibling), d4 = e3(d4, f4), d4.return = a4, a4 = d4) : (c5(a4, d4), d4 = Ug(f4, a4.mode, h3), d4.return = a4, a4 = d4), g2(a4);
    if (Pg(f4))
      return x5(a4, d4, f4, h3);
    if (La(f4))
      return w3(a4, d4, f4, h3);
    l4 && Rg(a4, f4);
    if (typeof f4 === "undefined" && !k7)
      switch (a4.tag) {
        case 1:
        case 22:
        case 0:
        case 11:
        case 15:
          throw Error(y(152, Ra(a4.type) || "Component"));
      }
    return c5(a4, d4);
  };
}
var Yg = Sg(true);
var Zg = Sg(false);
var $g = {};
var ah = Bf($g);
var bh = Bf($g);
var ch = Bf($g);
function dh(a3) {
  if (a3 === $g)
    throw Error(y(174));
  return a3;
}
function eh(a3, b10) {
  I(ch, b10);
  I(bh, a3);
  I(ah, $g);
  a3 = b10.nodeType;
  switch (a3) {
    case 9:
    case 11:
      b10 = (b10 = b10.documentElement) ? b10.namespaceURI : mb(null, "");
      break;
    default:
      a3 = a3 === 8 ? b10.parentNode : b10, b10 = a3.namespaceURI || null, a3 = a3.tagName, b10 = mb(b10, a3);
  }
  H(ah);
  I(ah, b10);
}
function fh() {
  H(ah);
  H(bh);
  H(ch);
}
function gh(a3) {
  dh(ch.current);
  var b10 = dh(ah.current);
  var c5 = mb(b10, a3.type);
  b10 !== c5 && (I(bh, a3), I(ah, c5));
}
function hh(a3) {
  bh.current === a3 && (H(ah), H(bh));
}
var P = Bf(0);
function ih(a3) {
  for (var b10 = a3; b10 !== null; ) {
    if (b10.tag === 13) {
      var c5 = b10.memoizedState;
      if (c5 !== null && (c5 = c5.dehydrated, c5 === null || c5.data === "$?" || c5.data === "$!"))
        return b10;
    } else if (b10.tag === 19 && b10.memoizedProps.revealOrder !== void 0) {
      if ((b10.flags & 64) !== 0)
        return b10;
    } else if (b10.child !== null) {
      b10.child.return = b10;
      b10 = b10.child;
      continue;
    }
    if (b10 === a3)
      break;
    for (; b10.sibling === null; ) {
      if (b10.return === null || b10.return === a3)
        return null;
      b10 = b10.return;
    }
    b10.sibling.return = b10.return;
    b10 = b10.sibling;
  }
  return null;
}
var jh = null;
var kh = null;
var lh = false;
function mh(a3, b10) {
  var c5 = nh(5, null, null, 0);
  c5.elementType = "DELETED";
  c5.type = "DELETED";
  c5.stateNode = b10;
  c5.return = a3;
  c5.flags = 8;
  a3.lastEffect !== null ? (a3.lastEffect.nextEffect = c5, a3.lastEffect = c5) : a3.firstEffect = a3.lastEffect = c5;
}
function oh(a3, b10) {
  switch (a3.tag) {
    case 5:
      var c5 = a3.type;
      b10 = b10.nodeType !== 1 || c5.toLowerCase() !== b10.nodeName.toLowerCase() ? null : b10;
      return b10 !== null ? (a3.stateNode = b10, true) : false;
    case 6:
      return b10 = a3.pendingProps === "" || b10.nodeType !== 3 ? null : b10, b10 !== null ? (a3.stateNode = b10, true) : false;
    case 13:
      return false;
    default:
      return false;
  }
}
function ph(a3) {
  if (lh) {
    var b10 = kh;
    if (b10) {
      var c5 = b10;
      if (!oh(a3, b10)) {
        b10 = rf(c5.nextSibling);
        if (!b10 || !oh(a3, b10)) {
          a3.flags = a3.flags & -1025 | 2;
          lh = false;
          jh = a3;
          return;
        }
        mh(jh, c5);
      }
      jh = a3;
      kh = rf(b10.firstChild);
    } else
      a3.flags = a3.flags & -1025 | 2, lh = false, jh = a3;
  }
}
function qh(a3) {
  for (a3 = a3.return; a3 !== null && a3.tag !== 5 && a3.tag !== 3 && a3.tag !== 13; )
    a3 = a3.return;
  jh = a3;
}
function rh(a3) {
  if (a3 !== jh)
    return false;
  if (!lh)
    return qh(a3), lh = true, false;
  var b10 = a3.type;
  if (a3.tag !== 5 || b10 !== "head" && b10 !== "body" && !nf(b10, a3.memoizedProps))
    for (b10 = kh; b10; )
      mh(a3, b10), b10 = rf(b10.nextSibling);
  qh(a3);
  if (a3.tag === 13) {
    a3 = a3.memoizedState;
    a3 = a3 !== null ? a3.dehydrated : null;
    if (!a3)
      throw Error(y(317));
    a: {
      a3 = a3.nextSibling;
      for (b10 = 0; a3; ) {
        if (a3.nodeType === 8) {
          var c5 = a3.data;
          if (c5 === "/$") {
            if (b10 === 0) {
              kh = rf(a3.nextSibling);
              break a;
            }
            b10--;
          } else
            c5 !== "$" && c5 !== "$!" && c5 !== "$?" || b10++;
        }
        a3 = a3.nextSibling;
      }
      kh = null;
    }
  } else
    kh = jh ? rf(a3.stateNode.nextSibling) : null;
  return true;
}
function sh() {
  kh = jh = null;
  lh = false;
}
var th = [];
function uh() {
  for (var a3 = 0; a3 < th.length; a3++)
    th[a3]._workInProgressVersionPrimary = null;
  th.length = 0;
}
var vh = ra.ReactCurrentDispatcher;
var wh = ra.ReactCurrentBatchConfig;
var xh = 0;
var R = null;
var S = null;
var T = null;
var yh = false;
var zh = false;
function Ah() {
  throw Error(y(321));
}
function Bh(a3, b10) {
  if (b10 === null)
    return false;
  for (var c5 = 0; c5 < b10.length && c5 < a3.length; c5++)
    if (!He(a3[c5], b10[c5]))
      return false;
  return true;
}
function Ch(a3, b10, c5, d2, e3, f3) {
  xh = f3;
  R = b10;
  b10.memoizedState = null;
  b10.updateQueue = null;
  b10.lanes = 0;
  vh.current = a3 === null || a3.memoizedState === null ? Dh : Eh;
  a3 = c5(d2, e3);
  if (zh) {
    f3 = 0;
    do {
      zh = false;
      if (!(25 > f3))
        throw Error(y(301));
      f3 += 1;
      T = S = null;
      b10.updateQueue = null;
      vh.current = Fh;
      a3 = c5(d2, e3);
    } while (zh);
  }
  vh.current = Gh;
  b10 = S !== null && S.next !== null;
  xh = 0;
  T = S = R = null;
  yh = false;
  if (b10)
    throw Error(y(300));
  return a3;
}
function Hh() {
  var a3 = {memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null};
  T === null ? R.memoizedState = T = a3 : T = T.next = a3;
  return T;
}
function Ih() {
  if (S === null) {
    var a3 = R.alternate;
    a3 = a3 !== null ? a3.memoizedState : null;
  } else
    a3 = S.next;
  var b10 = T === null ? R.memoizedState : T.next;
  if (b10 !== null)
    T = b10, S = a3;
  else {
    if (a3 === null)
      throw Error(y(310));
    S = a3;
    a3 = {memoizedState: S.memoizedState, baseState: S.baseState, baseQueue: S.baseQueue, queue: S.queue, next: null};
    T === null ? R.memoizedState = T = a3 : T = T.next = a3;
  }
  return T;
}
function Jh(a3, b10) {
  return typeof b10 === "function" ? b10(a3) : b10;
}
function Kh(a3) {
  var b10 = Ih(), c5 = b10.queue;
  if (c5 === null)
    throw Error(y(311));
  c5.lastRenderedReducer = a3;
  var d2 = S, e3 = d2.baseQueue, f3 = c5.pending;
  if (f3 !== null) {
    if (e3 !== null) {
      var g2 = e3.next;
      e3.next = f3.next;
      f3.next = g2;
    }
    d2.baseQueue = e3 = f3;
    c5.pending = null;
  }
  if (e3 !== null) {
    e3 = e3.next;
    d2 = d2.baseState;
    var h2 = g2 = f3 = null, k6 = e3;
    do {
      var l3 = k6.lane;
      if ((xh & l3) === l3)
        h2 !== null && (h2 = h2.next = {lane: 0, action: k6.action, eagerReducer: k6.eagerReducer, eagerState: k6.eagerState, next: null}), d2 = k6.eagerReducer === a3 ? k6.eagerState : a3(d2, k6.action);
      else {
        var n3 = {
          lane: l3,
          action: k6.action,
          eagerReducer: k6.eagerReducer,
          eagerState: k6.eagerState,
          next: null
        };
        h2 === null ? (g2 = h2 = n3, f3 = d2) : h2 = h2.next = n3;
        R.lanes |= l3;
        Dg |= l3;
      }
      k6 = k6.next;
    } while (k6 !== null && k6 !== e3);
    h2 === null ? f3 = d2 : h2.next = g2;
    He(d2, b10.memoizedState) || (ug = true);
    b10.memoizedState = d2;
    b10.baseState = f3;
    b10.baseQueue = h2;
    c5.lastRenderedState = d2;
  }
  return [b10.memoizedState, c5.dispatch];
}
function Lh(a3) {
  var b10 = Ih(), c5 = b10.queue;
  if (c5 === null)
    throw Error(y(311));
  c5.lastRenderedReducer = a3;
  var d2 = c5.dispatch, e3 = c5.pending, f3 = b10.memoizedState;
  if (e3 !== null) {
    c5.pending = null;
    var g2 = e3 = e3.next;
    do
      f3 = a3(f3, g2.action), g2 = g2.next;
    while (g2 !== e3);
    He(f3, b10.memoizedState) || (ug = true);
    b10.memoizedState = f3;
    b10.baseQueue === null && (b10.baseState = f3);
    c5.lastRenderedState = f3;
  }
  return [f3, d2];
}
function Mh(a3, b10, c5) {
  var d2 = b10._getVersion;
  d2 = d2(b10._source);
  var e3 = b10._workInProgressVersionPrimary;
  if (e3 !== null)
    a3 = e3 === d2;
  else if (a3 = a3.mutableReadLanes, a3 = (xh & a3) === a3)
    b10._workInProgressVersionPrimary = d2, th.push(b10);
  if (a3)
    return c5(b10._source);
  th.push(b10);
  throw Error(y(350));
}
function Nh(a3, b10, c5, d2) {
  var e3 = U;
  if (e3 === null)
    throw Error(y(349));
  var f3 = b10._getVersion, g2 = f3(b10._source), h2 = vh.current, k6 = h2.useState(function() {
    return Mh(e3, b10, c5);
  }), l3 = k6[1], n3 = k6[0];
  k6 = T;
  var A6 = a3.memoizedState, p3 = A6.refs, C5 = p3.getSnapshot, x5 = A6.source;
  A6 = A6.subscribe;
  var w3 = R;
  a3.memoizedState = {refs: p3, source: b10, subscribe: d2};
  h2.useEffect(function() {
    p3.getSnapshot = c5;
    p3.setSnapshot = l3;
    var a4 = f3(b10._source);
    if (!He(g2, a4)) {
      a4 = c5(b10._source);
      He(n3, a4) || (l3(a4), a4 = Ig(w3), e3.mutableReadLanes |= a4 & e3.pendingLanes);
      a4 = e3.mutableReadLanes;
      e3.entangledLanes |= a4;
      for (var d4 = e3.entanglements, h3 = a4; 0 < h3; ) {
        var k7 = 31 - Vc(h3), v3 = 1 << k7;
        d4[k7] |= a4;
        h3 &= ~v3;
      }
    }
  }, [c5, b10, d2]);
  h2.useEffect(function() {
    return d2(b10._source, function() {
      var a4 = p3.getSnapshot, c6 = p3.setSnapshot;
      try {
        c6(a4(b10._source));
        var d4 = Ig(w3);
        e3.mutableReadLanes |= d4 & e3.pendingLanes;
      } catch (q2) {
        c6(function() {
          throw q2;
        });
      }
    });
  }, [b10, d2]);
  He(C5, c5) && He(x5, b10) && He(A6, d2) || (a3 = {pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: n3}, a3.dispatch = l3 = Oh.bind(null, R, a3), k6.queue = a3, k6.baseQueue = null, n3 = Mh(e3, b10, c5), k6.memoizedState = k6.baseState = n3);
  return n3;
}
function Ph(a3, b10, c5) {
  var d2 = Ih();
  return Nh(d2, a3, b10, c5);
}
function Qh(a3) {
  var b10 = Hh();
  typeof a3 === "function" && (a3 = a3());
  b10.memoizedState = b10.baseState = a3;
  a3 = b10.queue = {pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a3};
  a3 = a3.dispatch = Oh.bind(null, R, a3);
  return [b10.memoizedState, a3];
}
function Rh(a3, b10, c5, d2) {
  a3 = {tag: a3, create: b10, destroy: c5, deps: d2, next: null};
  b10 = R.updateQueue;
  b10 === null ? (b10 = {lastEffect: null}, R.updateQueue = b10, b10.lastEffect = a3.next = a3) : (c5 = b10.lastEffect, c5 === null ? b10.lastEffect = a3.next = a3 : (d2 = c5.next, c5.next = a3, a3.next = d2, b10.lastEffect = a3));
  return a3;
}
function Sh(a3) {
  var b10 = Hh();
  a3 = {current: a3};
  return b10.memoizedState = a3;
}
function Th() {
  return Ih().memoizedState;
}
function Uh(a3, b10, c5, d2) {
  var e3 = Hh();
  R.flags |= a3;
  e3.memoizedState = Rh(1 | b10, c5, void 0, d2 === void 0 ? null : d2);
}
function Vh(a3, b10, c5, d2) {
  var e3 = Ih();
  d2 = d2 === void 0 ? null : d2;
  var f3 = void 0;
  if (S !== null) {
    var g2 = S.memoizedState;
    f3 = g2.destroy;
    if (d2 !== null && Bh(d2, g2.deps)) {
      Rh(b10, c5, f3, d2);
      return;
    }
  }
  R.flags |= a3;
  e3.memoizedState = Rh(1 | b10, c5, f3, d2);
}
function Wh(a3, b10) {
  return Uh(516, 4, a3, b10);
}
function Xh(a3, b10) {
  return Vh(516, 4, a3, b10);
}
function Yh(a3, b10) {
  return Vh(4, 2, a3, b10);
}
function Zh(a3, b10) {
  if (typeof b10 === "function")
    return a3 = a3(), b10(a3), function() {
      b10(null);
    };
  if (b10 !== null && b10 !== void 0)
    return a3 = a3(), b10.current = a3, function() {
      b10.current = null;
    };
}
function $h(a3, b10, c5) {
  c5 = c5 !== null && c5 !== void 0 ? c5.concat([a3]) : null;
  return Vh(4, 2, Zh.bind(null, b10, a3), c5);
}
function ai() {
}
function bi(a3, b10) {
  var c5 = Ih();
  b10 = b10 === void 0 ? null : b10;
  var d2 = c5.memoizedState;
  if (d2 !== null && b10 !== null && Bh(b10, d2[1]))
    return d2[0];
  c5.memoizedState = [a3, b10];
  return a3;
}
function ci(a3, b10) {
  var c5 = Ih();
  b10 = b10 === void 0 ? null : b10;
  var d2 = c5.memoizedState;
  if (d2 !== null && b10 !== null && Bh(b10, d2[1]))
    return d2[0];
  a3 = a3();
  c5.memoizedState = [a3, b10];
  return a3;
}
function di(a3, b10) {
  var c5 = eg();
  gg(98 > c5 ? 98 : c5, function() {
    a3(true);
  });
  gg(97 < c5 ? 97 : c5, function() {
    var c6 = wh.transition;
    wh.transition = 1;
    try {
      a3(false), b10();
    } finally {
      wh.transition = c6;
    }
  });
}
function Oh(a3, b10, c5) {
  var d2 = Hg(), e3 = Ig(a3), f3 = {lane: e3, action: c5, eagerReducer: null, eagerState: null, next: null}, g2 = b10.pending;
  g2 === null ? f3.next = f3 : (f3.next = g2.next, g2.next = f3);
  b10.pending = f3;
  g2 = a3.alternate;
  if (a3 === R || g2 !== null && g2 === R)
    zh = yh = true;
  else {
    if (a3.lanes === 0 && (g2 === null || g2.lanes === 0) && (g2 = b10.lastRenderedReducer, g2 !== null))
      try {
        var h2 = b10.lastRenderedState, k6 = g2(h2, c5);
        f3.eagerReducer = g2;
        f3.eagerState = k6;
        if (He(k6, h2))
          return;
      } catch (l3) {
      } finally {
      }
    Jg(a3, e3, d2);
  }
}
var Gh = {readContext: vg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: false};
var Dh = {readContext: vg, useCallback: function(a3, b10) {
  Hh().memoizedState = [a3, b10 === void 0 ? null : b10];
  return a3;
}, useContext: vg, useEffect: Wh, useImperativeHandle: function(a3, b10, c5) {
  c5 = c5 !== null && c5 !== void 0 ? c5.concat([a3]) : null;
  return Uh(4, 2, Zh.bind(null, b10, a3), c5);
}, useLayoutEffect: function(a3, b10) {
  return Uh(4, 2, a3, b10);
}, useMemo: function(a3, b10) {
  var c5 = Hh();
  b10 = b10 === void 0 ? null : b10;
  a3 = a3();
  c5.memoizedState = [a3, b10];
  return a3;
}, useReducer: function(a3, b10, c5) {
  var d2 = Hh();
  b10 = c5 !== void 0 ? c5(b10) : b10;
  d2.memoizedState = d2.baseState = b10;
  a3 = d2.queue = {pending: null, dispatch: null, lastRenderedReducer: a3, lastRenderedState: b10};
  a3 = a3.dispatch = Oh.bind(null, R, a3);
  return [d2.memoizedState, a3];
}, useRef: Sh, useState: Qh, useDebugValue: ai, useDeferredValue: function(a3) {
  var b10 = Qh(a3), c5 = b10[0], d2 = b10[1];
  Wh(function() {
    var b11 = wh.transition;
    wh.transition = 1;
    try {
      d2(a3);
    } finally {
      wh.transition = b11;
    }
  }, [a3]);
  return c5;
}, useTransition: function() {
  var a3 = Qh(false), b10 = a3[0];
  a3 = di.bind(null, a3[1]);
  Sh(a3);
  return [a3, b10];
}, useMutableSource: function(a3, b10, c5) {
  var d2 = Hh();
  d2.memoizedState = {refs: {getSnapshot: b10, setSnapshot: null}, source: a3, subscribe: c5};
  return Nh(d2, a3, b10, c5);
}, useOpaqueIdentifier: function() {
  if (lh) {
    var a3 = false, b10 = uf(function() {
      a3 || (a3 = true, c5("r:" + (tf++).toString(36)));
      throw Error(y(355));
    }), c5 = Qh(b10)[1];
    (R.mode & 2) === 0 && (R.flags |= 516, Rh(5, function() {
      c5("r:" + (tf++).toString(36));
    }, void 0, null));
    return b10;
  }
  b10 = "r:" + (tf++).toString(36);
  Qh(b10);
  return b10;
}, unstable_isNewReconciler: false};
var Eh = {readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Kh, useRef: Th, useState: function() {
  return Kh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a3) {
  var b10 = Kh(Jh), c5 = b10[0], d2 = b10[1];
  Xh(function() {
    var b11 = wh.transition;
    wh.transition = 1;
    try {
      d2(a3);
    } finally {
      wh.transition = b11;
    }
  }, [a3]);
  return c5;
}, useTransition: function() {
  var a3 = Kh(Jh)[0];
  return [
    Th().current,
    a3
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Kh(Jh)[0];
}, unstable_isNewReconciler: false};
var Fh = {readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Lh, useRef: Th, useState: function() {
  return Lh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a3) {
  var b10 = Lh(Jh), c5 = b10[0], d2 = b10[1];
  Xh(function() {
    var b11 = wh.transition;
    wh.transition = 1;
    try {
      d2(a3);
    } finally {
      wh.transition = b11;
    }
  }, [a3]);
  return c5;
}, useTransition: function() {
  var a3 = Lh(Jh)[0];
  return [
    Th().current,
    a3
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Lh(Jh)[0];
}, unstable_isNewReconciler: false};
var ei = ra.ReactCurrentOwner;
var ug = false;
function fi(a3, b10, c5, d2) {
  b10.child = a3 === null ? Zg(b10, null, c5, d2) : Yg(b10, a3.child, c5, d2);
}
function gi(a3, b10, c5, d2, e3) {
  c5 = c5.render;
  var f3 = b10.ref;
  tg(b10, e3);
  d2 = Ch(a3, b10, c5, d2, f3, e3);
  if (a3 !== null && !ug)
    return b10.updateQueue = a3.updateQueue, b10.flags &= -517, a3.lanes &= ~e3, hi(a3, b10, e3);
  b10.flags |= 1;
  fi(a3, b10, d2, e3);
  return b10.child;
}
function ii(a3, b10, c5, d2, e3, f3) {
  if (a3 === null) {
    var g2 = c5.type;
    if (typeof g2 === "function" && !ji(g2) && g2.defaultProps === void 0 && c5.compare === null && c5.defaultProps === void 0)
      return b10.tag = 15, b10.type = g2, ki(a3, b10, g2, d2, e3, f3);
    a3 = Vg(c5.type, null, d2, b10, b10.mode, f3);
    a3.ref = b10.ref;
    a3.return = b10;
    return b10.child = a3;
  }
  g2 = a3.child;
  if ((e3 & f3) === 0 && (e3 = g2.memoizedProps, c5 = c5.compare, c5 = c5 !== null ? c5 : Je, c5(e3, d2) && a3.ref === b10.ref))
    return hi(a3, b10, f3);
  b10.flags |= 1;
  a3 = Tg(g2, d2);
  a3.ref = b10.ref;
  a3.return = b10;
  return b10.child = a3;
}
function ki(a3, b10, c5, d2, e3, f3) {
  if (a3 !== null && Je(a3.memoizedProps, d2) && a3.ref === b10.ref)
    if (ug = false, (f3 & e3) !== 0)
      (a3.flags & 16384) !== 0 && (ug = true);
    else
      return b10.lanes = a3.lanes, hi(a3, b10, f3);
  return li(a3, b10, c5, d2, f3);
}
function mi(a3, b10, c5) {
  var d2 = b10.pendingProps, e3 = d2.children, f3 = a3 !== null ? a3.memoizedState : null;
  if (d2.mode === "hidden" || d2.mode === "unstable-defer-without-hiding")
    if ((b10.mode & 4) === 0)
      b10.memoizedState = {baseLanes: 0}, ni(b10, c5);
    else if ((c5 & 1073741824) !== 0)
      b10.memoizedState = {baseLanes: 0}, ni(b10, f3 !== null ? f3.baseLanes : c5);
    else
      return a3 = f3 !== null ? f3.baseLanes | c5 : c5, b10.lanes = b10.childLanes = 1073741824, b10.memoizedState = {baseLanes: a3}, ni(b10, a3), null;
  else
    f3 !== null ? (d2 = f3.baseLanes | c5, b10.memoizedState = null) : d2 = c5, ni(b10, d2);
  fi(a3, b10, e3, c5);
  return b10.child;
}
function oi(a3, b10) {
  var c5 = b10.ref;
  if (a3 === null && c5 !== null || a3 !== null && a3.ref !== c5)
    b10.flags |= 128;
}
function li(a3, b10, c5, d2, e3) {
  var f3 = Ff(c5) ? Df : M.current;
  f3 = Ef(b10, f3);
  tg(b10, e3);
  c5 = Ch(a3, b10, c5, d2, f3, e3);
  if (a3 !== null && !ug)
    return b10.updateQueue = a3.updateQueue, b10.flags &= -517, a3.lanes &= ~e3, hi(a3, b10, e3);
  b10.flags |= 1;
  fi(a3, b10, c5, e3);
  return b10.child;
}
function pi(a3, b10, c5, d2, e3) {
  if (Ff(c5)) {
    var f3 = true;
    Jf(b10);
  } else
    f3 = false;
  tg(b10, e3);
  if (b10.stateNode === null)
    a3 !== null && (a3.alternate = null, b10.alternate = null, b10.flags |= 2), Mg(b10, c5, d2), Og(b10, c5, d2, e3), d2 = true;
  else if (a3 === null) {
    var g2 = b10.stateNode, h2 = b10.memoizedProps;
    g2.props = h2;
    var k6 = g2.context, l3 = c5.contextType;
    typeof l3 === "object" && l3 !== null ? l3 = vg(l3) : (l3 = Ff(c5) ? Df : M.current, l3 = Ef(b10, l3));
    var n3 = c5.getDerivedStateFromProps, A6 = typeof n3 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
    A6 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || k6 !== l3) && Ng(b10, g2, d2, l3);
    wg = false;
    var p3 = b10.memoizedState;
    g2.state = p3;
    Cg(b10, d2, g2, e3);
    k6 = b10.memoizedState;
    h2 !== d2 || p3 !== k6 || N.current || wg ? (typeof n3 === "function" && (Gg(b10, c5, n3, d2), k6 = b10.memoizedState), (h2 = wg || Lg(b10, c5, h2, d2, p3, k6, l3)) ? (A6 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b10.flags |= 4)) : (typeof g2.componentDidMount === "function" && (b10.flags |= 4), b10.memoizedProps = d2, b10.memoizedState = k6), g2.props = d2, g2.state = k6, g2.context = l3, d2 = h2) : (typeof g2.componentDidMount === "function" && (b10.flags |= 4), d2 = false);
  } else {
    g2 = b10.stateNode;
    yg(a3, b10);
    h2 = b10.memoizedProps;
    l3 = b10.type === b10.elementType ? h2 : lg(b10.type, h2);
    g2.props = l3;
    A6 = b10.pendingProps;
    p3 = g2.context;
    k6 = c5.contextType;
    typeof k6 === "object" && k6 !== null ? k6 = vg(k6) : (k6 = Ff(c5) ? Df : M.current, k6 = Ef(b10, k6));
    var C5 = c5.getDerivedStateFromProps;
    (n3 = typeof C5 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== A6 || p3 !== k6) && Ng(b10, g2, d2, k6);
    wg = false;
    p3 = b10.memoizedState;
    g2.state = p3;
    Cg(b10, d2, g2, e3);
    var x5 = b10.memoizedState;
    h2 !== A6 || p3 !== x5 || N.current || wg ? (typeof C5 === "function" && (Gg(b10, c5, C5, d2), x5 = b10.memoizedState), (l3 = wg || Lg(b10, c5, l3, d2, p3, x5, k6)) ? (n3 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d2, x5, k6), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d2, x5, k6)), typeof g2.componentDidUpdate === "function" && (b10.flags |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b10.flags |= 256)) : (typeof g2.componentDidUpdate !== "function" || h2 === a3.memoizedProps && p3 === a3.memoizedState || (b10.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a3.memoizedProps && p3 === a3.memoizedState || (b10.flags |= 256), b10.memoizedProps = d2, b10.memoizedState = x5), g2.props = d2, g2.state = x5, g2.context = k6, d2 = l3) : (typeof g2.componentDidUpdate !== "function" || h2 === a3.memoizedProps && p3 === a3.memoizedState || (b10.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a3.memoizedProps && p3 === a3.memoizedState || (b10.flags |= 256), d2 = false);
  }
  return qi(a3, b10, c5, d2, f3, e3);
}
function qi(a3, b10, c5, d2, e3, f3) {
  oi(a3, b10);
  var g2 = (b10.flags & 64) !== 0;
  if (!d2 && !g2)
    return e3 && Kf(b10, c5, false), hi(a3, b10, f3);
  d2 = b10.stateNode;
  ei.current = b10;
  var h2 = g2 && typeof c5.getDerivedStateFromError !== "function" ? null : d2.render();
  b10.flags |= 1;
  a3 !== null && g2 ? (b10.child = Yg(b10, a3.child, null, f3), b10.child = Yg(b10, null, h2, f3)) : fi(a3, b10, h2, f3);
  b10.memoizedState = d2.state;
  e3 && Kf(b10, c5, true);
  return b10.child;
}
function ri(a3) {
  var b10 = a3.stateNode;
  b10.pendingContext ? Hf(a3, b10.pendingContext, b10.pendingContext !== b10.context) : b10.context && Hf(a3, b10.context, false);
  eh(a3, b10.containerInfo);
}
var si = {dehydrated: null, retryLane: 0};
function ti(a3, b10, c5) {
  var d2 = b10.pendingProps, e3 = P.current, f3 = false, g2;
  (g2 = (b10.flags & 64) !== 0) || (g2 = a3 !== null && a3.memoizedState === null ? false : (e3 & 2) !== 0);
  g2 ? (f3 = true, b10.flags &= -65) : a3 !== null && a3.memoizedState === null || d2.fallback === void 0 || d2.unstable_avoidThisFallback === true || (e3 |= 1);
  I(P, e3 & 1);
  if (a3 === null) {
    d2.fallback !== void 0 && ph(b10);
    a3 = d2.children;
    e3 = d2.fallback;
    if (f3)
      return a3 = ui(b10, a3, e3, c5), b10.child.memoizedState = {baseLanes: c5}, b10.memoizedState = si, a3;
    if (typeof d2.unstable_expectedLoadTime === "number")
      return a3 = ui(b10, a3, e3, c5), b10.child.memoizedState = {baseLanes: c5}, b10.memoizedState = si, b10.lanes = 33554432, a3;
    c5 = vi({mode: "visible", children: a3}, b10.mode, c5, null);
    c5.return = b10;
    return b10.child = c5;
  }
  if (a3.memoizedState !== null) {
    if (f3)
      return d2 = wi(a3, b10, d2.children, d2.fallback, c5), f3 = b10.child, e3 = a3.child.memoizedState, f3.memoizedState = e3 === null ? {baseLanes: c5} : {baseLanes: e3.baseLanes | c5}, f3.childLanes = a3.childLanes & ~c5, b10.memoizedState = si, d2;
    c5 = xi(a3, b10, d2.children, c5);
    b10.memoizedState = null;
    return c5;
  }
  if (f3)
    return d2 = wi(a3, b10, d2.children, d2.fallback, c5), f3 = b10.child, e3 = a3.child.memoizedState, f3.memoizedState = e3 === null ? {baseLanes: c5} : {baseLanes: e3.baseLanes | c5}, f3.childLanes = a3.childLanes & ~c5, b10.memoizedState = si, d2;
  c5 = xi(a3, b10, d2.children, c5);
  b10.memoizedState = null;
  return c5;
}
function ui(a3, b10, c5, d2) {
  var e3 = a3.mode, f3 = a3.child;
  b10 = {mode: "hidden", children: b10};
  (e3 & 2) === 0 && f3 !== null ? (f3.childLanes = 0, f3.pendingProps = b10) : f3 = vi(b10, e3, 0, null);
  c5 = Xg(c5, e3, d2, null);
  f3.return = a3;
  c5.return = a3;
  f3.sibling = c5;
  a3.child = f3;
  return c5;
}
function xi(a3, b10, c5, d2) {
  var e3 = a3.child;
  a3 = e3.sibling;
  c5 = Tg(e3, {mode: "visible", children: c5});
  (b10.mode & 2) === 0 && (c5.lanes = d2);
  c5.return = b10;
  c5.sibling = null;
  a3 !== null && (a3.nextEffect = null, a3.flags = 8, b10.firstEffect = b10.lastEffect = a3);
  return b10.child = c5;
}
function wi(a3, b10, c5, d2, e3) {
  var f3 = b10.mode, g2 = a3.child;
  a3 = g2.sibling;
  var h2 = {mode: "hidden", children: c5};
  (f3 & 2) === 0 && b10.child !== g2 ? (c5 = b10.child, c5.childLanes = 0, c5.pendingProps = h2, g2 = c5.lastEffect, g2 !== null ? (b10.firstEffect = c5.firstEffect, b10.lastEffect = g2, g2.nextEffect = null) : b10.firstEffect = b10.lastEffect = null) : c5 = Tg(g2, h2);
  a3 !== null ? d2 = Tg(a3, d2) : (d2 = Xg(d2, f3, e3, null), d2.flags |= 2);
  d2.return = b10;
  c5.return = b10;
  c5.sibling = d2;
  b10.child = c5;
  return d2;
}
function yi(a3, b10) {
  a3.lanes |= b10;
  var c5 = a3.alternate;
  c5 !== null && (c5.lanes |= b10);
  sg(a3.return, b10);
}
function zi(a3, b10, c5, d2, e3, f3) {
  var g2 = a3.memoizedState;
  g2 === null ? a3.memoizedState = {isBackwards: b10, rendering: null, renderingStartTime: 0, last: d2, tail: c5, tailMode: e3, lastEffect: f3} : (g2.isBackwards = b10, g2.rendering = null, g2.renderingStartTime = 0, g2.last = d2, g2.tail = c5, g2.tailMode = e3, g2.lastEffect = f3);
}
function Ai(a3, b10, c5) {
  var d2 = b10.pendingProps, e3 = d2.revealOrder, f3 = d2.tail;
  fi(a3, b10, d2.children, c5);
  d2 = P.current;
  if ((d2 & 2) !== 0)
    d2 = d2 & 1 | 2, b10.flags |= 64;
  else {
    if (a3 !== null && (a3.flags & 64) !== 0)
      a:
        for (a3 = b10.child; a3 !== null; ) {
          if (a3.tag === 13)
            a3.memoizedState !== null && yi(a3, c5);
          else if (a3.tag === 19)
            yi(a3, c5);
          else if (a3.child !== null) {
            a3.child.return = a3;
            a3 = a3.child;
            continue;
          }
          if (a3 === b10)
            break a;
          for (; a3.sibling === null; ) {
            if (a3.return === null || a3.return === b10)
              break a;
            a3 = a3.return;
          }
          a3.sibling.return = a3.return;
          a3 = a3.sibling;
        }
    d2 &= 1;
  }
  I(P, d2);
  if ((b10.mode & 2) === 0)
    b10.memoizedState = null;
  else
    switch (e3) {
      case "forwards":
        c5 = b10.child;
        for (e3 = null; c5 !== null; )
          a3 = c5.alternate, a3 !== null && ih(a3) === null && (e3 = c5), c5 = c5.sibling;
        c5 = e3;
        c5 === null ? (e3 = b10.child, b10.child = null) : (e3 = c5.sibling, c5.sibling = null);
        zi(b10, false, e3, c5, f3, b10.lastEffect);
        break;
      case "backwards":
        c5 = null;
        e3 = b10.child;
        for (b10.child = null; e3 !== null; ) {
          a3 = e3.alternate;
          if (a3 !== null && ih(a3) === null) {
            b10.child = e3;
            break;
          }
          a3 = e3.sibling;
          e3.sibling = c5;
          c5 = e3;
          e3 = a3;
        }
        zi(b10, true, c5, null, f3, b10.lastEffect);
        break;
      case "together":
        zi(b10, false, null, null, void 0, b10.lastEffect);
        break;
      default:
        b10.memoizedState = null;
    }
  return b10.child;
}
function hi(a3, b10, c5) {
  a3 !== null && (b10.dependencies = a3.dependencies);
  Dg |= b10.lanes;
  if ((c5 & b10.childLanes) !== 0) {
    if (a3 !== null && b10.child !== a3.child)
      throw Error(y(153));
    if (b10.child !== null) {
      a3 = b10.child;
      c5 = Tg(a3, a3.pendingProps);
      b10.child = c5;
      for (c5.return = b10; a3.sibling !== null; )
        a3 = a3.sibling, c5 = c5.sibling = Tg(a3, a3.pendingProps), c5.return = b10;
      c5.sibling = null;
    }
    return b10.child;
  }
  return null;
}
var Bi;
var Ci;
var Di;
var Ei;
Bi = function(a3, b10) {
  for (var c5 = b10.child; c5 !== null; ) {
    if (c5.tag === 5 || c5.tag === 6)
      a3.appendChild(c5.stateNode);
    else if (c5.tag !== 4 && c5.child !== null) {
      c5.child.return = c5;
      c5 = c5.child;
      continue;
    }
    if (c5 === b10)
      break;
    for (; c5.sibling === null; ) {
      if (c5.return === null || c5.return === b10)
        return;
      c5 = c5.return;
    }
    c5.sibling.return = c5.return;
    c5 = c5.sibling;
  }
};
Ci = function() {
};
Di = function(a3, b10, c5, d2) {
  var e3 = a3.memoizedProps;
  if (e3 !== d2) {
    a3 = b10.stateNode;
    dh(ah.current);
    var f3 = null;
    switch (c5) {
      case "input":
        e3 = Ya(a3, e3);
        d2 = Ya(a3, d2);
        f3 = [];
        break;
      case "option":
        e3 = eb(a3, e3);
        d2 = eb(a3, d2);
        f3 = [];
        break;
      case "select":
        e3 = objectAssign({}, e3, {value: void 0});
        d2 = objectAssign({}, d2, {value: void 0});
        f3 = [];
        break;
      case "textarea":
        e3 = gb(a3, e3);
        d2 = gb(a3, d2);
        f3 = [];
        break;
      default:
        typeof e3.onClick !== "function" && typeof d2.onClick === "function" && (a3.onclick = jf);
    }
    vb(c5, d2);
    var g2;
    c5 = null;
    for (l3 in e3)
      if (!d2.hasOwnProperty(l3) && e3.hasOwnProperty(l3) && e3[l3] != null)
        if (l3 === "style") {
          var h2 = e3[l3];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c5 || (c5 = {}), c5[g2] = "");
        } else
          l3 !== "dangerouslySetInnerHTML" && l3 !== "children" && l3 !== "suppressContentEditableWarning" && l3 !== "suppressHydrationWarning" && l3 !== "autoFocus" && (ca.hasOwnProperty(l3) ? f3 || (f3 = []) : (f3 = f3 || []).push(l3, null));
    for (l3 in d2) {
      var k6 = d2[l3];
      h2 = e3 != null ? e3[l3] : void 0;
      if (d2.hasOwnProperty(l3) && k6 !== h2 && (k6 != null || h2 != null))
        if (l3 === "style")
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k6 && k6.hasOwnProperty(g2) || (c5 || (c5 = {}), c5[g2] = "");
            for (g2 in k6)
              k6.hasOwnProperty(g2) && h2[g2] !== k6[g2] && (c5 || (c5 = {}), c5[g2] = k6[g2]);
          } else
            c5 || (f3 || (f3 = []), f3.push(l3, c5)), c5 = k6;
        else
          l3 === "dangerouslySetInnerHTML" ? (k6 = k6 ? k6.__html : void 0, h2 = h2 ? h2.__html : void 0, k6 != null && h2 !== k6 && (f3 = f3 || []).push(l3, k6)) : l3 === "children" ? typeof k6 !== "string" && typeof k6 !== "number" || (f3 = f3 || []).push(l3, "" + k6) : l3 !== "suppressContentEditableWarning" && l3 !== "suppressHydrationWarning" && (ca.hasOwnProperty(l3) ? (k6 != null && l3 === "onScroll" && G("scroll", a3), f3 || h2 === k6 || (f3 = [])) : typeof k6 === "object" && k6 !== null && k6.$$typeof === Ga ? k6.toString() : (f3 = f3 || []).push(l3, k6));
    }
    c5 && (f3 = f3 || []).push("style", c5);
    var l3 = f3;
    if (b10.updateQueue = l3)
      b10.flags |= 4;
  }
};
Ei = function(a3, b10, c5, d2) {
  c5 !== d2 && (b10.flags |= 4);
};
function Fi(a3, b10) {
  if (!lh)
    switch (a3.tailMode) {
      case "hidden":
        b10 = a3.tail;
        for (var c5 = null; b10 !== null; )
          b10.alternate !== null && (c5 = b10), b10 = b10.sibling;
        c5 === null ? a3.tail = null : c5.sibling = null;
        break;
      case "collapsed":
        c5 = a3.tail;
        for (var d2 = null; c5 !== null; )
          c5.alternate !== null && (d2 = c5), c5 = c5.sibling;
        d2 === null ? b10 || a3.tail === null ? a3.tail = null : a3.tail.sibling = null : d2.sibling = null;
    }
}
function Gi(a3, b10, c5) {
  var d2 = b10.pendingProps;
  switch (b10.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return null;
    case 1:
      return Ff(b10.type) && Gf(), null;
    case 3:
      fh();
      H(N);
      H(M);
      uh();
      d2 = b10.stateNode;
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (a3 === null || a3.child === null)
        rh(b10) ? b10.flags |= 4 : d2.hydrate || (b10.flags |= 256);
      Ci(b10);
      return null;
    case 5:
      hh(b10);
      var e3 = dh(ch.current);
      c5 = b10.type;
      if (a3 !== null && b10.stateNode != null)
        Di(a3, b10, c5, d2, e3), a3.ref !== b10.ref && (b10.flags |= 128);
      else {
        if (!d2) {
          if (b10.stateNode === null)
            throw Error(y(166));
          return null;
        }
        a3 = dh(ah.current);
        if (rh(b10)) {
          d2 = b10.stateNode;
          c5 = b10.type;
          var f3 = b10.memoizedProps;
          d2[wf] = b10;
          d2[xf] = f3;
          switch (c5) {
            case "dialog":
              G("cancel", d2);
              G("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", d2);
              break;
            case "video":
            case "audio":
              for (a3 = 0; a3 < Xe.length; a3++)
                G(Xe[a3], d2);
              break;
            case "source":
              G("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              G("error", d2);
              G("load", d2);
              break;
            case "details":
              G("toggle", d2);
              break;
            case "input":
              Za(d2, f3);
              G("invalid", d2);
              break;
            case "select":
              d2._wrapperState = {wasMultiple: !!f3.multiple};
              G("invalid", d2);
              break;
            case "textarea":
              hb(d2, f3), G("invalid", d2);
          }
          vb(c5, f3);
          a3 = null;
          for (var g2 in f3)
            f3.hasOwnProperty(g2) && (e3 = f3[g2], g2 === "children" ? typeof e3 === "string" ? d2.textContent !== e3 && (a3 = ["children", e3]) : typeof e3 === "number" && d2.textContent !== "" + e3 && (a3 = ["children", "" + e3]) : ca.hasOwnProperty(g2) && e3 != null && g2 === "onScroll" && G("scroll", d2));
          switch (c5) {
            case "input":
              Va(d2);
              cb(d2, f3, true);
              break;
            case "textarea":
              Va(d2);
              jb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f3.onClick === "function" && (d2.onclick = jf);
          }
          d2 = a3;
          b10.updateQueue = d2;
          d2 !== null && (b10.flags |= 4);
        } else {
          g2 = e3.nodeType === 9 ? e3 : e3.ownerDocument;
          a3 === kb.html && (a3 = lb(c5));
          a3 === kb.html ? c5 === "script" ? (a3 = g2.createElement("div"), a3.innerHTML = "<script></script>", a3 = a3.removeChild(a3.firstChild)) : typeof d2.is === "string" ? a3 = g2.createElement(c5, {is: d2.is}) : (a3 = g2.createElement(c5), c5 === "select" && (g2 = a3, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a3 = g2.createElementNS(a3, c5);
          a3[wf] = b10;
          a3[xf] = d2;
          Bi(a3, b10, false, false);
          b10.stateNode = a3;
          g2 = wb(c5, d2);
          switch (c5) {
            case "dialog":
              G("cancel", a3);
              G("close", a3);
              e3 = d2;
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", a3);
              e3 = d2;
              break;
            case "video":
            case "audio":
              for (e3 = 0; e3 < Xe.length; e3++)
                G(Xe[e3], a3);
              e3 = d2;
              break;
            case "source":
              G("error", a3);
              e3 = d2;
              break;
            case "img":
            case "image":
            case "link":
              G("error", a3);
              G("load", a3);
              e3 = d2;
              break;
            case "details":
              G("toggle", a3);
              e3 = d2;
              break;
            case "input":
              Za(a3, d2);
              e3 = Ya(a3, d2);
              G("invalid", a3);
              break;
            case "option":
              e3 = eb(a3, d2);
              break;
            case "select":
              a3._wrapperState = {wasMultiple: !!d2.multiple};
              e3 = objectAssign({}, d2, {value: void 0});
              G("invalid", a3);
              break;
            case "textarea":
              hb(a3, d2);
              e3 = gb(a3, d2);
              G("invalid", a3);
              break;
            default:
              e3 = d2;
          }
          vb(c5, e3);
          var h2 = e3;
          for (f3 in h2)
            if (h2.hasOwnProperty(f3)) {
              var k6 = h2[f3];
              f3 === "style" ? tb(a3, k6) : f3 === "dangerouslySetInnerHTML" ? (k6 = k6 ? k6.__html : void 0, k6 != null && ob(a3, k6)) : f3 === "children" ? typeof k6 === "string" ? (c5 !== "textarea" || k6 !== "") && pb(a3, k6) : typeof k6 === "number" && pb(a3, "" + k6) : f3 !== "suppressContentEditableWarning" && f3 !== "suppressHydrationWarning" && f3 !== "autoFocus" && (ca.hasOwnProperty(f3) ? k6 != null && f3 === "onScroll" && G("scroll", a3) : k6 != null && qa(a3, f3, k6, g2));
            }
          switch (c5) {
            case "input":
              Va(a3);
              cb(a3, d2, false);
              break;
            case "textarea":
              Va(a3);
              jb(a3);
              break;
            case "option":
              d2.value != null && a3.setAttribute("value", "" + Sa(d2.value));
              break;
            case "select":
              a3.multiple = !!d2.multiple;
              f3 = d2.value;
              f3 != null ? fb(a3, !!d2.multiple, f3, false) : d2.defaultValue != null && fb(a3, !!d2.multiple, d2.defaultValue, true);
              break;
            default:
              typeof e3.onClick === "function" && (a3.onclick = jf);
          }
          mf(c5, d2) && (b10.flags |= 4);
        }
        b10.ref !== null && (b10.flags |= 128);
      }
      return null;
    case 6:
      if (a3 && b10.stateNode != null)
        Ei(a3, b10, a3.memoizedProps, d2);
      else {
        if (typeof d2 !== "string" && b10.stateNode === null)
          throw Error(y(166));
        c5 = dh(ch.current);
        dh(ah.current);
        rh(b10) ? (d2 = b10.stateNode, c5 = b10.memoizedProps, d2[wf] = b10, d2.nodeValue !== c5 && (b10.flags |= 4)) : (d2 = (c5.nodeType === 9 ? c5 : c5.ownerDocument).createTextNode(d2), d2[wf] = b10, b10.stateNode = d2);
      }
      return null;
    case 13:
      H(P);
      d2 = b10.memoizedState;
      if ((b10.flags & 64) !== 0)
        return b10.lanes = c5, b10;
      d2 = d2 !== null;
      c5 = false;
      a3 === null ? b10.memoizedProps.fallback !== void 0 && rh(b10) : c5 = a3.memoizedState !== null;
      if (d2 && !c5 && (b10.mode & 2) !== 0)
        if (a3 === null && b10.memoizedProps.unstable_avoidThisFallback !== true || (P.current & 1) !== 0)
          V === 0 && (V = 3);
        else {
          if (V === 0 || V === 3)
            V = 4;
          U === null || (Dg & 134217727) === 0 && (Hi & 134217727) === 0 || Ii(U, W);
        }
      if (d2 || c5)
        b10.flags |= 4;
      return null;
    case 4:
      return fh(), Ci(b10), a3 === null && cf(b10.stateNode.containerInfo), null;
    case 10:
      return rg(b10), null;
    case 17:
      return Ff(b10.type) && Gf(), null;
    case 19:
      H(P);
      d2 = b10.memoizedState;
      if (d2 === null)
        return null;
      f3 = (b10.flags & 64) !== 0;
      g2 = d2.rendering;
      if (g2 === null)
        if (f3)
          Fi(d2, false);
        else {
          if (V !== 0 || a3 !== null && (a3.flags & 64) !== 0)
            for (a3 = b10.child; a3 !== null; ) {
              g2 = ih(a3);
              if (g2 !== null) {
                b10.flags |= 64;
                Fi(d2, false);
                f3 = g2.updateQueue;
                f3 !== null && (b10.updateQueue = f3, b10.flags |= 4);
                d2.lastEffect === null && (b10.firstEffect = null);
                b10.lastEffect = d2.lastEffect;
                d2 = c5;
                for (c5 = b10.child; c5 !== null; )
                  f3 = c5, a3 = d2, f3.flags &= 2, f3.nextEffect = null, f3.firstEffect = null, f3.lastEffect = null, g2 = f3.alternate, g2 === null ? (f3.childLanes = 0, f3.lanes = a3, f3.child = null, f3.memoizedProps = null, f3.memoizedState = null, f3.updateQueue = null, f3.dependencies = null, f3.stateNode = null) : (f3.childLanes = g2.childLanes, f3.lanes = g2.lanes, f3.child = g2.child, f3.memoizedProps = g2.memoizedProps, f3.memoizedState = g2.memoizedState, f3.updateQueue = g2.updateQueue, f3.type = g2.type, a3 = g2.dependencies, f3.dependencies = a3 === null ? null : {lanes: a3.lanes, firstContext: a3.firstContext}), c5 = c5.sibling;
                I(P, P.current & 1 | 2);
                return b10.child;
              }
              a3 = a3.sibling;
            }
          d2.tail !== null && O() > Ji && (b10.flags |= 64, f3 = true, Fi(d2, false), b10.lanes = 33554432);
        }
      else {
        if (!f3)
          if (a3 = ih(g2), a3 !== null) {
            if (b10.flags |= 64, f3 = true, c5 = a3.updateQueue, c5 !== null && (b10.updateQueue = c5, b10.flags |= 4), Fi(d2, true), d2.tail === null && d2.tailMode === "hidden" && !g2.alternate && !lh)
              return b10 = b10.lastEffect = d2.lastEffect, b10 !== null && (b10.nextEffect = null), null;
          } else
            2 * O() - d2.renderingStartTime > Ji && c5 !== 1073741824 && (b10.flags |= 64, f3 = true, Fi(d2, false), b10.lanes = 33554432);
        d2.isBackwards ? (g2.sibling = b10.child, b10.child = g2) : (c5 = d2.last, c5 !== null ? c5.sibling = g2 : b10.child = g2, d2.last = g2);
      }
      return d2.tail !== null ? (c5 = d2.tail, d2.rendering = c5, d2.tail = c5.sibling, d2.lastEffect = b10.lastEffect, d2.renderingStartTime = O(), c5.sibling = null, b10 = P.current, I(P, f3 ? b10 & 1 | 2 : b10 & 1), c5) : null;
    case 23:
    case 24:
      return Ki(), a3 !== null && a3.memoizedState !== null !== (b10.memoizedState !== null) && d2.mode !== "unstable-defer-without-hiding" && (b10.flags |= 4), null;
  }
  throw Error(y(156, b10.tag));
}
function Li(a3) {
  switch (a3.tag) {
    case 1:
      Ff(a3.type) && Gf();
      var b10 = a3.flags;
      return b10 & 4096 ? (a3.flags = b10 & -4097 | 64, a3) : null;
    case 3:
      fh();
      H(N);
      H(M);
      uh();
      b10 = a3.flags;
      if ((b10 & 64) !== 0)
        throw Error(y(285));
      a3.flags = b10 & -4097 | 64;
      return a3;
    case 5:
      return hh(a3), null;
    case 13:
      return H(P), b10 = a3.flags, b10 & 4096 ? (a3.flags = b10 & -4097 | 64, a3) : null;
    case 19:
      return H(P), null;
    case 4:
      return fh(), null;
    case 10:
      return rg(a3), null;
    case 23:
    case 24:
      return Ki(), null;
    default:
      return null;
  }
}
function Mi(a3, b10) {
  try {
    var c5 = "", d2 = b10;
    do
      c5 += Qa(d2), d2 = d2.return;
    while (d2);
    var e3 = c5;
  } catch (f3) {
    e3 = "\nError generating stack: " + f3.message + "\n" + f3.stack;
  }
  return {value: a3, source: b10, stack: e3};
}
function Ni(a3, b10) {
  try {
    console.error(b10.value);
  } catch (c5) {
    setTimeout(function() {
      throw c5;
    });
  }
}
var Oi = typeof WeakMap === "function" ? WeakMap : Map;
function Pi(a3, b10, c5) {
  c5 = zg(-1, c5);
  c5.tag = 3;
  c5.payload = {element: null};
  var d2 = b10.value;
  c5.callback = function() {
    Qi || (Qi = true, Ri = d2);
    Ni(a3, b10);
  };
  return c5;
}
function Si(a3, b10, c5) {
  c5 = zg(-1, c5);
  c5.tag = 3;
  var d2 = a3.type.getDerivedStateFromError;
  if (typeof d2 === "function") {
    var e3 = b10.value;
    c5.payload = function() {
      Ni(a3, b10);
      return d2(e3);
    };
  }
  var f3 = a3.stateNode;
  f3 !== null && typeof f3.componentDidCatch === "function" && (c5.callback = function() {
    typeof d2 !== "function" && (Ti === null ? Ti = new Set([this]) : Ti.add(this), Ni(a3, b10));
    var c6 = b10.stack;
    this.componentDidCatch(b10.value, {componentStack: c6 !== null ? c6 : ""});
  });
  return c5;
}
var Ui = typeof WeakSet === "function" ? WeakSet : Set;
function Vi(a3) {
  var b10 = a3.ref;
  if (b10 !== null)
    if (typeof b10 === "function")
      try {
        b10(null);
      } catch (c5) {
        Wi(a3, c5);
      }
    else
      b10.current = null;
}
function Xi(a3, b10) {
  switch (b10.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      return;
    case 1:
      if (b10.flags & 256 && a3 !== null) {
        var c5 = a3.memoizedProps, d2 = a3.memoizedState;
        a3 = b10.stateNode;
        b10 = a3.getSnapshotBeforeUpdate(b10.elementType === b10.type ? c5 : lg(b10.type, c5), d2);
        a3.__reactInternalSnapshotBeforeUpdate = b10;
      }
      return;
    case 3:
      b10.flags & 256 && qf(b10.stateNode.containerInfo);
      return;
    case 5:
    case 6:
    case 4:
    case 17:
      return;
  }
  throw Error(y(163));
}
function Yi(a3, b10, c5) {
  switch (c5.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      b10 = c5.updateQueue;
      b10 = b10 !== null ? b10.lastEffect : null;
      if (b10 !== null) {
        a3 = b10 = b10.next;
        do {
          if ((a3.tag & 3) === 3) {
            var d2 = a3.create;
            a3.destroy = d2();
          }
          a3 = a3.next;
        } while (a3 !== b10);
      }
      b10 = c5.updateQueue;
      b10 = b10 !== null ? b10.lastEffect : null;
      if (b10 !== null) {
        a3 = b10 = b10.next;
        do {
          var e3 = a3;
          d2 = e3.next;
          e3 = e3.tag;
          (e3 & 4) !== 0 && (e3 & 1) !== 0 && (Zi(c5, a3), $i(c5, a3));
          a3 = d2;
        } while (a3 !== b10);
      }
      return;
    case 1:
      a3 = c5.stateNode;
      c5.flags & 4 && (b10 === null ? a3.componentDidMount() : (d2 = c5.elementType === c5.type ? b10.memoizedProps : lg(c5.type, b10.memoizedProps), a3.componentDidUpdate(d2, b10.memoizedState, a3.__reactInternalSnapshotBeforeUpdate)));
      b10 = c5.updateQueue;
      b10 !== null && Eg(c5, b10, a3);
      return;
    case 3:
      b10 = c5.updateQueue;
      if (b10 !== null) {
        a3 = null;
        if (c5.child !== null)
          switch (c5.child.tag) {
            case 5:
              a3 = c5.child.stateNode;
              break;
            case 1:
              a3 = c5.child.stateNode;
          }
        Eg(c5, b10, a3);
      }
      return;
    case 5:
      a3 = c5.stateNode;
      b10 === null && c5.flags & 4 && mf(c5.type, c5.memoizedProps) && a3.focus();
      return;
    case 6:
      return;
    case 4:
      return;
    case 12:
      return;
    case 13:
      c5.memoizedState === null && (c5 = c5.alternate, c5 !== null && (c5 = c5.memoizedState, c5 !== null && (c5 = c5.dehydrated, c5 !== null && Cc(c5))));
      return;
    case 19:
    case 17:
    case 20:
    case 21:
    case 23:
    case 24:
      return;
  }
  throw Error(y(163));
}
function aj(a3, b10) {
  for (var c5 = a3; ; ) {
    if (c5.tag === 5) {
      var d2 = c5.stateNode;
      if (b10)
        d2 = d2.style, typeof d2.setProperty === "function" ? d2.setProperty("display", "none", "important") : d2.display = "none";
      else {
        d2 = c5.stateNode;
        var e3 = c5.memoizedProps.style;
        e3 = e3 !== void 0 && e3 !== null && e3.hasOwnProperty("display") ? e3.display : null;
        d2.style.display = sb("display", e3);
      }
    } else if (c5.tag === 6)
      c5.stateNode.nodeValue = b10 ? "" : c5.memoizedProps;
    else if ((c5.tag !== 23 && c5.tag !== 24 || c5.memoizedState === null || c5 === a3) && c5.child !== null) {
      c5.child.return = c5;
      c5 = c5.child;
      continue;
    }
    if (c5 === a3)
      break;
    for (; c5.sibling === null; ) {
      if (c5.return === null || c5.return === a3)
        return;
      c5 = c5.return;
    }
    c5.sibling.return = c5.return;
    c5 = c5.sibling;
  }
}
function bj(a3, b10) {
  if (Mf && typeof Mf.onCommitFiberUnmount === "function")
    try {
      Mf.onCommitFiberUnmount(Lf, b10);
    } catch (f3) {
    }
  switch (b10.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      a3 = b10.updateQueue;
      if (a3 !== null && (a3 = a3.lastEffect, a3 !== null)) {
        var c5 = a3 = a3.next;
        do {
          var d2 = c5, e3 = d2.destroy;
          d2 = d2.tag;
          if (e3 !== void 0)
            if ((d2 & 4) !== 0)
              Zi(b10, c5);
            else {
              d2 = b10;
              try {
                e3();
              } catch (f3) {
                Wi(d2, f3);
              }
            }
          c5 = c5.next;
        } while (c5 !== a3);
      }
      break;
    case 1:
      Vi(b10);
      a3 = b10.stateNode;
      if (typeof a3.componentWillUnmount === "function")
        try {
          a3.props = b10.memoizedProps, a3.state = b10.memoizedState, a3.componentWillUnmount();
        } catch (f3) {
          Wi(b10, f3);
        }
      break;
    case 5:
      Vi(b10);
      break;
    case 4:
      cj(a3, b10);
  }
}
function dj(a3) {
  a3.alternate = null;
  a3.child = null;
  a3.dependencies = null;
  a3.firstEffect = null;
  a3.lastEffect = null;
  a3.memoizedProps = null;
  a3.memoizedState = null;
  a3.pendingProps = null;
  a3.return = null;
  a3.updateQueue = null;
}
function ej(a3) {
  return a3.tag === 5 || a3.tag === 3 || a3.tag === 4;
}
function fj(a3) {
  a: {
    for (var b10 = a3.return; b10 !== null; ) {
      if (ej(b10))
        break a;
      b10 = b10.return;
    }
    throw Error(y(160));
  }
  var c5 = b10;
  b10 = c5.stateNode;
  switch (c5.tag) {
    case 5:
      var d2 = false;
      break;
    case 3:
      b10 = b10.containerInfo;
      d2 = true;
      break;
    case 4:
      b10 = b10.containerInfo;
      d2 = true;
      break;
    default:
      throw Error(y(161));
  }
  c5.flags & 16 && (pb(b10, ""), c5.flags &= -17);
  a:
    b:
      for (c5 = a3; ; ) {
        for (; c5.sibling === null; ) {
          if (c5.return === null || ej(c5.return)) {
            c5 = null;
            break a;
          }
          c5 = c5.return;
        }
        c5.sibling.return = c5.return;
        for (c5 = c5.sibling; c5.tag !== 5 && c5.tag !== 6 && c5.tag !== 18; ) {
          if (c5.flags & 2)
            continue b;
          if (c5.child === null || c5.tag === 4)
            continue b;
          else
            c5.child.return = c5, c5 = c5.child;
        }
        if (!(c5.flags & 2)) {
          c5 = c5.stateNode;
          break a;
        }
      }
  d2 ? gj(a3, c5, b10) : hj(a3, c5, b10);
}
function gj(a3, b10, c5) {
  var d2 = a3.tag, e3 = d2 === 5 || d2 === 6;
  if (e3)
    a3 = e3 ? a3.stateNode : a3.stateNode.instance, b10 ? c5.nodeType === 8 ? c5.parentNode.insertBefore(a3, b10) : c5.insertBefore(a3, b10) : (c5.nodeType === 8 ? (b10 = c5.parentNode, b10.insertBefore(a3, c5)) : (b10 = c5, b10.appendChild(a3)), c5 = c5._reactRootContainer, c5 !== null && c5 !== void 0 || b10.onclick !== null || (b10.onclick = jf));
  else if (d2 !== 4 && (a3 = a3.child, a3 !== null))
    for (gj(a3, b10, c5), a3 = a3.sibling; a3 !== null; )
      gj(a3, b10, c5), a3 = a3.sibling;
}
function hj(a3, b10, c5) {
  var d2 = a3.tag, e3 = d2 === 5 || d2 === 6;
  if (e3)
    a3 = e3 ? a3.stateNode : a3.stateNode.instance, b10 ? c5.insertBefore(a3, b10) : c5.appendChild(a3);
  else if (d2 !== 4 && (a3 = a3.child, a3 !== null))
    for (hj(a3, b10, c5), a3 = a3.sibling; a3 !== null; )
      hj(a3, b10, c5), a3 = a3.sibling;
}
function cj(a3, b10) {
  for (var c5 = b10, d2 = false, e3, f3; ; ) {
    if (!d2) {
      d2 = c5.return;
      a:
        for (; ; ) {
          if (d2 === null)
            throw Error(y(160));
          e3 = d2.stateNode;
          switch (d2.tag) {
            case 5:
              f3 = false;
              break a;
            case 3:
              e3 = e3.containerInfo;
              f3 = true;
              break a;
            case 4:
              e3 = e3.containerInfo;
              f3 = true;
              break a;
          }
          d2 = d2.return;
        }
      d2 = true;
    }
    if (c5.tag === 5 || c5.tag === 6) {
      a:
        for (var g2 = a3, h2 = c5, k6 = h2; ; )
          if (bj(g2, k6), k6.child !== null && k6.tag !== 4)
            k6.child.return = k6, k6 = k6.child;
          else {
            if (k6 === h2)
              break a;
            for (; k6.sibling === null; ) {
              if (k6.return === null || k6.return === h2)
                break a;
              k6 = k6.return;
            }
            k6.sibling.return = k6.return;
            k6 = k6.sibling;
          }
      f3 ? (g2 = e3, h2 = c5.stateNode, g2.nodeType === 8 ? g2.parentNode.removeChild(h2) : g2.removeChild(h2)) : e3.removeChild(c5.stateNode);
    } else if (c5.tag === 4) {
      if (c5.child !== null) {
        e3 = c5.stateNode.containerInfo;
        f3 = true;
        c5.child.return = c5;
        c5 = c5.child;
        continue;
      }
    } else if (bj(a3, c5), c5.child !== null) {
      c5.child.return = c5;
      c5 = c5.child;
      continue;
    }
    if (c5 === b10)
      break;
    for (; c5.sibling === null; ) {
      if (c5.return === null || c5.return === b10)
        return;
      c5 = c5.return;
      c5.tag === 4 && (d2 = false);
    }
    c5.sibling.return = c5.return;
    c5 = c5.sibling;
  }
}
function ij(a3, b10) {
  switch (b10.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      var c5 = b10.updateQueue;
      c5 = c5 !== null ? c5.lastEffect : null;
      if (c5 !== null) {
        var d2 = c5 = c5.next;
        do
          (d2.tag & 3) === 3 && (a3 = d2.destroy, d2.destroy = void 0, a3 !== void 0 && a3()), d2 = d2.next;
        while (d2 !== c5);
      }
      return;
    case 1:
      return;
    case 5:
      c5 = b10.stateNode;
      if (c5 != null) {
        d2 = b10.memoizedProps;
        var e3 = a3 !== null ? a3.memoizedProps : d2;
        a3 = b10.type;
        var f3 = b10.updateQueue;
        b10.updateQueue = null;
        if (f3 !== null) {
          c5[xf] = d2;
          a3 === "input" && d2.type === "radio" && d2.name != null && $a(c5, d2);
          wb(a3, e3);
          b10 = wb(a3, d2);
          for (e3 = 0; e3 < f3.length; e3 += 2) {
            var g2 = f3[e3], h2 = f3[e3 + 1];
            g2 === "style" ? tb(c5, h2) : g2 === "dangerouslySetInnerHTML" ? ob(c5, h2) : g2 === "children" ? pb(c5, h2) : qa(c5, g2, h2, b10);
          }
          switch (a3) {
            case "input":
              ab(c5, d2);
              break;
            case "textarea":
              ib(c5, d2);
              break;
            case "select":
              a3 = c5._wrapperState.wasMultiple, c5._wrapperState.wasMultiple = !!d2.multiple, f3 = d2.value, f3 != null ? fb(c5, !!d2.multiple, f3, false) : a3 !== !!d2.multiple && (d2.defaultValue != null ? fb(c5, !!d2.multiple, d2.defaultValue, true) : fb(c5, !!d2.multiple, d2.multiple ? [] : "", false));
          }
        }
      }
      return;
    case 6:
      if (b10.stateNode === null)
        throw Error(y(162));
      b10.stateNode.nodeValue = b10.memoizedProps;
      return;
    case 3:
      c5 = b10.stateNode;
      c5.hydrate && (c5.hydrate = false, Cc(c5.containerInfo));
      return;
    case 12:
      return;
    case 13:
      b10.memoizedState !== null && (jj = O(), aj(b10.child, true));
      kj(b10);
      return;
    case 19:
      kj(b10);
      return;
    case 17:
      return;
    case 23:
    case 24:
      aj(b10, b10.memoizedState !== null);
      return;
  }
  throw Error(y(163));
}
function kj(a3) {
  var b10 = a3.updateQueue;
  if (b10 !== null) {
    a3.updateQueue = null;
    var c5 = a3.stateNode;
    c5 === null && (c5 = a3.stateNode = new Ui());
    b10.forEach(function(b11) {
      var d2 = lj.bind(null, a3, b11);
      c5.has(b11) || (c5.add(b11), b11.then(d2, d2));
    });
  }
}
function mj(a3, b10) {
  return a3 !== null && (a3 = a3.memoizedState, a3 === null || a3.dehydrated !== null) ? (b10 = b10.memoizedState, b10 !== null && b10.dehydrated === null) : false;
}
var nj = Math.ceil;
var oj = ra.ReactCurrentDispatcher;
var pj = ra.ReactCurrentOwner;
var X = 0;
var U = null;
var Y = null;
var W = 0;
var qj = 0;
var rj = Bf(0);
var V = 0;
var sj = null;
var tj = 0;
var Dg = 0;
var Hi = 0;
var uj = 0;
var vj = null;
var jj = 0;
var Ji = Infinity;
function wj() {
  Ji = O() + 500;
}
var Z = null;
var Qi = false;
var Ri = null;
var Ti = null;
var xj = false;
var yj = null;
var zj = 90;
var Aj = [];
var Bj = [];
var Cj = null;
var Dj = 0;
var Ej = null;
var Fj = -1;
var Gj = 0;
var Hj = 0;
var Ij = null;
var Jj = false;
function Hg() {
  return (X & 48) !== 0 ? O() : Fj !== -1 ? Fj : Fj = O();
}
function Ig(a3) {
  a3 = a3.mode;
  if ((a3 & 2) === 0)
    return 1;
  if ((a3 & 4) === 0)
    return eg() === 99 ? 1 : 2;
  Gj === 0 && (Gj = tj);
  if (kg.transition !== 0) {
    Hj !== 0 && (Hj = vj !== null ? vj.pendingLanes : 0);
    a3 = Gj;
    var b10 = 4186112 & ~Hj;
    b10 &= -b10;
    b10 === 0 && (a3 = 4186112 & ~a3, b10 = a3 & -a3, b10 === 0 && (b10 = 8192));
    return b10;
  }
  a3 = eg();
  (X & 4) !== 0 && a3 === 98 ? a3 = Xc(12, Gj) : (a3 = Sc(a3), a3 = Xc(a3, Gj));
  return a3;
}
function Jg(a3, b10, c5) {
  if (50 < Dj)
    throw Dj = 0, Ej = null, Error(y(185));
  a3 = Kj(a3, b10);
  if (a3 === null)
    return null;
  $c(a3, b10, c5);
  a3 === U && (Hi |= b10, V === 4 && Ii(a3, W));
  var d2 = eg();
  b10 === 1 ? (X & 8) !== 0 && (X & 48) === 0 ? Lj(a3) : (Mj(a3, c5), X === 0 && (wj(), ig())) : ((X & 4) === 0 || d2 !== 98 && d2 !== 99 || (Cj === null ? Cj = new Set([a3]) : Cj.add(a3)), Mj(a3, c5));
  vj = a3;
}
function Kj(a3, b10) {
  a3.lanes |= b10;
  var c5 = a3.alternate;
  c5 !== null && (c5.lanes |= b10);
  c5 = a3;
  for (a3 = a3.return; a3 !== null; )
    a3.childLanes |= b10, c5 = a3.alternate, c5 !== null && (c5.childLanes |= b10), c5 = a3, a3 = a3.return;
  return c5.tag === 3 ? c5.stateNode : null;
}
function Mj(a3, b10) {
  for (var c5 = a3.callbackNode, d2 = a3.suspendedLanes, e3 = a3.pingedLanes, f3 = a3.expirationTimes, g2 = a3.pendingLanes; 0 < g2; ) {
    var h2 = 31 - Vc(g2), k6 = 1 << h2, l3 = f3[h2];
    if (l3 === -1) {
      if ((k6 & d2) === 0 || (k6 & e3) !== 0) {
        l3 = b10;
        Rc(k6);
        var n3 = F;
        f3[h2] = 10 <= n3 ? l3 + 250 : 6 <= n3 ? l3 + 5e3 : -1;
      }
    } else
      l3 <= b10 && (a3.expiredLanes |= k6);
    g2 &= ~k6;
  }
  d2 = Uc(a3, a3 === U ? W : 0);
  b10 = F;
  if (d2 === 0)
    c5 !== null && (c5 !== Zf && Pf(c5), a3.callbackNode = null, a3.callbackPriority = 0);
  else {
    if (c5 !== null) {
      if (a3.callbackPriority === b10)
        return;
      c5 !== Zf && Pf(c5);
    }
    b10 === 15 ? (c5 = Lj.bind(null, a3), ag === null ? (ag = [c5], bg = Of(Uf, jg)) : ag.push(c5), c5 = Zf) : b10 === 14 ? c5 = hg(99, Lj.bind(null, a3)) : (c5 = Tc(b10), c5 = hg(c5, Nj.bind(null, a3)));
    a3.callbackPriority = b10;
    a3.callbackNode = c5;
  }
}
function Nj(a3) {
  Fj = -1;
  Hj = Gj = 0;
  if ((X & 48) !== 0)
    throw Error(y(327));
  var b10 = a3.callbackNode;
  if (Oj() && a3.callbackNode !== b10)
    return null;
  var c5 = Uc(a3, a3 === U ? W : 0);
  if (c5 === 0)
    return null;
  var d2 = c5;
  var e3 = X;
  X |= 16;
  var f3 = Pj();
  if (U !== a3 || W !== d2)
    wj(), Qj(a3, d2);
  do
    try {
      Rj();
      break;
    } catch (h2) {
      Sj(a3, h2);
    }
  while (1);
  qg();
  oj.current = f3;
  X = e3;
  Y !== null ? d2 = 0 : (U = null, W = 0, d2 = V);
  if ((tj & Hi) !== 0)
    Qj(a3, 0);
  else if (d2 !== 0) {
    d2 === 2 && (X |= 64, a3.hydrate && (a3.hydrate = false, qf(a3.containerInfo)), c5 = Wc(a3), c5 !== 0 && (d2 = Tj(a3, c5)));
    if (d2 === 1)
      throw b10 = sj, Qj(a3, 0), Ii(a3, c5), Mj(a3, O()), b10;
    a3.finishedWork = a3.current.alternate;
    a3.finishedLanes = c5;
    switch (d2) {
      case 0:
      case 1:
        throw Error(y(345));
      case 2:
        Uj(a3);
        break;
      case 3:
        Ii(a3, c5);
        if ((c5 & 62914560) === c5 && (d2 = jj + 500 - O(), 10 < d2)) {
          if (Uc(a3, 0) !== 0)
            break;
          e3 = a3.suspendedLanes;
          if ((e3 & c5) !== c5) {
            Hg();
            a3.pingedLanes |= a3.suspendedLanes & e3;
            break;
          }
          a3.timeoutHandle = of(Uj.bind(null, a3), d2);
          break;
        }
        Uj(a3);
        break;
      case 4:
        Ii(a3, c5);
        if ((c5 & 4186112) === c5)
          break;
        d2 = a3.eventTimes;
        for (e3 = -1; 0 < c5; ) {
          var g2 = 31 - Vc(c5);
          f3 = 1 << g2;
          g2 = d2[g2];
          g2 > e3 && (e3 = g2);
          c5 &= ~f3;
        }
        c5 = e3;
        c5 = O() - c5;
        c5 = (120 > c5 ? 120 : 480 > c5 ? 480 : 1080 > c5 ? 1080 : 1920 > c5 ? 1920 : 3e3 > c5 ? 3e3 : 4320 > c5 ? 4320 : 1960 * nj(c5 / 1960)) - c5;
        if (10 < c5) {
          a3.timeoutHandle = of(Uj.bind(null, a3), c5);
          break;
        }
        Uj(a3);
        break;
      case 5:
        Uj(a3);
        break;
      default:
        throw Error(y(329));
    }
  }
  Mj(a3, O());
  return a3.callbackNode === b10 ? Nj.bind(null, a3) : null;
}
function Ii(a3, b10) {
  b10 &= ~uj;
  b10 &= ~Hi;
  a3.suspendedLanes |= b10;
  a3.pingedLanes &= ~b10;
  for (a3 = a3.expirationTimes; 0 < b10; ) {
    var c5 = 31 - Vc(b10), d2 = 1 << c5;
    a3[c5] = -1;
    b10 &= ~d2;
  }
}
function Lj(a3) {
  if ((X & 48) !== 0)
    throw Error(y(327));
  Oj();
  if (a3 === U && (a3.expiredLanes & W) !== 0) {
    var b10 = W;
    var c5 = Tj(a3, b10);
    (tj & Hi) !== 0 && (b10 = Uc(a3, b10), c5 = Tj(a3, b10));
  } else
    b10 = Uc(a3, 0), c5 = Tj(a3, b10);
  a3.tag !== 0 && c5 === 2 && (X |= 64, a3.hydrate && (a3.hydrate = false, qf(a3.containerInfo)), b10 = Wc(a3), b10 !== 0 && (c5 = Tj(a3, b10)));
  if (c5 === 1)
    throw c5 = sj, Qj(a3, 0), Ii(a3, b10), Mj(a3, O()), c5;
  a3.finishedWork = a3.current.alternate;
  a3.finishedLanes = b10;
  Uj(a3);
  Mj(a3, O());
  return null;
}
function Vj() {
  if (Cj !== null) {
    var a3 = Cj;
    Cj = null;
    a3.forEach(function(a4) {
      a4.expiredLanes |= 24 & a4.pendingLanes;
      Mj(a4, O());
    });
  }
  ig();
}
function Wj(a3, b10) {
  var c5 = X;
  X |= 1;
  try {
    return a3(b10);
  } finally {
    X = c5, X === 0 && (wj(), ig());
  }
}
function Xj(a3, b10) {
  var c5 = X;
  X &= -2;
  X |= 8;
  try {
    return a3(b10);
  } finally {
    X = c5, X === 0 && (wj(), ig());
  }
}
function ni(a3, b10) {
  I(rj, qj);
  qj |= b10;
  tj |= b10;
}
function Ki() {
  qj = rj.current;
  H(rj);
}
function Qj(a3, b10) {
  a3.finishedWork = null;
  a3.finishedLanes = 0;
  var c5 = a3.timeoutHandle;
  c5 !== -1 && (a3.timeoutHandle = -1, pf(c5));
  if (Y !== null)
    for (c5 = Y.return; c5 !== null; ) {
      var d2 = c5;
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          d2 !== null && d2 !== void 0 && Gf();
          break;
        case 3:
          fh();
          H(N);
          H(M);
          uh();
          break;
        case 5:
          hh(d2);
          break;
        case 4:
          fh();
          break;
        case 13:
          H(P);
          break;
        case 19:
          H(P);
          break;
        case 10:
          rg(d2);
          break;
        case 23:
        case 24:
          Ki();
      }
      c5 = c5.return;
    }
  U = a3;
  Y = Tg(a3.current, null);
  W = qj = tj = b10;
  V = 0;
  sj = null;
  uj = Hi = Dg = 0;
}
function Sj(a3, b10) {
  do {
    var c5 = Y;
    try {
      qg();
      vh.current = Gh;
      if (yh) {
        for (var d2 = R.memoizedState; d2 !== null; ) {
          var e3 = d2.queue;
          e3 !== null && (e3.pending = null);
          d2 = d2.next;
        }
        yh = false;
      }
      xh = 0;
      T = S = R = null;
      zh = false;
      pj.current = null;
      if (c5 === null || c5.return === null) {
        V = 1;
        sj = b10;
        Y = null;
        break;
      }
      a: {
        var f3 = a3, g2 = c5.return, h2 = c5, k6 = b10;
        b10 = W;
        h2.flags |= 2048;
        h2.firstEffect = h2.lastEffect = null;
        if (k6 !== null && typeof k6 === "object" && typeof k6.then === "function") {
          var l3 = k6;
          if ((h2.mode & 2) === 0) {
            var n3 = h2.alternate;
            n3 ? (h2.updateQueue = n3.updateQueue, h2.memoizedState = n3.memoizedState, h2.lanes = n3.lanes) : (h2.updateQueue = null, h2.memoizedState = null);
          }
          var A6 = (P.current & 1) !== 0, p3 = g2;
          do {
            var C5;
            if (C5 = p3.tag === 13) {
              var x5 = p3.memoizedState;
              if (x5 !== null)
                C5 = x5.dehydrated !== null ? true : false;
              else {
                var w3 = p3.memoizedProps;
                C5 = w3.fallback === void 0 ? false : w3.unstable_avoidThisFallback !== true ? true : A6 ? false : true;
              }
            }
            if (C5) {
              var z3 = p3.updateQueue;
              if (z3 === null) {
                var u2 = new Set();
                u2.add(l3);
                p3.updateQueue = u2;
              } else
                z3.add(l3);
              if ((p3.mode & 2) === 0) {
                p3.flags |= 64;
                h2.flags |= 16384;
                h2.flags &= -2981;
                if (h2.tag === 1)
                  if (h2.alternate === null)
                    h2.tag = 17;
                  else {
                    var t4 = zg(-1, 1);
                    t4.tag = 2;
                    Ag(h2, t4);
                  }
                h2.lanes |= 1;
                break a;
              }
              k6 = void 0;
              h2 = b10;
              var q2 = f3.pingCache;
              q2 === null ? (q2 = f3.pingCache = new Oi(), k6 = new Set(), q2.set(l3, k6)) : (k6 = q2.get(l3), k6 === void 0 && (k6 = new Set(), q2.set(l3, k6)));
              if (!k6.has(h2)) {
                k6.add(h2);
                var v3 = Yj.bind(null, f3, l3, h2);
                l3.then(v3, v3);
              }
              p3.flags |= 4096;
              p3.lanes = b10;
              break a;
            }
            p3 = p3.return;
          } while (p3 !== null);
          k6 = Error((Ra(h2.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }
        V !== 5 && (V = 2);
        k6 = Mi(k6, h2);
        p3 = g2;
        do {
          switch (p3.tag) {
            case 3:
              f3 = k6;
              p3.flags |= 4096;
              b10 &= -b10;
              p3.lanes |= b10;
              var J3 = Pi(p3, f3, b10);
              Bg(p3, J3);
              break a;
            case 1:
              f3 = k6;
              var K5 = p3.type, Q3 = p3.stateNode;
              if ((p3.flags & 64) === 0 && (typeof K5.getDerivedStateFromError === "function" || Q3 !== null && typeof Q3.componentDidCatch === "function" && (Ti === null || !Ti.has(Q3)))) {
                p3.flags |= 4096;
                b10 &= -b10;
                p3.lanes |= b10;
                var L3 = Si(p3, f3, b10);
                Bg(p3, L3);
                break a;
              }
          }
          p3 = p3.return;
        } while (p3 !== null);
      }
      Zj(c5);
    } catch (va) {
      b10 = va;
      Y === c5 && c5 !== null && (Y = c5 = c5.return);
      continue;
    }
    break;
  } while (1);
}
function Pj() {
  var a3 = oj.current;
  oj.current = Gh;
  return a3 === null ? Gh : a3;
}
function Tj(a3, b10) {
  var c5 = X;
  X |= 16;
  var d2 = Pj();
  U === a3 && W === b10 || Qj(a3, b10);
  do
    try {
      ak();
      break;
    } catch (e3) {
      Sj(a3, e3);
    }
  while (1);
  qg();
  X = c5;
  oj.current = d2;
  if (Y !== null)
    throw Error(y(261));
  U = null;
  W = 0;
  return V;
}
function ak() {
  for (; Y !== null; )
    bk(Y);
}
function Rj() {
  for (; Y !== null && !Qf(); )
    bk(Y);
}
function bk(a3) {
  var b10 = ck(a3.alternate, a3, qj);
  a3.memoizedProps = a3.pendingProps;
  b10 === null ? Zj(a3) : Y = b10;
  pj.current = null;
}
function Zj(a3) {
  var b10 = a3;
  do {
    var c5 = b10.alternate;
    a3 = b10.return;
    if ((b10.flags & 2048) === 0) {
      c5 = Gi(c5, b10, qj);
      if (c5 !== null) {
        Y = c5;
        return;
      }
      c5 = b10;
      if (c5.tag !== 24 && c5.tag !== 23 || c5.memoizedState === null || (qj & 1073741824) !== 0 || (c5.mode & 4) === 0) {
        for (var d2 = 0, e3 = c5.child; e3 !== null; )
          d2 |= e3.lanes | e3.childLanes, e3 = e3.sibling;
        c5.childLanes = d2;
      }
      a3 !== null && (a3.flags & 2048) === 0 && (a3.firstEffect === null && (a3.firstEffect = b10.firstEffect), b10.lastEffect !== null && (a3.lastEffect !== null && (a3.lastEffect.nextEffect = b10.firstEffect), a3.lastEffect = b10.lastEffect), 1 < b10.flags && (a3.lastEffect !== null ? a3.lastEffect.nextEffect = b10 : a3.firstEffect = b10, a3.lastEffect = b10));
    } else {
      c5 = Li(b10);
      if (c5 !== null) {
        c5.flags &= 2047;
        Y = c5;
        return;
      }
      a3 !== null && (a3.firstEffect = a3.lastEffect = null, a3.flags |= 2048);
    }
    b10 = b10.sibling;
    if (b10 !== null) {
      Y = b10;
      return;
    }
    Y = b10 = a3;
  } while (b10 !== null);
  V === 0 && (V = 5);
}
function Uj(a3) {
  var b10 = eg();
  gg(99, dk.bind(null, a3, b10));
  return null;
}
function dk(a3, b10) {
  do
    Oj();
  while (yj !== null);
  if ((X & 48) !== 0)
    throw Error(y(327));
  var c5 = a3.finishedWork;
  if (c5 === null)
    return null;
  a3.finishedWork = null;
  a3.finishedLanes = 0;
  if (c5 === a3.current)
    throw Error(y(177));
  a3.callbackNode = null;
  var d2 = c5.lanes | c5.childLanes, e3 = d2, f3 = a3.pendingLanes & ~e3;
  a3.pendingLanes = e3;
  a3.suspendedLanes = 0;
  a3.pingedLanes = 0;
  a3.expiredLanes &= e3;
  a3.mutableReadLanes &= e3;
  a3.entangledLanes &= e3;
  e3 = a3.entanglements;
  for (var g2 = a3.eventTimes, h2 = a3.expirationTimes; 0 < f3; ) {
    var k6 = 31 - Vc(f3), l3 = 1 << k6;
    e3[k6] = 0;
    g2[k6] = -1;
    h2[k6] = -1;
    f3 &= ~l3;
  }
  Cj !== null && (d2 & 24) === 0 && Cj.has(a3) && Cj.delete(a3);
  a3 === U && (Y = U = null, W = 0);
  1 < c5.flags ? c5.lastEffect !== null ? (c5.lastEffect.nextEffect = c5, d2 = c5.firstEffect) : d2 = c5 : d2 = c5.firstEffect;
  if (d2 !== null) {
    e3 = X;
    X |= 32;
    pj.current = null;
    kf = fd;
    g2 = Ne();
    if (Oe(g2)) {
      if ("selectionStart" in g2)
        h2 = {start: g2.selectionStart, end: g2.selectionEnd};
      else
        a:
          if (h2 = (h2 = g2.ownerDocument) && h2.defaultView || window, (l3 = h2.getSelection && h2.getSelection()) && l3.rangeCount !== 0) {
            h2 = l3.anchorNode;
            f3 = l3.anchorOffset;
            k6 = l3.focusNode;
            l3 = l3.focusOffset;
            try {
              h2.nodeType, k6.nodeType;
            } catch (va) {
              h2 = null;
              break a;
            }
            var n3 = 0, A6 = -1, p3 = -1, C5 = 0, x5 = 0, w3 = g2, z3 = null;
            b:
              for (; ; ) {
                for (var u2; ; ) {
                  w3 !== h2 || f3 !== 0 && w3.nodeType !== 3 || (A6 = n3 + f3);
                  w3 !== k6 || l3 !== 0 && w3.nodeType !== 3 || (p3 = n3 + l3);
                  w3.nodeType === 3 && (n3 += w3.nodeValue.length);
                  if ((u2 = w3.firstChild) === null)
                    break;
                  z3 = w3;
                  w3 = u2;
                }
                for (; ; ) {
                  if (w3 === g2)
                    break b;
                  z3 === h2 && ++C5 === f3 && (A6 = n3);
                  z3 === k6 && ++x5 === l3 && (p3 = n3);
                  if ((u2 = w3.nextSibling) !== null)
                    break;
                  w3 = z3;
                  z3 = w3.parentNode;
                }
                w3 = u2;
              }
            h2 = A6 === -1 || p3 === -1 ? null : {start: A6, end: p3};
          } else
            h2 = null;
      h2 = h2 || {start: 0, end: 0};
    } else
      h2 = null;
    lf = {focusedElem: g2, selectionRange: h2};
    fd = false;
    Ij = null;
    Jj = false;
    Z = d2;
    do
      try {
        ek();
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Ij = null;
    Z = d2;
    do
      try {
        for (g2 = a3; Z !== null; ) {
          var t4 = Z.flags;
          t4 & 16 && pb(Z.stateNode, "");
          if (t4 & 128) {
            var q2 = Z.alternate;
            if (q2 !== null) {
              var v3 = q2.ref;
              v3 !== null && (typeof v3 === "function" ? v3(null) : v3.current = null);
            }
          }
          switch (t4 & 1038) {
            case 2:
              fj(Z);
              Z.flags &= -3;
              break;
            case 6:
              fj(Z);
              Z.flags &= -3;
              ij(Z.alternate, Z);
              break;
            case 1024:
              Z.flags &= -1025;
              break;
            case 1028:
              Z.flags &= -1025;
              ij(Z.alternate, Z);
              break;
            case 4:
              ij(Z.alternate, Z);
              break;
            case 8:
              h2 = Z;
              cj(g2, h2);
              var J3 = h2.alternate;
              dj(h2);
              J3 !== null && dj(J3);
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    v3 = lf;
    q2 = Ne();
    t4 = v3.focusedElem;
    g2 = v3.selectionRange;
    if (q2 !== t4 && t4 && t4.ownerDocument && Me(t4.ownerDocument.documentElement, t4)) {
      g2 !== null && Oe(t4) && (q2 = g2.start, v3 = g2.end, v3 === void 0 && (v3 = q2), "selectionStart" in t4 ? (t4.selectionStart = q2, t4.selectionEnd = Math.min(v3, t4.value.length)) : (v3 = (q2 = t4.ownerDocument || document) && q2.defaultView || window, v3.getSelection && (v3 = v3.getSelection(), h2 = t4.textContent.length, J3 = Math.min(g2.start, h2), g2 = g2.end === void 0 ? J3 : Math.min(g2.end, h2), !v3.extend && J3 > g2 && (h2 = g2, g2 = J3, J3 = h2), h2 = Le(t4, J3), f3 = Le(t4, g2), h2 && f3 && (v3.rangeCount !== 1 || v3.anchorNode !== h2.node || v3.anchorOffset !== h2.offset || v3.focusNode !== f3.node || v3.focusOffset !== f3.offset) && (q2 = q2.createRange(), q2.setStart(h2.node, h2.offset), v3.removeAllRanges(), J3 > g2 ? (v3.addRange(q2), v3.extend(f3.node, f3.offset)) : (q2.setEnd(f3.node, f3.offset), v3.addRange(q2))))));
      q2 = [];
      for (v3 = t4; v3 = v3.parentNode; )
        v3.nodeType === 1 && q2.push({element: v3, left: v3.scrollLeft, top: v3.scrollTop});
      typeof t4.focus === "function" && t4.focus();
      for (t4 = 0; t4 < q2.length; t4++)
        v3 = q2[t4], v3.element.scrollLeft = v3.left, v3.element.scrollTop = v3.top;
    }
    fd = !!kf;
    lf = kf = null;
    a3.current = c5;
    Z = d2;
    do
      try {
        for (t4 = a3; Z !== null; ) {
          var K5 = Z.flags;
          K5 & 36 && Yi(t4, Z.alternate, Z);
          if (K5 & 128) {
            q2 = void 0;
            var Q3 = Z.ref;
            if (Q3 !== null) {
              var L3 = Z.stateNode;
              switch (Z.tag) {
                case 5:
                  q2 = L3;
                  break;
                default:
                  q2 = L3;
              }
              typeof Q3 === "function" ? Q3(q2) : Q3.current = q2;
            }
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Z = null;
    $f();
    X = e3;
  } else
    a3.current = c5;
  if (xj)
    xj = false, yj = a3, zj = b10;
  else
    for (Z = d2; Z !== null; )
      b10 = Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K5 = Z, K5.sibling = null, K5.stateNode = null), Z = b10;
  d2 = a3.pendingLanes;
  d2 === 0 && (Ti = null);
  d2 === 1 ? a3 === Ej ? Dj++ : (Dj = 0, Ej = a3) : Dj = 0;
  c5 = c5.stateNode;
  if (Mf && typeof Mf.onCommitFiberRoot === "function")
    try {
      Mf.onCommitFiberRoot(Lf, c5, void 0, (c5.current.flags & 64) === 64);
    } catch (va) {
    }
  Mj(a3, O());
  if (Qi)
    throw Qi = false, a3 = Ri, Ri = null, a3;
  if ((X & 8) !== 0)
    return null;
  ig();
  return null;
}
function ek() {
  for (; Z !== null; ) {
    var a3 = Z.alternate;
    Jj || Ij === null || ((Z.flags & 8) !== 0 ? dc(Z, Ij) && (Jj = true) : Z.tag === 13 && mj(a3, Z) && dc(Z, Ij) && (Jj = true));
    var b10 = Z.flags;
    (b10 & 256) !== 0 && Xi(a3, Z);
    (b10 & 512) === 0 || xj || (xj = true, hg(97, function() {
      Oj();
      return null;
    }));
    Z = Z.nextEffect;
  }
}
function Oj() {
  if (zj !== 90) {
    var a3 = 97 < zj ? 97 : zj;
    zj = 90;
    return gg(a3, fk);
  }
  return false;
}
function $i(a3, b10) {
  Aj.push(b10, a3);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function Zi(a3, b10) {
  Bj.push(b10, a3);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function fk() {
  if (yj === null)
    return false;
  var a3 = yj;
  yj = null;
  if ((X & 48) !== 0)
    throw Error(y(331));
  var b10 = X;
  X |= 32;
  var c5 = Bj;
  Bj = [];
  for (var d2 = 0; d2 < c5.length; d2 += 2) {
    var e3 = c5[d2], f3 = c5[d2 + 1], g2 = e3.destroy;
    e3.destroy = void 0;
    if (typeof g2 === "function")
      try {
        g2();
      } catch (k6) {
        if (f3 === null)
          throw Error(y(330));
        Wi(f3, k6);
      }
  }
  c5 = Aj;
  Aj = [];
  for (d2 = 0; d2 < c5.length; d2 += 2) {
    e3 = c5[d2];
    f3 = c5[d2 + 1];
    try {
      var h2 = e3.create;
      e3.destroy = h2();
    } catch (k6) {
      if (f3 === null)
        throw Error(y(330));
      Wi(f3, k6);
    }
  }
  for (h2 = a3.current.firstEffect; h2 !== null; )
    a3 = h2.nextEffect, h2.nextEffect = null, h2.flags & 8 && (h2.sibling = null, h2.stateNode = null), h2 = a3;
  X = b10;
  ig();
  return true;
}
function gk(a3, b10, c5) {
  b10 = Mi(c5, b10);
  b10 = Pi(a3, b10, 1);
  Ag(a3, b10);
  b10 = Hg();
  a3 = Kj(a3, 1);
  a3 !== null && ($c(a3, 1, b10), Mj(a3, b10));
}
function Wi(a3, b10) {
  if (a3.tag === 3)
    gk(a3, a3, b10);
  else
    for (var c5 = a3.return; c5 !== null; ) {
      if (c5.tag === 3) {
        gk(c5, a3, b10);
        break;
      } else if (c5.tag === 1) {
        var d2 = c5.stateNode;
        if (typeof c5.type.getDerivedStateFromError === "function" || typeof d2.componentDidCatch === "function" && (Ti === null || !Ti.has(d2))) {
          a3 = Mi(b10, a3);
          var e3 = Si(c5, a3, 1);
          Ag(c5, e3);
          e3 = Hg();
          c5 = Kj(c5, 1);
          if (c5 !== null)
            $c(c5, 1, e3), Mj(c5, e3);
          else if (typeof d2.componentDidCatch === "function" && (Ti === null || !Ti.has(d2)))
            try {
              d2.componentDidCatch(b10, a3);
            } catch (f3) {
            }
          break;
        }
      }
      c5 = c5.return;
    }
}
function Yj(a3, b10, c5) {
  var d2 = a3.pingCache;
  d2 !== null && d2.delete(b10);
  b10 = Hg();
  a3.pingedLanes |= a3.suspendedLanes & c5;
  U === a3 && (W & c5) === c5 && (V === 4 || V === 3 && (W & 62914560) === W && 500 > O() - jj ? Qj(a3, 0) : uj |= c5);
  Mj(a3, b10);
}
function lj(a3, b10) {
  var c5 = a3.stateNode;
  c5 !== null && c5.delete(b10);
  b10 = 0;
  b10 === 0 && (b10 = a3.mode, (b10 & 2) === 0 ? b10 = 1 : (b10 & 4) === 0 ? b10 = eg() === 99 ? 1 : 2 : (Gj === 0 && (Gj = tj), b10 = Yc(62914560 & ~Gj), b10 === 0 && (b10 = 4194304)));
  c5 = Hg();
  a3 = Kj(a3, b10);
  a3 !== null && ($c(a3, b10, c5), Mj(a3, c5));
}
var ck;
ck = function(a3, b10, c5) {
  var d2 = b10.lanes;
  if (a3 !== null)
    if (a3.memoizedProps !== b10.pendingProps || N.current)
      ug = true;
    else if ((c5 & d2) !== 0)
      ug = (a3.flags & 16384) !== 0 ? true : false;
    else {
      ug = false;
      switch (b10.tag) {
        case 3:
          ri(b10);
          sh();
          break;
        case 5:
          gh(b10);
          break;
        case 1:
          Ff(b10.type) && Jf(b10);
          break;
        case 4:
          eh(b10, b10.stateNode.containerInfo);
          break;
        case 10:
          d2 = b10.memoizedProps.value;
          var e3 = b10.type._context;
          I(mg, e3._currentValue);
          e3._currentValue = d2;
          break;
        case 13:
          if (b10.memoizedState !== null) {
            if ((c5 & b10.child.childLanes) !== 0)
              return ti(a3, b10, c5);
            I(P, P.current & 1);
            b10 = hi(a3, b10, c5);
            return b10 !== null ? b10.sibling : null;
          }
          I(P, P.current & 1);
          break;
        case 19:
          d2 = (c5 & b10.childLanes) !== 0;
          if ((a3.flags & 64) !== 0) {
            if (d2)
              return Ai(a3, b10, c5);
            b10.flags |= 64;
          }
          e3 = b10.memoizedState;
          e3 !== null && (e3.rendering = null, e3.tail = null, e3.lastEffect = null);
          I(P, P.current);
          if (d2)
            break;
          else
            return null;
        case 23:
        case 24:
          return b10.lanes = 0, mi(a3, b10, c5);
      }
      return hi(a3, b10, c5);
    }
  else
    ug = false;
  b10.lanes = 0;
  switch (b10.tag) {
    case 2:
      d2 = b10.type;
      a3 !== null && (a3.alternate = null, b10.alternate = null, b10.flags |= 2);
      a3 = b10.pendingProps;
      e3 = Ef(b10, M.current);
      tg(b10, c5);
      e3 = Ch(null, b10, d2, a3, e3, c5);
      b10.flags |= 1;
      if (typeof e3 === "object" && e3 !== null && typeof e3.render === "function" && e3.$$typeof === void 0) {
        b10.tag = 1;
        b10.memoizedState = null;
        b10.updateQueue = null;
        if (Ff(d2)) {
          var f3 = true;
          Jf(b10);
        } else
          f3 = false;
        b10.memoizedState = e3.state !== null && e3.state !== void 0 ? e3.state : null;
        xg(b10);
        var g2 = d2.getDerivedStateFromProps;
        typeof g2 === "function" && Gg(b10, d2, g2, a3);
        e3.updater = Kg;
        b10.stateNode = e3;
        e3._reactInternals = b10;
        Og(b10, d2, a3, c5);
        b10 = qi(null, b10, d2, true, f3, c5);
      } else
        b10.tag = 0, fi(null, b10, e3, c5), b10 = b10.child;
      return b10;
    case 16:
      e3 = b10.elementType;
      a: {
        a3 !== null && (a3.alternate = null, b10.alternate = null, b10.flags |= 2);
        a3 = b10.pendingProps;
        f3 = e3._init;
        e3 = f3(e3._payload);
        b10.type = e3;
        f3 = b10.tag = hk(e3);
        a3 = lg(e3, a3);
        switch (f3) {
          case 0:
            b10 = li(null, b10, e3, a3, c5);
            break a;
          case 1:
            b10 = pi(null, b10, e3, a3, c5);
            break a;
          case 11:
            b10 = gi(null, b10, e3, a3, c5);
            break a;
          case 14:
            b10 = ii(null, b10, e3, lg(e3.type, a3), d2, c5);
            break a;
        }
        throw Error(y(306, e3, ""));
      }
      return b10;
    case 0:
      return d2 = b10.type, e3 = b10.pendingProps, e3 = b10.elementType === d2 ? e3 : lg(d2, e3), li(a3, b10, d2, e3, c5);
    case 1:
      return d2 = b10.type, e3 = b10.pendingProps, e3 = b10.elementType === d2 ? e3 : lg(d2, e3), pi(a3, b10, d2, e3, c5);
    case 3:
      ri(b10);
      d2 = b10.updateQueue;
      if (a3 === null || d2 === null)
        throw Error(y(282));
      d2 = b10.pendingProps;
      e3 = b10.memoizedState;
      e3 = e3 !== null ? e3.element : null;
      yg(a3, b10);
      Cg(b10, d2, null, c5);
      d2 = b10.memoizedState.element;
      if (d2 === e3)
        sh(), b10 = hi(a3, b10, c5);
      else {
        e3 = b10.stateNode;
        if (f3 = e3.hydrate)
          kh = rf(b10.stateNode.containerInfo.firstChild), jh = b10, f3 = lh = true;
        if (f3) {
          a3 = e3.mutableSourceEagerHydrationData;
          if (a3 != null)
            for (e3 = 0; e3 < a3.length; e3 += 2)
              f3 = a3[e3], f3._workInProgressVersionPrimary = a3[e3 + 1], th.push(f3);
          c5 = Zg(b10, null, d2, c5);
          for (b10.child = c5; c5; )
            c5.flags = c5.flags & -3 | 1024, c5 = c5.sibling;
        } else
          fi(a3, b10, d2, c5), sh();
        b10 = b10.child;
      }
      return b10;
    case 5:
      return gh(b10), a3 === null && ph(b10), d2 = b10.type, e3 = b10.pendingProps, f3 = a3 !== null ? a3.memoizedProps : null, g2 = e3.children, nf(d2, e3) ? g2 = null : f3 !== null && nf(d2, f3) && (b10.flags |= 16), oi(a3, b10), fi(a3, b10, g2, c5), b10.child;
    case 6:
      return a3 === null && ph(b10), null;
    case 13:
      return ti(a3, b10, c5);
    case 4:
      return eh(b10, b10.stateNode.containerInfo), d2 = b10.pendingProps, a3 === null ? b10.child = Yg(b10, null, d2, c5) : fi(a3, b10, d2, c5), b10.child;
    case 11:
      return d2 = b10.type, e3 = b10.pendingProps, e3 = b10.elementType === d2 ? e3 : lg(d2, e3), gi(a3, b10, d2, e3, c5);
    case 7:
      return fi(a3, b10, b10.pendingProps, c5), b10.child;
    case 8:
      return fi(a3, b10, b10.pendingProps.children, c5), b10.child;
    case 12:
      return fi(a3, b10, b10.pendingProps.children, c5), b10.child;
    case 10:
      a: {
        d2 = b10.type._context;
        e3 = b10.pendingProps;
        g2 = b10.memoizedProps;
        f3 = e3.value;
        var h2 = b10.type._context;
        I(mg, h2._currentValue);
        h2._currentValue = f3;
        if (g2 !== null)
          if (h2 = g2.value, f3 = He(h2, f3) ? 0 : (typeof d2._calculateChangedBits === "function" ? d2._calculateChangedBits(h2, f3) : 1073741823) | 0, f3 === 0) {
            if (g2.children === e3.children && !N.current) {
              b10 = hi(a3, b10, c5);
              break a;
            }
          } else
            for (h2 = b10.child, h2 !== null && (h2.return = b10); h2 !== null; ) {
              var k6 = h2.dependencies;
              if (k6 !== null) {
                g2 = h2.child;
                for (var l3 = k6.firstContext; l3 !== null; ) {
                  if (l3.context === d2 && (l3.observedBits & f3) !== 0) {
                    h2.tag === 1 && (l3 = zg(-1, c5 & -c5), l3.tag = 2, Ag(h2, l3));
                    h2.lanes |= c5;
                    l3 = h2.alternate;
                    l3 !== null && (l3.lanes |= c5);
                    sg(h2.return, c5);
                    k6.lanes |= c5;
                    break;
                  }
                  l3 = l3.next;
                }
              } else
                g2 = h2.tag === 10 ? h2.type === b10.type ? null : h2.child : h2.child;
              if (g2 !== null)
                g2.return = h2;
              else
                for (g2 = h2; g2 !== null; ) {
                  if (g2 === b10) {
                    g2 = null;
                    break;
                  }
                  h2 = g2.sibling;
                  if (h2 !== null) {
                    h2.return = g2.return;
                    g2 = h2;
                    break;
                  }
                  g2 = g2.return;
                }
              h2 = g2;
            }
        fi(a3, b10, e3.children, c5);
        b10 = b10.child;
      }
      return b10;
    case 9:
      return e3 = b10.type, f3 = b10.pendingProps, d2 = f3.children, tg(b10, c5), e3 = vg(e3, f3.unstable_observedBits), d2 = d2(e3), b10.flags |= 1, fi(a3, b10, d2, c5), b10.child;
    case 14:
      return e3 = b10.type, f3 = lg(e3, b10.pendingProps), f3 = lg(e3.type, f3), ii(a3, b10, e3, f3, d2, c5);
    case 15:
      return ki(a3, b10, b10.type, b10.pendingProps, d2, c5);
    case 17:
      return d2 = b10.type, e3 = b10.pendingProps, e3 = b10.elementType === d2 ? e3 : lg(d2, e3), a3 !== null && (a3.alternate = null, b10.alternate = null, b10.flags |= 2), b10.tag = 1, Ff(d2) ? (a3 = true, Jf(b10)) : a3 = false, tg(b10, c5), Mg(b10, d2, e3), Og(b10, d2, e3, c5), qi(null, b10, d2, true, a3, c5);
    case 19:
      return Ai(a3, b10, c5);
    case 23:
      return mi(a3, b10, c5);
    case 24:
      return mi(a3, b10, c5);
  }
  throw Error(y(156, b10.tag));
};
function ik(a3, b10, c5, d2) {
  this.tag = a3;
  this.key = c5;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b10;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.flags = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function nh(a3, b10, c5, d2) {
  return new ik(a3, b10, c5, d2);
}
function ji(a3) {
  a3 = a3.prototype;
  return !(!a3 || !a3.isReactComponent);
}
function hk(a3) {
  if (typeof a3 === "function")
    return ji(a3) ? 1 : 0;
  if (a3 !== void 0 && a3 !== null) {
    a3 = a3.$$typeof;
    if (a3 === Aa)
      return 11;
    if (a3 === Da)
      return 14;
  }
  return 2;
}
function Tg(a3, b10) {
  var c5 = a3.alternate;
  c5 === null ? (c5 = nh(a3.tag, b10, a3.key, a3.mode), c5.elementType = a3.elementType, c5.type = a3.type, c5.stateNode = a3.stateNode, c5.alternate = a3, a3.alternate = c5) : (c5.pendingProps = b10, c5.type = a3.type, c5.flags = 0, c5.nextEffect = null, c5.firstEffect = null, c5.lastEffect = null);
  c5.childLanes = a3.childLanes;
  c5.lanes = a3.lanes;
  c5.child = a3.child;
  c5.memoizedProps = a3.memoizedProps;
  c5.memoizedState = a3.memoizedState;
  c5.updateQueue = a3.updateQueue;
  b10 = a3.dependencies;
  c5.dependencies = b10 === null ? null : {lanes: b10.lanes, firstContext: b10.firstContext};
  c5.sibling = a3.sibling;
  c5.index = a3.index;
  c5.ref = a3.ref;
  return c5;
}
function Vg(a3, b10, c5, d2, e3, f3) {
  var g2 = 2;
  d2 = a3;
  if (typeof a3 === "function")
    ji(a3) && (g2 = 1);
  else if (typeof a3 === "string")
    g2 = 5;
  else
    a:
      switch (a3) {
        case ua:
          return Xg(c5.children, e3, f3, b10);
        case Ha:
          g2 = 8;
          e3 |= 16;
          break;
        case wa:
          g2 = 8;
          e3 |= 1;
          break;
        case xa:
          return a3 = nh(12, c5, b10, e3 | 8), a3.elementType = xa, a3.type = xa, a3.lanes = f3, a3;
        case Ba:
          return a3 = nh(13, c5, b10, e3), a3.type = Ba, a3.elementType = Ba, a3.lanes = f3, a3;
        case Ca:
          return a3 = nh(19, c5, b10, e3), a3.elementType = Ca, a3.lanes = f3, a3;
        case Ia:
          return vi(c5, e3, f3, b10);
        case Ja:
          return a3 = nh(24, c5, b10, e3), a3.elementType = Ja, a3.lanes = f3, a3;
        default:
          if (typeof a3 === "object" && a3 !== null)
            switch (a3.$$typeof) {
              case ya:
                g2 = 10;
                break a;
              case za:
                g2 = 9;
                break a;
              case Aa:
                g2 = 11;
                break a;
              case Da:
                g2 = 14;
                break a;
              case Ea:
                g2 = 16;
                d2 = null;
                break a;
              case Fa:
                g2 = 22;
                break a;
            }
          throw Error(y(130, a3 == null ? a3 : typeof a3, ""));
      }
  b10 = nh(g2, c5, b10, e3);
  b10.elementType = a3;
  b10.type = d2;
  b10.lanes = f3;
  return b10;
}
function Xg(a3, b10, c5, d2) {
  a3 = nh(7, a3, d2, b10);
  a3.lanes = c5;
  return a3;
}
function vi(a3, b10, c5, d2) {
  a3 = nh(23, a3, d2, b10);
  a3.elementType = Ia;
  a3.lanes = c5;
  return a3;
}
function Ug(a3, b10, c5) {
  a3 = nh(6, a3, null, b10);
  a3.lanes = c5;
  return a3;
}
function Wg(a3, b10, c5) {
  b10 = nh(4, a3.children !== null ? a3.children : [], a3.key, b10);
  b10.lanes = c5;
  b10.stateNode = {containerInfo: a3.containerInfo, pendingChildren: null, implementation: a3.implementation};
  return b10;
}
function jk(a3, b10, c5) {
  this.tag = b10;
  this.containerInfo = a3;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c5;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = Zc(0);
  this.expirationTimes = Zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = Zc(0);
  this.mutableSourceEagerHydrationData = null;
}
function kk(a3, b10, c5) {
  var d2 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {$$typeof: ta, key: d2 == null ? null : "" + d2, children: a3, containerInfo: b10, implementation: c5};
}
function lk(a3, b10, c5, d2) {
  var e3 = b10.current, f3 = Hg(), g2 = Ig(e3);
  a:
    if (c5) {
      c5 = c5._reactInternals;
      b: {
        if (Zb(c5) !== c5 || c5.tag !== 1)
          throw Error(y(170));
        var h2 = c5;
        do {
          switch (h2.tag) {
            case 3:
              h2 = h2.stateNode.context;
              break b;
            case 1:
              if (Ff(h2.type)) {
                h2 = h2.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }
          }
          h2 = h2.return;
        } while (h2 !== null);
        throw Error(y(171));
      }
      if (c5.tag === 1) {
        var k6 = c5.type;
        if (Ff(k6)) {
          c5 = If(c5, k6, h2);
          break a;
        }
      }
      c5 = h2;
    } else
      c5 = Cf;
  b10.context === null ? b10.context = c5 : b10.pendingContext = c5;
  b10 = zg(f3, g2);
  b10.payload = {element: a3};
  d2 = d2 === void 0 ? null : d2;
  d2 !== null && (b10.callback = d2);
  Ag(e3, b10);
  Jg(e3, g2, f3);
  return g2;
}
function mk(a3) {
  a3 = a3.current;
  if (!a3.child)
    return null;
  switch (a3.child.tag) {
    case 5:
      return a3.child.stateNode;
    default:
      return a3.child.stateNode;
  }
}
function nk(a3, b10) {
  a3 = a3.memoizedState;
  if (a3 !== null && a3.dehydrated !== null) {
    var c5 = a3.retryLane;
    a3.retryLane = c5 !== 0 && c5 < b10 ? c5 : b10;
  }
}
function ok(a3, b10) {
  nk(a3, b10);
  (a3 = a3.alternate) && nk(a3, b10);
}
function pk() {
  return null;
}
function qk(a3, b10, c5) {
  var d2 = c5 != null && c5.hydrationOptions != null && c5.hydrationOptions.mutableSources || null;
  c5 = new jk(a3, b10, c5 != null && c5.hydrate === true);
  b10 = nh(3, null, null, b10 === 2 ? 7 : b10 === 1 ? 3 : 0);
  c5.current = b10;
  b10.stateNode = c5;
  xg(b10);
  a3[ff] = c5.current;
  cf(a3.nodeType === 8 ? a3.parentNode : a3);
  if (d2)
    for (a3 = 0; a3 < d2.length; a3++) {
      b10 = d2[a3];
      var e3 = b10._getVersion;
      e3 = e3(b10._source);
      c5.mutableSourceEagerHydrationData == null ? c5.mutableSourceEagerHydrationData = [b10, e3] : c5.mutableSourceEagerHydrationData.push(b10, e3);
    }
  this._internalRoot = c5;
}
qk.prototype.render = function(a3) {
  lk(a3, this._internalRoot, null, null);
};
qk.prototype.unmount = function() {
  var a3 = this._internalRoot, b10 = a3.containerInfo;
  lk(null, a3, null, function() {
    b10[ff] = null;
  });
};
function rk(a3) {
  return !(!a3 || a3.nodeType !== 1 && a3.nodeType !== 9 && a3.nodeType !== 11 && (a3.nodeType !== 8 || a3.nodeValue !== " react-mount-point-unstable "));
}
function sk(a3, b10) {
  b10 || (b10 = a3 ? a3.nodeType === 9 ? a3.documentElement : a3.firstChild : null, b10 = !(!b10 || b10.nodeType !== 1 || !b10.hasAttribute("data-reactroot")));
  if (!b10)
    for (var c5; c5 = a3.lastChild; )
      a3.removeChild(c5);
  return new qk(a3, 0, b10 ? {hydrate: true} : void 0);
}
function tk(a3, b10, c5, d2, e3) {
  var f3 = c5._reactRootContainer;
  if (f3) {
    var g2 = f3._internalRoot;
    if (typeof e3 === "function") {
      var h2 = e3;
      e3 = function() {
        var a4 = mk(g2);
        h2.call(a4);
      };
    }
    lk(b10, g2, a3, e3);
  } else {
    f3 = c5._reactRootContainer = sk(c5, d2);
    g2 = f3._internalRoot;
    if (typeof e3 === "function") {
      var k6 = e3;
      e3 = function() {
        var a4 = mk(g2);
        k6.call(a4);
      };
    }
    Xj(function() {
      lk(b10, g2, a3, e3);
    });
  }
  return mk(g2);
}
ec = function(a3) {
  if (a3.tag === 13) {
    var b10 = Hg();
    Jg(a3, 4, b10);
    ok(a3, 4);
  }
};
fc = function(a3) {
  if (a3.tag === 13) {
    var b10 = Hg();
    Jg(a3, 67108864, b10);
    ok(a3, 67108864);
  }
};
gc = function(a3) {
  if (a3.tag === 13) {
    var b10 = Hg(), c5 = Ig(a3);
    Jg(a3, c5, b10);
    ok(a3, c5);
  }
};
hc = function(a3, b10) {
  return b10();
};
yb = function(a3, b10, c5) {
  switch (b10) {
    case "input":
      ab(a3, c5);
      b10 = c5.name;
      if (c5.type === "radio" && b10 != null) {
        for (c5 = a3; c5.parentNode; )
          c5 = c5.parentNode;
        c5 = c5.querySelectorAll("input[name=" + JSON.stringify("" + b10) + '][type="radio"]');
        for (b10 = 0; b10 < c5.length; b10++) {
          var d2 = c5[b10];
          if (d2 !== a3 && d2.form === a3.form) {
            var e3 = Db(d2);
            if (!e3)
              throw Error(y(90));
            Wa(d2);
            ab(d2, e3);
          }
        }
      }
      break;
    case "textarea":
      ib(a3, c5);
      break;
    case "select":
      b10 = c5.value, b10 != null && fb(a3, !!c5.multiple, b10, false);
  }
};
Gb = Wj;
Hb = function(a3, b10, c5, d2, e3) {
  var f3 = X;
  X |= 4;
  try {
    return gg(98, a3.bind(null, b10, c5, d2, e3));
  } finally {
    X = f3, X === 0 && (wj(), ig());
  }
};
Ib = function() {
  (X & 49) === 0 && (Vj(), Oj());
};
Jb = function(a3, b10) {
  var c5 = X;
  X |= 2;
  try {
    return a3(b10);
  } finally {
    X = c5, X === 0 && (wj(), ig());
  }
};
function uk(a3, b10) {
  var c5 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!rk(b10))
    throw Error(y(200));
  return kk(a3, b10, null, c5);
}
var vk = {Events: [Cb, ue, Db, Eb, Fb, Oj, {current: false}]};
var wk = {findFiberByHostInstance: wc, bundleType: 0, version: "17.0.1", rendererPackageName: "react-dom"};
var xk = {bundleType: wk.bundleType, version: wk.version, rendererPackageName: wk.rendererPackageName, rendererConfig: wk.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ra.ReactCurrentDispatcher, findHostInstanceByFiber: function(a3) {
  a3 = cc(a3);
  return a3 === null ? null : a3.stateNode;
}, findFiberByHostInstance: wk.findFiberByHostInstance || pk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null};
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
  yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!yk.isDisabled && yk.supportsFiber)
    try {
      Lf = yk.inject(xk), Mf = yk;
    } catch (a3) {
    }
}
var yk;
var __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
var createPortal = uk;
var findDOMNode = function(a3) {
  if (a3 == null)
    return null;
  if (a3.nodeType === 1)
    return a3;
  var b10 = a3._reactInternals;
  if (b10 === void 0) {
    if (typeof a3.render === "function")
      throw Error(y(188));
    throw Error(y(268, Object.keys(a3)));
  }
  a3 = cc(b10);
  a3 = a3 === null ? null : a3.stateNode;
  return a3;
};
var flushSync = function(a3, b10) {
  var c5 = X;
  if ((c5 & 48) !== 0)
    return a3(b10);
  X |= 1;
  try {
    if (a3)
      return gg(99, a3.bind(null, b10));
  } finally {
    X = c5, ig();
  }
};
var hydrate = function(a3, b10, c5) {
  if (!rk(b10))
    throw Error(y(200));
  return tk(null, a3, b10, true, c5);
};
var render = function(a3, b10, c5) {
  if (!rk(b10))
    throw Error(y(200));
  return tk(null, a3, b10, false, c5);
};
var unmountComponentAtNode = function(a3) {
  if (!rk(a3))
    throw Error(y(40));
  return a3._reactRootContainer ? (Xj(function() {
    tk(null, null, a3, false, function() {
      a3._reactRootContainer = null;
      a3[ff] = null;
    });
  }), true) : false;
};
var unstable_batchedUpdates = Wj;
var unstable_createPortal = function(a3, b10) {
  return uk(a3, b10, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
};
var unstable_renderSubtreeIntoContainer = function(a3, b10, c5, d2) {
  if (!rk(c5))
    throw Error(y(200));
  if (a3 == null || a3._reactInternals === void 0)
    throw Error(y(38));
  return tk(a3, b10, c5, false, d2);
};
var version = "17.0.1";
var reactDom_production_min = {
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  createPortal,
  findDOMNode,
  flushSync,
  hydrate,
  render,
  unmountComponentAtNode,
  unstable_batchedUpdates,
  unstable_createPortal,
  unstable_renderSubtreeIntoContainer,
  version
};
var reactDom = createCommonjsModule(function(module) {
  function checkDCE() {
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
      return;
    }
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
    } catch (err) {
      console.error(err);
    }
  }
  {
    checkDCE();
    module.exports = reactDom_production_min;
  }
});

// snowpack/pkg/common/extends-7477639a.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// snowpack/pkg/common/index-ad697a84.js
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      return;
    }
    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
var propTypes = createCommonjsModule(function(module) {
  {
    module.exports = factoryWithThrowingShims();
  }
});

// snowpack/pkg/react-router-dom.js
var m;
var x = m || (m = {});
x.Pop = "POP";
x.Push = "PUSH";
x.Replace = "REPLACE";
var y2 = function(a3) {
  return a3;
};
function A(a3) {
  a3.preventDefault();
  a3.returnValue = "";
}
function B2() {
  var a3 = [];
  return {get length() {
    return a3.length;
  }, push: function(b10) {
    a3.push(b10);
    return function() {
      a3 = a3.filter(function(a4) {
        return a4 !== b10;
      });
    };
  }, call: function(b10) {
    a3.forEach(function(a4) {
      return a4 && a4(b10);
    });
  }};
}
function D2() {
  return Math.random().toString(36).substr(2, 8);
}
function E(a3) {
  var b10 = a3.pathname, g2 = a3.search;
  a3 = a3.hash;
  return (b10 === void 0 ? "/" : b10) + (g2 === void 0 ? "" : g2) + (a3 === void 0 ? "" : a3);
}
function F2(a3) {
  var b10 = {};
  if (a3) {
    var g2 = a3.indexOf("#");
    0 <= g2 && (b10.hash = a3.substr(g2), a3 = a3.substr(0, g2));
    g2 = a3.indexOf("?");
    0 <= g2 && (b10.search = a3.substr(g2), a3 = a3.substr(0, g2));
    a3 && (b10.pathname = a3);
  }
  return b10;
}
function createBrowserHistory(a3) {
  function b10() {
    var a4 = h2.location, d2 = f3.state || {};
    return [d2.idx, y2({pathname: a4.pathname, search: a4.search, hash: a4.hash, state: d2.usr || null, key: d2.key || "default"})];
  }
  function g2(a4) {
    return typeof a4 === "string" ? a4 : E(a4);
  }
  function t4(a4, d2) {
    d2 === void 0 && (d2 = null);
    return y2(_extends({}, l3, {}, typeof a4 === "string" ? F2(a4) : a4, {state: d2, key: D2()}));
  }
  function v3(a4) {
    n3 = a4;
    a4 = b10();
    q2 = a4[0];
    l3 = a4[1];
    c5.call({action: n3, location: l3});
  }
  function w3(a4, d2) {
    function c6() {
      w3(a4, d2);
    }
    var k6 = m.Push, C5 = t4(a4, d2);
    if (!e3.length || (e3.call({
      action: k6,
      location: C5,
      retry: c6
    }), false)) {
      var b11 = [{usr: C5.state, key: C5.key, idx: q2 + 1}, g2(C5)];
      C5 = b11[0];
      b11 = b11[1];
      try {
        f3.pushState(C5, "", b11);
      } catch (G4) {
        h2.location.assign(b11);
      }
      v3(k6);
    }
  }
  function u2(a4, d2) {
    function c6() {
      u2(a4, d2);
    }
    var b11 = m.Replace, k6 = t4(a4, d2);
    e3.length && (e3.call({action: b11, location: k6, retry: c6}), 1) || (k6 = [{usr: k6.state, key: k6.key, idx: q2}, g2(k6)], f3.replaceState(k6[0], "", k6[1]), v3(b11));
  }
  function r3(a4) {
    f3.go(a4);
  }
  a3 === void 0 && (a3 = {});
  a3 = a3.window;
  var h2 = a3 === void 0 ? document.defaultView : a3, f3 = h2.history, p3 = null;
  h2.addEventListener("popstate", function() {
    if (p3)
      e3.call(p3), p3 = null;
    else {
      var a4 = m.Pop, d2 = b10(), c6 = d2[0];
      d2 = d2[1];
      if (e3.length)
        if (c6 != null) {
          var f4 = q2 - c6;
          f4 && (p3 = {action: a4, location: d2, retry: function() {
            r3(-1 * f4);
          }}, r3(f4));
        } else
          ;
      else
        v3(a4);
    }
  });
  var n3 = m.Pop;
  a3 = b10();
  var q2 = a3[0], l3 = a3[1], c5 = B2(), e3 = B2();
  q2 == null && (q2 = 0, f3.replaceState(_extends({}, f3.state, {idx: q2}), ""));
  return {get action() {
    return n3;
  }, get location() {
    return l3;
  }, createHref: g2, push: w3, replace: u2, go: r3, back: function() {
    r3(-1);
  }, forward: function() {
    r3(1);
  }, listen: function(a4) {
    return c5.push(a4);
  }, block: function(a4) {
    var d2 = e3.push(a4);
    e3.length === 1 && h2.addEventListener("beforeunload", A);
    return function() {
      d2();
      e3.length || h2.removeEventListener("beforeunload", A);
    };
  }};
}
function f() {
  f = Object.assign || function(a3) {
    for (var b10 = 1; b10 < arguments.length; b10++) {
      var c5 = arguments[b10], d2;
      for (d2 in c5)
        Object.prototype.hasOwnProperty.call(c5, d2) && (a3[d2] = c5[d2]);
    }
    return a3;
  };
  return f.apply(this, arguments);
}
var k = function(a3) {
  return a3;
};
function l(a3, b10) {
  if (!a3)
    throw Error(b10);
}
var r = react.createContext({static: false});
var v = react.createContext({outlet: null, params: k({}), pathname: "", route: null});
function B$1() {
  return C();
}
function D$1(a3) {
  a3 = a3.element;
  return a3 === void 0 ? react.createElement(B$1, null) : a3;
}
function x$1(a3) {
  var b10 = a3.children;
  b10 = b10 === void 0 ? null : b10;
  var c5 = a3.action;
  c5 = c5 === void 0 ? m.Pop : c5;
  var d2 = a3.location, e3 = a3.navigator;
  a3 = a3.static;
  a3 = a3 === void 0 ? false : a3;
  z() ? l(false) : void 0;
  return react.createElement(r.Provider, {children: b10, value: {action: c5, location: d2, navigator: e3, static: a3}});
}
function E$1(a3) {
  var b10 = a3.basename;
  b10 = b10 === void 0 ? "" : b10;
  a3 = F$1(a3.children);
  return G2(a3, b10);
}
function z() {
  return react.useContext(r).location != null;
}
function H2() {
  z() ? void 0 : l(false);
  return react.useContext(r).location;
}
function A$1() {
  z() ? void 0 : l(false);
  var a3 = react.useContext(r).navigator, b10 = react.useContext(v).pathname, c5 = react.useRef(false);
  react.useEffect(function() {
    c5.current = true;
  });
  return react.useCallback(function(d2, e3) {
    e3 === void 0 && (e3 = {});
    c5.current ? typeof d2 === "number" ? a3.go(d2) : (d2 = J(d2, b10), (e3.replace ? a3.replace : a3.push)(d2, e3.state)) : void 0;
  }, [a3, b10]);
}
function C() {
  return react.useContext(v).outlet;
}
function K(a3) {
  var b10 = react.useContext(v).pathname;
  return react.useMemo(function() {
    return J(a3, b10);
  }, [a3, b10]);
}
function G2(a3, b10) {
  b10 === void 0 && (b10 = "");
  var c5 = react.useContext(v), d2 = c5.route, e3 = c5.pathname, g2 = c5.params;
  b10 = b10 ? L([e3, b10]) : e3;
  var h2 = H2();
  return (d2 = react.useMemo(function() {
    return M2(a3, h2, b10);
  }, [h2, a3, b10])) ? d2.reduceRight(function(a4, c6) {
    var d4 = c6.pathname, e4 = c6.route;
    return react.createElement(v.Provider, {children: e4.element, value: {outlet: a4, params: k(f({}, g2, {}, c6.params)), pathname: L([b10, d4]), route: e4}});
  }, null) : null;
}
function F$1(a3) {
  var b10 = [];
  react.Children.forEach(a3, function(a4) {
    if (react.isValidElement(a4))
      if (a4.type === react.Fragment)
        b10.push.apply(b10, F$1(a4.props.children));
      else {
        var c5 = {path: a4.props.path || "/", caseSensitive: a4.props.caseSensitive === true, element: a4};
        a4.props.children && (a4 = F$1(a4.props.children), a4.length && (c5.children = a4));
        b10.push(c5);
      }
  });
  return b10;
}
function M2(a3, b10, c5) {
  c5 === void 0 && (c5 = "");
  typeof b10 === "string" && (b10 = F2(b10));
  b10 = b10.pathname || "/";
  if (c5)
    if (c5 = c5.replace(/^\/*/, "/").replace(/\/+$/, ""), b10.startsWith(c5))
      b10 = b10 === c5 ? "/" : b10.slice(c5.length);
    else
      return null;
  a3 = O2(a3);
  P2(a3);
  var d2 = null;
  for (c5 = 0; d2 == null && c5 < a3.length; ++c5)
    a: {
      d2 = b10;
      for (var e3 = a3[c5][1], g2 = "/", h2 = {}, I3 = [], n3 = 0; n3 < e3.length; ++n3) {
        var t4 = e3[n3], u2 = g2 === "/" ? d2 : d2.slice(g2.length) || "/";
        u2 = Q({path: t4.path, caseSensitive: t4.caseSensitive, end: n3 === e3.length - 1}, u2);
        if (!u2) {
          d2 = null;
          break a;
        }
        g2 = L([g2, u2.pathname]);
        h2 = f({}, h2, {}, u2.params);
        I3.push({route: t4, pathname: g2, params: k(h2)});
      }
      d2 = I3;
    }
  return d2;
}
function O2(a3, b10, c5, d2, e3) {
  b10 === void 0 && (b10 = []);
  c5 === void 0 && (c5 = "");
  d2 === void 0 && (d2 = []);
  e3 === void 0 && (e3 = []);
  a3.forEach(function(a4, h2) {
    var g2 = L([c5, a4.path]), n3 = d2.concat(a4);
    h2 = e3.concat(h2);
    a4.children && O2(a4.children, b10, g2, n3, h2);
    b10.push([g2, n3, h2]);
  });
  return b10;
}
function P2(a3) {
  var b10 = a3.reduce(function(a4, b11) {
    b11 = b11[0];
    a4[b11] = R2(b11);
    return a4;
  }, {});
  S2(a3, function(a4, d2) {
    var c5 = a4[2];
    a4 = b10[a4[0]];
    var g2 = d2[2];
    d2 = b10[d2[0]];
    return a4 !== d2 ? d2 - a4 : T2(c5, g2);
  });
}
var U2 = /^:\w+$/;
var V2 = 2;
var W2 = 1;
var X2 = 10;
var Y2 = -2;
function Z2(a3) {
  return a3 === "*";
}
function R2(a3) {
  a3 = a3.split("/");
  var b10 = a3.length;
  a3.some(Z2) && (b10 += Y2);
  return a3.filter(function(a4) {
    return !Z2(a4);
  }).reduce(function(a4, b11) {
    return a4 + (U2.test(b11) ? V2 : b11 === "" ? W2 : X2);
  }, b10);
}
function T2(a3, b10) {
  return a3.length === b10.length && a3.slice(0, -1).every(function(a4, d2) {
    return a4 === b10[d2];
  }) ? a3[a3.length - 1] - b10[b10.length - 1] : 0;
}
function S2(a3, b10) {
  var c5 = a3.slice(0);
  a3.sort(function(a4, e3) {
    return b10(a4, e3) || c5.indexOf(a4) - c5.indexOf(e3);
  });
}
function Q(a3, b10) {
  typeof a3 === "string" && (a3 = {path: a3});
  var c5 = a3;
  a3 = c5.path;
  var d2 = c5.caseSensitive;
  c5 = c5.end;
  c5 = aa(a3, d2 === void 0 ? false : d2, c5 === void 0 ? true : c5);
  d2 = c5[1];
  c5 = b10.match(c5[0]);
  if (!c5)
    return null;
  b10 = c5[1];
  var e3 = c5.slice(2);
  d2 = d2.reduce(function(a4, b11, c6) {
    c6 = e3[c6];
    try {
      var d4 = decodeURIComponent(c6.replace(/\+/g, " "));
    } catch (t4) {
      d4 = c6;
    }
    a4[b11] = d4;
    return a4;
  }, {});
  return {path: a3, pathname: b10, params: d2};
}
function aa(a3, b10, c5) {
  var d2 = [], e3 = "^(" + a3.replace(/^\/*/, "/").replace(/\/?\*?$/, "").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/:(\w+)/g, function(a4, b11) {
    d2.push(b11);
    return "([^\\/]+)";
  }) + ")";
  a3.endsWith("*") ? (a3.endsWith("/*") && (e3 += "\\/?"), d2.push("*"), e3 += "(.*)") : c5 && (e3 += "\\/?");
  c5 && (e3 += "$");
  return [new RegExp(e3, b10 ? void 0 : "i"), d2];
}
function J(a3, b10) {
  b10 === void 0 && (b10 = "/");
  var c5 = typeof a3 === "string" ? F2(a3) : a3;
  a3 = c5.pathname;
  var d2 = c5.search;
  d2 = d2 === void 0 ? "" : d2;
  c5 = c5.hash;
  c5 = c5 === void 0 ? "" : c5;
  return {pathname: a3 ? ba2(a3, a3.startsWith("/") ? "/" : b10) : b10, search: d2, hash: c5};
}
function L(a3) {
  return a3.join("/").replace(/\/\/+/g, "/");
}
function ba2(a3, b10) {
  var c5 = b10.replace(/\/+$/, "").replace(/\/\/+/g, "/").split("/");
  a3.replace(/\/\/+/g, "/").split("/").forEach(function(a4) {
    a4 === ".." ? 1 < c5.length && c5.pop() : a4 !== "." && c5.push(a4);
  });
  return 1 < c5.length ? L(c5) : "/";
}
function useHref(a3) {
  z() ? void 0 : l(false);
  var b10 = react.useContext(r).navigator;
  a3 = K(a3);
  return b10.createHref(a3);
}
function n() {
  n = Object.assign || function(a3) {
    for (var d2 = 1; d2 < arguments.length; d2++) {
      var b10 = arguments[d2], c5;
      for (c5 in b10)
        Object.prototype.hasOwnProperty.call(b10, c5) && (a3[c5] = b10[c5]);
    }
    return a3;
  };
  return n.apply(this, arguments);
}
function p(a3, d2) {
  if (a3 == null)
    return {};
  var b10 = {}, c5 = Object.keys(a3), e3;
  for (e3 = 0; e3 < c5.length; e3++) {
    var f3 = c5[e3];
    0 <= d2.indexOf(f3) || (b10[f3] = a3[f3]);
  }
  return b10;
}
function w(a3) {
  var d2 = a3.children;
  a3 = a3.window;
  var b10 = react.useRef();
  b10.current == null && (b10.current = createBrowserHistory({window: a3}));
  var c5 = b10.current;
  a3 = react.useReducer(function(a4, b11) {
    return b11;
  }, {action: c5.action, location: c5.location});
  b10 = a3[0];
  var e3 = a3[1];
  react.useLayoutEffect(function() {
    return c5.listen(e3);
  }, [c5]);
  return react.createElement(x$1, {children: d2, action: b10.action, location: b10.location, navigator: c5});
}
var y$1 = react.forwardRef(function(a3, d2) {
  var b10 = a3.onClick, c5 = a3.replace, e3 = c5 === void 0 ? false : c5, f3 = a3.state, g2 = a3.target, m3 = a3.to;
  a3 = p(a3, ["onClick", "replace", "state", "target", "to"]);
  c5 = useHref(m3);
  var k6 = A$1(), u2 = H2(), h2 = K(m3);
  return react.createElement("a", Object.assign({}, a3, {href: c5, onClick: function(a4) {
    b10 && b10(a4);
    a4.defaultPrevented || a4.button !== 0 || g2 && g2 !== "_self" || a4.metaKey || a4.altKey || a4.ctrlKey || a4.shiftKey || (a4.preventDefault(), a4 = !!e3 || E(u2) === E(h2), k6(m3, {replace: a4, state: f3}));
  }, ref: d2, target: g2}));
});
react.forwardRef(function(a3, d2) {
  var b10 = a3["aria-current"], c5 = b10 === void 0 ? "page" : b10;
  b10 = a3.activeClassName;
  var e3 = b10 === void 0 ? "active" : b10;
  b10 = a3.activeStyle;
  var f3 = a3.caseSensitive, g2 = f3 === void 0 ? false : f3;
  f3 = a3.className;
  var m3 = f3 === void 0 ? "" : f3;
  f3 = a3.end;
  var k6 = f3 === void 0 ? false : f3, u2 = a3.style;
  f3 = a3.to;
  a3 = p(a3, "aria-current activeClassName activeStyle caseSensitive className end style to".split(" "));
  var h2 = H2(), l3 = K(f3);
  h2 = h2.pathname;
  l3 = l3.pathname;
  g2 || (h2 = h2.toLowerCase(), l3 = l3.toLowerCase());
  c5 = (g2 = k6 ? h2 === l3 : h2.startsWith(l3)) ? c5 : void 0;
  e3 = [m3, g2 ? e3 : null].filter(Boolean).join(" ");
  b10 = n({}, u2, {}, g2 ? b10 : null);
  return react.createElement(y$1, Object.assign({}, a3, {"aria-current": c5, className: e3, ref: d2, style: b10, to: f3}));
});

// dist/logo.svg.proxy.js
var logo_svg_proxy_default = "./dist/logo.svg";

// dist/components/navigate.js
function Navigate(props) {
  return /* @__PURE__ */ react.createElement("nav", null, /* @__PURE__ */ react.createElement(y$1, {
    to: "/d3"
  }, "D3"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/dashboard"
  }, "Dashboard"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/visx"
  }, "VisX"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/victory"
  }, "Victory"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/recharts"
  }, "Recharts"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/reactvis"
  }, "React-Vis"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/nivo"
  }, "Nivo"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/vx"
  }, "VX"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/wythe"
  }, "Wythe"), /* @__PURE__ */ react.createElement(y$1, {
    to: "/zoompan"
  }, "ZoomPan"));
}

// dist/components/home.js
function Home(props) {
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, "Welcome to Vizbin!"), /* @__PURE__ */ react.createElement("p", null, "Explore the pile of data visualizations I put here."));
}

// snowpack/pkg/common/index-d4b0dc1b.js
var classnames = createCommonjsModule(function(module) {
  /*!
    Copyright (c) 2017 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  */
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes.push(arg);
        } else if (Array.isArray(arg) && arg.length) {
          var inner = classNames.apply(null, arg);
          if (inner) {
            classes.push(inner);
          }
        } else if (argType === "object") {
          for (var key in arg) {
            if (hasOwn.call(arg, key) && arg[key]) {
              classes.push(key);
            }
          }
        }
      }
      return classes.join(" ");
    }
    if (module.exports) {
      classNames.default = classNames;
      module.exports = classNames;
    } else {
      window.classNames = classNames;
    }
  })();
});

// snowpack/pkg/common/reverse-386d2f80.js
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x5, y7);
        break;
    }
  }
};
function curveLinear(context) {
  return new Linear(context);
}
function stackOffsetNone(series, order) {
  if (!((n3 = series.length) > 1))
    return;
  for (var i = 1, j2, s0, s1 = series[order[0]], n3, m3 = s1.length; i < n3; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j2 = 0; j2 < m3; ++j2) {
      s1[j2][1] += s1[j2][0] = isNaN(s0[j2][1]) ? s0[j2][0] : s0[j2][1];
    }
  }
}
function stackOrderNone(series) {
  var n3 = series.length, o = new Array(n3);
  while (--n3 >= 0)
    o[n3] = n3;
  return o;
}
function stackOffsetExpand(series, order) {
  if (!((n3 = series.length) > 0))
    return;
  for (var i, n3, j2 = 0, m3 = series[0].length, y7; j2 < m3; ++j2) {
    for (y7 = i = 0; i < n3; ++i)
      y7 += series[i][j2][1] || 0;
    if (y7)
      for (i = 0; i < n3; ++i)
        series[i][j2][1] /= y7;
  }
  stackOffsetNone(series, order);
}
function stackOffsetDiverging(series, order) {
  if (!((n3 = series.length) > 0))
    return;
  for (var i, j2 = 0, d2, dy, yp, yn, n3, m3 = series[order[0]].length; j2 < m3; ++j2) {
    for (yp = yn = 0, i = 0; i < n3; ++i) {
      if ((dy = (d2 = series[order[i]][j2])[1] - d2[0]) > 0) {
        d2[0] = yp, d2[1] = yp += dy;
      } else if (dy < 0) {
        d2[1] = yn, d2[0] = yn += dy;
      } else {
        d2[0] = 0, d2[1] = dy;
      }
    }
  }
}
function stackOffsetSilhouette(series, order) {
  if (!((n3 = series.length) > 0))
    return;
  for (var j2 = 0, s0 = series[order[0]], n3, m3 = s0.length; j2 < m3; ++j2) {
    for (var i = 0, y7 = 0; i < n3; ++i)
      y7 += series[i][j2][1] || 0;
    s0[j2][1] += s0[j2][0] = -y7 / 2;
  }
  stackOffsetNone(series, order);
}
function stackOffsetWiggle(series, order) {
  if (!((n3 = series.length) > 0) || !((m3 = (s0 = series[order[0]]).length) > 0))
    return;
  for (var y7 = 0, j2 = 1, s0, m3, n3; j2 < m3; ++j2) {
    for (var i = 0, s1 = 0, s22 = 0; i < n3; ++i) {
      var si2 = series[order[i]], sij0 = si2[j2][1] || 0, sij1 = si2[j2 - 1][1] || 0, s32 = (sij0 - sij1) / 2;
      for (var k6 = 0; k6 < i; ++k6) {
        var sk2 = series[order[k6]], skj0 = sk2[j2][1] || 0, skj1 = sk2[j2 - 1][1] || 0;
        s32 += skj0 - skj1;
      }
      s1 += sij0, s22 += s32 * sij0;
    }
    s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
    if (s1)
      y7 -= s22 / s1;
  }
  s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
  stackOffsetNone(series, order);
}
function appearance(series) {
  var peaks = series.map(peak);
  return stackOrderNone(series).sort(function(a3, b10) {
    return peaks[a3] - peaks[b10];
  });
}
function peak(series) {
  var i = -1, j2 = 0, n3 = series.length, vi2, vj2 = -Infinity;
  while (++i < n3)
    if ((vi2 = +series[i][1]) > vj2)
      vj2 = vi2, j2 = i;
  return j2;
}
function stackOrderAscending(series) {
  var sums = series.map(sum);
  return stackOrderNone(series).sort(function(a3, b10) {
    return sums[a3] - sums[b10];
  });
}
function sum(series) {
  var s4 = 0, i = -1, n3 = series.length, v3;
  while (++i < n3)
    if (v3 = +series[i][1])
      s4 += v3;
  return s4;
}
function stackOrderDescending(series) {
  return stackOrderAscending(series).reverse();
}
function stackOrderInsideOut(series) {
  var n3 = series.length, i, j2, sums = series.map(sum), order = appearance(series), top2 = 0, bottom2 = 0, tops = [], bottoms = [];
  for (i = 0; i < n3; ++i) {
    j2 = order[i];
    if (top2 < bottom2) {
      top2 += sums[j2];
      tops.push(j2);
    } else {
      bottom2 += sums[j2];
      bottoms.push(j2);
    }
  }
  return bottoms.reverse().concat(tops);
}
function stackOrderReverse(series) {
  return stackOrderNone(series).reverse();
}

// snowpack/pkg/common/path-ebc45f0e.js
var pi2 = Math.PI;
var tau = 2 * pi2;
var epsilon = 1e-6;
var tauEpsilon = tau - epsilon;
function Path() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path() {
  return new Path();
}
Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x5, y7) {
    this._ += "M" + (this._x0 = this._x1 = +x5) + "," + (this._y0 = this._y1 = +y7);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x5, y7) {
    this._ += "L" + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  quadraticCurveTo: function(x14, y14, x5, y7) {
    this._ += "Q" + +x14 + "," + +y14 + "," + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  bezierCurveTo: function(x14, y14, x22, y22, x5, y7) {
    this._ += "C" + +x14 + "," + +y14 + "," + +x22 + "," + +y22 + "," + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  arcTo: function(x14, y14, x22, y22, r3) {
    x14 = +x14, y14 = +y14, x22 = +x22, y22 = +y22, r3 = +r3;
    var x03 = this._x1, y03 = this._y1, x21 = x22 - x14, y21 = y22 - y14, x01 = x03 - x14, y01 = y03 - y14, l01_2 = x01 * x01 + y01 * y01;
    if (r3 < 0)
      throw new Error("negative radius: " + r3);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x14) + "," + (this._y1 = y14);
    } else if (!(l01_2 > epsilon))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r3) {
      this._ += "L" + (this._x1 = x14) + "," + (this._y1 = y14);
    } else {
      var x20 = x22 - x03, y20 = y22 - y03, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l3 = r3 * Math.tan((pi2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l3 / l01, t21 = l3 / l21;
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x14 + t01 * x01) + "," + (y14 + t01 * y01);
      }
      this._ += "A" + r3 + "," + r3 + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x14 + t21 * x21) + "," + (this._y1 = y14 + t21 * y21);
    }
  },
  arc: function(x5, y7, r3, a0, a1, ccw) {
    x5 = +x5, y7 = +y7, r3 = +r3, ccw = !!ccw;
    var dx = r3 * Math.cos(a0), dy = r3 * Math.sin(a0), x03 = x5 + dx, y03 = y7 + dy, cw = 1 ^ ccw, da2 = ccw ? a0 - a1 : a1 - a0;
    if (r3 < 0)
      throw new Error("negative radius: " + r3);
    if (this._x1 === null) {
      this._ += "M" + x03 + "," + y03;
    } else if (Math.abs(this._x1 - x03) > epsilon || Math.abs(this._y1 - y03) > epsilon) {
      this._ += "L" + x03 + "," + y03;
    }
    if (!r3)
      return;
    if (da2 < 0)
      da2 = da2 % tau + tau;
    if (da2 > tauEpsilon) {
      this._ += "A" + r3 + "," + r3 + ",0,1," + cw + "," + (x5 - dx) + "," + (y7 - dy) + "A" + r3 + "," + r3 + ",0,1," + cw + "," + (this._x1 = x03) + "," + (this._y1 = y03);
    } else if (da2 > epsilon) {
      this._ += "A" + r3 + "," + r3 + ",0," + +(da2 >= pi2) + "," + cw + "," + (this._x1 = x5 + r3 * Math.cos(a1)) + "," + (this._y1 = y7 + r3 * Math.sin(a1));
    }
  },
  rect: function(x5, y7, w3, h2) {
    this._ += "M" + (this._x0 = this._x1 = +x5) + "," + (this._y0 = this._y1 = +y7) + "h" + +w3 + "v" + +h2 + "h" + -w3 + "Z";
  },
  toString: function() {
    return this._;
  }
};

// snowpack/pkg/common/stack-ccc07bb1.js
function constant(x5) {
  return function constant7() {
    return x5;
  };
}
function x2(p3) {
  return p3[0];
}
function y3(p3) {
  return p3[1];
}
function d3Line() {
  var x$13 = x2, y$13 = y3, defined4 = constant(true), context = null, curve = curveLinear, output = null;
  function line2(data3) {
    var i, n3 = data3.length, d2, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x$13(d2, i, data3), +y$13(d2, i, data3));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line2.x = function(_2) {
    return arguments.length ? (x$13 = typeof _2 === "function" ? _2 : constant(+_2), line2) : x$13;
  };
  line2.y = function(_2) {
    return arguments.length ? (y$13 = typeof _2 === "function" ? _2 : constant(+_2), line2) : y$13;
  };
  line2.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant(!!_2), line2) : defined4;
  };
  line2.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), line2) : curve;
  };
  line2.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), line2) : context;
  };
  return line2;
}
function d3Area() {
  var x03 = x2, x14 = null, y03 = constant(0), y14 = y3, defined4 = constant(true), context = null, curve = curveLinear, output = null;
  function area3(data3) {
    var i, j2, k6, n3 = data3.length, d2, defined0 = false, buffer, x0z = new Array(n3), y0z = new Array(n3);
    if (context == null)
      output = curve(buffer = path());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0) {
          j2 = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k6 = i - 1; k6 >= j2; --k6) {
            output.point(x0z[k6], y0z[k6]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x03(d2, i, data3), y0z[i] = +y03(d2, i, data3);
        output.point(x14 ? +x14(d2, i, data3) : x0z[i], y14 ? +y14(d2, i, data3) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return d3Line().defined(defined4).curve(curve).context(context);
  }
  area3.x = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant(+_2), x14 = null, area3) : x03;
  };
  area3.x0 = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant(+_2), area3) : x03;
  };
  area3.x1 = function(_2) {
    return arguments.length ? (x14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant(+_2), area3) : x14;
  };
  area3.y = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant(+_2), y14 = null, area3) : y03;
  };
  area3.y0 = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant(+_2), area3) : y03;
  };
  area3.y1 = function(_2) {
    return arguments.length ? (y14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant(+_2), area3) : y14;
  };
  area3.lineX0 = area3.lineY0 = function() {
    return arealine().x(x03).y(y03);
  };
  area3.lineY1 = function() {
    return arealine().x(x03).y(y14);
  };
  area3.lineX1 = function() {
    return arealine().x(x14).y(y03);
  };
  area3.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant(!!_2), area3) : defined4;
  };
  area3.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), area3) : curve;
  };
  area3.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), area3) : context;
  };
  return area3;
}
var slice = Array.prototype.slice;
function stackValue(d2, key) {
  return d2[key];
}
function d3stack() {
  var keys4 = constant([]), order = stackOrderNone, offset = stackOffsetNone, value2 = stackValue;
  function stack3(data3) {
    var kz = keys4.apply(this, arguments), i, m3 = data3.length, n3 = kz.length, sz = new Array(n3), oz;
    for (i = 0; i < n3; ++i) {
      for (var ki2 = kz[i], si2 = sz[i] = new Array(m3), j2 = 0, sij; j2 < m3; ++j2) {
        si2[j2] = sij = [0, +value2(data3[j2], ki2, j2, data3)];
        sij.data = data3[j2];
      }
      si2.key = ki2;
    }
    for (i = 0, oz = order(sz); i < n3; ++i) {
      sz[oz[i]].index = i;
    }
    offset(sz, oz);
    return sz;
  }
  stack3.keys = function(_2) {
    return arguments.length ? (keys4 = typeof _2 === "function" ? _2 : constant(slice.call(_2)), stack3) : keys4;
  };
  stack3.value = function(_2) {
    return arguments.length ? (value2 = typeof _2 === "function" ? _2 : constant(+_2), stack3) : value2;
  };
  stack3.order = function(_2) {
    return arguments.length ? (order = _2 == null ? stackOrderNone : typeof _2 === "function" ? _2 : constant(slice.call(_2)), stack3) : order;
  };
  stack3.offset = function(_2) {
    return arguments.length ? (offset = _2 == null ? stackOffsetNone : _2, stack3) : offset;
  };
  return stack3;
}

// snowpack/pkg/common/Group-1bab4bbd.js
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Group(_ref) {
  var _ref$top = _ref.top, top2 = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left2 = _ref$left === void 0 ? 0 : _ref$left, transform = _ref.transform, className = _ref.className, children2 = _ref.children, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose(_ref, ["top", "left", "transform", "className", "children", "innerRef"]);
  return /* @__PURE__ */ react.createElement("g", _extends2({
    ref: innerRef,
    className: classnames("visx-group", className),
    transform: transform || "translate(" + left2 + ", " + top2 + ")"
  }, restProps), children2);
}
Group.propTypes = {
  top: propTypes.number,
  left: propTypes.number,
  transform: propTypes.string,
  className: propTypes.string,
  children: propTypes.node,
  innerRef: propTypes.oneOfType([propTypes.string, propTypes.func, propTypes.object])
};

// snowpack/pkg/@visx/shape.js
function setNumberOrNumberAccessor(func, value2) {
  if (typeof value2 === "number")
    func(value2);
  else
    func(value2);
}
var STACK_ORDERS = {
  ascending: stackOrderAscending,
  descending: stackOrderDescending,
  insideout: stackOrderInsideOut,
  none: stackOrderNone,
  reverse: stackOrderReverse
};
function stackOrder(order) {
  return order && STACK_ORDERS[order] || STACK_ORDERS.none;
}
var STACK_OFFSETS = {
  expand: stackOffsetExpand,
  diverging: stackOffsetDiverging,
  none: stackOffsetNone,
  silhouette: stackOffsetSilhouette,
  wiggle: stackOffsetWiggle
};
function stackOffset(offset) {
  return offset && STACK_OFFSETS[offset] || STACK_OFFSETS.none;
}
function area(_temp2) {
  var _ref2 = _temp2 === void 0 ? {} : _temp2, x5 = _ref2.x, x03 = _ref2.x0, x14 = _ref2.x1, y7 = _ref2.y, y03 = _ref2.y0, y14 = _ref2.y1, defined4 = _ref2.defined, curve = _ref2.curve;
  var path3 = d3Area();
  if (x5)
    setNumberOrNumberAccessor(path3.x, x5);
  if (x03)
    setNumberOrNumberAccessor(path3.x0, x03);
  if (x14)
    setNumberOrNumberAccessor(path3.x1, x14);
  if (y7)
    setNumberOrNumberAccessor(path3.y, y7);
  if (y03)
    setNumberOrNumberAccessor(path3.y0, y03);
  if (y14)
    setNumberOrNumberAccessor(path3.y1, y14);
  if (defined4)
    path3.defined(defined4);
  if (curve)
    path3.curve(curve);
  return path3;
}
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function AreaClosed(_ref) {
  var x5 = _ref.x, x03 = _ref.x0, x14 = _ref.x1, y7 = _ref.y, y14 = _ref.y1, y03 = _ref.y0, yScale = _ref.yScale, _ref$data = _ref.data, data3 = _ref$data === void 0 ? [] : _ref$data, _ref$defined = _ref.defined, defined4 = _ref$defined === void 0 ? function() {
    return true;
  } : _ref$defined, className = _ref.className, curve = _ref.curve, innerRef = _ref.innerRef, children2 = _ref.children, restProps = _objectWithoutPropertiesLoose2(_ref, ["x", "x0", "x1", "y", "y1", "y0", "yScale", "data", "defined", "className", "curve", "innerRef", "children"]);
  var path3 = area({
    x: x5,
    x0: x03,
    x1: x14,
    defined: defined4,
    curve
  });
  if (y03 == null) {
    path3.y0(yScale.range()[0]);
  } else {
    setNumberOrNumberAccessor(path3.y0, y03);
  }
  if (y7 && !y14)
    setNumberOrNumberAccessor(path3.y1, y7);
  if (y14 && !y7)
    setNumberOrNumberAccessor(path3.y1, y14);
  if (children2)
    return /* @__PURE__ */ react.createElement(react.Fragment, null, children2({
      path: path3
    }));
  return /* @__PURE__ */ react.createElement("path", _extends3({
    ref: innerRef,
    className: classnames("visx-area-closed", className),
    d: path3(data3) || ""
  }, restProps));
}
function _extends$1() {
  _extends$1 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Bar(_ref) {
  var className = _ref.className, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose$1(_ref, ["className", "innerRef"]);
  return /* @__PURE__ */ react.createElement("rect", _extends$1({
    ref: innerRef,
    className: classnames("visx-bar", className)
  }, restProps));
}
function getBandwidth(scale) {
  if ("bandwidth" in scale) {
    return scale.bandwidth();
  }
  var range7 = scale.range();
  var domain = scale.domain();
  return Math.abs(range7[range7.length - 1] - range7[0]) / domain.length;
}
function getFirstItem(d2) {
  return d2 == null ? void 0 : d2[0];
}
function getSecondItem(d2) {
  return d2 == null ? void 0 : d2[1];
}
function _extends$2() {
  _extends$2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function BarStackComponent(_ref) {
  var data3 = _ref.data, className = _ref.className, top2 = _ref.top, left2 = _ref.left, x5 = _ref.x, _ref$y = _ref.y0, y03 = _ref$y === void 0 ? getFirstItem : _ref$y, _ref$y2 = _ref.y1, y14 = _ref$y2 === void 0 ? getSecondItem : _ref$y2, xScale = _ref.xScale, yScale = _ref.yScale, color3 = _ref.color, keys4 = _ref.keys, value2 = _ref.value, order = _ref.order, offset = _ref.offset, children2 = _ref.children, restProps = _objectWithoutPropertiesLoose$2(_ref, ["data", "className", "top", "left", "x", "y0", "y1", "xScale", "yScale", "color", "keys", "value", "order", "offset", "children"]);
  var stack3 = d3stack();
  if (keys4)
    stack3.keys(keys4);
  if (value2)
    setNumberOrNumberAccessor(stack3.value, value2);
  if (order)
    stack3.order(stackOrder(order));
  if (offset)
    stack3.offset(stackOffset(offset));
  var stacks = stack3(data3);
  var barWidth = getBandwidth(xScale);
  var barStacks = stacks.map(function(barStack, i) {
    var key = barStack.key;
    return {
      index: i,
      key,
      bars: barStack.map(function(bar, j2) {
        var barHeight = (yScale(y03(bar)) || 0) - (yScale(y14(bar)) || 0);
        var barY = yScale(y14(bar));
        var barX = "bandwidth" in xScale ? xScale(x5(bar.data)) : Math.max((xScale(x5(bar.data)) || 0) - barWidth / 2);
        return {
          bar,
          key,
          index: j2,
          height: barHeight,
          width: barWidth,
          x: barX || 0,
          y: barY || 0,
          color: color3(barStack.key, j2)
        };
      })
    };
  });
  if (children2)
    return /* @__PURE__ */ react.createElement(react.Fragment, null, children2(barStacks));
  return /* @__PURE__ */ react.createElement(Group, {
    className: classnames("visx-bar-stack", className),
    top: top2,
    left: left2
  }, barStacks.map(function(barStack) {
    return barStack.bars.map(function(bar) {
      return /* @__PURE__ */ react.createElement(Bar, _extends$2({
        key: "bar-stack-" + barStack.index + "-" + bar.index,
        x: bar.x,
        y: bar.y,
        height: bar.height,
        width: bar.width,
        fill: bar.color
      }, restProps));
    });
  }));
}

// snowpack/pkg/common/Point-b58cb484.js
function coerceNumber(val) {
  if ((typeof val === "function" || typeof val === "object" && !!val) && "valueOf" in val) {
    var num = val.valueOf();
    if (typeof num === "number")
      return num;
  }
  return val;
}
function getTicks(scale, numTicks) {
  var s4 = scale;
  if ("ticks" in s4) {
    return s4.ticks(numTicks);
  }
  return s4.domain().filter(function(_2, index4, arr) {
    return numTicks == null || arr.length <= numTicks || index4 % Math.round((arr.length - 1) / numTicks) === 0;
  });
}
function _defineProperty(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var Point = /* @__PURE__ */ function() {
  function Point3(_ref) {
    var _ref$x = _ref.x, x5 = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y7 = _ref$y === void 0 ? 0 : _ref$y;
    _defineProperty(this, "x", 0);
    _defineProperty(this, "y", 0);
    this.x = x5;
    this.y = y7;
  }
  var _proto = Point3.prototype;
  _proto.value = function value2() {
    return {
      x: this.x,
      y: this.y
    };
  };
  _proto.toArray = function toArray2() {
    return [this.x, this.y];
  };
  return Point3;
}();

// snowpack/pkg/@visx/grid.js
var Line_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = Line5;
  var _react = _interopRequireDefault(react);
  var _classnames = _interopRequireDefault(classnames);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _extends13() {
    _extends13 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends13.apply(this, arguments);
  }
  function _objectWithoutPropertiesLoose11(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function Line5(_ref) {
    var _ref$from = _ref.from, from = _ref$from === void 0 ? {
      x: 0,
      y: 0
    } : _ref$from, _ref$to = _ref.to, to2 = _ref$to === void 0 ? {
      x: 1,
      y: 1
    } : _ref$to, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, className = _ref.className, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose11(_ref, ["from", "to", "fill", "className", "innerRef"]);
    var isRectilinear = from.x === to2.x || from.y === to2.y;
    return /* @__PURE__ */ _react.default.createElement("line", _extends13({
      ref: innerRef,
      className: (0, _classnames.default)("visx-line", className),
      x1: from.x,
      y1: from.y,
      x2: to2.x,
      y2: to2.y,
      fill,
      shapeRendering: isRectilinear ? "crispEdges" : "auto"
    }, restProps));
  }
});
var Line = /* @__PURE__ */ getDefaultExportFromCjs(Line_1);
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function GridRows(_ref) {
  var _ref$top = _ref.top, top2 = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left2 = _ref$left === void 0 ? 0 : _ref$left, scale = _ref.scale, width = _ref.width, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "#eaf0f6" : _ref$stroke, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth, strokeDasharray2 = _ref.strokeDasharray, className = _ref.className, children2 = _ref.children, _ref$numTicks = _ref.numTicks, numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks, lineStyle = _ref.lineStyle, offset = _ref.offset, tickValues = _ref.tickValues, restProps = _objectWithoutPropertiesLoose3(_ref, ["top", "left", "scale", "width", "stroke", "strokeWidth", "strokeDasharray", "className", "children", "numTicks", "lineStyle", "offset", "tickValues"]);
  var ticks4 = tickValues != null ? tickValues : getTicks(scale, numTicks);
  var tickLines = ticks4.map(function(d2) {
    var y7 = offset ? (coerceNumber(scale(d2)) || 0) + offset : coerceNumber(scale(d2)) || 0;
    return {
      from: new Point({
        x: 0,
        y: y7
      }),
      to: new Point({
        x: width,
        y: y7
      })
    };
  });
  return /* @__PURE__ */ react.createElement(Group, {
    className: classnames("visx-rows", className),
    top: top2,
    left: left2
  }, children2 ? children2({
    lines: tickLines
  }) : tickLines.map(function(_ref2, i) {
    var from = _ref2.from, to2 = _ref2.to;
    return /* @__PURE__ */ react.createElement(Line, _extends4({
      key: "row-line-" + i,
      from,
      to: to2,
      stroke,
      strokeWidth,
      strokeDasharray: strokeDasharray2,
      style: lineStyle
    }, restProps));
  }));
}
GridRows.propTypes = {
  tickValues: propTypes.array,
  width: propTypes.number.isRequired
};
function _extends$12() {
  _extends$12 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$12.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$12(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function GridColumns(_ref) {
  var _ref$top = _ref.top, top2 = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left2 = _ref$left === void 0 ? 0 : _ref$left, scale = _ref.scale, height = _ref.height, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "#eaf0f6" : _ref$stroke, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth, strokeDasharray2 = _ref.strokeDasharray, className = _ref.className, _ref$numTicks = _ref.numTicks, numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks, lineStyle = _ref.lineStyle, offset = _ref.offset, tickValues = _ref.tickValues, children2 = _ref.children, restProps = _objectWithoutPropertiesLoose$12(_ref, ["top", "left", "scale", "height", "stroke", "strokeWidth", "strokeDasharray", "className", "numTicks", "lineStyle", "offset", "tickValues", "children"]);
  var ticks4 = tickValues != null ? tickValues : getTicks(scale, numTicks);
  var tickLines = ticks4.map(function(d2) {
    var x5 = offset ? (coerceNumber(scale(d2)) || 0) + offset : coerceNumber(scale(d2)) || 0;
    return {
      from: new Point({
        x: x5,
        y: 0
      }),
      to: new Point({
        x: x5,
        y: height
      })
    };
  });
  return /* @__PURE__ */ react.createElement(Group, {
    className: classnames("visx-columns", className),
    top: top2,
    left: left2
  }, children2 ? children2({
    lines: tickLines
  }) : tickLines.map(function(_ref2, i) {
    var from = _ref2.from, to2 = _ref2.to;
    return /* @__PURE__ */ react.createElement(Line, _extends$12({
      key: "column-line-" + i,
      from,
      to: to2,
      stroke,
      strokeWidth,
      strokeDasharray: strokeDasharray2,
      style: lineStyle
    }, restProps));
  }));
}
GridColumns.propTypes = {
  tickValues: propTypes.array,
  height: propTypes.number.isRequired
};
function _extends$22() {
  _extends$22 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$22.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$22(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Grid(_ref) {
  var top2 = _ref.top, left2 = _ref.left, xScale = _ref.xScale, yScale = _ref.yScale, width = _ref.width, height = _ref.height, className = _ref.className, stroke = _ref.stroke, strokeWidth = _ref.strokeWidth, strokeDasharray2 = _ref.strokeDasharray, numTicksRows = _ref.numTicksRows, numTicksColumns = _ref.numTicksColumns, rowLineStyle = _ref.rowLineStyle, columnLineStyle = _ref.columnLineStyle, xOffset = _ref.xOffset, yOffset = _ref.yOffset, rowTickValues = _ref.rowTickValues, columnTickValues = _ref.columnTickValues, restProps = _objectWithoutPropertiesLoose$22(_ref, ["top", "left", "xScale", "yScale", "width", "height", "className", "stroke", "strokeWidth", "strokeDasharray", "numTicksRows", "numTicksColumns", "rowLineStyle", "columnLineStyle", "xOffset", "yOffset", "rowTickValues", "columnTickValues"]);
  return /* @__PURE__ */ react.createElement(Group, {
    className: classnames("visx-grid", className),
    top: top2,
    left: left2
  }, /* @__PURE__ */ react.createElement(GridRows, _extends$22({
    className,
    scale: yScale,
    width,
    stroke,
    strokeWidth,
    strokeDasharray: strokeDasharray2,
    numTicks: numTicksRows,
    lineStyle: rowLineStyle,
    offset: yOffset,
    tickValues: rowTickValues
  }, restProps)), /* @__PURE__ */ react.createElement(GridColumns, _extends$22({
    className,
    scale: xScale,
    height,
    stroke,
    strokeWidth,
    strokeDasharray: strokeDasharray2,
    numTicks: numTicksColumns,
    lineStyle: columnLineStyle,
    offset: xOffset,
    tickValues: columnTickValues
  }, restProps)));
}
Grid.propTypes = {
  rowTickValues: propTypes.array,
  columnTickValues: propTypes.array
};

// snowpack/pkg/common/memoize-af238e81.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear;
function eq(value2, other) {
  return value2 === other || value2 !== value2 && other !== other;
}
var eq_1 = eq;
function assocIndexOf(array5, key) {
  var length = array5.length;
  while (length--) {
    if (eq_1(array5[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data3 = this.__data__, index4 = _assocIndexOf(data3, key);
  if (index4 < 0) {
    return false;
  }
  var lastIndex = data3.length - 1;
  if (index4 == lastIndex) {
    data3.pop();
  } else {
    splice.call(data3, index4, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete;
function listCacheGet(key) {
  var data3 = this.__data__, index4 = _assocIndexOf(data3, key);
  return index4 < 0 ? void 0 : data3[index4][1];
}
var _listCacheGet = listCacheGet;
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas;
function listCacheSet(key, value2) {
  var data3 = this.__data__, index4 = _assocIndexOf(data3, key);
  if (index4 < 0) {
    ++this.size;
    data3.push([key, value2]);
  } else {
    data3[index4][1] = value2;
  }
  return this;
}
var _listCacheSet = listCacheSet;
function ListCache(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype["delete"] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;
var _ListCache = ListCache;
var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = _freeGlobal || freeSelf || Function("return this")();
var _root = root;
var Symbol2 = _root.Symbol;
var _Symbol = Symbol2;
var objectProto = Object.prototype;
var hasOwnProperty2 = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = _Symbol ? _Symbol.toStringTag : void 0;
function getRawTag(value2) {
  var isOwn = hasOwnProperty2.call(value2, symToStringTag), tag = value2[symToStringTag];
  try {
    value2[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e3) {
  }
  var result = nativeObjectToString.call(value2);
  if (unmasked) {
    if (isOwn) {
      value2[symToStringTag] = tag;
    } else {
      delete value2[symToStringTag];
    }
  }
  return result;
}
var _getRawTag = getRawTag;
var objectProto$1 = Object.prototype;
var nativeObjectToString$1 = objectProto$1.toString;
function objectToString(value2) {
  return nativeObjectToString$1.call(value2);
}
var _objectToString = objectToString;
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : void 0;
function baseGetTag(value2) {
  if (value2 == null) {
    return value2 === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag$1 && symToStringTag$1 in Object(value2) ? _getRawTag(value2) : _objectToString(value2);
}
var _baseGetTag = baseGetTag;
function isObject(value2) {
  var type3 = typeof value2;
  return value2 != null && (type3 == "object" || type3 == "function");
}
var isObject_1 = isObject;
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value2) {
  if (!isObject_1(value2)) {
    return false;
  }
  var tag = _baseGetTag(value2);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction;
var coreJsData = _root["__core-js_shared__"];
var _coreJsData = coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked;
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e3) {
    }
    try {
      return func + "";
    } catch (e3) {
    }
  }
  return "";
}
var _toSource = toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto$1 = Function.prototype;
var objectProto$2 = Object.prototype;
var funcToString$1 = funcProto$1.toString;
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
var reIsNative = RegExp("^" + funcToString$1.call(hasOwnProperty$1).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function baseIsNative(value2) {
  if (!isObject_1(value2) || _isMasked(value2)) {
    return false;
  }
  var pattern = isFunction_1(value2) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value2));
}
var _baseIsNative = baseIsNative;
function getValue(object2, key) {
  return object2 == null ? void 0 : object2[key];
}
var _getValue = getValue;
function getNative(object2, key) {
  var value2 = _getValue(object2, key);
  return _baseIsNative(value2) ? value2 : void 0;
}
var _getNative = getNative;
var Map2 = _getNative(_root, "Map");
var _Map = Map2;
var nativeCreate = _getNative(Object, "create");
var _nativeCreate = nativeCreate;
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}
var _hashClear = hashClear;
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto$3 = Object.prototype;
var hasOwnProperty$2 = objectProto$3.hasOwnProperty;
function hashGet(key) {
  var data3 = this.__data__;
  if (_nativeCreate) {
    var result = data3[key];
    return result === HASH_UNDEFINED ? void 0 : result;
  }
  return hasOwnProperty$2.call(data3, key) ? data3[key] : void 0;
}
var _hashGet = hashGet;
var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function hashHas(key) {
  var data3 = this.__data__;
  return _nativeCreate ? data3[key] !== void 0 : hasOwnProperty$3.call(data3, key);
}
var _hashHas = hashHas;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet(key, value2) {
  var data3 = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data3[key] = _nativeCreate && value2 === void 0 ? HASH_UNDEFINED$1 : value2;
  return this;
}
var _hashSet = hashSet;
function Hash(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = _hashClear;
Hash.prototype["delete"] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;
var _Hash = Hash;
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    hash: new _Hash(),
    map: new (_Map || _ListCache)(),
    string: new _Hash()
  };
}
var _mapCacheClear = mapCacheClear;
function isKeyable(value2) {
  var type3 = typeof value2;
  return type3 == "string" || type3 == "number" || type3 == "symbol" || type3 == "boolean" ? value2 !== "__proto__" : value2 === null;
}
var _isKeyable = isKeyable;
function getMapData(map7, key) {
  var data3 = map7.__data__;
  return _isKeyable(key) ? data3[typeof key == "string" ? "string" : "hash"] : data3.map;
}
var _getMapData = getMapData;
function mapCacheDelete(key) {
  var result = _getMapData(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete;
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}
var _mapCacheGet = mapCacheGet;
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}
var _mapCacheHas = mapCacheHas;
function mapCacheSet(key, value2) {
  var data3 = _getMapData(this, key), size = data3.size;
  data3.set(key, value2);
  this.size += data3.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet;
function MapCache(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype["delete"] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;
var _MapCache = MapCache;
var FUNC_ERROR_TEXT = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache)();
  return memoized;
}
memoize.Cache = _MapCache;
var memoize_1 = memoize;

// snowpack/pkg/@visx/axis.js
function toString(x5) {
  return x5 == null ? void 0 : x5.toString();
}
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Line2(_ref) {
  var _ref$from = _ref.from, from = _ref$from === void 0 ? {
    x: 0,
    y: 0
  } : _ref$from, _ref$to = _ref.to, to2 = _ref$to === void 0 ? {
    x: 1,
    y: 1
  } : _ref$to, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, className = _ref.className, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose4(_ref, ["from", "to", "fill", "className", "innerRef"]);
  var isRectilinear = from.x === to2.x || from.y === to2.y;
  return /* @__PURE__ */ react.createElement("line", _extends5({
    ref: innerRef,
    className: classnames("visx-line", className),
    x1: from.x,
    y1: from.y,
    x2: to2.x,
    y2: to2.y,
    fill,
    shapeRendering: isRectilinear ? "crispEdges" : "auto"
  }, restProps));
}
var balancedMatch = balanced;
function balanced(a3, b10, str) {
  if (a3 instanceof RegExp)
    a3 = maybeMatch(a3, str);
  if (b10 instanceof RegExp)
    b10 = maybeMatch(b10, str);
  var r3 = range(a3, b10, str);
  return r3 && {
    start: r3[0],
    end: r3[1],
    pre: str.slice(0, r3[0]),
    body: str.slice(r3[0] + a3.length, r3[1]),
    post: str.slice(r3[1] + b10.length)
  };
}
function maybeMatch(reg, str) {
  var m3 = str.match(reg);
  return m3 ? m3[0] : null;
}
balanced.range = range;
function range(a3, b10, str) {
  var begs, beg, left2, right2, result;
  var ai2 = str.indexOf(a3);
  var bi2 = str.indexOf(b10, ai2 + 1);
  var i = ai2;
  if (ai2 >= 0 && bi2 > 0) {
    begs = [];
    left2 = str.length;
    while (i >= 0 && !result) {
      if (i == ai2) {
        begs.push(i);
        ai2 = str.indexOf(a3, i + 1);
      } else if (begs.length == 1) {
        result = [begs.pop(), bi2];
      } else {
        beg = begs.pop();
        if (beg < left2) {
          left2 = beg;
          right2 = bi2;
        }
        bi2 = str.indexOf(b10, i + 1);
      }
      i = ai2 < bi2 && ai2 >= 0 ? ai2 : bi2;
    }
    if (begs.length) {
      result = [left2, right2];
    }
  }
  return result;
}
var balancedMatch$1 = balanced$1;
function balanced$1(a3, b10, str) {
  if (a3 instanceof RegExp)
    a3 = maybeMatch$1(a3, str);
  if (b10 instanceof RegExp)
    b10 = maybeMatch$1(b10, str);
  var r3 = range$1(a3, b10, str);
  return r3 && {
    start: r3[0],
    end: r3[1],
    pre: str.slice(0, r3[0]),
    body: str.slice(r3[0] + a3.length, r3[1]),
    post: str.slice(r3[1] + b10.length)
  };
}
function maybeMatch$1(reg, str) {
  var m3 = str.match(reg);
  return m3 ? m3[0] : null;
}
balanced$1.range = range$1;
function range$1(a3, b10, str) {
  var begs, beg, left2, right2, result;
  var ai2 = str.indexOf(a3);
  var bi2 = str.indexOf(b10, ai2 + 1);
  var i = ai2;
  if (ai2 >= 0 && bi2 > 0) {
    begs = [];
    left2 = str.length;
    while (i >= 0 && !result) {
      if (i == ai2) {
        begs.push(i);
        ai2 = str.indexOf(a3, i + 1);
      } else if (begs.length == 1) {
        result = [begs.pop(), bi2];
      } else {
        beg = begs.pop();
        if (beg < left2) {
          left2 = beg;
          right2 = bi2;
        }
        bi2 = str.indexOf(b10, i + 1);
      }
      i = ai2 < bi2 && ai2 >= 0 ? ai2 : bi2;
    }
    if (begs.length) {
      result = [left2, right2];
    }
  }
  return result;
}
var reduceFunctionCall_1 = reduceFunctionCall;
function reduceFunctionCall(string2, functionRE, callback) {
  var call2 = string2;
  return getFunctionCalls(string2, functionRE).reduce(function(string3, obj) {
    return string3.replace(obj.functionIdentifier + "(" + obj.matches.body + ")", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call2, functionRE));
  }, string2);
}
function getFunctionCalls(call2, functionRE) {
  var expressions = [];
  var fnRE = typeof functionRE === "string" ? new RegExp("\\b(" + functionRE + ")\\(") : functionRE;
  do {
    var searchMatch = fnRE.exec(call2);
    if (!searchMatch) {
      return expressions;
    }
    if (searchMatch[1] === void 0) {
      throw new Error("Missing the first couple of parenthesis to get the function identifier in " + functionRE);
    }
    var fn = searchMatch[1];
    var startIndex = searchMatch.index;
    var matches = balancedMatch$1("(", ")", call2.substring(startIndex));
    if (!matches || matches.start !== searchMatch[0].length - 1) {
      throw new SyntaxError(fn + "(): missing closing ')' in the value '" + call2 + "'");
    }
    expressions.push({matches, functionIdentifier: fn});
    call2 = matches.post;
  } while (fnRE.test(call2));
  return expressions;
}
function evalFunctionCall(string2, functionIdentifier, callback, call2, functionRE) {
  return callback(reduceFunctionCall(string2, functionRE, callback), functionIdentifier, call2);
}
var Mexp = function(parsed) {
  this.value = parsed;
};
Mexp.math = {
  isDegree: true,
  acos: function(x5) {
    return Mexp.math.isDegree ? 180 / Math.PI * Math.acos(x5) : Math.acos(x5);
  },
  add: function(a3, b10) {
    return a3 + b10;
  },
  asin: function(x5) {
    return Mexp.math.isDegree ? 180 / Math.PI * Math.asin(x5) : Math.asin(x5);
  },
  atan: function(x5) {
    return Mexp.math.isDegree ? 180 / Math.PI * Math.atan(x5) : Math.atan(x5);
  },
  acosh: function(x5) {
    return Math.log(x5 + Math.sqrt(x5 * x5 - 1));
  },
  asinh: function(x5) {
    return Math.log(x5 + Math.sqrt(x5 * x5 + 1));
  },
  atanh: function(x5) {
    return Math.log((1 + x5) / (1 - x5));
  },
  C: function(n3, r3) {
    var pro = 1;
    var other = n3 - r3;
    var choice = r3;
    if (choice < other) {
      choice = other;
      other = r3;
    }
    for (var i = choice + 1; i <= n3; i++) {
      pro *= i;
    }
    return pro / Mexp.math.fact(other);
  },
  changeSign: function(x5) {
    return -x5;
  },
  cos: function(x5) {
    if (Mexp.math.isDegree)
      x5 = Mexp.math.toRadian(x5);
    return Math.cos(x5);
  },
  cosh: function(x5) {
    return (Math.pow(Math.E, x5) + Math.pow(Math.E, -1 * x5)) / 2;
  },
  div: function(a3, b10) {
    return a3 / b10;
  },
  fact: function(n3) {
    if (n3 % 1 !== 0)
      return "NaN";
    var pro = 1;
    for (var i = 2; i <= n3; i++) {
      pro *= i;
    }
    return pro;
  },
  inverse: function(x5) {
    return 1 / x5;
  },
  log: function(i) {
    return Math.log(i) / Math.log(10);
  },
  mod: function(a3, b10) {
    return a3 % b10;
  },
  mul: function(a3, b10) {
    return a3 * b10;
  },
  P: function(n3, r3) {
    var pro = 1;
    for (var i = Math.floor(n3) - Math.floor(r3) + 1; i <= Math.floor(n3); i++) {
      pro *= i;
    }
    return pro;
  },
  Pi: function(low, high, ex) {
    var pro = 1;
    for (var i = low; i <= high; i++) {
      pro *= Number(ex.postfixEval({
        n: i
      }));
    }
    return pro;
  },
  pow10x: function(e3) {
    var x5 = 1;
    while (e3--) {
      x5 *= 10;
    }
    return x5;
  },
  sigma: function(low, high, ex) {
    var sum2 = 0;
    for (var i = low; i <= high; i++) {
      sum2 += Number(ex.postfixEval({
        n: i
      }));
    }
    return sum2;
  },
  sin: function(x5) {
    if (Mexp.math.isDegree)
      x5 = Mexp.math.toRadian(x5);
    return Math.sin(x5);
  },
  sinh: function(x5) {
    return (Math.pow(Math.E, x5) - Math.pow(Math.E, -1 * x5)) / 2;
  },
  sub: function(a3, b10) {
    return a3 - b10;
  },
  tan: function(x5) {
    if (Mexp.math.isDegree)
      x5 = Mexp.math.toRadian(x5);
    return Math.tan(x5);
  },
  tanh: function(x5) {
    return Mexp.sinha(x5) / Mexp.cosha(x5);
  },
  toRadian: function(x5) {
    return x5 * Math.PI / 180;
  }
};
Mexp.Exception = function(message) {
  this.message = message;
};
var math_function = Mexp;
function inc(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    arr[i] += val;
  }
  return arr;
}
var token = [
  "sin",
  "cos",
  "tan",
  "pi",
  "(",
  ")",
  "P",
  "C",
  " ",
  "asin",
  "acos",
  "atan",
  "7",
  "8",
  "9",
  "int",
  "cosh",
  "acosh",
  "ln",
  "^",
  "root",
  "4",
  "5",
  "6",
  "/",
  "!",
  "tanh",
  "atanh",
  "Mod",
  "1",
  "2",
  "3",
  "*",
  "sinh",
  "asinh",
  "e",
  "log",
  "0",
  ".",
  "+",
  "-",
  ",",
  "Sigma",
  "n",
  "Pi",
  "pow"
];
var show = [
  "sin",
  "cos",
  "tan",
  "&pi;",
  "(",
  ")",
  "P",
  "C",
  " ",
  "asin",
  "acos",
  "atan",
  "7",
  "8",
  "9",
  "Int",
  "cosh",
  "acosh",
  " ln",
  "^",
  "root",
  "4",
  "5",
  "6",
  "&divide;",
  "!",
  "tanh",
  "atanh",
  " Mod ",
  "1",
  "2",
  "3",
  "&times;",
  "sinh",
  "asinh",
  "e",
  " log",
  "0",
  ".",
  "+",
  "-",
  ",",
  "&Sigma;",
  "n",
  "&Pi;",
  "pow"
];
var eva = [
  math_function.math.sin,
  math_function.math.cos,
  math_function.math.tan,
  "PI",
  "(",
  ")",
  math_function.math.P,
  math_function.math.C,
  " ".anchor,
  math_function.math.asin,
  math_function.math.acos,
  math_function.math.atan,
  "7",
  "8",
  "9",
  Math.floor,
  math_function.math.cosh,
  math_function.math.acosh,
  Math.log,
  Math.pow,
  Math.sqrt,
  "4",
  "5",
  "6",
  math_function.math.div,
  math_function.math.fact,
  math_function.math.tanh,
  math_function.math.atanh,
  math_function.math.mod,
  "1",
  "2",
  "3",
  math_function.math.mul,
  math_function.math.sinh,
  math_function.math.asinh,
  "E",
  math_function.math.log,
  "0",
  ".",
  math_function.math.add,
  math_function.math.sub,
  ",",
  math_function.math.sigma,
  "n",
  math_function.math.Pi,
  Math.pow
];
var preced = {
  0: 11,
  1: 0,
  2: 3,
  3: 0,
  4: 0,
  5: 0,
  6: 0,
  7: 11,
  8: 11,
  9: 1,
  10: 10,
  11: 0,
  12: 11,
  13: 0,
  14: -1
};
var type = [
  0,
  0,
  0,
  3,
  4,
  5,
  10,
  10,
  14,
  0,
  0,
  0,
  1,
  1,
  1,
  0,
  0,
  0,
  0,
  10,
  0,
  1,
  1,
  1,
  2,
  7,
  0,
  0,
  2,
  1,
  1,
  1,
  2,
  0,
  0,
  3,
  0,
  1,
  6,
  9,
  9,
  11,
  12,
  13,
  12,
  8
];
var type0 = {
  0: true,
  1: true,
  3: true,
  4: true,
  6: true,
  8: true,
  9: true,
  12: true,
  13: true,
  14: true
};
var type1 = {
  0: true,
  1: true,
  2: true,
  3: true,
  4: true,
  5: true,
  6: true,
  7: true,
  8: true,
  9: true,
  10: true,
  11: true,
  12: true,
  13: true
};
var type1Asterick = {
  0: true,
  3: true,
  4: true,
  8: true,
  12: true,
  13: true
};
var empty = {};
var type3Asterick = {
  0: true,
  1: true,
  3: true,
  4: true,
  6: true,
  8: true,
  12: true,
  13: true
};
var type6 = {
  1: true
};
var newAr = [
  [],
  ["1", "2", "3", "7", "8", "9", "4", "5", "6", "+", "-", "*", "/", "(", ")", "^", "!", "P", "C", "e", "0", ".", ",", "n", " "],
  ["pi", "ln", "Pi"],
  ["sin", "cos", "tan", "Del", "int", "Mod", "log", "pow"],
  ["asin", "acos", "atan", "cosh", "root", "tanh", "sinh"],
  ["acosh", "atanh", "asinh", "Sigma"]
];
function match(str1, str2, i, x5) {
  for (var f3 = 0; f3 < x5; f3++) {
    if (str1[i + f3] !== str2[f3]) {
      return false;
    }
  }
  return true;
}
math_function.addToken = function(tokens) {
  for (var i = 0; i < tokens.length; i++) {
    var x5 = tokens[i].token.length;
    var temp2 = -1;
    newAr[x5] = newAr[x5] || [];
    for (var y7 = 0; y7 < newAr[x5].length; y7++) {
      if (tokens[i].token === newAr[x5][y7]) {
        temp2 = token.indexOf(newAr[x5][y7]);
        break;
      }
    }
    if (temp2 === -1) {
      token.push(tokens[i].token);
      type.push(tokens[i].type);
      if (newAr.length <= tokens[i].token.length) {
        newAr[tokens[i].token.length] = [];
      }
      newAr[tokens[i].token.length].push(tokens[i].token);
      eva.push(tokens[i].value);
      show.push(tokens[i].show);
    } else {
      token[temp2] = tokens[i].token;
      type[temp2] = tokens[i].type;
      eva[temp2] = tokens[i].value;
      show[temp2] = tokens[i].show;
    }
  }
};
function tokenize(string2) {
  var nodes = [];
  var length = string2.length;
  var key, x5, y7;
  for (var i = 0; i < length; i++) {
    if (i < length - 1 && string2[i] === " " && string2[i + 1] === " ") {
      continue;
    }
    key = "";
    for (x5 = string2.length - i > newAr.length - 2 ? newAr.length - 1 : string2.length - i; x5 > 0; x5--) {
      if (newAr[x5] === void 0)
        continue;
      for (y7 = 0; y7 < newAr[x5].length; y7++) {
        if (match(string2, newAr[x5][y7], i, x5)) {
          key = newAr[x5][y7];
          y7 = newAr[x5].length;
          x5 = 0;
        }
      }
    }
    i += key.length - 1;
    if (key === "") {
      throw new math_function.Exception("Can't understand after " + string2.slice(i));
    }
    var index4 = token.indexOf(key);
    nodes.push({
      index: index4,
      token: key,
      type: type[index4],
      eval: eva[index4],
      precedence: preced[type[index4]],
      show: show[index4]
    });
  }
  return nodes;
}
math_function.lex = function(inp, tokens) {
  var changeSignObj = {
    value: math_function.math.changeSign,
    type: 0,
    pre: 21,
    show: "-"
  };
  var closingParObj = {
    value: ")",
    show: ")",
    type: 5,
    pre: 0
  };
  var openingParObj = {
    value: "(",
    type: 4,
    pre: 0,
    show: "("
  };
  var str = [openingParObj];
  var ptc = [];
  var inpStr = inp;
  var allowed = type0;
  var bracToClose = 0;
  var asterick = empty;
  var prevKey = "";
  var i;
  if (typeof tokens !== "undefined") {
    math_function.addToken(tokens);
  }
  var obj = {};
  var nodes = tokenize(inpStr);
  for (i = 0; i < nodes.length; i++) {
    var node = nodes[i];
    if (node.type === 14) {
      if (i > 0 && i < nodes.length - 1 && nodes[i + 1].type === 1 && (nodes[i - 1].type === 1 || nodes[i - 1].type === 6))
        throw new math_function.Exception("Unexpected Space");
      continue;
    }
    node.index;
    var cToken = node.token;
    var cType = node.type;
    var cEv = node.eval;
    var cPre = node.precedence;
    var cShow = node.show;
    var pre = str[str.length - 1];
    var j2;
    for (j2 = ptc.length; j2--; ) {
      if (ptc[j2] === 0) {
        if ([0, 2, 3, 4, 5, 9, 11, 12, 13].indexOf(cType) !== -1) {
          if (allowed[cType] !== true) {
            console.log(inp, node, nodes, allowed);
            throw new math_function.Exception(cToken + " is not allowed after " + prevKey);
          }
          str.push(closingParObj);
          allowed = type1;
          asterick = type3Asterick;
          inc(ptc, -1).pop();
        }
      } else
        break;
    }
    if (allowed[cType] !== true) {
      throw new math_function.Exception(cToken + " is not allowed after " + prevKey);
    }
    if (asterick[cType] === true) {
      cType = 2;
      cEv = math_function.math.mul;
      cShow = "&times;";
      cPre = 3;
      i = i - cToken.length;
    }
    obj = {
      value: cEv,
      type: cType,
      pre: cPre,
      show: cShow
    };
    if (cType === 0) {
      allowed = type0;
      asterick = empty;
      inc(ptc, 2).push(2);
      str.push(obj);
      str.push(openingParObj);
    } else if (cType === 1) {
      if (pre.type === 1) {
        pre.value += cEv;
        inc(ptc, 1);
      } else {
        str.push(obj);
      }
      allowed = type1;
      asterick = type1Asterick;
    } else if (cType === 2) {
      allowed = type0;
      asterick = empty;
      inc(ptc, 2);
      str.push(obj);
    } else if (cType === 3) {
      str.push(obj);
      allowed = type1;
      asterick = type3Asterick;
    } else if (cType === 4) {
      inc(ptc, 1);
      bracToClose++;
      allowed = type0;
      asterick = empty;
      str.push(obj);
    } else if (cType === 5) {
      if (!bracToClose) {
        throw new math_function.Exception("Closing parenthesis are more than opening one, wait What!!!");
      }
      bracToClose--;
      allowed = type1;
      asterick = type3Asterick;
      str.push(obj);
      inc(ptc, 1);
    } else if (cType === 6) {
      if (pre.hasDec) {
        throw new math_function.Exception("Two decimals are not allowed in one number");
      }
      if (pre.type !== 1) {
        pre = {
          value: 0,
          type: 1,
          pre: 0
        };
        str.push(pre);
        inc(ptc, -1);
      }
      allowed = type6;
      inc(ptc, 1);
      asterick = empty;
      pre.value += cEv;
      pre.hasDec = true;
    } else if (cType === 7) {
      allowed = type1;
      asterick = type3Asterick;
      inc(ptc, 1);
      str.push(obj);
    }
    if (cType === 8) {
      allowed = type0;
      asterick = empty;
      inc(ptc, 4).push(4);
      str.push(obj);
      str.push(openingParObj);
    } else if (cType === 9) {
      if (pre.type === 9) {
        if (pre.value === math_function.math.add) {
          pre.value = cEv;
          pre.show = cShow;
          inc(ptc, 1);
        } else if (pre.value === math_function.math.sub && cShow === "-") {
          pre.value = math_function.math.add;
          pre.show = "+";
          inc(ptc, 1);
        }
      } else if (pre.type !== 5 && pre.type !== 7 && pre.type !== 1 && pre.type !== 3 && pre.type !== 13) {
        if (cToken === "-") {
          allowed = type0;
          asterick = empty;
          inc(ptc, 2).push(2);
          str.push(changeSignObj);
          str.push(openingParObj);
        }
      } else {
        str.push(obj);
        inc(ptc, 2);
      }
      allowed = type0;
      asterick = empty;
    } else if (cType === 10) {
      allowed = type0;
      asterick = empty;
      inc(ptc, 2);
      str.push(obj);
    } else if (cType === 11) {
      allowed = type0;
      asterick = empty;
      str.push(obj);
    } else if (cType === 12) {
      allowed = type0;
      asterick = empty;
      inc(ptc, 6).push(6);
      str.push(obj);
      str.push(openingParObj);
    } else if (cType === 13) {
      allowed = type1;
      asterick = type3Asterick;
      str.push(obj);
    }
    inc(ptc, -1);
    prevKey = cToken;
  }
  for (j2 = ptc.length; j2--; ) {
    if (ptc[j2] === 0) {
      str.push(closingParObj);
      inc(ptc, -1).pop();
    } else
      break;
  }
  if (allowed[5] !== true) {
    throw new math_function.Exception("complete the expression");
  }
  while (bracToClose--) {
    str.push(closingParObj);
  }
  str.push(closingParObj);
  return new math_function(str);
};
var lexer = math_function;
lexer.prototype.toPostfix = function() {
  var post = [], elem, popped, prep, pre, ele;
  var stack3 = [{value: "(", type: 4, pre: 0}];
  var arr = this.value;
  for (var i = 1; i < arr.length; i++) {
    if (arr[i].type === 1 || arr[i].type === 3 || arr[i].type === 13) {
      if (arr[i].type === 1)
        arr[i].value = Number(arr[i].value);
      post.push(arr[i]);
    } else if (arr[i].type === 4) {
      stack3.push(arr[i]);
    } else if (arr[i].type === 5) {
      while ((popped = stack3.pop()).type !== 4) {
        post.push(popped);
      }
    } else if (arr[i].type === 11) {
      while ((popped = stack3.pop()).type !== 4) {
        post.push(popped);
      }
      stack3.push(popped);
    } else {
      elem = arr[i];
      pre = elem.pre;
      ele = stack3[stack3.length - 1];
      prep = ele.pre;
      var flag = ele.value == "Math.pow" && elem.value == "Math.pow";
      if (pre > prep)
        stack3.push(elem);
      else {
        while (prep >= pre && !flag || flag && pre < prep) {
          popped = stack3.pop();
          ele = stack3[stack3.length - 1];
          post.push(popped);
          prep = ele.pre;
          flag = elem.value == "Math.pow" && ele.value == "Math.pow";
        }
        stack3.push(elem);
      }
    }
  }
  return new lexer(post);
};
var postfix = lexer;
postfix.prototype.postfixEval = function(UserDefined) {
  UserDefined = UserDefined || {};
  UserDefined.PI = Math.PI;
  UserDefined.E = Math.E;
  var stack3 = [], pop1, pop2, pop3;
  var arr = this.value;
  var bool = typeof UserDefined.n !== "undefined";
  for (var i = 0; i < arr.length; i++) {
    if (arr[i].type === 1) {
      stack3.push({value: arr[i].value, type: 1});
    } else if (arr[i].type === 3) {
      stack3.push({value: UserDefined[arr[i].value], type: 1});
    } else if (arr[i].type === 0) {
      if (typeof stack3[stack3.length - 1].type === "undefined") {
        stack3[stack3.length - 1].value.push(arr[i]);
      } else
        stack3[stack3.length - 1].value = arr[i].value(stack3[stack3.length - 1].value);
    } else if (arr[i].type === 7) {
      if (typeof stack3[stack3.length - 1].type === "undefined") {
        stack3[stack3.length - 1].value.push(arr[i]);
      } else
        stack3[stack3.length - 1].value = arr[i].value(stack3[stack3.length - 1].value);
    } else if (arr[i].type === 8) {
      pop1 = stack3.pop();
      pop2 = stack3.pop();
      stack3.push({type: 1, value: arr[i].value(pop2.value, pop1.value)});
    } else if (arr[i].type === 10) {
      pop1 = stack3.pop();
      pop2 = stack3.pop();
      if (typeof pop2.type === "undefined") {
        pop2.value = pop2.concat(pop1);
        pop2.value.push(arr[i]);
        stack3.push(pop2);
      } else if (typeof pop1.type === "undefined") {
        pop1.unshift(pop2);
        pop1.push(arr[i]);
        stack3.push(pop1);
      } else {
        stack3.push({type: 1, value: arr[i].value(pop2.value, pop1.value)});
      }
    } else if (arr[i].type === 2 || arr[i].type === 9) {
      pop1 = stack3.pop();
      pop2 = stack3.pop();
      if (typeof pop2.type === "undefined") {
        pop2 = pop2.concat(pop1);
        pop2.push(arr[i]);
        stack3.push(pop2);
      } else if (typeof pop1.type === "undefined") {
        pop1.unshift(pop2);
        pop1.push(arr[i]);
        stack3.push(pop1);
      } else {
        stack3.push({type: 1, value: arr[i].value(pop2.value, pop1.value)});
      }
    } else if (arr[i].type === 12) {
      pop1 = stack3.pop();
      if (typeof pop1.type !== "undefined") {
        pop1 = [pop1];
      }
      pop2 = stack3.pop();
      pop3 = stack3.pop();
      stack3.push({type: 1, value: arr[i].value(pop3.value, pop2.value, new postfix(pop1))});
    } else if (arr[i].type === 13) {
      if (bool) {
        stack3.push({value: UserDefined[arr[i].value], type: 3});
      } else
        stack3.push([arr[i]]);
    }
  }
  if (stack3.length > 1) {
    throw new postfix.Exception("Uncaught Syntax error");
  }
  return stack3[0].value > 1e15 ? "Infinity" : parseFloat(stack3[0].value.toFixed(15));
};
postfix.eval = function(str, tokens, obj) {
  if (typeof tokens === "undefined") {
    return this.lex(str).toPostfix().postfixEval();
  } else if (typeof obj === "undefined") {
    if (typeof tokens.length !== "undefined")
      return this.lex(str, tokens).toPostfix().postfixEval();
    else
      return this.lex(str).toPostfix().postfixEval(tokens);
  } else
    return this.lex(str, tokens).toPostfix().postfixEval(obj);
};
var postfix_evaluator = postfix;
postfix_evaluator.prototype.formulaEval = function() {
  var pop1, pop2, pop3;
  var disp = [];
  var arr = this.value;
  for (var i = 0; i < arr.length; i++) {
    if (arr[i].type === 1 || arr[i].type === 3) {
      disp.push({value: arr[i].type === 3 ? arr[i].show : arr[i].value, type: 1});
    } else if (arr[i].type === 13) {
      disp.push({value: arr[i].show, type: 1});
    } else if (arr[i].type === 0) {
      disp[disp.length - 1] = {value: arr[i].show + (arr[i].show != "-" ? "(" : "") + disp[disp.length - 1].value + (arr[i].show != "-" ? ")" : ""), type: 0};
    } else if (arr[i].type === 7) {
      disp[disp.length - 1] = {value: (disp[disp.length - 1].type != 1 ? "(" : "") + disp[disp.length - 1].value + (disp[disp.length - 1].type != 1 ? ")" : "") + arr[i].show, type: 7};
    } else if (arr[i].type === 10) {
      pop1 = disp.pop();
      pop2 = disp.pop();
      if (arr[i].show === "P" || arr[i].show === "C")
        disp.push({value: "<sup>" + pop2.value + "</sup>" + arr[i].show + "<sub>" + pop1.value + "</sub>", type: 10});
      else
        disp.push({value: (pop2.type != 1 ? "(" : "") + pop2.value + (pop2.type != 1 ? ")" : "") + "<sup>" + pop1.value + "</sup>", type: 1});
    } else if (arr[i].type === 2 || arr[i].type === 9) {
      pop1 = disp.pop();
      pop2 = disp.pop();
      disp.push({value: (pop2.type != 1 ? "(" : "") + pop2.value + (pop2.type != 1 ? ")" : "") + arr[i].show + (pop1.type != 1 ? "(" : "") + pop1.value + (pop1.type != 1 ? ")" : ""), type: arr[i].type});
    } else if (arr[i].type === 12) {
      pop1 = disp.pop();
      pop2 = disp.pop();
      pop3 = disp.pop();
      disp.push({value: arr[i].show + "(" + pop3.value + "," + pop2.value + "," + pop1.value + ")", type: 12});
    }
  }
  return disp[0].value;
};
var formula_evaluator = postfix_evaluator;
var MAX_STACK = 100;
var NESTED_CALC_RE = /(\+|\-|\*|\\|[^a-z]|)(\s*)(\()/g;
var stack;
var reduceCssCalc = reduceCSSCalc;
function reduceCSSCalc(value2, decimalPrecision) {
  stack = 0;
  decimalPrecision = Math.pow(10, decimalPrecision === void 0 ? 5 : decimalPrecision);
  value2 = value2.replace(/\n+/g, " ");
  function evaluateExpression(expression, functionIdentifier, call2) {
    if (stack++ > MAX_STACK) {
      stack = 0;
      throw new Error("Call stack overflow for " + call2);
    }
    if (expression === "") {
      throw new Error(functionIdentifier + "(): '" + call2 + "' must contain a non-whitespace string");
    }
    expression = evaluateNestedExpression(expression, call2);
    var units = getUnitsInExpression(expression);
    if (units.length > 1 || expression.indexOf("var(") > -1) {
      return functionIdentifier + "(" + expression + ")";
    }
    var unit5 = units[0] || "";
    if (unit5 === "%") {
      expression = expression.replace(/\b[0-9\.]+%/g, function(percent) {
        return parseFloat(percent.slice(0, -1)) * 0.01;
      });
    }
    var toEvaluate = expression.replace(new RegExp(unit5, "gi"), "");
    var result;
    try {
      result = formula_evaluator.eval(toEvaluate);
    } catch (e3) {
      return functionIdentifier + "(" + expression + ")";
    }
    if (unit5 === "%") {
      result *= 100;
    }
    if (functionIdentifier.length || unit5 === "%") {
      result = Math.round(result * decimalPrecision) / decimalPrecision;
    }
    result += unit5;
    return result;
  }
  function evaluateNestedExpression(expression, call2) {
    expression = expression.replace(/((?:\-[a-z]+\-)?calc)/g, "");
    var evaluatedPart = "";
    var nonEvaluatedPart = expression;
    var matches;
    while (matches = NESTED_CALC_RE.exec(nonEvaluatedPart)) {
      if (matches[0].index > 0) {
        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index);
      }
      var balancedExpr = balancedMatch("(", ")", nonEvaluatedPart.substring([0].index));
      if (balancedExpr.body === "") {
        throw new Error("'" + expression + "' must contain a non-whitespace string");
      }
      var evaluated = evaluateExpression(balancedExpr.body, "", call2);
      evaluatedPart += balancedExpr.pre + evaluated;
      nonEvaluatedPart = balancedExpr.post;
    }
    return evaluatedPart + nonEvaluatedPart;
  }
  return reduceFunctionCall_1(value2, /((?:\-[a-z]+\-)?calc)\(/, evaluateExpression);
}
function getUnitsInExpression(expression) {
  var uniqueUnits = [];
  var uniqueLowerCaseUnits = [];
  var unitRegEx = /[\.0-9]([%a-z]+)/gi;
  var matches = unitRegEx.exec(expression);
  while (matches) {
    if (!matches || !matches[1]) {
      continue;
    }
    if (uniqueLowerCaseUnits.indexOf(matches[1].toLowerCase()) === -1) {
      uniqueUnits.push(matches[1]);
      uniqueLowerCaseUnits.push(matches[1].toLowerCase());
    }
    matches = unitRegEx.exec(expression);
  }
  return uniqueUnits;
}
var MEASUREMENT_ELEMENT_ID = "__react_svg_text_measurement_id";
function getStringWidth(str, style) {
  try {
    var textEl = document.getElementById(MEASUREMENT_ELEMENT_ID);
    if (!textEl) {
      var svg2 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
      svg2.style.width = "0";
      svg2.style.height = "0";
      svg2.style.position = "absolute";
      svg2.style.top = "-100%";
      svg2.style.left = "-100%";
      textEl = document.createElementNS("http://www.w3.org/2000/svg", "text");
      textEl.setAttribute("id", MEASUREMENT_ELEMENT_ID);
      svg2.appendChild(textEl);
      document.body.appendChild(svg2);
    }
    Object.assign(textEl.style, style);
    textEl.textContent = str;
    return textEl.getComputedTextLength();
  } catch (e3) {
    return null;
  }
}
var getStringWidth$1 = memoize_1(getStringWidth, function(str, style) {
  return str + "_" + JSON.stringify(style);
});
function _objectWithoutPropertiesLoose$13(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function isNumber(val) {
  return typeof val === "number";
}
function isXOrYInValid(xOrY) {
  return typeof xOrY === "number" && Number.isFinite(xOrY) || typeof xOrY === "string";
}
function useText(props) {
  var _props$verticalAnchor = props.verticalAnchor, verticalAnchor = _props$verticalAnchor === void 0 ? "end" : _props$verticalAnchor, _props$scaleToFit = props.scaleToFit, scaleToFit = _props$scaleToFit === void 0 ? false : _props$scaleToFit, angle = props.angle, width = props.width, _props$lineHeight = props.lineHeight, lineHeight = _props$lineHeight === void 0 ? "1em" : _props$lineHeight, _props$capHeight = props.capHeight, capHeight = _props$capHeight === void 0 ? "0.71em" : _props$capHeight, children2 = props.children, style = props.style, textProps2 = _objectWithoutPropertiesLoose$13(props, ["verticalAnchor", "scaleToFit", "angle", "width", "lineHeight", "capHeight", "children", "style"]);
  var _textProps$x = textProps2.x, x5 = _textProps$x === void 0 ? 0 : _textProps$x, _textProps$y = textProps2.y, y7 = _textProps$y === void 0 ? 0 : _textProps$y;
  var isXOrYNotValid = !isXOrYInValid(x5) || !isXOrYInValid(y7);
  var _useMemo = react.useMemo(function() {
    var words = children2 == null ? [] : children2.toString().split(/(?:(?!\u00A0+)\s+)/);
    return {
      wordsWithWidth: words.map(function(word) {
        return {
          word,
          wordWidth: getStringWidth$1(word, style) || 0
        };
      }),
      spaceWidth: getStringWidth$1("\xA0", style) || 0
    };
  }, [children2, style]), wordsWithWidth = _useMemo.wordsWithWidth, spaceWidth = _useMemo.spaceWidth;
  var wordsByLines = react.useMemo(function() {
    if (isXOrYNotValid) {
      return [];
    }
    if (width || scaleToFit) {
      return wordsWithWidth.reduce(function(result, _ref) {
        var word = _ref.word, wordWidth = _ref.wordWidth;
        var currentLine = result[result.length - 1];
        if (currentLine && (width == null || scaleToFit || (currentLine.width || 0) + wordWidth + spaceWidth < width)) {
          currentLine.words.push(word);
          currentLine.width = currentLine.width || 0;
          currentLine.width += wordWidth + spaceWidth;
        } else {
          var newLine = {
            words: [word],
            width: wordWidth
          };
          result.push(newLine);
        }
        return result;
      }, []);
    }
    return [{
      words: children2 == null ? [] : children2.toString().split(/(?:(?!\u00A0+)\s+)/)
    }];
  }, [isXOrYNotValid, width, scaleToFit, children2, wordsWithWidth, spaceWidth]);
  var startDy = react.useMemo(function() {
    var startDyStr = isXOrYNotValid ? "" : verticalAnchor === "start" ? reduceCssCalc("calc(" + capHeight + ")") : verticalAnchor === "middle" ? reduceCssCalc("calc(" + (wordsByLines.length - 1) / 2 + " * -" + lineHeight + " + (" + capHeight + " / 2))") : reduceCssCalc("calc(" + (wordsByLines.length - 1) + " * -" + lineHeight + ")");
    return startDyStr;
  }, [isXOrYNotValid, verticalAnchor, capHeight, wordsByLines.length, lineHeight]);
  var transform = react.useMemo(function() {
    var transforms = [];
    if (isXOrYNotValid) {
      return "";
    }
    if (isNumber(x5) && isNumber(y7) && isNumber(width) && scaleToFit && wordsByLines.length > 0) {
      var lineWidth = wordsByLines[0].width || 1;
      var sx = width / lineWidth;
      var sy = sx;
      var originX = x5 - sx * x5;
      var originY = y7 - sy * y7;
      transforms.push("matrix(" + sx + ", 0, 0, " + sy + ", " + originX + ", " + originY + ")");
    }
    if (angle) {
      transforms.push("rotate(" + angle + ", " + x5 + ", " + y7 + ")");
    }
    return transforms.length > 0 ? transforms.join(" ") : "";
  }, [isXOrYNotValid, x5, y7, width, scaleToFit, wordsByLines, angle]);
  return {
    wordsByLines,
    startDy,
    transform
  };
}
function _extends$13() {
  _extends$13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$13.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$23(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SVG_STYLE = {
  overflow: "visible"
};
function Text(props) {
  var _props$dx = props.dx, dx = _props$dx === void 0 ? 0 : _props$dx, _props$dy = props.dy, dy = _props$dy === void 0 ? 0 : _props$dy, _props$textAnchor = props.textAnchor, textAnchor = _props$textAnchor === void 0 ? "start" : _props$textAnchor, innerRef = props.innerRef;
  props.verticalAnchor;
  props.angle;
  var _props$lineHeight = props.lineHeight, lineHeight = _props$lineHeight === void 0 ? "1em" : _props$lineHeight;
  props.scaleToFit;
  props.capHeight;
  props.width;
  var textProps2 = _objectWithoutPropertiesLoose$23(props, ["dx", "dy", "textAnchor", "innerRef", "verticalAnchor", "angle", "lineHeight", "scaleToFit", "capHeight", "width"]);
  var _textProps$x = textProps2.x, x5 = _textProps$x === void 0 ? 0 : _textProps$x, fontSize2 = textProps2.fontSize;
  var _useText = useText(props), wordsByLines = _useText.wordsByLines, startDy = _useText.startDy, transform = _useText.transform;
  return /* @__PURE__ */ react.createElement("svg", {
    ref: innerRef,
    x: dx,
    y: dy,
    fontSize: fontSize2,
    style: SVG_STYLE
  }, wordsByLines.length > 0 ? /* @__PURE__ */ react.createElement("text", _extends$13({
    transform
  }, textProps2, {
    textAnchor
  }), wordsByLines.map(function(line2, index4) {
    return /* @__PURE__ */ react.createElement("tspan", {
      key: index4,
      x: x5,
      dy: index4 === 0 ? startDy : lineHeight
    }, line2.words.join(" "));
  })) : null);
}
var Orientation = {
  top: "top",
  left: "left",
  right: "right",
  bottom: "bottom"
};
function getLabelTransform(_ref) {
  var labelOffset = _ref.labelOffset, labelProps = _ref.labelProps, orientation = _ref.orientation, range7 = _ref.range, tickLabelFontSize = _ref.tickLabelFontSize, tickLength = _ref.tickLength;
  var sign5 = orientation === Orientation.left || orientation === Orientation.top ? -1 : 1;
  var x5;
  var y7;
  var transform;
  if (orientation === Orientation.top || orientation === Orientation.bottom) {
    var yBottomOffset = orientation === Orientation.bottom && typeof labelProps.fontSize === "number" ? labelProps.fontSize : 0;
    x5 = (Number(range7[0]) + Number(range7[range7.length - 1])) / 2;
    y7 = sign5 * (tickLength + labelOffset + tickLabelFontSize + yBottomOffset);
  } else {
    x5 = sign5 * ((Number(range7[0]) + Number(range7[range7.length - 1])) / 2);
    y7 = -(tickLength + labelOffset);
    transform = "rotate(" + sign5 * 90 + ")";
  }
  return {
    x: x5,
    y: y7,
    transform
  };
}
function _extends$23() {
  _extends$23 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$23.apply(this, arguments);
}
function Ticks(_ref) {
  var hideTicks = _ref.hideTicks, horizontal = _ref.horizontal, orientation = _ref.orientation, tickClassName = _ref.tickClassName, tickComponent = _ref.tickComponent, allTickLabelProps = _ref.tickLabelProps, _ref$tickStroke = _ref.tickStroke, tickStroke = _ref$tickStroke === void 0 ? "#222" : _ref$tickStroke, tickTransform = _ref.tickTransform, ticks4 = _ref.ticks;
  return ticks4.map(function(_ref2) {
    var _allTickLabelProps$in;
    var value2 = _ref2.value, index4 = _ref2.index, from = _ref2.from, to2 = _ref2.to, formattedValue = _ref2.formattedValue;
    var tickLabelProps = (_allTickLabelProps$in = allTickLabelProps[index4]) != null ? _allTickLabelProps$in : {};
    var tickLabelFontSize = Math.max(10, typeof tickLabelProps.fontSize === "number" && tickLabelProps.fontSize || 0);
    var tickYCoord = to2.y + (horizontal && orientation !== Orientation.top ? tickLabelFontSize : 0);
    return /* @__PURE__ */ react.createElement(Group, {
      key: "visx-tick-" + value2 + "-" + index4,
      className: classnames("visx-axis-tick", tickClassName),
      transform: tickTransform
    }, !hideTicks && /* @__PURE__ */ react.createElement(Line2, {
      from,
      to: to2,
      stroke: tickStroke,
      strokeLinecap: "square"
    }), tickComponent ? tickComponent(_extends$23({}, tickLabelProps, {
      x: to2.x,
      y: tickYCoord,
      formattedValue
    })) : /* @__PURE__ */ react.createElement(Text, _extends$23({
      x: to2.x,
      y: tickYCoord
    }, tickLabelProps), formattedValue));
  });
}
function _extends$3() {
  _extends$3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
var defaultTextProps = {
  textAnchor: "middle",
  fontFamily: "Arial",
  fontSize: 10,
  fill: "#222"
};
function AxisRenderer(_ref) {
  var axisFromPoint = _ref.axisFromPoint, axisLineClassName = _ref.axisLineClassName, axisToPoint = _ref.axisToPoint, hideAxisLine = _ref.hideAxisLine, hideTicks = _ref.hideTicks, horizontal = _ref.horizontal, _ref$label = _ref.label, label = _ref$label === void 0 ? "" : _ref$label, labelClassName = _ref.labelClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset, _ref$labelProps = _ref.labelProps, labelProps = _ref$labelProps === void 0 ? defaultTextProps : _ref$labelProps, _ref$orientation = _ref.orientation, orientation = _ref$orientation === void 0 ? Orientation.bottom : _ref$orientation, scale = _ref.scale, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "#222" : _ref$stroke, strokeDasharray2 = _ref.strokeDasharray, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth, tickClassName = _ref.tickClassName, tickComponent = _ref.tickComponent, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? function() {
    return defaultTextProps;
  } : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, _ref$tickStroke = _ref.tickStroke, tickStroke = _ref$tickStroke === void 0 ? "#222" : _ref$tickStroke, tickTransform = _ref.tickTransform, ticks4 = _ref.ticks, _ref$ticksComponent = _ref.ticksComponent, ticksComponent = _ref$ticksComponent === void 0 ? Ticks : _ref$ticksComponent;
  var allTickLabelProps = ticks4.map(function(_ref2) {
    var value2 = _ref2.value, index4 = _ref2.index;
    return tickLabelProps(value2, index4);
  });
  var maxTickLabelFontSize = Math.max.apply(Math, [10].concat(allTickLabelProps.map(function(props) {
    return typeof props.fontSize === "number" ? props.fontSize : 0;
  })));
  return /* @__PURE__ */ react.createElement(react.Fragment, null, ticksComponent({
    hideTicks,
    horizontal,
    orientation,
    scale,
    tickClassName,
    tickComponent,
    tickLabelProps: allTickLabelProps,
    tickStroke,
    tickTransform,
    ticks: ticks4
  }), !hideAxisLine && /* @__PURE__ */ react.createElement(Line2, {
    className: classnames("visx-axis-line", axisLineClassName),
    from: axisFromPoint,
    to: axisToPoint,
    stroke,
    strokeWidth,
    strokeDasharray: strokeDasharray2
  }), label && /* @__PURE__ */ react.createElement(Text, _extends$3({
    className: classnames("visx-axis-label", labelClassName)
  }, getLabelTransform({
    labelOffset,
    labelProps,
    orientation,
    range: scale.range(),
    tickLabelFontSize: maxTickLabelFontSize,
    tickLength
  }), labelProps), label));
}
function getTickPosition(scale, align) {
  if (align === void 0) {
    align = "center";
  }
  var s4 = scale;
  if (align !== "start" && "bandwidth" in s4) {
    var offset = s4.bandwidth();
    if (align === "center")
      offset /= 2;
    if (s4.round())
      offset = Math.round(offset);
    return function(d2) {
      var scaledValue = s4(d2);
      return typeof scaledValue === "number" ? scaledValue + offset : scaledValue;
    };
  }
  return scale;
}
function getTickFormatter(scale) {
  var s4 = scale;
  if ("tickFormat" in s4) {
    return s4.tickFormat();
  }
  return toString;
}
function createPoint(_ref, horizontal) {
  var x5 = _ref.x, y7 = _ref.y;
  return new Point(horizontal ? {
    x: x5,
    y: y7
  } : {
    x: y7,
    y: x5
  });
}
function _extends$4() {
  _extends$4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Axis(_ref) {
  var _ref$children = _ref.children, children2 = _ref$children === void 0 ? AxisRenderer : _ref$children, axisClassName = _ref.axisClassName, _ref$hideAxisLine = _ref.hideAxisLine, hideAxisLine = _ref$hideAxisLine === void 0 ? false : _ref$hideAxisLine, _ref$hideTicks = _ref.hideTicks, hideTicks = _ref$hideTicks === void 0 ? false : _ref$hideTicks, _ref$hideZero = _ref.hideZero, hideZero = _ref$hideZero === void 0 ? false : _ref$hideZero, _ref$left = _ref.left, left2 = _ref$left === void 0 ? 0 : _ref$left, _ref$numTicks = _ref.numTicks, numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks, _ref$orientation = _ref.orientation, orientation = _ref$orientation === void 0 ? Orientation.bottom : _ref$orientation, _ref$rangePadding = _ref.rangePadding, rangePadding = _ref$rangePadding === void 0 ? 0 : _ref$rangePadding, scale = _ref.scale, tickFormat4 = _ref.tickFormat, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, tickValues = _ref.tickValues, _ref$top = _ref.top, top2 = _ref$top === void 0 ? 0 : _ref$top, restProps = _objectWithoutPropertiesLoose$3(_ref, ["children", "axisClassName", "hideAxisLine", "hideTicks", "hideZero", "left", "numTicks", "orientation", "rangePadding", "scale", "tickFormat", "tickLength", "tickValues", "top"]);
  var format6 = tickFormat4 != null ? tickFormat4 : getTickFormatter(scale);
  var isLeft = orientation === Orientation.left;
  var isTop = orientation === Orientation.top;
  var horizontal = isTop || orientation === Orientation.bottom;
  var tickPosition = getTickPosition(scale);
  var tickSign = isLeft || isTop ? -1 : 1;
  var range7 = scale.range();
  var axisFromPoint = createPoint({
    x: Number(range7[0]) + 0.5 - rangePadding,
    y: 0
  }, horizontal);
  var axisToPoint = createPoint({
    x: Number(range7[range7.length - 1]) + 0.5 + rangePadding,
    y: 0
  }, horizontal);
  var filteredTickValues = (tickValues != null ? tickValues : getTicks(scale, numTicks)).filter(function(value2) {
    return !hideZero || value2 !== 0 && value2 !== "0";
  }).map(function(value2, index4) {
    return {
      value: value2,
      index: index4
    };
  });
  var ticks4 = filteredTickValues.map(function(_ref2) {
    var value2 = _ref2.value, index4 = _ref2.index;
    var scaledValue = coerceNumber(tickPosition(value2));
    return {
      value: value2,
      index: index4,
      from: createPoint({
        x: scaledValue,
        y: 0
      }, horizontal),
      to: createPoint({
        x: scaledValue,
        y: tickLength * tickSign
      }, horizontal),
      formattedValue: format6(value2, index4, filteredTickValues)
    };
  });
  return /* @__PURE__ */ react.createElement(Group, {
    className: classnames("visx-axis", axisClassName),
    top: top2,
    left: left2
  }, children2(_extends$4({}, restProps, {
    axisFromPoint,
    axisToPoint,
    hideAxisLine,
    hideTicks,
    hideZero,
    horizontal,
    numTicks,
    orientation,
    rangePadding,
    scale,
    tickFormat: format6,
    tickLength,
    tickPosition,
    tickSign,
    ticks: ticks4
  })));
}
function _extends$5() {
  _extends$5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$5.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var leftTickLabelProps = function leftTickLabelProps2() {
  return {
    dx: "-0.25em",
    dy: "0.25em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "end"
  };
};
function AxisLeft(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 36 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? leftTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose$4(_ref, ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"]);
  return /* @__PURE__ */ react.createElement(Axis, _extends$5({
    axisClassName: classnames("visx-axis-left", axisClassName),
    labelOffset,
    orientation: Orientation.left,
    tickLabelProps,
    tickLength
  }, restProps));
}
function _extends$6() {
  _extends$6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$6.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var bottomTickLabelProps = function bottomTickLabelProps2() {
  return {
    dy: "0.25em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "middle"
  };
};
function AxisBottom(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 8 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? bottomTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose$5(_ref, ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"]);
  return /* @__PURE__ */ react.createElement(Axis, _extends$6({
    axisClassName: classnames("visx-axis-bottom", axisClassName),
    labelOffset,
    orientation: Orientation.bottom,
    tickLabelProps,
    tickLength
  }, restProps));
}

// snowpack/pkg/common/utcYear-88153cbb.js
var t0 = new Date();
var t1 = new Date();
function newInterval(floori, offseti, count2, field) {
  function interval3(date6) {
    return floori(date6 = arguments.length === 0 ? new Date() : new Date(+date6)), date6;
  }
  interval3.floor = function(date6) {
    return floori(date6 = new Date(+date6)), date6;
  };
  interval3.ceil = function(date6) {
    return floori(date6 = new Date(date6 - 1)), offseti(date6, 1), floori(date6), date6;
  };
  interval3.round = function(date6) {
    var d0 = interval3(date6), d1 = interval3.ceil(date6);
    return date6 - d0 < d1 - date6 ? d0 : d1;
  };
  interval3.offset = function(date6, step) {
    return offseti(date6 = new Date(+date6), step == null ? 1 : Math.floor(step)), date6;
  };
  interval3.range = function(start2, stop, step) {
    var range7 = [], previous;
    start2 = interval3.ceil(start2);
    step = step == null ? 1 : Math.floor(step);
    if (!(start2 < stop) || !(step > 0))
      return range7;
    do
      range7.push(previous = new Date(+start2)), offseti(start2, step), floori(start2);
    while (previous < start2 && start2 < stop);
    return range7;
  };
  interval3.filter = function(test) {
    return newInterval(function(date6) {
      if (date6 >= date6)
        while (floori(date6), !test(date6))
          date6.setTime(date6 - 1);
    }, function(date6, step) {
      if (date6 >= date6) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date6, -1), !test(date6)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date6, 1), !test(date6)) {
            }
          }
      }
    });
  };
  if (count2) {
    interval3.count = function(start2, end) {
      t0.setTime(+start2), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count2(t0, t1));
    };
    interval3.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval3 : interval3.filter(field ? function(d2) {
        return field(d2) % step === 0;
      } : function(d2) {
        return interval3.count(0, d2) % step === 0;
      });
    };
  }
  return interval3;
}
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;
var day = newInterval(function(date6) {
  date6.setHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setDate(date6.getDate() + step);
}, function(start2, end) {
  return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationDay;
}, function(date6) {
  return date6.getDate() - 1;
});
function weekday(i) {
  return newInterval(function(date6) {
    date6.setDate(date6.getDate() - (date6.getDay() + 7 - i) % 7);
    date6.setHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setDate(date6.getDate() + step * 7);
  }, function(start2, end) {
    return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var year = newInterval(function(date6) {
  date6.setMonth(0, 1);
  date6.setHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setFullYear(date6.getFullYear() + step);
}, function(start2, end) {
  return end.getFullYear() - start2.getFullYear();
}, function(date6) {
  return date6.getFullYear();
});
year.every = function(k6) {
  return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval(function(date6) {
    date6.setFullYear(Math.floor(date6.getFullYear() / k6) * k6);
    date6.setMonth(0, 1);
    date6.setHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setFullYear(date6.getFullYear() + step * k6);
  });
};
var utcDay = newInterval(function(date6) {
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCDate(date6.getUTCDate() + step);
}, function(start2, end) {
  return (end - start2) / durationDay;
}, function(date6) {
  return date6.getUTCDate() - 1;
});
function utcWeekday(i) {
  return newInterval(function(date6) {
    date6.setUTCDate(date6.getUTCDate() - (date6.getUTCDay() + 7 - i) % 7);
    date6.setUTCHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setUTCDate(date6.getUTCDate() + step * 7);
  }, function(start2, end) {
    return (end - start2) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcYear = newInterval(function(date6) {
  date6.setUTCMonth(0, 1);
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCFullYear(date6.getUTCFullYear() + step);
}, function(start2, end) {
  return end.getUTCFullYear() - start2.getUTCFullYear();
}, function(date6) {
  return date6.getUTCFullYear();
});
utcYear.every = function(k6) {
  return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval(function(date6) {
    date6.setUTCFullYear(Math.floor(date6.getUTCFullYear() / k6) * k6);
    date6.setUTCMonth(0, 1);
    date6.setUTCHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setUTCFullYear(date6.getUTCFullYear() + step * k6);
  });
};

// snowpack/pkg/common/utcMonth-4ccdc574.js
function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*";
var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
var reHex = /^#([0-9a-f]{3,8})$/;
var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format6) {
  var m3, l3;
  format6 = (format6 + "").trim().toLowerCase();
  return (m3 = reHex.exec(format6)) ? (l3 = m3[1].length, m3 = parseInt(m3[1], 16), l3 === 6 ? rgbn(m3) : l3 === 3 ? new Rgb(m3 >> 8 & 15 | m3 >> 4 & 240, m3 >> 4 & 15 | m3 & 240, (m3 & 15) << 4 | m3 & 15, 1) : l3 === 8 ? rgba(m3 >> 24 & 255, m3 >> 16 & 255, m3 >> 8 & 255, (m3 & 255) / 255) : l3 === 4 ? rgba(m3 >> 12 & 15 | m3 >> 8 & 240, m3 >> 8 & 15 | m3 >> 4 & 240, m3 >> 4 & 15 | m3 & 240, ((m3 & 15) << 4 | m3 & 15) / 255) : null) : (m3 = reRgbInteger.exec(format6)) ? new Rgb(m3[1], m3[2], m3[3], 1) : (m3 = reRgbPercent.exec(format6)) ? new Rgb(m3[1] * 255 / 100, m3[2] * 255 / 100, m3[3] * 255 / 100, 1) : (m3 = reRgbaInteger.exec(format6)) ? rgba(m3[1], m3[2], m3[3], m3[4]) : (m3 = reRgbaPercent.exec(format6)) ? rgba(m3[1] * 255 / 100, m3[2] * 255 / 100, m3[3] * 255 / 100, m3[4]) : (m3 = reHslPercent.exec(format6)) ? hsla(m3[1], m3[2] / 100, m3[3] / 100, 1) : (m3 = reHslaPercent.exec(format6)) ? hsla(m3[1], m3[2] / 100, m3[3] / 100, m3[4]) : named.hasOwnProperty(format6) ? rgbn(named[format6]) : format6 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n3) {
  return new Rgb(n3 >> 16 & 255, n3 >> 8 & 255, n3 & 255, 1);
}
function rgba(r3, g2, b10, a3) {
  if (a3 <= 0)
    r3 = g2 = b10 = NaN;
  return new Rgb(r3, g2, b10, a3);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r3, g2, b10, opacity) {
  return arguments.length === 1 ? rgbConvert(r3) : new Rgb(r3, g2, b10, opacity == null ? 1 : opacity);
}
function Rgb(r3, g2, b10, opacity) {
  this.r = +r3;
  this.g = +g2;
  this.b = +b10;
  this.opacity = +opacity;
}
define(Rgb, rgb, extend(Color, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter : Math.pow(brighter, k6);
    return new Rgb(this.r * k6, this.g * k6, this.b * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker : Math.pow(darker, k6);
    return new Rgb(this.r * k6, this.g * k6, this.b * k6, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex,
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));
function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
  var a3 = this.opacity;
  a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
  return (a3 === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a3 === 1 ? ")" : ", " + a3 + ")");
}
function hex(value2) {
  value2 = Math.max(0, Math.min(255, Math.round(value2) || 0));
  return (value2 < 16 ? "0" : "") + value2.toString(16);
}
function hsla(h2, s4, l3, a3) {
  if (a3 <= 0)
    h2 = s4 = l3 = NaN;
  else if (l3 <= 0 || l3 >= 1)
    h2 = s4 = NaN;
  else if (s4 <= 0)
    h2 = NaN;
  return new Hsl(h2, s4, l3, a3);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r3 = o.r / 255, g2 = o.g / 255, b10 = o.b / 255, min5 = Math.min(r3, g2, b10), max6 = Math.max(r3, g2, b10), h2 = NaN, s4 = max6 - min5, l3 = (max6 + min5) / 2;
  if (s4) {
    if (r3 === max6)
      h2 = (g2 - b10) / s4 + (g2 < b10) * 6;
    else if (g2 === max6)
      h2 = (b10 - r3) / s4 + 2;
    else
      h2 = (r3 - g2) / s4 + 4;
    s4 /= l3 < 0.5 ? max6 + min5 : 2 - max6 - min5;
    h2 *= 60;
  } else {
    s4 = l3 > 0 && l3 < 1 ? 0 : h2;
  }
  return new Hsl(h2, s4, l3, o.opacity);
}
function hsl(h2, s4, l3, opacity) {
  return arguments.length === 1 ? hslConvert(h2) : new Hsl(h2, s4, l3, opacity == null ? 1 : opacity);
}
function Hsl(h2, s4, l3, opacity) {
  this.h = +h2;
  this.s = +s4;
  this.l = +l3;
  this.opacity = +opacity;
}
define(Hsl, hsl, extend(Color, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter : Math.pow(brighter, k6);
    return new Hsl(this.h, this.s, this.l * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker : Math.pow(darker, k6);
    return new Hsl(this.h, this.s, this.l * k6, this.opacity);
  },
  rgb: function() {
    var h2 = this.h % 360 + (this.h < 0) * 360, s4 = isNaN(h2) || isNaN(this.s) ? 0 : this.s, l3 = this.l, m22 = l3 + (l3 < 0.5 ? l3 : 1 - l3) * s4, m1 = 2 * l3 - m22;
    return new Rgb(hsl2rgb(h2 >= 240 ? h2 - 240 : h2 + 120, m1, m22), hsl2rgb(h2, m1, m22), hsl2rgb(h2 < 120 ? h2 + 240 : h2 - 120, m1, m22), this.opacity);
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a3 = this.opacity;
    a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
    return (a3 === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a3 === 1 ? ")" : ", " + a3 + ")");
  }
}));
function hsl2rgb(h2, m1, m22) {
  return (h2 < 60 ? m1 + (m22 - m1) * h2 / 60 : h2 < 180 ? m22 : h2 < 240 ? m1 + (m22 - m1) * (240 - h2) / 60 : m1) * 255;
}
function basis(t14, v0, v1, v22, v3) {
  var t23 = t14 * t14, t33 = t23 * t14;
  return ((1 - 3 * t14 + 3 * t23 - t33) * v0 + (4 - 6 * t23 + 3 * t33) * v1 + (1 + 3 * t14 + 3 * t23 - 3 * t33) * v22 + t33 * v3) / 6;
}
function basis$1(values2) {
  var n3 = values2.length - 1;
  return function(t4) {
    var i = t4 <= 0 ? t4 = 0 : t4 >= 1 ? (t4 = 1, n3 - 1) : Math.floor(t4 * n3), v1 = values2[i], v22 = values2[i + 1], v0 = i > 0 ? values2[i - 1] : 2 * v1 - v22, v3 = i < n3 - 1 ? values2[i + 2] : 2 * v22 - v1;
    return basis((t4 - i / n3) * n3, v0, v1, v22, v3);
  };
}
function constant2(x5) {
  return function() {
    return x5;
  };
}
function linear(a3, d2) {
  return function(t4) {
    return a3 + t4 * d2;
  };
}
function exponential(a3, b10, y7) {
  return a3 = Math.pow(a3, y7), b10 = Math.pow(b10, y7) - a3, y7 = 1 / y7, function(t4) {
    return Math.pow(a3 + t4 * b10, y7);
  };
}
function hue(a3, b10) {
  var d2 = b10 - a3;
  return d2 ? linear(a3, d2 > 180 || d2 < -180 ? d2 - 360 * Math.round(d2 / 360) : d2) : constant2(isNaN(a3) ? b10 : a3);
}
function gamma(y7) {
  return (y7 = +y7) === 1 ? nogamma : function(a3, b10) {
    return b10 - a3 ? exponential(a3, b10, y7) : constant2(isNaN(a3) ? b10 : a3);
  };
}
function nogamma(a3, b10) {
  var d2 = b10 - a3;
  return d2 ? linear(a3, d2) : constant2(isNaN(a3) ? b10 : a3);
}
var interpolateRgb = function rgbGamma(y7) {
  var color3 = gamma(y7);
  function rgb$12(start2, end) {
    var r3 = color3((start2 = rgb(start2)).r, (end = rgb(end)).r), g2 = color3(start2.g, end.g), b10 = color3(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
    return function(t4) {
      start2.r = r3(t4);
      start2.g = g2(t4);
      start2.b = b10(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  }
  rgb$12.gamma = rgbGamma;
  return rgb$12;
}(1);
function rgbSpline(spline) {
  return function(colors5) {
    var n3 = colors5.length, r3 = new Array(n3), g2 = new Array(n3), b10 = new Array(n3), i, color3;
    for (i = 0; i < n3; ++i) {
      color3 = rgb(colors5[i]);
      r3[i] = color3.r || 0;
      g2[i] = color3.g || 0;
      b10[i] = color3.b || 0;
    }
    r3 = spline(r3);
    g2 = spline(g2);
    b10 = spline(b10);
    color3.opacity = 1;
    return function(t4) {
      color3.r = r3(t4);
      color3.g = g2(t4);
      color3.b = b10(t4);
      return color3 + "";
    };
  };
}
var rgbBasis = rgbSpline(basis$1);
function numberArray(a3, b10) {
  if (!b10)
    b10 = [];
  var n3 = a3 ? Math.min(b10.length, a3.length) : 0, c5 = b10.slice(), i;
  return function(t4) {
    for (i = 0; i < n3; ++i)
      c5[i] = a3[i] * (1 - t4) + b10[i] * t4;
    return c5;
  };
}
function isNumberArray(x5) {
  return ArrayBuffer.isView(x5) && !(x5 instanceof DataView);
}
function genericArray(a3, b10) {
  var nb2 = b10 ? b10.length : 0, na2 = a3 ? Math.min(nb2, a3.length) : 0, x5 = new Array(na2), c5 = new Array(nb2), i;
  for (i = 0; i < na2; ++i)
    x5[i] = interpolateValue(a3[i], b10[i]);
  for (; i < nb2; ++i)
    c5[i] = b10[i];
  return function(t4) {
    for (i = 0; i < na2; ++i)
      c5[i] = x5[i](t4);
    return c5;
  };
}
function date(a3, b10) {
  var d2 = new Date();
  return a3 = +a3, b10 = +b10, function(t4) {
    return d2.setTime(a3 * (1 - t4) + b10 * t4), d2;
  };
}
function reinterpolate(a3, b10) {
  return a3 = +a3, b10 = +b10, function(t4) {
    return a3 * (1 - t4) + b10 * t4;
  };
}
function object(a3, b10) {
  var i = {}, c5 = {}, k6;
  if (a3 === null || typeof a3 !== "object")
    a3 = {};
  if (b10 === null || typeof b10 !== "object")
    b10 = {};
  for (k6 in b10) {
    if (k6 in a3) {
      i[k6] = interpolateValue(a3[k6], b10[k6]);
    } else {
      c5[k6] = b10[k6];
    }
  }
  return function(t4) {
    for (k6 in i)
      c5[k6] = i[k6](t4);
    return c5;
  };
}
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
var reB = new RegExp(reA.source, "g");
function zero(b10) {
  return function() {
    return b10;
  };
}
function one(b10) {
  return function(t4) {
    return b10(t4) + "";
  };
}
function interpolateString(a3, b10) {
  var bi2 = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s4 = [], q2 = [];
  a3 = a3 + "", b10 = b10 + "";
  while ((am = reA.exec(a3)) && (bm = reB.exec(b10))) {
    if ((bs = bm.index) > bi2) {
      bs = b10.slice(bi2, bs);
      if (s4[i])
        s4[i] += bs;
      else
        s4[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s4[i])
        s4[i] += bm;
      else
        s4[++i] = bm;
    } else {
      s4[++i] = null;
      q2.push({i, x: reinterpolate(am, bm)});
    }
    bi2 = reB.lastIndex;
  }
  if (bi2 < b10.length) {
    bs = b10.slice(bi2);
    if (s4[i])
      s4[i] += bs;
    else
      s4[++i] = bs;
  }
  return s4.length < 2 ? q2[0] ? one(q2[0].x) : zero(b10) : (b10 = q2.length, function(t4) {
    for (var i2 = 0, o; i2 < b10; ++i2)
      s4[(o = q2[i2]).i] = o.x(t4);
    return s4.join("");
  });
}
function interpolateValue(a3, b10) {
  var t4 = typeof b10, c5;
  return b10 == null || t4 === "boolean" ? constant2(b10) : (t4 === "number" ? reinterpolate : t4 === "string" ? (c5 = color(b10)) ? (b10 = c5, interpolateRgb) : interpolateString : b10 instanceof color ? interpolateRgb : b10 instanceof Date ? date : isNumberArray(b10) ? numberArray : Array.isArray(b10) ? genericArray : typeof b10.valueOf !== "function" && typeof b10.toString !== "function" || isNaN(b10) ? object : reinterpolate)(a3, b10);
}
function interpolateRound(a3, b10) {
  return a3 = +a3, b10 = +b10, function(t4) {
    return Math.round(a3 * (1 - t4) + b10 * t4);
  };
}
var second = newInterval(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds());
}, function(date6, step) {
  date6.setTime(+date6 + step * durationSecond);
}, function(start2, end) {
  return (end - start2) / durationSecond;
}, function(date6) {
  return date6.getUTCSeconds();
});
var minute = newInterval(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds() - date6.getSeconds() * durationSecond);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationMinute);
}, function(start2, end) {
  return (end - start2) / durationMinute;
}, function(date6) {
  return date6.getMinutes();
});
var hour = newInterval(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds() - date6.getSeconds() * durationSecond - date6.getMinutes() * durationMinute);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationHour);
}, function(start2, end) {
  return (end - start2) / durationHour;
}, function(date6) {
  return date6.getHours();
});
var month = newInterval(function(date6) {
  date6.setDate(1);
  date6.setHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setMonth(date6.getMonth() + step);
}, function(start2, end) {
  return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
}, function(date6) {
  return date6.getMonth();
});
var utcMinute = newInterval(function(date6) {
  date6.setUTCSeconds(0, 0);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationMinute);
}, function(start2, end) {
  return (end - start2) / durationMinute;
}, function(date6) {
  return date6.getUTCMinutes();
});
var utcHour = newInterval(function(date6) {
  date6.setUTCMinutes(0, 0, 0);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationHour);
}, function(start2, end) {
  return (end - start2) / durationHour;
}, function(date6) {
  return date6.getUTCHours();
});
var utcMonth = newInterval(function(date6) {
  date6.setUTCDate(1);
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCMonth(date6.getUTCMonth() + step);
}, function(start2, end) {
  return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
}, function(date6) {
  return date6.getUTCMonth();
});

// snowpack/pkg/common/cubehelix-9d1c68c8.js
var deg2rad = Math.PI / 180;
var rad2deg = 180 / Math.PI;
var A2 = -0.14861;
var B3 = 1.78277;
var C2 = -0.29227;
var D3 = -0.90649;
var E2 = 1.97294;
var ED = E2 * D3;
var EB = E2 * B3;
var BC_DA = B3 * C2 - D3 * A2;
function cubehelixConvert(o) {
  if (o instanceof Cubehelix)
    return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r3 = o.r / 255, g2 = o.g / 255, b10 = o.b / 255, l3 = (BC_DA * b10 + ED * r3 - EB * g2) / (BC_DA + ED - EB), bl = b10 - l3, k6 = (E2 * (g2 - l3) - C2 * bl) / D3, s4 = Math.sqrt(k6 * k6 + bl * bl) / (E2 * l3 * (1 - l3)), h2 = s4 ? Math.atan2(k6, bl) * rad2deg - 120 : NaN;
  return new Cubehelix(h2 < 0 ? h2 + 360 : h2, s4, l3, o.opacity);
}
function cubehelix(h2, s4, l3, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h2) : new Cubehelix(h2, s4, l3, opacity == null ? 1 : opacity);
}
function Cubehelix(h2, s4, l3, opacity) {
  this.h = +h2;
  this.s = +s4;
  this.l = +l3;
  this.opacity = +opacity;
}
define(Cubehelix, cubehelix, extend(Color, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter : Math.pow(brighter, k6);
    return new Cubehelix(this.h, this.s, this.l * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker : Math.pow(darker, k6);
    return new Cubehelix(this.h, this.s, this.l * k6, this.opacity);
  },
  rgb: function() {
    var h2 = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad, l3 = +this.l, a3 = isNaN(this.s) ? 0 : this.s * l3 * (1 - l3), cosh = Math.cos(h2), sinh = Math.sin(h2);
    return new Rgb(255 * (l3 + a3 * (A2 * cosh + B3 * sinh)), 255 * (l3 + a3 * (C2 * cosh + D3 * sinh)), 255 * (l3 + a3 * (E2 * cosh)), this.opacity);
  }
}));
function cubehelix$1(hue3) {
  return function cubehelixGamma(y7) {
    y7 = +y7;
    function cubehelix$13(start2, end) {
      var h2 = hue3((start2 = cubehelix(start2)).h, (end = cubehelix(end)).h), s4 = nogamma(start2.s, end.s), l3 = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
      return function(t4) {
        start2.h = h2(t4);
        start2.s = s4(t4);
        start2.l = l3(Math.pow(t4, y7));
        start2.opacity = opacity(t4);
        return start2 + "";
      };
    }
    cubehelix$13.gamma = cubehelixGamma;
    return cubehelix$13;
  }(1);
}
var interpolateCubehelix = cubehelix$1(hue);
var cubehelixLong = cubehelix$1(nogamma);

// snowpack/pkg/common/hcl-198a11e3.js
var K2 = 18;
var Xn = 0.96422;
var Yn = 1;
var Zn = 0.82521;
var t02 = 4 / 29;
var t12 = 6 / 29;
var t2 = 3 * t12 * t12;
var t3 = t12 * t12 * t12;
function labConvert(o) {
  if (o instanceof Lab)
    return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl)
    return hcl2lab(o);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r3 = rgb2lrgb(o.r), g2 = rgb2lrgb(o.g), b10 = rgb2lrgb(o.b), y7 = xyz2lab((0.2225045 * r3 + 0.7168786 * g2 + 0.0606169 * b10) / Yn), x5, z3;
  if (r3 === g2 && g2 === b10)
    x5 = z3 = y7;
  else {
    x5 = xyz2lab((0.4360747 * r3 + 0.3850649 * g2 + 0.1430804 * b10) / Xn);
    z3 = xyz2lab((0.0139322 * r3 + 0.0971045 * g2 + 0.7141733 * b10) / Zn);
  }
  return new Lab(116 * y7 - 16, 500 * (x5 - y7), 200 * (y7 - z3), o.opacity);
}
function lab(l3, a3, b10, opacity) {
  return arguments.length === 1 ? labConvert(l3) : new Lab(l3, a3, b10, opacity == null ? 1 : opacity);
}
function Lab(l3, a3, b10, opacity) {
  this.l = +l3;
  this.a = +a3;
  this.b = +b10;
  this.opacity = +opacity;
}
define(Lab, lab, extend(Color, {
  brighter: function(k6) {
    return new Lab(this.l + K2 * (k6 == null ? 1 : k6), this.a, this.b, this.opacity);
  },
  darker: function(k6) {
    return new Lab(this.l - K2 * (k6 == null ? 1 : k6), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y7 = (this.l + 16) / 116, x5 = isNaN(this.a) ? y7 : y7 + this.a / 500, z3 = isNaN(this.b) ? y7 : y7 - this.b / 200;
    x5 = Xn * lab2xyz(x5);
    y7 = Yn * lab2xyz(y7);
    z3 = Zn * lab2xyz(z3);
    return new Rgb(lrgb2rgb(3.1338561 * x5 - 1.6168667 * y7 - 0.4906146 * z3), lrgb2rgb(-0.9787684 * x5 + 1.9161415 * y7 + 0.033454 * z3), lrgb2rgb(0.0719453 * x5 - 0.2289914 * y7 + 1.4052427 * z3), this.opacity);
  }
}));
function xyz2lab(t4) {
  return t4 > t3 ? Math.pow(t4, 1 / 3) : t4 / t2 + t02;
}
function lab2xyz(t4) {
  return t4 > t12 ? t4 * t4 * t4 : t2 * (t4 - t02);
}
function lrgb2rgb(x5) {
  return 255 * (x5 <= 31308e-7 ? 12.92 * x5 : 1.055 * Math.pow(x5, 1 / 2.4) - 0.055);
}
function rgb2lrgb(x5) {
  return (x5 /= 255) <= 0.04045 ? x5 / 12.92 : Math.pow((x5 + 0.055) / 1.055, 2.4);
}
function hclConvert(o) {
  if (o instanceof Hcl)
    return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab))
    o = labConvert(o);
  if (o.a === 0 && o.b === 0)
    return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h2 = Math.atan2(o.b, o.a) * rad2deg;
  return new Hcl(h2 < 0 ? h2 + 360 : h2, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function hcl(h2, c5, l3, opacity) {
  return arguments.length === 1 ? hclConvert(h2) : new Hcl(h2, c5, l3, opacity == null ? 1 : opacity);
}
function Hcl(h2, c5, l3, opacity) {
  this.h = +h2;
  this.c = +c5;
  this.l = +l3;
  this.opacity = +opacity;
}
function hcl2lab(o) {
  if (isNaN(o.h))
    return new Lab(o.l, 0, 0, o.opacity);
  var h2 = o.h * deg2rad;
  return new Lab(o.l, Math.cos(h2) * o.c, Math.sin(h2) * o.c, o.opacity);
}
define(Hcl, hcl, extend(Color, {
  brighter: function(k6) {
    return new Hcl(this.h, this.c, this.l + K2 * (k6 == null ? 1 : k6), this.opacity);
  },
  darker: function(k6) {
    return new Hcl(this.h, this.c, this.l - K2 * (k6 == null ? 1 : k6), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));
function hsl2(hue3) {
  return function(start2, end) {
    var h2 = hue3((start2 = hsl(start2)).h, (end = hsl(end)).h), s4 = nogamma(start2.s, end.s), l3 = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
    return function(t4) {
      start2.h = h2(t4);
      start2.s = s4(t4);
      start2.l = l3(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  };
}
var interpolateHsl = hsl2(hue);
var hslLong = hsl2(nogamma);
function lab$1(start2, end) {
  var l3 = nogamma((start2 = lab(start2)).l, (end = lab(end)).l), a3 = nogamma(start2.a, end.a), b10 = nogamma(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
  return function(t4) {
    start2.l = l3(t4);
    start2.a = a3(t4);
    start2.b = b10(t4);
    start2.opacity = opacity(t4);
    return start2 + "";
  };
}
function hcl$1(hue3) {
  return function(start2, end) {
    var h2 = hue3((start2 = hcl(start2)).h, (end = hcl(end)).h), c5 = nogamma(start2.c, end.c), l3 = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
    return function(t4) {
      start2.h = h2(t4);
      start2.c = c5(t4);
      start2.l = l3(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  };
}
var interpolateHcl = hcl$1(hue);
var hclLong = hcl$1(nogamma);

// snowpack/pkg/common/linear-6238e9df.js
function ascending(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function bisector(f3) {
  let delta = f3;
  let compare = f3;
  if (f3.length === 1) {
    delta = (d2, x5) => f3(d2) - x5;
    compare = ascendingComparator(f3);
  }
  function left2(a3, x5, lo, hi2) {
    if (lo == null)
      lo = 0;
    if (hi2 == null)
      hi2 = a3.length;
    while (lo < hi2) {
      const mid = lo + hi2 >>> 1;
      if (compare(a3[mid], x5) < 0)
        lo = mid + 1;
      else
        hi2 = mid;
    }
    return lo;
  }
  function right2(a3, x5, lo, hi2) {
    if (lo == null)
      lo = 0;
    if (hi2 == null)
      hi2 = a3.length;
    while (lo < hi2) {
      const mid = lo + hi2 >>> 1;
      if (compare(a3[mid], x5) > 0)
        hi2 = mid;
      else
        lo = mid + 1;
    }
    return lo;
  }
  function center3(a3, x5, lo, hi2) {
    if (lo == null)
      lo = 0;
    if (hi2 == null)
      hi2 = a3.length;
    const i = left2(a3, x5, lo, hi2 - 1);
    return i > lo && delta(a3[i - 1], x5) > -delta(a3[i], x5) ? i - 1 : i;
  }
  return {left: left2, center: center3, right: right2};
}
function ascendingComparator(f3) {
  return (d2, x5) => ascending(f3(d2), x5);
}
function number(x5) {
  return x5 === null ? NaN : +x5;
}
function* numbers(values2, valueof) {
  if (valueof === void 0) {
    for (let value2 of values2) {
      if (value2 != null && (value2 = +value2) >= value2) {
        yield value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (value2 = +value2) >= value2) {
        yield value2;
      }
    }
  }
}
var ascendingBisect = bisector(ascending);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
var bisectCenter = bisector(number).center;
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2);
function ticks(start2, stop, count2) {
  var reverse3, i = -1, n3, ticks4, step;
  stop = +stop, start2 = +start2, count2 = +count2;
  if (start2 === stop && count2 > 0)
    return [start2];
  if (reverse3 = stop < start2)
    n3 = start2, start2 = stop, stop = n3;
  if ((step = tickIncrement(start2, stop, count2)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    start2 = Math.ceil(start2 / step);
    stop = Math.floor(stop / step);
    ticks4 = new Array(n3 = Math.ceil(stop - start2 + 1));
    while (++i < n3)
      ticks4[i] = (start2 + i) * step;
  } else {
    step = -step;
    start2 = Math.ceil(start2 * step);
    stop = Math.floor(stop * step);
    ticks4 = new Array(n3 = Math.ceil(stop - start2 + 1));
    while (++i < n3)
      ticks4[i] = (start2 + i) / step;
  }
  if (reverse3)
    ticks4.reverse();
  return ticks4;
}
function tickIncrement(start2, stop, count2) {
  var step = (stop - start2) / Math.max(0, count2), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start2, stop, count2) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10)
    step1 *= 10;
  else if (error >= e5)
    step1 *= 5;
  else if (error >= e2)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}
function initRange(domain, range7) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range7).domain(domain);
      break;
  }
  return this;
}
function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;
    case 1: {
      if (typeof domain === "function")
        this.interpolator(domain);
      else
        this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function")
        this.interpolator(interpolator);
      else
        this.range(interpolator);
      break;
    }
  }
  return this;
}
function constants(x5) {
  return function() {
    return x5;
  };
}
function number$1(x5) {
  return +x5;
}
var unit = [0, 1];
function identity(x5) {
  return x5;
}
function normalize(a3, b10) {
  return (b10 -= a3 = +a3) ? function(x5) {
    return (x5 - a3) / b10;
  } : constants(isNaN(b10) ? NaN : 0.5);
}
function clamper(a3, b10) {
  var t4;
  if (a3 > b10)
    t4 = a3, a3 = b10, b10 = t4;
  return function(x5) {
    return Math.max(a3, Math.min(b10, x5));
  };
}
function bimap(domain, range7, interpolate3) {
  var d0 = domain[0], d1 = domain[1], r0 = range7[0], r1 = range7[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate3(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate3(r0, r1);
  return function(x5) {
    return r0(d0(x5));
  };
}
function polymap(domain, range7, interpolate3) {
  var j2 = Math.min(domain.length, range7.length) - 1, d2 = new Array(j2), r3 = new Array(j2), i = -1;
  if (domain[j2] < domain[0]) {
    domain = domain.slice().reverse();
    range7 = range7.slice().reverse();
  }
  while (++i < j2) {
    d2[i] = normalize(domain[i], domain[i + 1]);
    r3[i] = interpolate3(range7[i], range7[i + 1]);
  }
  return function(x5) {
    var i2 = bisectRight(domain, x5, 1, j2) - 1;
    return r3[i2](d2[i2](x5));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range7 = unit, interpolate3 = interpolateValue, transform, untransform, unknown, clamp = identity, piecewise3, output, input;
  function rescale() {
    var n3 = Math.min(domain.length, range7.length);
    if (clamp !== identity)
      clamp = clamper(domain[0], domain[n3 - 1]);
    piecewise3 = n3 > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x5) {
    return isNaN(x5 = +x5) ? unknown : (output || (output = piecewise3(domain.map(transform), range7, interpolate3)))(transform(clamp(x5)));
  }
  scale.invert = function(y7) {
    return clamp(untransform((input || (input = piecewise3(range7, domain.map(transform), reinterpolate)))(y7)));
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain = Array.from(_2, number$1), rescale()) : domain.slice();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = Array.from(_2), rescale()) : range7.slice();
  };
  scale.rangeRound = function(_2) {
    return range7 = Array.from(_2), interpolate3 = interpolateRound, rescale();
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = _2 ? true : identity, rescale()) : clamp !== identity;
  };
  scale.interpolate = function(_2) {
    return arguments.length ? (interpolate3 = _2, rescale()) : interpolate3;
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  return function(t4, u2) {
    transform = t4, untransform = u2;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity, identity);
}
function formatDecimal(x5) {
  return Math.abs(x5 = Math.round(x5)) >= 1e21 ? x5.toLocaleString("en").replace(/,/g, "") : x5.toString(10);
}
function formatDecimalParts(x5, p3) {
  if ((i = (x5 = p3 ? x5.toExponential(p3 - 1) : x5.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x5.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x5.slice(i + 1)
  ];
}
function exponent(x5) {
  return x5 = formatDecimalParts(Math.abs(x5)), x5 ? x5[1] : NaN;
}
function formatGroup(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t4 = [], j2 = 0, g2 = grouping[0], length = 0;
    while (i > 0 && g2 > 0) {
      if (length + g2 + 1 > width)
        g2 = Math.max(1, width - length);
      t4.push(value2.substring(i -= g2, i + g2));
      if ((length += g2 + 1) > width)
        break;
      g2 = grouping[j2 = (j2 + 1) % grouping.length];
    }
    return t4.reverse().join(thousands);
  };
}
function formatNumerals(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re2 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match2 = re2.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim(s4) {
  out:
    for (var n3 = s4.length, i = 1, i0 = -1, i1; i < n3; ++i) {
      switch (s4[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s4[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
}
var prefixExponent;
function formatPrefixAuto(x5, p3) {
  var d2 = formatDecimalParts(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1], i = exponent6 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent6 / 3))) * 3) + 1, n3 = coefficient.length;
  return i === n3 ? coefficient : i > n3 ? coefficient + new Array(i - n3 + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x5, Math.max(0, p3 + i - 1))[0];
}
function formatRounded(x5, p3) {
  var d2 = formatDecimalParts(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1];
  return exponent6 < 0 ? "0." + new Array(-exponent6).join("0") + coefficient : coefficient.length > exponent6 + 1 ? coefficient.slice(0, exponent6 + 1) + "." + coefficient.slice(exponent6 + 1) : coefficient + new Array(exponent6 - coefficient.length + 2).join("0");
}
var formatTypes = {
  "%": (x5, p3) => (x5 * 100).toFixed(p3),
  b: (x5) => Math.round(x5).toString(2),
  c: (x5) => x5 + "",
  d: formatDecimal,
  e: (x5, p3) => x5.toExponential(p3),
  f: (x5, p3) => x5.toFixed(p3),
  g: (x5, p3) => x5.toPrecision(p3),
  o: (x5) => Math.round(x5).toString(8),
  p: (x5, p3) => formatRounded(x5 * 100, p3),
  r: formatRounded,
  s: formatPrefixAuto,
  X: (x5) => Math.round(x5).toString(16).toUpperCase(),
  x: (x5) => Math.round(x5).toString(16)
};
function identity$1(x5) {
  return x5;
}
var map = Array.prototype.map;
var prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale(locale6) {
  var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity$1 : formatGroup(map.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity$1 : formatNumerals(map.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus2 = locale6.minus === void 0 ? "\u2212" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign5 = specifier.sign, symbol2 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma2 = specifier.comma, precision = specifier.precision, trim = specifier.trim, type3 = specifier.type;
    if (type3 === "n")
      comma2 = true, type3 = "g";
    else if (!formatTypes[type3])
      precision === void 0 && (precision = 12), trim = true, type3 = "g";
    if (zero3 || fill === "0" && align === "=")
      zero3 = true, fill = "0", align = "=";
    var prefix3 = symbol2 === "$" ? currencyPrefix : symbol2 === "#" && /[boxX]/.test(type3) ? "0" + type3.toLowerCase() : "", suffix2 = symbol2 === "$" ? currencySuffix : /[%p]/.test(type3) ? percent : "";
    var formatType = formatTypes[type3], maybeSuffix = /[defgprs%]/.test(type3);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type3) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format6(value2) {
      var valuePrefix = prefix3, valueSuffix = suffix2, i, n3, c5;
      if (type3 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim)
          value2 = formatTrim(value2);
        if (valueNegative && +value2 === 0 && sign5 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign5 === "(" ? sign5 : minus2 : sign5 === "-" || sign5 === "(" ? "" : sign5) + valuePrefix;
        valueSuffix = (type3 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign5 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n3 = value2.length;
          while (++i < n3) {
            if (c5 = value2.charCodeAt(i), 48 > c5 || c5 > 57) {
              valueSuffix = (c5 === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma2 && !zero3)
        value2 = group(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding2 = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma2 && zero3)
        value2 = group(padding2 + value2, padding2.length ? width - valueSuffix.length : Infinity), padding2 = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding2;
          break;
        case "=":
          value2 = valuePrefix + padding2 + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding2.slice(0, length = padding2.length >> 1) + valuePrefix + value2 + valueSuffix + padding2.slice(length);
          break;
        default:
          value2 = padding2 + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format6.toString = function() {
      return specifier + "";
    };
    return format6;
  }
  function formatPrefix4(specifier, value2) {
    var f3 = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent(value2) / 3))) * 3, k6 = Math.pow(10, -e3), prefix3 = prefixes[8 + e3 / 3];
    return function(value3) {
      return f3(k6 * value3) + prefix3;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix4
  };
}
var locale;
var format;
var formatPrefix;
defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = formatLocale(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}
function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}
function precisionPrefix(step, value2) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value2) / 3))) * 3 - exponent(Math.abs(step)));
}
function precisionRound(step, max6) {
  step = Math.abs(step), max6 = Math.abs(max6) - step;
  return Math.max(0, exponent(max6) - exponent(step)) + 1;
}
function tickFormat(start2, stop, count2, specifier) {
  var step = tickStep(start2, stop, count2), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value2 = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value2)))
        specifier.precision = precision;
      return formatPrefix(specifier, value2);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count2) {
    var d2 = domain();
    return ticks(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2);
  };
  scale.tickFormat = function(count2, specifier) {
    var d2 = domain();
    return tickFormat(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2, specifier);
  };
  scale.nice = function(count2) {
    if (count2 == null)
      count2 = 10;
    var d2 = domain();
    var i0 = 0;
    var i1 = d2.length - 1;
    var start2 = d2[i0];
    var stop = d2[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start2, stop, count2);
      if (step === prestep) {
        d2[i0] = start2;
        d2[i1] = stop;
        return domain(d2);
      } else if (step > 0) {
        start2 = Math.floor(start2 / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start2 = Math.ceil(start2 * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear2() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear2());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}

// snowpack/pkg/common/ordinal-65ab6804.js
var implicit = Symbol("implicit");
function ordinal() {
  var index4 = new Map(), domain = [], range7 = [], unknown = implicit;
  function scale(d2) {
    var key = d2 + "", i = index4.get(key);
    if (!i) {
      if (unknown !== implicit)
        return unknown;
      index4.set(key, i = domain.push(d2));
    }
    return range7[(i - 1) % range7.length];
  }
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index4 = new Map();
    for (const value2 of _2) {
      const key = value2 + "";
      if (index4.has(key))
        continue;
      index4.set(key, domain.push(value2));
    }
    return scale;
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = Array.from(_2), scale) : range7.slice();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range7).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}

// snowpack/pkg/common/band-5eb4d7ba.js
function range2(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n3 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n3 < 3 ? 1 : +step;
  var i = -1, n3 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range7 = new Array(n3);
  while (++i < n3) {
    range7[i] = start2 + i * step;
  }
  return range7;
}
function band() {
  var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n3 = domain().length, reverse3 = r1 < r0, start2 = reverse3 ? r1 : r0, stop = reverse3 ? r0 : r1;
    step = (stop - start2) / Math.max(1, n3 - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start2 += (stop - start2 - step * (n3 - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
    var values2 = range2(n3).map(function(i) {
      return start2 + step * i;
    });
    return ordinalRange(reverse3 ? values2.reverse() : values2);
  }
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.range = function(_2) {
    return arguments.length ? ([r0, r1] = _2, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };
  scale.rangeRound = function(_2) {
    return [r0, r1] = _2, r0 = +r0, r1 = +r1, round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_2) {
    return arguments.length ? (round2 = !!_2, rescale()) : round2;
  };
  scale.padding = function(_2) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_2), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_2) {
    return arguments.length ? (paddingInner = Math.min(1, _2), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_2) {
    return arguments.length ? (paddingOuter = +_2, rescale()) : paddingOuter;
  };
  scale.align = function(_2) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _2)), rescale()) : align;
  };
  scale.copy = function() {
    return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return initRange.apply(rescale(), arguments);
}
function pointish(scale) {
  var copy5 = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;
  scale.copy = function() {
    return pointish(copy5());
  };
  return scale;
}
function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

// snowpack/pkg/@visx/scale.js
function applyDomain(scale, config4) {
  if (config4.domain) {
    if ("nice" in scale || "quantiles" in scale) {
      scale.domain(config4.domain);
    } else if ("padding" in scale) {
      scale.domain(config4.domain);
    } else {
      scale.domain(config4.domain);
    }
  }
}
function applyRange(scale, config4) {
  if (config4.range) {
    if ("padding" in scale) {
      scale.range(config4.range);
    } else {
      scale.range(config4.range);
    }
  }
}
function applyAlign(scale, config4) {
  if ("align" in scale && "align" in config4 && typeof config4.align !== "undefined") {
    scale.align(config4.align);
  }
}
function applyBase(scale, config4) {
  if ("base" in scale && "base" in config4 && typeof config4.base !== "undefined") {
    scale.base(config4.base);
  }
}
function applyClamp(scale, config4) {
  if ("clamp" in scale && "clamp" in config4 && typeof config4.clamp !== "undefined") {
    scale.clamp(config4.clamp);
  }
}
function applyConstant(scale, config4) {
  if ("constant" in scale && "constant" in config4 && typeof config4.constant !== "undefined") {
    scale.constant(config4.constant);
  }
}
function applyExponent(scale, config4) {
  if ("exponent" in scale && "exponent" in config4 && typeof config4.exponent !== "undefined") {
    scale.exponent(config4.exponent);
  }
}
var interpolatorMap = {
  lab: lab$1,
  hcl: interpolateHcl,
  "hcl-long": hclLong,
  hsl: interpolateHsl,
  "hsl-long": hslLong,
  cubehelix: interpolateCubehelix,
  "cubehelix-long": cubehelixLong,
  rgb: interpolateRgb
};
function createColorInterpolator(interpolate3) {
  switch (interpolate3) {
    case "lab":
    case "hcl":
    case "hcl-long":
    case "hsl":
    case "hsl-long":
    case "cubehelix":
    case "cubehelix-long":
    case "rgb":
      return interpolatorMap[interpolate3];
  }
  var type3 = interpolate3.type, gamma3 = interpolate3.gamma;
  var interpolator = interpolatorMap[type3];
  return typeof gamma3 === "undefined" ? interpolator : interpolator.gamma(gamma3);
}
function applyInterpolate(scale, config4) {
  if ("interpolate" in config4 && "interpolate" in scale && typeof config4.interpolate !== "undefined") {
    var interpolator = createColorInterpolator(config4.interpolate);
    scale.interpolate(interpolator);
  }
}
var TEST_TIME = new Date(Date.UTC(2020, 1, 2, 3, 4, 5));
var TEST_FORMAT = "%Y-%m-%d %H:%M";
function isUtcScale(scale) {
  var output = scale.tickFormat(1, TEST_FORMAT)(TEST_TIME);
  return output === "2020-02-02 03:04";
}
var localTimeIntervals = {
  day,
  hour,
  minute,
  month,
  second,
  week: sunday,
  year
};
var utcIntervals = {
  day: utcDay,
  hour: utcHour,
  minute: utcMinute,
  month: utcMonth,
  second,
  week: utcSunday,
  year: utcYear
};
function applyNice(scale, config4) {
  if ("nice" in config4 && typeof config4.nice !== "undefined" && "nice" in scale) {
    var nice4 = config4.nice;
    if (typeof nice4 === "boolean") {
      if (nice4) {
        scale.nice();
      }
    } else if (typeof nice4 === "number") {
      scale.nice(nice4);
    } else {
      var timeScale = scale;
      var isUtc = isUtcScale(timeScale);
      if (typeof nice4 === "string") {
        timeScale.nice(isUtc ? utcIntervals[nice4] : localTimeIntervals[nice4]);
      } else {
        var interval3 = nice4.interval, step = nice4.step;
        var parsedInterval = (isUtc ? utcIntervals[interval3] : localTimeIntervals[interval3]).every(step);
        if (parsedInterval != null) {
          timeScale.nice(parsedInterval);
        }
      }
    }
  }
}
function applyPadding(scale, config4) {
  if ("padding" in scale && "padding" in config4 && typeof config4.padding !== "undefined") {
    scale.padding(config4.padding);
  }
  if ("paddingInner" in scale && "paddingInner" in config4 && typeof config4.paddingInner !== "undefined") {
    scale.paddingInner(config4.paddingInner);
  }
  if ("paddingOuter" in scale && "paddingOuter" in config4 && typeof config4.paddingOuter !== "undefined") {
    scale.paddingOuter(config4.paddingOuter);
  }
}
function applyReverse(scale, config4) {
  if (config4.reverse) {
    var reversedRange = scale.range().slice().reverse();
    if ("padding" in scale) {
      scale.range(reversedRange);
    } else {
      scale.range(reversedRange);
    }
  }
}
function applyRound(scale, config4) {
  if ("round" in config4 && typeof config4.round !== "undefined") {
    if (config4.round && "interpolate" in config4 && typeof config4.interpolate !== "undefined") {
      console.warn("[visx/scale/applyRound] ignoring round: scale config contains round and interpolate. only applying interpolate. config:", config4);
    } else if ("round" in scale) {
      scale.round(config4.round);
    } else if ("interpolate" in scale && config4.round) {
      scale.interpolate(interpolateRound);
    }
  }
}
function applyUnknown(scale, config4) {
  if ("unknown" in scale && "unknown" in config4 && typeof config4.unknown !== "undefined") {
    scale.unknown(config4.unknown);
  }
}
function applyZero(scale, config4) {
  if ("zero" in config4 && config4.zero === true) {
    var domain = scale.domain();
    var a3 = domain[0], b10 = domain[1];
    var isDescending = b10 < a3;
    var _ref = isDescending ? [b10, a3] : [a3, b10], min5 = _ref[0], max6 = _ref[1];
    var domainWithZero = [Math.min(0, min5), Math.max(0, max6)];
    scale.domain(isDescending ? domainWithZero.reverse() : domainWithZero);
  }
}
var ALL_OPERATORS = [
  "domain",
  "nice",
  "zero",
  "interpolate",
  "round",
  "range",
  "reverse",
  "align",
  "base",
  "clamp",
  "constant",
  "exponent",
  "padding",
  "unknown"
];
var operators = {
  domain: applyDomain,
  nice: applyNice,
  zero: applyZero,
  interpolate: applyInterpolate,
  round: applyRound,
  align: applyAlign,
  base: applyBase,
  clamp: applyClamp,
  constant: applyConstant,
  exponent: applyExponent,
  padding: applyPadding,
  range: applyRange,
  reverse: applyReverse,
  unknown: applyUnknown
};
function scaleOperator() {
  for (var _len = arguments.length, ops = new Array(_len), _key = 0; _key < _len; _key++) {
    ops[_key] = arguments[_key];
  }
  var selection2 = new Set(ops);
  var selectedOps = ALL_OPERATORS.filter(function(o) {
    return selection2.has(o);
  });
  return function applyOperators(scale, config4) {
    if (typeof config4 !== "undefined") {
      selectedOps.forEach(function(op) {
        operators[op](scale, config4);
      });
    }
    return scale;
  };
}
var updateBandScale = scaleOperator("domain", "range", "reverse", "align", "padding", "round");
function createBandScale(config4) {
  return updateBandScale(band(), config4);
}
var updateLinearScale = scaleOperator("domain", "range", "reverse", "clamp", "interpolate", "nice", "round", "zero");
function createLinearScale(config4) {
  return updateLinearScale(linear2(), config4);
}
var updateOrdinalScale = scaleOperator("domain", "range", "reverse", "unknown");
function createOrdinalScale(config4) {
  return updateOrdinalScale(ordinal(), config4);
}

// snowpack/pkg/common/defaultLocale-8f6062a7.js
function localDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date6.setFullYear(d2.y);
    return date6;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date6.setUTCFullYear(d2.y);
    return date6;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate(y7, m3, d2) {
  return {y: y7, m: m3, d: d2, H: 0, M: 0, S: 0, L: 0};
}
function formatLocale2(locale6) {
  var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    a: formatShortWeekday,
    A: formatWeekday,
    b: formatShortMonth,
    B: formatMonth,
    c: null,
    d: formatDayOfMonth,
    e: formatDayOfMonth,
    f: formatMicroseconds,
    g: formatYearISO,
    G: formatFullYearISO,
    H: formatHour24,
    I: formatHour12,
    j: formatDayOfYear,
    L: formatMilliseconds,
    m: formatMonthNumber,
    M: formatMinutes,
    p: formatPeriod,
    q: formatQuarter,
    Q: formatUnixTimestamp,
    s: formatUnixTimestampSeconds,
    S: formatSeconds,
    u: formatWeekdayNumberMonday,
    U: formatWeekNumberSunday,
    V: formatWeekNumberISO,
    w: formatWeekdayNumberSunday,
    W: formatWeekNumberMonday,
    x: null,
    X: null,
    y: formatYear,
    Y: formatFullYear,
    Z: formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    a: formatUTCShortWeekday,
    A: formatUTCWeekday,
    b: formatUTCShortMonth,
    B: formatUTCMonth,
    c: null,
    d: formatUTCDayOfMonth,
    e: formatUTCDayOfMonth,
    f: formatUTCMicroseconds,
    g: formatUTCYearISO,
    G: formatUTCFullYearISO,
    H: formatUTCHour24,
    I: formatUTCHour12,
    j: formatUTCDayOfYear,
    L: formatUTCMilliseconds,
    m: formatUTCMonthNumber,
    M: formatUTCMinutes,
    p: formatUTCPeriod,
    q: formatUTCQuarter,
    Q: formatUnixTimestamp,
    s: formatUnixTimestampSeconds,
    S: formatUTCSeconds,
    u: formatUTCWeekdayNumberMonday,
    U: formatUTCWeekNumberSunday,
    V: formatUTCWeekNumberISO,
    w: formatUTCWeekdayNumberSunday,
    W: formatUTCWeekNumberMonday,
    x: null,
    X: null,
    y: formatUTCYear,
    Y: formatUTCFullYear,
    Z: formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    a: parseShortWeekday,
    A: parseWeekday,
    b: parseShortMonth,
    B: parseMonth,
    c: parseLocaleDateTime,
    d: parseDayOfMonth,
    e: parseDayOfMonth,
    f: parseMicroseconds,
    g: parseYear,
    G: parseFullYear,
    H: parseHour24,
    I: parseHour24,
    j: parseDayOfYear,
    L: parseMilliseconds,
    m: parseMonthNumber,
    M: parseMinutes,
    p: parsePeriod,
    q: parseQuarter,
    Q: parseUnixTimestamp,
    s: parseUnixTimestampSeconds,
    S: parseSeconds,
    u: parseWeekdayNumberMonday,
    U: parseWeekNumberSunday,
    V: parseWeekNumberISO,
    w: parseWeekdayNumberSunday,
    W: parseWeekNumberMonday,
    x: parseLocaleDate,
    X: parseLocaleTime,
    y: parseYear,
    Y: parseFullYear,
    Z: parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date6) {
      var string2 = [], i = -1, j2 = 0, n3 = specifier.length, c5, pad6, format6;
      if (!(date6 instanceof Date))
        date6 = new Date(+date6);
      while (++i < n3) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j2, i));
          if ((pad6 = pads[c5 = specifier.charAt(++i)]) != null)
            c5 = specifier.charAt(++i);
          else
            pad6 = c5 === "e" ? " " : "0";
          if (format6 = formats2[c5])
            c5 = format6(date6, pad6);
          string2.push(c5);
          j2 = i + 1;
        }
      }
      string2.push(specifier.slice(j2, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z4) {
    return function(string2) {
      var d2 = newDate(1900, void 0, 1), i = parseSpecifier(d2, specifier, string2 += "", 0), week, day$1;
      if (i != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z4 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate(newDate(d2.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate(newDate(d2.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
          week = day.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day$1 = "Z" in d2 ? utcDate(newDate(d2.y, 0, 1)).getUTCDay() : localDate(newDate(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day$1 + 5) % 7 : d2.w + d2.U * 7 - (day$1 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate(d2);
      }
      return localDate(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j2) {
    var i = 0, n3 = specifier.length, m3 = string2.length, c5, parse2;
    while (i < n3) {
      if (j2 >= m3)
        return -1;
      c5 = specifier.charCodeAt(i++);
      if (c5 === 37) {
        c5 = specifier.charAt(i++);
        parse2 = parses[c5 in pads ? specifier.charAt(i++) : c5];
        if (!parse2 || (j2 = parse2(d2, string2, j2)) < 0)
          return -1;
      } else if (c5 != string2.charCodeAt(j2++)) {
        return -1;
      }
    }
    return j2;
  }
  function parsePeriod(d2, string2, i) {
    var n3 = periodRe.exec(string2.slice(i));
    return n3 ? (d2.p = periodLookup.get(n3[0].toLowerCase()), i + n3[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i) {
    var n3 = shortWeekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = shortWeekdayLookup.get(n3[0].toLowerCase()), i + n3[0].length) : -1;
  }
  function parseWeekday(d2, string2, i) {
    var n3 = weekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = weekdayLookup.get(n3[0].toLowerCase()), i + n3[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i) {
    var n3 = shortMonthRe.exec(string2.slice(i));
    return n3 ? (d2.m = shortMonthLookup.get(n3[0].toLowerCase()), i + n3[0].length) : -1;
  }
  function parseMonth(d2, string2, i) {
    var n3 = monthRe.exec(string2.slice(i));
    return n3 ? (d2.m = monthLookup.get(n3[0].toLowerCase()), i + n3[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i) {
    return parseSpecifier(d2, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d2, string2, i) {
    return parseSpecifier(d2, locale_date, string2, i);
  }
  function parseLocaleTime(d2, string2, i) {
    return parseSpecifier(d2, locale_time, string2, i);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f3 = newFormat(specifier += "", formats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    parse: function(specifier) {
      var p3 = newParse(specifier += "", false);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    },
    utcFormat: function(specifier) {
      var f3 = newFormat(specifier += "", utcFormats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    utcParse: function(specifier) {
      var p3 = newParse(specifier += "", true);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    }
  };
}
var pads = {"-": "", _: " ", "0": "0"};
var numberRe = /^\s*\d+/;
var percentRe = /^%/;
var requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value2, fill, width) {
  var sign5 = value2 < 0 ? "-" : "", string2 = (sign5 ? -value2 : value2) + "", length = string2.length;
  return sign5 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote(s4) {
  return s4.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}
function parseWeekdayNumberSunday(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 1));
  return n3 ? (d2.w = +n3[0], i + n3[0].length) : -1;
}
function parseWeekdayNumberMonday(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 1));
  return n3 ? (d2.u = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberSunday(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.U = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberISO(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.V = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberMonday(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.W = +n3[0], i + n3[0].length) : -1;
}
function parseFullYear(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 4));
  return n3 ? (d2.y = +n3[0], i + n3[0].length) : -1;
}
function parseYear(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.y = +n3[0] + (+n3[0] > 68 ? 1900 : 2e3), i + n3[0].length) : -1;
}
function parseZone(d2, string2, i) {
  var n3 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n3 ? (d2.Z = n3[1] ? 0 : -(n3[2] + (n3[3] || "00")), i + n3[0].length) : -1;
}
function parseQuarter(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 1));
  return n3 ? (d2.q = n3[0] * 3 - 3, i + n3[0].length) : -1;
}
function parseMonthNumber(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.m = n3[0] - 1, i + n3[0].length) : -1;
}
function parseDayOfMonth(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseDayOfYear(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 3));
  return n3 ? (d2.m = 0, d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseHour24(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.H = +n3[0], i + n3[0].length) : -1;
}
function parseMinutes(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.M = +n3[0], i + n3[0].length) : -1;
}
function parseSeconds(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 2));
  return n3 ? (d2.S = +n3[0], i + n3[0].length) : -1;
}
function parseMilliseconds(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 3));
  return n3 ? (d2.L = +n3[0], i + n3[0].length) : -1;
}
function parseMicroseconds(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i, i + 6));
  return n3 ? (d2.L = Math.floor(n3[0] / 1e3), i + n3[0].length) : -1;
}
function parseLiteralPercent(d2, string2, i) {
  var n3 = percentRe.exec(string2.slice(i, i + 1));
  return n3 ? i + n3[0].length : -1;
}
function parseUnixTimestamp(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i));
  return n3 ? (d2.Q = +n3[0], i + n3[0].length) : -1;
}
function parseUnixTimestampSeconds(d2, string2, i) {
  var n3 = numberRe.exec(string2.slice(i));
  return n3 ? (d2.s = +n3[0], i + n3[0].length) : -1;
}
function formatDayOfMonth(d2, p3) {
  return pad(d2.getDate(), p3, 2);
}
function formatHour24(d2, p3) {
  return pad(d2.getHours(), p3, 2);
}
function formatHour12(d2, p3) {
  return pad(d2.getHours() % 12 || 12, p3, 2);
}
function formatDayOfYear(d2, p3) {
  return pad(1 + day.count(year(d2), d2), p3, 3);
}
function formatMilliseconds(d2, p3) {
  return pad(d2.getMilliseconds(), p3, 3);
}
function formatMicroseconds(d2, p3) {
  return formatMilliseconds(d2, p3) + "000";
}
function formatMonthNumber(d2, p3) {
  return pad(d2.getMonth() + 1, p3, 2);
}
function formatMinutes(d2, p3) {
  return pad(d2.getMinutes(), p3, 2);
}
function formatSeconds(d2, p3) {
  return pad(d2.getSeconds(), p3, 2);
}
function formatWeekdayNumberMonday(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday(d2, p3) {
  return pad(sunday.count(year(d2) - 1, d2), p3, 2);
}
function dISO(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO(d2, p3) {
  d2 = dISO(d2);
  return pad(thursday.count(year(d2), d2) + (year(d2).getDay() === 4), p3, 2);
}
function formatWeekdayNumberSunday(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday(d2, p3) {
  return pad(monday.count(year(d2) - 1, d2), p3, 2);
}
function formatYear(d2, p3) {
  return pad(d2.getFullYear() % 100, p3, 2);
}
function formatYearISO(d2, p3) {
  d2 = dISO(d2);
  return pad(d2.getFullYear() % 100, p3, 2);
}
function formatFullYear(d2, p3) {
  return pad(d2.getFullYear() % 1e4, p3, 4);
}
function formatFullYearISO(d2, p3) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad(d2.getFullYear() % 1e4, p3, 4);
}
function formatZone(d2) {
  var z3 = d2.getTimezoneOffset();
  return (z3 > 0 ? "-" : (z3 *= -1, "+")) + pad(z3 / 60 | 0, "0", 2) + pad(z3 % 60, "0", 2);
}
function formatUTCDayOfMonth(d2, p3) {
  return pad(d2.getUTCDate(), p3, 2);
}
function formatUTCHour24(d2, p3) {
  return pad(d2.getUTCHours(), p3, 2);
}
function formatUTCHour12(d2, p3) {
  return pad(d2.getUTCHours() % 12 || 12, p3, 2);
}
function formatUTCDayOfYear(d2, p3) {
  return pad(1 + utcDay.count(utcYear(d2), d2), p3, 3);
}
function formatUTCMilliseconds(d2, p3) {
  return pad(d2.getUTCMilliseconds(), p3, 3);
}
function formatUTCMicroseconds(d2, p3) {
  return formatUTCMilliseconds(d2, p3) + "000";
}
function formatUTCMonthNumber(d2, p3) {
  return pad(d2.getUTCMonth() + 1, p3, 2);
}
function formatUTCMinutes(d2, p3) {
  return pad(d2.getUTCMinutes(), p3, 2);
}
function formatUTCSeconds(d2, p3) {
  return pad(d2.getUTCSeconds(), p3, 2);
}
function formatUTCWeekdayNumberMonday(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d2, p3) {
  return pad(utcSunday.count(utcYear(d2) - 1, d2), p3, 2);
}
function UTCdISO(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO(d2, p3) {
  d2 = UTCdISO(d2);
  return pad(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p3, 2);
}
function formatUTCWeekdayNumberSunday(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday(d2, p3) {
  return pad(utcMonday.count(utcYear(d2) - 1, d2), p3, 2);
}
function formatUTCYear(d2, p3) {
  return pad(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCYearISO(d2, p3) {
  d2 = UTCdISO(d2);
  return pad(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCFullYear(d2, p3) {
  return pad(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCFullYearISO(d2, p3) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d2) {
  return +d2;
}
function formatUnixTimestampSeconds(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale2;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale2({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale2(definition) {
  locale2 = formatLocale2(definition);
  timeFormat = locale2.format;
  timeParse = locale2.parse;
  utcFormat = locale2.utcFormat;
  utcParse = locale2.utcParse;
  return locale2;
}

// dist/components/visx.js
var import_tooltip = __toModule(require_tooltip());

// snowpack/pkg/@visx/legend.js
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function LegendItem(_ref) {
  var _ref$flexDirection = _ref.flexDirection, flexDirection = _ref$flexDirection === void 0 ? "row" : _ref$flexDirection, _ref$alignItems = _ref.alignItems, alignItems = _ref$alignItems === void 0 ? "center" : _ref$alignItems, _ref$margin = _ref.margin, margin = _ref$margin === void 0 ? "0" : _ref$margin, _ref$display = _ref.display, display = _ref$display === void 0 ? "flex" : _ref$display, children2 = _ref.children, restProps = _objectWithoutPropertiesLoose5(_ref, ["flexDirection", "alignItems", "margin", "display", "children"]);
  return /* @__PURE__ */ react.createElement("div", _extends6({
    className: "visx-legend-item",
    style: {
      display,
      alignItems,
      flexDirection,
      margin
    }
  }, restProps), children2);
}
LegendItem.propTypes = {
  alignItems: propTypes.string,
  margin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  children: propTypes.node,
  display: propTypes.string
};
function _extends$14() {
  _extends$14 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$14.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$14(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function LegendLabel(_ref) {
  var _ref$flex = _ref.flex, flex = _ref$flex === void 0 ? "1" : _ref$flex, label = _ref.label, _ref$margin = _ref.margin, margin = _ref$margin === void 0 ? "5px 0" : _ref$margin, _ref$align = _ref.align, align = _ref$align === void 0 ? "left" : _ref$align, children2 = _ref.children, restProps = _objectWithoutPropertiesLoose$14(_ref, ["flex", "label", "margin", "align", "children"]);
  return /* @__PURE__ */ react.createElement("div", _extends$14({
    className: "visx-legend-label",
    style: {
      justifyContent: align,
      display: "flex",
      flex,
      margin
    }
  }, restProps), children2 || label);
}
LegendLabel.propTypes = {
  align: propTypes.string,
  label: propTypes.node,
  flex: propTypes.oneOfType([propTypes.string, propTypes.number]),
  margin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  children: propTypes.node
};
function _extends$24() {
  _extends$24 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$24.apply(this, arguments);
}
function ShapeRect(_ref) {
  var fill = _ref.fill, width = _ref.width, height = _ref.height, style = _ref.style;
  return /* @__PURE__ */ react.createElement("div", {
    style: _extends$24({
      width,
      height,
      background: fill
    }, style)
  });
}
ShapeRect.propTypes = {
  fill: propTypes.string,
  width: propTypes.oneOfType([propTypes.string, propTypes.number]),
  height: propTypes.oneOfType([propTypes.string, propTypes.number])
};
function ShapeCircle(_ref) {
  var fill = _ref.fill, width = _ref.width, height = _ref.height, style = _ref.style;
  var cleanWidth = typeof width === "string" || typeof width === "undefined" ? 0 : width;
  var cleanHeight = typeof height === "string" || typeof height === "undefined" ? 0 : height;
  var size = Math.max(cleanWidth, cleanHeight);
  var radius = size / 2;
  return /* @__PURE__ */ react.createElement("svg", {
    width: size,
    height: size
  }, /* @__PURE__ */ react.createElement(Group, {
    top: radius,
    left: radius
  }, /* @__PURE__ */ react.createElement("circle", {
    r: radius,
    fill,
    style
  })));
}
ShapeCircle.propTypes = {
  fill: propTypes.string,
  width: propTypes.oneOfType([propTypes.string, propTypes.number]),
  height: propTypes.oneOfType([propTypes.string, propTypes.number])
};
function ShapeLine(_ref) {
  var fill = _ref.fill, width = _ref.width, height = _ref.height, style = _ref.style;
  var cleanHeight = typeof height === "string" || typeof height === "undefined" ? 0 : height;
  var lineThickness = typeof (style == null ? void 0 : style.strokeWidth) === "number" ? style == null ? void 0 : style.strokeWidth : 2;
  return /* @__PURE__ */ react.createElement("svg", {
    width,
    height
  }, /* @__PURE__ */ react.createElement(Group, {
    top: cleanHeight / 2 - lineThickness / 2
  }, /* @__PURE__ */ react.createElement("line", {
    x1: 0,
    x2: width,
    y1: 0,
    y2: 0,
    stroke: fill,
    strokeWidth: lineThickness,
    style
  })));
}
ShapeLine.propTypes = {
  fill: propTypes.string,
  width: propTypes.oneOfType([propTypes.string, propTypes.number]),
  height: propTypes.oneOfType([propTypes.string, propTypes.number])
};
function _extends$32() {
  _extends$32 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$32.apply(this, arguments);
}
var NO_OP = function NO_OP2() {
  return void 0;
};
function renderShape(_ref) {
  var _ref$shape = _ref.shape, shape = _ref$shape === void 0 ? "rect" : _ref$shape, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? NO_OP : _ref$fill, _ref$size = _ref.size, size = _ref$size === void 0 ? NO_OP : _ref$size, width = _ref.width, height = _ref.height, label = _ref.label, item = _ref.item, itemIndex = _ref.itemIndex, _ref$shapeStyle = _ref.shapeStyle, shapeStyle = _ref$shapeStyle === void 0 ? NO_OP : _ref$shapeStyle;
  var props = {
    width,
    height,
    item,
    itemIndex,
    label,
    fill: fill(_extends$32({}, label)),
    size: size(_extends$32({}, label)),
    style: shapeStyle(_extends$32({}, label))
  };
  if (typeof shape === "string") {
    if (shape === "circle") {
      return /* @__PURE__ */ react.createElement(ShapeCircle, props);
    }
    if (shape === "line") {
      return /* @__PURE__ */ react.createElement(ShapeLine, props);
    }
    return /* @__PURE__ */ react.createElement(ShapeRect, props);
  }
  if (/* @__PURE__ */ react.isValidElement(shape)) {
    return /* @__PURE__ */ react.cloneElement(shape, props);
  }
  if (shape) {
    return /* @__PURE__ */ react.createElement(shape, props);
  }
  return null;
}
function _extends$42() {
  _extends$42 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$42.apply(this, arguments);
}
function LegendShape(_ref) {
  var _ref$shape = _ref.shape, shape = _ref$shape === void 0 ? ShapeRect : _ref$shape, width = _ref.width, height = _ref.height, margin = _ref.margin, label = _ref.label, item = _ref.item, itemIndex = _ref.itemIndex, fill = _ref.fill, size = _ref.size, shapeStyle = _ref.shapeStyle;
  return /* @__PURE__ */ react.createElement("div", {
    className: "visx-legend-shape",
    style: {
      display: "flex",
      width: size ? size(_extends$42({}, label)) : width,
      height: size ? size(_extends$42({}, label)) : height,
      margin
    }
  }, renderShape({
    shape,
    item,
    itemIndex,
    label,
    width,
    height,
    fill,
    shapeStyle
  }));
}
LegendShape.propTypes = {
  itemIndex: propTypes.number.isRequired,
  margin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fill: propTypes.func,
  size: propTypes.func,
  shapeStyle: propTypes.func,
  width: propTypes.oneOfType([propTypes.string, propTypes.number]),
  height: propTypes.oneOfType([propTypes.string, propTypes.number])
};
function valueOrIdentity(_2) {
  if (_2 && typeof _2 === "object" && "value" in _2 && typeof _2.value !== "undefined")
    return _2.value;
  return _2;
}
function valueOrIdentityString(_2) {
  return String(valueOrIdentity(_2));
}
function labelTransformFactory(_ref) {
  var scale = _ref.scale, labelFormat = _ref.labelFormat;
  return function(d2, i) {
    return {
      datum: d2,
      index: i,
      text: "" + labelFormat(d2, i),
      value: scale(d2)
    };
  };
}
function _extends$52() {
  _extends$52 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$52.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$24(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultStyle = {
  display: "flex"
};
function Legend(_ref) {
  var className = _ref.className, _ref$style = _ref.style, style = _ref$style === void 0 ? defaultStyle : _ref$style, scale = _ref.scale, shape = _ref.shape, inputDomain = _ref.domain, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? valueOrIdentityString : _ref$fill, _ref$size = _ref.size, size = _ref$size === void 0 ? valueOrIdentityString : _ref$size, _ref$labelFormat = _ref.labelFormat, labelFormat = _ref$labelFormat === void 0 ? valueOrIdentity : _ref$labelFormat, _ref$labelTransform = _ref.labelTransform, labelTransform = _ref$labelTransform === void 0 ? labelTransformFactory : _ref$labelTransform, _ref$shapeWidth = _ref.shapeWidth, shapeWidth = _ref$shapeWidth === void 0 ? 15 : _ref$shapeWidth, _ref$shapeHeight = _ref.shapeHeight, shapeHeight = _ref$shapeHeight === void 0 ? 15 : _ref$shapeHeight, _ref$shapeMargin = _ref.shapeMargin, shapeMargin = _ref$shapeMargin === void 0 ? "2px 4px 2px 0" : _ref$shapeMargin, shapeStyle = _ref.shapeStyle, _ref$labelAlign = _ref.labelAlign, labelAlign = _ref$labelAlign === void 0 ? "left" : _ref$labelAlign, _ref$labelFlex = _ref.labelFlex, labelFlex = _ref$labelFlex === void 0 ? "1" : _ref$labelFlex, _ref$labelMargin = _ref.labelMargin, labelMargin = _ref$labelMargin === void 0 ? "0 4px" : _ref$labelMargin, _ref$itemMargin = _ref.itemMargin, itemMargin = _ref$itemMargin === void 0 ? "0" : _ref$itemMargin, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "column" : _ref$direction, _ref$itemDirection = _ref.itemDirection, itemDirection = _ref$itemDirection === void 0 ? "row" : _ref$itemDirection, legendLabelProps = _ref.legendLabelProps, children2 = _ref.children, legendItemProps = _objectWithoutPropertiesLoose$24(_ref, ["className", "style", "scale", "shape", "domain", "fill", "size", "labelFormat", "labelTransform", "shapeWidth", "shapeHeight", "shapeMargin", "shapeStyle", "labelAlign", "labelFlex", "labelMargin", "itemMargin", "direction", "itemDirection", "legendLabelProps", "children"]);
  var domain = inputDomain || ("domain" in scale ? scale.domain() : []);
  var labelFormatter = labelTransform({
    scale,
    labelFormat
  });
  var labels = domain.map(labelFormatter);
  if (children2)
    return /* @__PURE__ */ react.createElement(react.Fragment, null, children2(labels));
  return /* @__PURE__ */ react.createElement("div", {
    className: classnames("visx-legend", className),
    style: _extends$52({}, style, {
      flexDirection: direction
    })
  }, labels.map(function(label, i) {
    return /* @__PURE__ */ react.createElement(LegendItem, _extends$52({
      key: "legend-" + label.text + "-" + i,
      margin: itemMargin,
      flexDirection: itemDirection
    }, legendItemProps), /* @__PURE__ */ react.createElement(LegendShape, {
      shape,
      height: shapeHeight,
      width: shapeWidth,
      margin: shapeMargin,
      item: domain[i],
      itemIndex: i,
      label,
      fill,
      size,
      shapeStyle
    }), /* @__PURE__ */ react.createElement(LegendLabel, _extends$52({
      label: label.text,
      flex: labelFlex,
      margin: labelMargin,
      align: labelAlign
    }, legendLabelProps)));
  }));
}
Legend.propTypes = {
  children: propTypes.func,
  className: propTypes.string,
  domain: propTypes.array,
  shapeWidth: propTypes.oneOfType([propTypes.string, propTypes.number]),
  shapeHeight: propTypes.oneOfType([propTypes.string, propTypes.number]),
  shapeMargin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  labelAlign: propTypes.string,
  labelFlex: propTypes.oneOfType([propTypes.string, propTypes.number]),
  labelMargin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  itemMargin: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fill: propTypes.func,
  size: propTypes.func,
  shapeStyle: propTypes.func
};
function Ordinal(props) {
  return /* @__PURE__ */ react.createElement(Legend, props);
}

// dist/components/visx.js
var purple1 = "#6c5efb";
var purple2 = "#c998ff";
var purple3 = "#a44afe";
var background = "#eaedff";
var defaultMargin = {top: 40, right: 0, bottom: 0, left: 0};
var tooltipStyles = {
  ...import_tooltip.defaultStyles,
  minWidth: 60,
  backgroundColor: "rgba(0,0,0,0.9)",
  color: "white"
};
var data = [
  {
    date: "2020-10-01",
    London: "60",
    Paris: "68",
    Berlin: "61"
  },
  {
    date: "2020-10-02",
    London: "57",
    Paris: "58",
    Berlin: "62"
  },
  {
    date: "2020-10-03",
    London: "59",
    Paris: "57",
    Berlin: "72"
  },
  {
    date: "2020-10-04",
    London: "52",
    Paris: "59",
    Berlin: "68"
  },
  {
    date: "2020-10-05",
    London: "63",
    Paris: "57",
    Berlin: "63"
  },
  {
    date: "2020-10-06",
    London: "61",
    Paris: "62",
    Berlin: "61"
  },
  {
    date: "2020-10-07",
    London: "61",
    Paris: "64",
    Berlin: "61"
  },
  {
    date: "2020-10-08",
    London: "64",
    Paris: "66",
    Berlin: "60"
  },
  {
    date: "2020-10-09",
    London: "58",
    Paris: "62",
    Berlin: "60"
  },
  {
    date: "2020-10-10",
    London: "56",
    Paris: "59",
    Berlin: "55"
  },
  {
    date: "2020-10-11",
    London: "57",
    Paris: "58",
    Berlin: "52"
  },
  {
    date: "2020-10-12",
    London: "56",
    Paris: "58",
    Berlin: "54"
  },
  {
    date: "2020-10-13",
    London: "52",
    Paris: "56",
    Berlin: "55"
  },
  {
    date: "2020-10-14",
    London: "58",
    Paris: "57",
    Berlin: "51"
  }
];
var keys = ["London", "Paris", "Berlin"];
var temperatureTotals = data.reduce((allTotals, currentDate) => {
  const totalTemperature = keys.reduce((dailyTotal, k6) => {
    dailyTotal += Number(currentDate[k6]);
    return dailyTotal;
  }, 0);
  allTotals.push(totalTemperature);
  return allTotals;
}, []);
var parseDate = timeParse("%Y-%m-%d");
var format2 = timeFormat("%b %d");
var formatDate = (date6) => format2(parseDate(date6));
var getDate = (d2) => d2.date;
var dateScale = createBandScale({domain: data.map(getDate), padding: 0.2});
var temperatureScale = createLinearScale({
  domain: [0, Math.max(...temperatureTotals)],
  nice: true
});
var colorScale = createOrdinalScale({
  domain: keys,
  range: [purple1, purple2, purple3]
});
var tooltipTimeout;
function TemperatureBarStack(props) {
  const {
    width,
    height,
    event,
    margin
  } = props.settings;
  const {
    tooltipOpen,
    tooltipTop,
    tooltipLeft,
    hideTooltip: hideTooltip2,
    showTooltip,
    tooltipData
  } = import_tooltip.useTooltip();
  const {containerRef, TooltipInPortal} = import_tooltip.useTooltipInPortal();
  if (width < 10)
    return null;
  const xMax = width;
  const yMax = height - margin.top - 100;
  dateScale.rangeRound([0, xMax]);
  temperatureScale.range([yMax, 0]);
  return width < 10 ? null : /* @__PURE__ */ react.createElement("div", {
    style: {position: "relative"}
  }, /* @__PURE__ */ react.createElement("svg", {
    ref: containerRef,
    width,
    height
  }, /* @__PURE__ */ react.createElement("rect", {
    x: 0,
    y: 0,
    width,
    height,
    fill: background,
    rx: 14
  }), /* @__PURE__ */ react.createElement(Grid, {
    top: margin.top,
    left: margin.left,
    xScale: dateScale,
    yScale: temperatureScale,
    width: xMax,
    height: yMax,
    stroke: "black",
    strokeOpacity: 0.1,
    xOffset: dateScale.bandwidth() / 2
  }), /* @__PURE__ */ react.createElement(Group, {
    top: margin.top
  }, /* @__PURE__ */ react.createElement(BarStackComponent, {
    data,
    keys,
    x: getDate,
    xScale: dateScale,
    yScale: temperatureScale,
    color: colorScale
  }, (barStacks) => barStacks.map((barStack) => barStack.bars.map((bar) => /* @__PURE__ */ react.createElement("rect", {
    key: `bar-stack-${barStack.index}-${bar.index}`,
    x: bar.x,
    y: bar.y,
    height: bar.height,
    width: bar.width,
    fill: bar.color,
    onClick: () => {
      if (event)
        alert(`Clicked: ${JSON.stringify(bar)}`);
    },
    onMouseLeave: () => {
      tooltipTimeout = window.setTimeout(() => {
        hideTooltip2();
      }, 300);
    },
    onMouseMove: (event2) => {
      if (tooltipTimeout)
        clearTimeout(tooltipTimeout);
      const top2 = event2.clientY - margin.top - bar.height;
      const left2 = bar.x + bar.width / 2;
      showTooltip({
        tooltipData: bar,
        tooltipTop: top2,
        tooltipLeft: left2
      });
    }
  }))))), /* @__PURE__ */ react.createElement(AxisBottom, {
    top: yMax + margin.top,
    scale: dateScale,
    tickFormat: formatDate,
    stroke: purple3,
    tickStroke: purple3,
    tickLabelProps: () => ({
      fill: purple3,
      fontSize: 11,
      textAnchor: "middle"
    })
  })), /* @__PURE__ */ react.createElement("div", {
    style: {
      position: "absolute",
      top: margin.top / 2 - 10,
      width: "100%",
      display: "flex",
      justifyContent: "center",
      fontSize: 14
    }
  }, /* @__PURE__ */ react.createElement(Ordinal, {
    scale: colorScale,
    direction: "row",
    labelMargin: "0 15px 0 0"
  })), tooltipOpen && tooltipData && /* @__PURE__ */ react.createElement(TooltipInPortal, {
    key: Math.random(),
    top: tooltipTop,
    left: tooltipLeft,
    style: tooltipStyles
  }, /* @__PURE__ */ react.createElement("div", {
    style: {color: colorScale(tooltipData.key)}
  }, /* @__PURE__ */ react.createElement("strong", null, tooltipData.key)), /* @__PURE__ */ react.createElement("div", null, tooltipData.bar.data[tooltipData.key], "\u2109"), /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("small", null, formatDate(getDate(tooltipData.bar.data))))));
}
function Visx() {
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, "VisX Temp Bar Chart"), /* @__PURE__ */ react.createElement(TemperatureBarStack, {
    settings: {width: 600, height: 550, event: false, margin: defaultMargin}
  }));
}

// snowpack/pkg/common/cubic-263021a1.js
var frame = 0;
var timeout = 0;
var interval = 0;
var pokeDelay = 1e3;
var taskHead;
var taskTail;
var clockLast = 0;
var clockNow = 0;
var clockSkew = 0;
var clock = typeof performance === "object" && performance.now ? performance : Date;
var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f3) {
  setTimeout(f3, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
  clockNow = 0;
}
function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time3) {
    if (typeof callback !== "function")
      throw new TypeError("callback is not a function");
    time3 = (time3 == null ? now() : +time3) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail)
        taskTail._next = this;
      else
        taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time3;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time3) {
  var t4 = new Timer();
  t4.restart(callback, delay, time3);
  return t4;
}
function timerFlush() {
  now();
  ++frame;
  var t4 = taskHead, e3;
  while (t4) {
    if ((e3 = clockNow - t4._time) >= 0)
      t4._call.call(null, e3);
    t4 = t4._next;
  }
  --frame;
}
function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}
function poke() {
  var now5 = clock.now(), delay = now5 - clockLast;
  if (delay > pokeDelay)
    clockSkew -= delay, clockLast = now5;
}
function nap() {
  var t04, t14 = taskHead, t23, time3 = Infinity;
  while (t14) {
    if (t14._call) {
      if (time3 > t14._time)
        time3 = t14._time;
      t04 = t14, t14 = t14._next;
    } else {
      t23 = t14._next, t14._next = null;
      t14 = t04 ? t04._next = t23 : taskHead = t23;
    }
  }
  taskTail = t04;
  sleep(time3);
}
function sleep(time3) {
  if (frame)
    return;
  if (timeout)
    timeout = clearTimeout(timeout);
  var delay = time3 - clockNow;
  if (delay > 24) {
    if (time3 < Infinity)
      timeout = setTimeout(wake, time3 - clock.now() - clockSkew);
    if (interval)
      interval = clearInterval(interval);
  } else {
    if (!interval)
      clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
function cubicIn(t4) {
  return t4 * t4 * t4;
}
function cubicOut(t4) {
  return --t4 * t4 * t4 + 1;
}
function cubicInOut(t4) {
  return ((t4 *= 2) <= 1 ? t4 * t4 * t4 : (t4 -= 2) * t4 * t4 + 2) / 2;
}

// snowpack/pkg/common/merge-2c89d5e0.js
var Adder = class {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x5) {
    const p3 = this._partials;
    let i = 0;
    for (let j2 = 0; j2 < this._n && j2 < 32; j2++) {
      const y7 = p3[j2], hi2 = x5 + y7, lo = Math.abs(x5) < Math.abs(y7) ? x5 - (hi2 - y7) : y7 - (hi2 - x5);
      if (lo)
        p3[i++] = lo;
      x5 = hi2;
    }
    p3[i] = x5;
    this._n = i + 1;
    return this;
  }
  valueOf() {
    const p3 = this._partials;
    let n3 = this._n, x5, y7, lo, hi2 = 0;
    if (n3 > 0) {
      hi2 = p3[--n3];
      while (n3 > 0) {
        x5 = hi2;
        y7 = p3[--n3];
        hi2 = x5 + y7;
        lo = y7 - (hi2 - x5);
        if (lo)
          break;
      }
      if (n3 > 0 && (lo < 0 && p3[n3 - 1] < 0 || lo > 0 && p3[n3 - 1] > 0)) {
        y7 = lo * 2;
        x5 = hi2 + y7;
        if (y7 == x5 - hi2)
          hi2 = x5;
      }
    }
    return hi2;
  }
};
function* flatten(arrays) {
  for (const array5 of arrays) {
    yield* array5;
  }
}
function merge(arrays) {
  return Array.from(flatten(arrays));
}

// snowpack/pkg/common/nice-d5ee0ce3.js
function nice(domain, interval3) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x03 = domain[i0], x14 = domain[i1], t4;
  if (x14 < x03) {
    t4 = i0, i0 = i1, i1 = t4;
    t4 = x03, x03 = x14, x14 = t4;
  }
  domain[i0] = interval3.floor(x03);
  domain[i1] = interval3.ceil(x14);
  return domain;
}

// snowpack/pkg/common/millisecond-22862655.js
var millisecond = newInterval(function() {
}, function(date6, step) {
  date6.setTime(+date6 + step);
}, function(start2, end) {
  return end - start2;
});
millisecond.every = function(k6) {
  k6 = Math.floor(k6);
  if (!isFinite(k6) || !(k6 > 0))
    return null;
  if (!(k6 > 1))
    return millisecond;
  return newInterval(function(date6) {
    date6.setTime(Math.floor(date6 / k6) * k6);
  }, function(date6, step) {
    date6.setTime(+date6 + step * k6);
  }, function(start2, end) {
    return (end - start2) / k6;
  });
};

// snowpack/pkg/common/time-fb11ae4c.js
var durationSecond2 = 1e3;
var durationMinute2 = durationSecond2 * 60;
var durationHour2 = durationMinute2 * 60;
var durationDay2 = durationHour2 * 24;
var durationWeek2 = durationDay2 * 7;
var durationMonth = durationDay2 * 30;
var durationYear = durationDay2 * 365;
function date2(t4) {
  return new Date(t4);
}
function number2(t4) {
  return t4 instanceof Date ? +t4 : +new Date(+t4);
}
function calendar(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6) {
  var scale = continuous(), invert2 = scale.invert, domain = scale.domain;
  var formatMillisecond = format6(".%L"), formatSecond = format6(":%S"), formatMinute = format6("%I:%M"), formatHour = format6("%I %p"), formatDay = format6("%a %d"), formatWeek = format6("%b %d"), formatMonth = format6("%B"), formatYear6 = format6("%Y");
  var tickIntervals = [
    [second3, 1, durationSecond2],
    [second3, 5, 5 * durationSecond2],
    [second3, 15, 15 * durationSecond2],
    [second3, 30, 30 * durationSecond2],
    [minute3, 1, durationMinute2],
    [minute3, 5, 5 * durationMinute2],
    [minute3, 15, 15 * durationMinute2],
    [minute3, 30, 30 * durationMinute2],
    [hour3, 1, durationHour2],
    [hour3, 3, 3 * durationHour2],
    [hour3, 6, 6 * durationHour2],
    [hour3, 12, 12 * durationHour2],
    [day3, 1, durationDay2],
    [day3, 2, 2 * durationDay2],
    [week, 1, durationWeek2],
    [month3, 1, durationMonth],
    [month3, 3, 3 * durationMonth],
    [year3, 1, durationYear]
  ];
  function tickFormat4(date6) {
    return (second3(date6) < date6 ? formatMillisecond : minute3(date6) < date6 ? formatSecond : hour3(date6) < date6 ? formatMinute : day3(date6) < date6 ? formatHour : month3(date6) < date6 ? week(date6) < date6 ? formatDay : formatWeek : year3(date6) < date6 ? formatMonth : formatYear6)(date6);
  }
  function tickInterval(interval3, start2, stop) {
    if (interval3 == null)
      interval3 = 10;
    if (typeof interval3 === "number") {
      var target = Math.abs(stop - start2) / interval3, i = bisector(function(i2) {
        return i2[2];
      }).right(tickIntervals, target), step;
      if (i === tickIntervals.length) {
        step = tickStep(start2 / durationYear, stop / durationYear, interval3);
        interval3 = year3;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval3 = i[0];
      } else {
        step = Math.max(tickStep(start2, stop, interval3), 1);
        interval3 = millisecond3;
      }
      return interval3.every(step);
    }
    return interval3;
  }
  scale.invert = function(y7) {
    return new Date(invert2(y7));
  };
  scale.domain = function(_2) {
    return arguments.length ? domain(Array.from(_2, number2)) : domain().map(date2);
  };
  scale.ticks = function(interval3) {
    var d2 = domain(), t04 = d2[0], t14 = d2[d2.length - 1], r3 = t14 < t04, t4;
    if (r3)
      t4 = t04, t04 = t14, t14 = t4;
    t4 = tickInterval(interval3, t04, t14);
    t4 = t4 ? t4.range(t04, t14 + 1) : [];
    return r3 ? t4.reverse() : t4;
  };
  scale.tickFormat = function(count2, specifier) {
    return specifier == null ? tickFormat4 : format6(specifier);
  };
  scale.nice = function(interval3) {
    var d2 = domain();
    return (interval3 = tickInterval(interval3, d2[0], d2[d2.length - 1])) ? domain(nice(d2, interval3)) : scale;
  };
  scale.copy = function() {
    return copy(scale, calendar(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6));
  };
  return scale;
}
function time() {
  return initRange.apply(calendar(year, month, sunday, day, hour, minute, second, millisecond, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
}

// snowpack/pkg/common/max-1b484d11.js
function max(values2, valueof) {
  let max6;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (max6 < value2 || max6 === void 0 && value2 >= value2)) {
        max6 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (max6 < value2 || max6 === void 0 && value2 >= value2)) {
        max6 = value2;
      }
    }
  }
  return max6;
}

// snowpack/pkg/common/sequential-b827d1b6.js
function transformLog(x5) {
  return Math.log(x5);
}
function transformExp(x5) {
  return Math.exp(x5);
}
function transformLogn(x5) {
  return -Math.log(-x5);
}
function transformExpn(x5) {
  return -Math.exp(-x5);
}
function pow10(x5) {
  return isFinite(x5) ? +("1e" + x5) : x5 < 0 ? 0 : x5;
}
function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function(x5) {
    return Math.pow(base, x5);
  };
}
function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function(x5) {
    return Math.log(x5) / base;
  });
}
function reflect(f3) {
  return function(x5) {
    return -f3(-x5);
  };
}
function loggish(transform) {
  var scale = transform(transformLog, transformExp), domain = scale.domain, base = 10, logs, pows;
  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }
  scale.base = function(_2) {
    return arguments.length ? (base = +_2, rescale()) : base;
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.ticks = function(count2) {
    var d2 = domain(), u2 = d2[0], v3 = d2[d2.length - 1], r3;
    if (r3 = v3 < u2)
      i = u2, u2 = v3, v3 = i;
    var i = logs(u2), j2 = logs(v3), p3, k6, t4, n3 = count2 == null ? 10 : +count2, z3 = [];
    if (!(base % 1) && j2 - i < n3) {
      i = Math.floor(i), j2 = Math.ceil(j2);
      if (u2 > 0)
        for (; i <= j2; ++i) {
          for (k6 = 1, p3 = pows(i); k6 < base; ++k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
      else
        for (; i <= j2; ++i) {
          for (k6 = base - 1, p3 = pows(i); k6 >= 1; --k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
      if (z3.length * 2 < n3)
        z3 = ticks(u2, v3, n3);
    } else {
      z3 = ticks(i, j2, Math.min(j2 - i, n3)).map(pows);
    }
    return r3 ? z3.reverse() : z3;
  };
  scale.tickFormat = function(count2, specifier) {
    if (specifier == null)
      specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function")
      specifier = format(specifier);
    if (count2 === Infinity)
      return specifier;
    if (count2 == null)
      count2 = 10;
    var k6 = Math.max(1, base * count2 / scale.ticks().length);
    return function(d2) {
      var i = d2 / pows(Math.round(logs(d2)));
      if (i * base < base - 0.5)
        i *= base;
      return i <= k6 ? specifier(d2) : "";
    };
  };
  scale.nice = function() {
    return domain(nice(domain(), {
      floor: function(x5) {
        return pows(Math.floor(logs(x5)));
      },
      ceil: function(x5) {
        return pows(Math.ceil(logs(x5)));
      }
    }));
  };
  return scale;
}
function log() {
  var scale = loggish(transformer()).domain([1, 10]);
  scale.copy = function() {
    return copy(scale, log()).base(scale.base());
  };
  initRange.apply(scale, arguments);
  return scale;
}
function transformSymlog(c5) {
  return function(x5) {
    return Math.sign(x5) * Math.log1p(Math.abs(x5 / c5));
  };
}
function transformSymexp(c5) {
  return function(x5) {
    return Math.sign(x5) * Math.expm1(Math.abs(x5)) * c5;
  };
}
function symlogish(transform) {
  var c5 = 1, scale = transform(transformSymlog(c5), transformSymexp(c5));
  scale.constant = function(_2) {
    return arguments.length ? transform(transformSymlog(c5 = +_2), transformSymexp(c5)) : c5;
  };
  return linearish(scale);
}
function symlog() {
  var scale = symlogish(transformer());
  scale.copy = function() {
    return copy(scale, symlog()).constant(scale.constant());
  };
  return initRange.apply(scale, arguments);
}
function transformPow(exponent6) {
  return function(x5) {
    return x5 < 0 ? -Math.pow(-x5, exponent6) : Math.pow(x5, exponent6);
  };
}
function transformSqrt(x5) {
  return x5 < 0 ? -Math.sqrt(-x5) : Math.sqrt(x5);
}
function transformSquare(x5) {
  return x5 < 0 ? -x5 * x5 : x5 * x5;
}
function powish(transform) {
  var scale = transform(identity, identity), exponent6 = 1;
  function rescale() {
    return exponent6 === 1 ? transform(identity, identity) : exponent6 === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent6), transformPow(1 / exponent6));
  }
  scale.exponent = function(_2) {
    return arguments.length ? (exponent6 = +_2, rescale()) : exponent6;
  };
  return linearish(scale);
}
function pow() {
  var scale = powish(transformer());
  scale.copy = function() {
    return copy(scale, pow()).exponent(scale.exponent());
  };
  initRange.apply(scale, arguments);
  return scale;
}
function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
function transformer2() {
  var x03 = 0, x14 = 1, t04, t14, k10, transform, interpolator = identity, clamp = false, unknown;
  function scale(x5) {
    return isNaN(x5 = +x5) ? unknown : interpolator(k10 === 0 ? 0.5 : (x5 = (transform(x5) - t04) * k10, clamp ? Math.max(0, Math.min(1, x5)) : x5));
  }
  scale.domain = function(_2) {
    return arguments.length ? ([x03, x14] = _2, t04 = transform(x03 = +x03), t14 = transform(x14 = +x14), k10 = t04 === t14 ? 0 : 1 / (t14 - t04), scale) : [x03, x14];
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = !!_2, scale) : clamp;
  };
  scale.interpolator = function(_2) {
    return arguments.length ? (interpolator = _2, scale) : interpolator;
  };
  function range7(interpolate3) {
    return function(_2) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _2, interpolator = interpolate3(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }
  scale.range = range7(interpolateValue);
  scale.rangeRound = range7(interpolateRound);
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  return function(t4) {
    transform = t4, t04 = t4(x03), t14 = t4(x14), k10 = t04 === t14 ? 0 : 1 / (t14 - t04);
    return scale;
  };
}
function copy2(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
  var scale = linearish(transformer2()(identity));
  scale.copy = function() {
    return copy2(scale, sequential());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialLog() {
  var scale = loggish(transformer2()).domain([1, 10]);
  scale.copy = function() {
    return copy2(scale, sequentialLog()).base(scale.base());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialSymlog() {
  var scale = symlogish(transformer2());
  scale.copy = function() {
    return copy2(scale, sequentialSymlog()).constant(scale.constant());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialPow() {
  var scale = powish(transformer2());
  scale.copy = function() {
    return copy2(scale, sequentialPow()).exponent(scale.exponent());
  };
  return initInterpolator.apply(scale, arguments);
}
function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}

// snowpack/pkg/common/diverging-dee6d460.js
function min(values2, valueof) {
  let min5;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (min5 > value2 || min5 === void 0 && value2 >= value2)) {
        min5 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (min5 > value2 || min5 === void 0 && value2 >= value2)) {
        min5 = value2;
      }
    }
  }
  return min5;
}
function quickselect(array5, k6, left2 = 0, right2 = array5.length - 1, compare = ascending) {
  while (right2 > left2) {
    if (right2 - left2 > 600) {
      const n3 = right2 - left2 + 1;
      const m3 = k6 - left2 + 1;
      const z3 = Math.log(n3);
      const s4 = 0.5 * Math.exp(2 * z3 / 3);
      const sd2 = 0.5 * Math.sqrt(z3 * s4 * (n3 - s4) / n3) * (m3 - n3 / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left2, Math.floor(k6 - m3 * s4 / n3 + sd2));
      const newRight = Math.min(right2, Math.floor(k6 + (n3 - m3) * s4 / n3 + sd2));
      quickselect(array5, k6, newLeft, newRight, compare);
    }
    const t4 = array5[k6];
    let i = left2;
    let j2 = right2;
    swap(array5, left2, k6);
    if (compare(array5[right2], t4) > 0)
      swap(array5, left2, right2);
    while (i < j2) {
      swap(array5, i, j2), ++i, --j2;
      while (compare(array5[i], t4) < 0)
        ++i;
      while (compare(array5[j2], t4) > 0)
        --j2;
    }
    if (compare(array5[left2], t4) === 0)
      swap(array5, left2, j2);
    else
      ++j2, swap(array5, j2, right2);
    if (j2 <= k6)
      left2 = j2 + 1;
    if (k6 <= j2)
      right2 = j2 - 1;
  }
  return array5;
}
function swap(array5, i, j2) {
  const t4 = array5[i];
  array5[i] = array5[j2];
  array5[j2] = t4;
}
function quantile(values2, p3, valueof) {
  values2 = Float64Array.from(numbers(values2, valueof));
  if (!(n3 = values2.length))
    return;
  if ((p3 = +p3) <= 0 || n3 < 2)
    return min(values2);
  if (p3 >= 1)
    return max(values2);
  var n3, i = (n3 - 1) * p3, i0 = Math.floor(i), value0 = max(quickselect(values2, i0).subarray(0, i0 + 1)), value1 = min(values2.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}
function quantileSorted(values2, p3, valueof = number) {
  if (!(n3 = values2.length))
    return;
  if ((p3 = +p3) <= 0 || n3 < 2)
    return +valueof(values2[0], 0, values2);
  if (p3 >= 1)
    return +valueof(values2[n3 - 1], n3 - 1, values2);
  var n3, i = (n3 - 1) * p3, i0 = Math.floor(i), value0 = +valueof(values2[i0], i0, values2), value1 = +valueof(values2[i0 + 1], i0 + 1, values2);
  return value0 + (value1 - value0) * (i - i0);
}
function piecewise(interpolate3, values2) {
  var i = 0, n3 = values2.length - 1, v3 = values2[0], I3 = new Array(n3 < 0 ? 0 : n3);
  while (i < n3)
    I3[i] = interpolate3(v3, v3 = values2[++i]);
  return function(t4) {
    var i2 = Math.max(0, Math.min(n3 - 1, Math.floor(t4 *= n3)));
    return I3[i2](t4 - i2);
  };
}
function identity2(domain) {
  var unknown;
  function scale(x5) {
    return isNaN(x5 = +x5) ? unknown : x5;
  }
  scale.invert = scale;
  scale.domain = scale.range = function(_2) {
    return arguments.length ? (domain = Array.from(_2, number$1), scale) : domain.slice();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return identity2(domain).unknown(unknown);
  };
  domain = arguments.length ? Array.from(domain, number$1) : [0, 1];
  return linearish(scale);
}
function square(x5) {
  return Math.sign(x5) * x5 * x5;
}
function unsquare(x5) {
  return Math.sign(x5) * Math.sqrt(Math.abs(x5));
}
function radial() {
  var squared = continuous(), range7 = [0, 1], round2 = false, unknown;
  function scale(x5) {
    var y7 = unsquare(squared(x5));
    return isNaN(y7) ? unknown : round2 ? Math.round(y7) : y7;
  }
  scale.invert = function(y7) {
    return squared.invert(square(y7));
  };
  scale.domain = function(_2) {
    return arguments.length ? (squared.domain(_2), scale) : squared.domain();
  };
  scale.range = function(_2) {
    return arguments.length ? (squared.range((range7 = Array.from(_2, number$1)).map(square)), scale) : range7.slice();
  };
  scale.rangeRound = function(_2) {
    return scale.range(_2).round(true);
  };
  scale.round = function(_2) {
    return arguments.length ? (round2 = !!_2, scale) : round2;
  };
  scale.clamp = function(_2) {
    return arguments.length ? (squared.clamp(_2), scale) : squared.clamp();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return radial(squared.domain(), range7).round(round2).clamp(squared.clamp()).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
function quantile$1() {
  var domain = [], range7 = [], thresholds = [], unknown;
  function rescale() {
    var i = 0, n3 = Math.max(1, range7.length);
    thresholds = new Array(n3 - 1);
    while (++i < n3)
      thresholds[i - 1] = quantileSorted(domain, i / n3);
    return scale;
  }
  function scale(x5) {
    return isNaN(x5 = +x5) ? unknown : range7[bisectRight(thresholds, x5)];
  }
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [];
    for (let d2 of _2)
      if (d2 != null && !isNaN(d2 = +d2))
        domain.push(d2);
    domain.sort(ascending);
    return rescale();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = Array.from(_2), rescale()) : range7.slice();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.quantiles = function() {
    return thresholds.slice();
  };
  scale.copy = function() {
    return quantile$1().domain(domain).range(range7).unknown(unknown);
  };
  return initRange.apply(scale, arguments);
}
function quantize() {
  var x03 = 0, x14 = 1, n3 = 1, domain = [0.5], range7 = [0, 1], unknown;
  function scale(x5) {
    return x5 <= x5 ? range7[bisectRight(domain, x5, 0, n3)] : unknown;
  }
  function rescale() {
    var i = -1;
    domain = new Array(n3);
    while (++i < n3)
      domain[i] = ((i + 1) * x14 - (i - n3) * x03) / (n3 + 1);
    return scale;
  }
  scale.domain = function(_2) {
    return arguments.length ? ([x03, x14] = _2, x03 = +x03, x14 = +x14, rescale()) : [x03, x14];
  };
  scale.range = function(_2) {
    return arguments.length ? (n3 = (range7 = Array.from(_2)).length - 1, rescale()) : range7.slice();
  };
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x03, domain[0]] : i >= n3 ? [domain[n3 - 1], x14] : [domain[i - 1], domain[i]];
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : scale;
  };
  scale.thresholds = function() {
    return domain.slice();
  };
  scale.copy = function() {
    return quantize().domain([x03, x14]).range(range7).unknown(unknown);
  };
  return initRange.apply(linearish(scale), arguments);
}
function threshold() {
  var domain = [0.5], range7 = [0, 1], unknown, n3 = 1;
  function scale(x5) {
    return x5 <= x5 ? range7[bisectRight(domain, x5, 0, n3)] : unknown;
  }
  scale.domain = function(_2) {
    return arguments.length ? (domain = Array.from(_2), n3 = Math.min(domain.length, range7.length - 1), scale) : domain.slice();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = Array.from(_2), n3 = Math.min(domain.length, range7.length - 1), scale) : range7.slice();
  };
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return [domain[i - 1], domain[i]];
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return threshold().domain(domain).range(range7).unknown(unknown);
  };
  return initRange.apply(scale, arguments);
}
function utcTime() {
  return initRange.apply(calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, utcFormat).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
}
function sequentialQuantile() {
  var domain = [], interpolator = identity;
  function scale(x5) {
    if (!isNaN(x5 = +x5))
      return interpolator((bisectRight(domain, x5, 1) - 1) / (domain.length - 1));
  }
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [];
    for (let d2 of _2)
      if (d2 != null && !isNaN(d2 = +d2))
        domain.push(d2);
    domain.sort(ascending);
    return scale;
  };
  scale.interpolator = function(_2) {
    return arguments.length ? (interpolator = _2, scale) : interpolator;
  };
  scale.range = function() {
    return domain.map((d2, i) => interpolator(i / (domain.length - 1)));
  };
  scale.quantiles = function(n3) {
    return Array.from({length: n3 + 1}, (_2, i) => quantile(domain, i / n3));
  };
  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };
  return initInterpolator.apply(scale, arguments);
}
function transformer3() {
  var x03 = 0, x14 = 0.5, x22 = 1, s4 = 1, t04, t14, t23, k10, k21, interpolator = identity, transform, clamp = false, unknown;
  function scale(x5) {
    return isNaN(x5 = +x5) ? unknown : (x5 = 0.5 + ((x5 = +transform(x5)) - t14) * (s4 * x5 < s4 * t14 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x5)) : x5));
  }
  scale.domain = function(_2) {
    return arguments.length ? ([x03, x14, x22] = _2, t04 = transform(x03 = +x03), t14 = transform(x14 = +x14), t23 = transform(x22 = +x22), k10 = t04 === t14 ? 0 : 0.5 / (t14 - t04), k21 = t14 === t23 ? 0 : 0.5 / (t23 - t14), s4 = t14 < t04 ? -1 : 1, scale) : [x03, x14, x22];
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = !!_2, scale) : clamp;
  };
  scale.interpolator = function(_2) {
    return arguments.length ? (interpolator = _2, scale) : interpolator;
  };
  function range7(interpolate3) {
    return function(_2) {
      var r0, r1, r22;
      return arguments.length ? ([r0, r1, r22] = _2, interpolator = piecewise(interpolate3, [r0, r1, r22]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }
  scale.range = range7(interpolateValue);
  scale.rangeRound = range7(interpolateRound);
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  return function(t4) {
    transform = t4, t04 = t4(x03), t14 = t4(x14), t23 = t4(x22), k10 = t04 === t14 ? 0 : 0.5 / (t14 - t04), k21 = t14 === t23 ? 0 : 0.5 / (t23 - t14), s4 = t14 < t04 ? -1 : 1;
    return scale;
  };
}
function diverging() {
  var scale = linearish(transformer3()(identity));
  scale.copy = function() {
    return copy2(scale, diverging());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingLog() {
  var scale = loggish(transformer3()).domain([0.1, 1, 10]);
  scale.copy = function() {
    return copy2(scale, divergingLog()).base(scale.base());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingSymlog() {
  var scale = symlogish(transformer3());
  scale.copy = function() {
    return copy2(scale, divergingSymlog()).constant(scale.constant());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingPow() {
  var scale = powish(transformer3());
  scale.copy = function() {
    return copy2(scale, divergingPow()).exponent(scale.exponent());
  };
  return initInterpolator.apply(scale, arguments);
}
function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}

// snowpack/pkg/common/extent-64083604.js
function extent(values2, valueof) {
  let min5;
  let max6;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null) {
        if (min5 === void 0) {
          if (value2 >= value2)
            min5 = max6 = value2;
        } else {
          if (min5 > value2)
            min5 = value2;
          if (max6 < value2)
            max6 = value2;
        }
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null) {
        if (min5 === void 0) {
          if (value2 >= value2)
            min5 = max6 = value2;
        } else {
          if (min5 > value2)
            min5 = value2;
          if (max6 < value2)
            max6 = value2;
        }
      }
    }
  }
  return [min5, max6];
}

// snowpack/pkg/common/viridis-c59cbebd.js
function colors(specifier) {
  var n3 = specifier.length / 6 | 0, colors5 = new Array(n3), i = 0;
  while (i < n3)
    colors5[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors5;
}
var schemeCategory10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
var schemeAccent = colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");
var schemeDark2 = colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");
var schemePaired = colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");
var schemePastel1 = colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");
var schemePastel2 = colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");
var schemeSet1 = colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");
var schemeSet2 = colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");
var schemeSet3 = colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");
var ramp = (scheme2) => rgbBasis(scheme2[scheme2.length - 1]);
var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors);
var interpolateBrBG = ramp(scheme);
var scheme$1 = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors);
var interpolatePRGn = ramp(scheme$1);
var scheme$2 = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors);
var interpolatePiYG = ramp(scheme$2);
var scheme$3 = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors);
var interpolatePuOr = ramp(scheme$3);
var scheme$4 = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors);
var interpolateRdBu = ramp(scheme$4);
var scheme$5 = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors);
var interpolateRdGy = ramp(scheme$5);
var scheme$6 = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors);
var interpolateRdYlBu = ramp(scheme$6);
var scheme$7 = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors);
var interpolateRdYlGn = ramp(scheme$7);
var scheme$8 = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors);
var interpolateSpectral = ramp(scheme$8);
var scheme$9 = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors);
var interpolateBuGn = ramp(scheme$9);
var scheme$a = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors);
var interpolateBuPu = ramp(scheme$a);
var scheme$b = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors);
var interpolateGnBu = ramp(scheme$b);
var scheme$c = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors);
var interpolateOrRd = ramp(scheme$c);
var scheme$d = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors);
var interpolatePuBuGn = ramp(scheme$d);
var scheme$e = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors);
var interpolatePuBu = ramp(scheme$e);
var scheme$f = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors);
var interpolatePuRd = ramp(scheme$f);
var scheme$g = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors);
var interpolateRdPu = ramp(scheme$g);
var scheme$h = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors);
var interpolateYlGnBu = ramp(scheme$h);
var scheme$i = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors);
var interpolateYlGn = ramp(scheme$i);
var scheme$j = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors);
var interpolateYlOrBr = ramp(scheme$j);
var scheme$k = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors);
var interpolateYlOrRd = ramp(scheme$k);
var scheme$l = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors);
var interpolateBlues = ramp(scheme$l);
var scheme$m = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors);
var interpolateGreens = ramp(scheme$m);
var scheme$n = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors);
var interpolateGreys = ramp(scheme$n);
var scheme$o = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors);
var interpolatePurples = ramp(scheme$o);
var scheme$p = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors);
var interpolateReds = ramp(scheme$p);
var scheme$q = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors);
var interpolateOranges = ramp(scheme$q);
var interpolateCubehelixDefault = cubehelixLong(cubehelix(300, 0.5, 0), cubehelix(-240, 0.5, 1));
var warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
var cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
var c = cubehelix();
function interpolateRainbow(t4) {
  if (t4 < 0 || t4 > 1)
    t4 -= Math.floor(t4);
  var ts = Math.abs(t4 - 0.5);
  c.h = 360 * t4 - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
var c$1 = rgb();
var pi_1_3 = Math.PI / 3;
var pi_2_3 = Math.PI * 2 / 3;
function interpolateSinebow(t4) {
  var x5;
  t4 = (0.5 - t4) * Math.PI;
  c$1.r = 255 * (x5 = Math.sin(t4)) * x5;
  c$1.g = 255 * (x5 = Math.sin(t4 + pi_1_3)) * x5;
  c$1.b = 255 * (x5 = Math.sin(t4 + pi_2_3)) * x5;
  return c$1 + "";
}
function ramp$1(range7) {
  var n3 = range7.length;
  return function(t4) {
    return range7[Math.max(0, Math.min(n3 - 1, Math.floor(t4 * n3)))];
  };
}
var interpolateViridis = ramp$1(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
var magma = ramp$1(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
var inferno = ramp$1(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
var plasma = ramp$1(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

// snowpack/pkg/d3.js
var InternMap = class extends Map {
  constructor(entries = [], key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    for (const [key2, value2] of entries)
      this.set(key2, value2);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value2) {
    return super.set(intern_set(this, key), value2);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
};
var InternSet = class extends Set {
  constructor(values2 = [], key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    for (const value2 of values2)
      this.add(value2);
  }
  has(value2) {
    return super.has(intern_get(this, value2));
  }
  add(value2) {
    return super.add(intern_set(this, value2));
  }
  delete(value2) {
    return super.delete(intern_delete(this, value2));
  }
};
function intern_get({_intern, _key}, value2) {
  const key = _key(value2);
  return _intern.has(key) ? _intern.get(key) : value2;
}
function intern_set({_intern, _key}, value2) {
  const key = _key(value2);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value2);
  return value2;
}
function intern_delete({_intern, _key}, value2) {
  const key = _key(value2);
  if (_intern.has(key)) {
    value2 = _intern.get(value2);
    _intern.delete(key);
  }
  return value2;
}
function keyof(value2) {
  return value2 !== null && typeof value2 === "object" ? value2.valueOf() : value2;
}
var array = Array.prototype;
var slice2 = array.slice;
var shuffle = shuffler(Math.random);
function shuffler(random) {
  return function shuffle3(array5, i0 = 0, i1 = array5.length) {
    let m3 = i1 - (i0 = +i0);
    while (m3) {
      const i = random() * m3-- | 0, t4 = array5[m3 + i0];
      array5[m3 + i0] = array5[i + i0];
      array5[i + i0] = t4;
    }
    return array5;
  };
}
var degrees = 180 / Math.PI;
var identity$12 = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function decompose(a3, b10, c5, d2, e3, f3) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a3 * a3 + b10 * b10))
    a3 /= scaleX, b10 /= scaleX;
  if (skewX = a3 * c5 + b10 * d2)
    c5 -= a3 * skewX, d2 -= b10 * skewX;
  if (scaleY = Math.sqrt(c5 * c5 + d2 * d2))
    c5 /= scaleY, d2 /= scaleY, skewX /= scaleY;
  if (a3 * d2 < b10 * c5)
    a3 = -a3, b10 = -b10, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e3,
    translateY: f3,
    rotate: Math.atan2(b10, a3) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX,
    scaleY
  };
}
var cssNode;
var cssRoot;
var cssView;
var svgNode;
function parseCss(value2) {
  if (value2 === "none")
    return identity$12;
  if (!cssNode)
    cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value2;
  value2 = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value2 = value2.slice(7, -1).split(",");
  return decompose(+value2[0], +value2[1], +value2[2], +value2[3], +value2[4], +value2[5]);
}
function parseSvg(value2) {
  if (value2 == null)
    return identity$12;
  if (!svgNode)
    svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value2);
  if (!(value2 = svgNode.transform.baseVal.consolidate()))
    return identity$12;
  value2 = value2.matrix;
  return decompose(value2.a, value2.b, value2.c, value2.d, value2.e, value2.f);
}
function interpolateTransform(parse2, pxComma, pxParen, degParen) {
  function pop(s4) {
    return s4.length ? s4.pop() + " " : "";
  }
  function translate3(xa2, ya2, xb2, yb2, s4, q2) {
    if (xa2 !== xb2 || ya2 !== yb2) {
      var i = s4.push("translate(", null, pxComma, null, pxParen);
      q2.push({i: i - 4, x: reinterpolate(xa2, xb2)}, {i: i - 2, x: reinterpolate(ya2, yb2)});
    } else if (xb2 || yb2) {
      s4.push("translate(" + xb2 + pxComma + yb2 + pxParen);
    }
  }
  function rotate(a3, b10, s4, q2) {
    if (a3 !== b10) {
      if (a3 - b10 > 180)
        b10 += 360;
      else if (b10 - a3 > 180)
        a3 += 360;
      q2.push({i: s4.push(pop(s4) + "rotate(", null, degParen) - 2, x: reinterpolate(a3, b10)});
    } else if (b10) {
      s4.push(pop(s4) + "rotate(" + b10 + degParen);
    }
  }
  function skewX(a3, b10, s4, q2) {
    if (a3 !== b10) {
      q2.push({i: s4.push(pop(s4) + "skewX(", null, degParen) - 2, x: reinterpolate(a3, b10)});
    } else if (b10) {
      s4.push(pop(s4) + "skewX(" + b10 + degParen);
    }
  }
  function scale(xa2, ya2, xb2, yb2, s4, q2) {
    if (xa2 !== xb2 || ya2 !== yb2) {
      var i = s4.push(pop(s4) + "scale(", null, ",", null, ")");
      q2.push({i: i - 4, x: reinterpolate(xa2, xb2)}, {i: i - 2, x: reinterpolate(ya2, yb2)});
    } else if (xb2 !== 1 || yb2 !== 1) {
      s4.push(pop(s4) + "scale(" + xb2 + "," + yb2 + ")");
    }
  }
  return function(a3, b10) {
    var s4 = [], q2 = [];
    a3 = parse2(a3), b10 = parse2(b10);
    translate3(a3.translateX, a3.translateY, b10.translateX, b10.translateY, s4, q2);
    rotate(a3.rotate, b10.rotate, s4, q2);
    skewX(a3.skewX, b10.skewX, s4, q2);
    scale(a3.scaleX, a3.scaleY, b10.scaleX, b10.scaleY, s4, q2);
    a3 = b10 = null;
    return function(t4) {
      var i = -1, n3 = q2.length, o;
      while (++i < n3)
        s4[(o = q2[i]).i] = o.x(t4);
      return s4.join("");
    };
  };
}
var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative(date6) {
  return date6.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);
function parseIsoNative(string2) {
  var date6 = new Date(string2);
  return isNaN(date6) ? null : date6;
}
var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : utcParse(isoSpecifier);
var Tableau10 = colors("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");
var slice$1 = Array.prototype.slice;
function identity$2(x5) {
  return x5;
}
var top = 1;
var right = 2;
var bottom = 3;
var left = 4;
var epsilon2 = 1e-6;
function translateX(x5) {
  return "translate(" + (x5 + 0.5) + ",0)";
}
function translateY(y7) {
  return "translate(0," + (y7 + 0.5) + ")";
}
function number3(scale) {
  return (d2) => +scale(d2);
}
function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2;
  if (scale.round())
    offset = Math.round(offset);
  return function(d2) {
    return +scale(d2) + offset;
  };
}
function entering() {
  return !this.__axis;
}
function axis(orient, scale) {
  var tickArguments = [], tickValues = null, tickFormat4 = null, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, k6 = orient === top || orient === left ? -1 : 1, x5 = orient === left || orient === right ? "x" : "y", transform = orient === top || orient === bottom ? translateX : translateY;
  function axis2(context) {
    var values2 = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues, format6 = tickFormat4 == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$2 : tickFormat4, spacing = Math.max(tickSizeInner, 0) + tickPadding, range7 = scale.range(), range0 = +range7[0] + 0.5, range1 = +range7[range7.length - 1] + 0.5, position = (scale.bandwidth ? center : number3)(scale.copy()), selection2 = context.selection ? context.selection() : context, path3 = selection2.selectAll(".domain").data([null]), tick = selection2.selectAll(".tick").data(values2, scale).order(), tickExit = tick.exit(), tickEnter = tick.enter().append("g").attr("class", "tick"), line2 = tick.select("line"), text2 = tick.select("text");
    path3 = path3.merge(path3.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line2 = line2.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x5 + "2", k6 * tickSizeInner));
    text2 = text2.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x5, k6 * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));
    if (context !== selection2) {
      path3 = path3.transition(context);
      tick = tick.transition(context);
      line2 = line2.transition(context);
      text2 = text2.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon2).attr("transform", function(d2) {
        return isFinite(d2 = position(d2)) ? transform(d2) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon2).attr("transform", function(d2) {
        var p3 = this.parentNode.__axis;
        return transform(p3 && isFinite(p3 = p3(d2)) ? p3 : position(d2));
      });
    }
    tickExit.remove();
    path3.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k6 * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k6 * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k6 * tickSizeOuter + "V0.5H" + range1 + "V" + k6 * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function(d2) {
      return transform(position(d2));
    });
    line2.attr(x5 + "2", k6 * tickSizeInner);
    text2.attr(x5, k6 * spacing).text(format6);
    selection2.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection2.each(function() {
      this.__axis = position;
    });
  }
  axis2.scale = function(_2) {
    return arguments.length ? (scale = _2, axis2) : scale;
  };
  axis2.ticks = function() {
    return tickArguments = slice$1.call(arguments), axis2;
  };
  axis2.tickArguments = function(_2) {
    return arguments.length ? (tickArguments = _2 == null ? [] : slice$1.call(_2), axis2) : tickArguments.slice();
  };
  axis2.tickValues = function(_2) {
    return arguments.length ? (tickValues = _2 == null ? null : slice$1.call(_2), axis2) : tickValues && tickValues.slice();
  };
  axis2.tickFormat = function(_2) {
    return arguments.length ? (tickFormat4 = _2, axis2) : tickFormat4;
  };
  axis2.tickSize = function(_2) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_2, axis2) : tickSizeInner;
  };
  axis2.tickSizeInner = function(_2) {
    return arguments.length ? (tickSizeInner = +_2, axis2) : tickSizeInner;
  };
  axis2.tickSizeOuter = function(_2) {
    return arguments.length ? (tickSizeOuter = +_2, axis2) : tickSizeOuter;
  };
  axis2.tickPadding = function(_2) {
    return arguments.length ? (tickPadding = +_2, axis2) : tickPadding;
  };
  return axis2;
}
function axisBottom(scale) {
  return axis(bottom, scale);
}
function axisLeft(scale) {
  return axis(left, scale);
}
var noop = {value: () => {
}};
function dispatch() {
  for (var i = 0, n3 = arguments.length, _2 = {}, t4; i < n3; ++i) {
    if (!(t4 = arguments[i] + "") || t4 in _2 || /[\s.]/.test(t4))
      throw new Error("illegal type: " + t4);
    _2[t4] = [];
  }
  return new Dispatch(_2);
}
function Dispatch(_2) {
  this._ = _2;
}
function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t4) {
    var name = "", i = t4.indexOf(".");
    if (i >= 0)
      name = t4.slice(i + 1), t4 = t4.slice(0, i);
    if (t4 && !types.hasOwnProperty(t4))
      throw new Error("unknown type: " + t4);
    return {type: t4, name};
  });
}
Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _2 = this._, T4 = parseTypenames(typename + "", _2), t4, i = -1, n3 = T4.length;
    if (arguments.length < 2) {
      while (++i < n3)
        if ((t4 = (typename = T4[i]).type) && (t4 = get(_2[t4], typename.name)))
          return t4;
      return;
    }
    if (callback != null && typeof callback !== "function")
      throw new Error("invalid callback: " + callback);
    while (++i < n3) {
      if (t4 = (typename = T4[i]).type)
        _2[t4] = set$1(_2[t4], typename.name, callback);
      else if (callback == null)
        for (t4 in _2)
          _2[t4] = set$1(_2[t4], typename.name, null);
    }
    return this;
  },
  copy: function() {
    var copy5 = {}, _2 = this._;
    for (var t4 in _2)
      copy5[t4] = _2[t4].slice();
    return new Dispatch(copy5);
  },
  call: function(type3, that) {
    if ((n3 = arguments.length - 2) > 0)
      for (var args = new Array(n3), i = 0, n3, t4; i < n3; ++i)
        args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type3))
      throw new Error("unknown type: " + type3);
    for (t4 = this._[type3], i = 0, n3 = t4.length; i < n3; ++i)
      t4[i].value.apply(that, args);
  },
  apply: function(type3, that, args) {
    if (!this._.hasOwnProperty(type3))
      throw new Error("unknown type: " + type3);
    for (var t4 = this._[type3], i = 0, n3 = t4.length; i < n3; ++i)
      t4[i].value.apply(that, args);
  }
};
function get(type3, name) {
  for (var i = 0, n3 = type3.length, c5; i < n3; ++i) {
    if ((c5 = type3[i]).name === name) {
      return c5.value;
    }
  }
}
function set$1(type3, name, callback) {
  for (var i = 0, n3 = type3.length; i < n3; ++i) {
    if (type3[i].name === name) {
      type3[i] = noop, type3 = type3.slice(0, i).concat(type3.slice(i + 1));
      break;
    }
  }
  if (callback != null)
    type3.push({name, value: callback});
  return type3;
}
var xhtml = "http://www.w3.org/1999/xhtml";
var namespaces = {
  svg: "http://www.w3.org/2000/svg",
  xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function namespace(name) {
  var prefix3 = name += "", i = prefix3.indexOf(":");
  if (i >= 0 && (prefix3 = name.slice(0, i)) !== "xmlns")
    name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix3) ? {space: namespaces[prefix3], local: name} : name;
}
function creatorInherit(name) {
  return function() {
    var document2 = this.ownerDocument, uri = this.namespaceURI;
    return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name) : document2.createElementNS(uri, name);
  };
}
function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}
function creator(name) {
  var fullname = namespace(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
function none() {
}
function selector(selector2) {
  return selector2 == null ? none : function() {
    return this.querySelector(selector2);
  };
}
function selection_select(select2) {
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m3 = groups.length, subgroups = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, subgroup = subgroups[j2] = new Array(n3), node, subnode, i = 0; i < n3; ++i) {
      if ((node = group[i]) && (subnode = select2.call(node, node.__data__, i, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }
  return new Selection(subgroups, this._parents);
}
function array$1(x5) {
  return typeof x5 === "object" && "length" in x5 ? x5 : Array.from(x5);
}
function empty$1() {
  return [];
}
function selectorAll(selector2) {
  return selector2 == null ? empty$1 : function() {
    return this.querySelectorAll(selector2);
  };
}
function arrayAll(select2) {
  return function() {
    var group = select2.apply(this, arguments);
    return group == null ? [] : array$1(group);
  };
}
function selection_selectAll(select2) {
  if (typeof select2 === "function")
    select2 = arrayAll(select2);
  else
    select2 = selectorAll(select2);
  for (var groups = this._groups, m3 = groups.length, subgroups = [], parents = [], j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, node, i = 0; i < n3; ++i) {
      if (node = group[i]) {
        subgroups.push(select2.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }
  return new Selection(subgroups, parents);
}
function matcher(selector2) {
  return function() {
    return this.matches(selector2);
  };
}
function childMatcher(selector2) {
  return function(node) {
    return node.matches(selector2);
  };
}
var find = Array.prototype.find;
function childFind(match2) {
  return function() {
    return find.call(this.children, match2);
  };
}
function childFirst() {
  return this.firstElementChild;
}
function selection_selectChild(match2) {
  return this.select(match2 == null ? childFirst : childFind(typeof match2 === "function" ? match2 : childMatcher(match2)));
}
var filter$1 = Array.prototype.filter;
function children() {
  return this.children;
}
function childrenFilter(match2) {
  return function() {
    return filter$1.call(this.children, match2);
  };
}
function selection_selectChildren(match2) {
  return this.selectAll(match2 == null ? children : childrenFilter(typeof match2 === "function" ? match2 : childMatcher(match2)));
}
function selection_filter(match2) {
  if (typeof match2 !== "function")
    match2 = matcher(match2);
  for (var groups = this._groups, m3 = groups.length, subgroups = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, subgroup = subgroups[j2] = [], node, i = 0; i < n3; ++i) {
      if ((node = group[i]) && match2.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Selection(subgroups, this._parents);
}
function sparse(update) {
  return new Array(update.length);
}
function selection_enter() {
  return new Selection(this._enter || this._groups.map(sparse), this._parents);
}
function EnterNode(parent, datum2) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum2;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function(child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function(selector2) {
    return this._parent.querySelector(selector2);
  },
  querySelectorAll: function(selector2) {
    return this._parent.querySelectorAll(selector2);
  }
};
function constant$1(x5) {
  return function() {
    return x5;
  };
}
function bindIndex(parent, group, enter, update, exit, data3) {
  var i = 0, node, groupLength = group.length, dataLength = data3.length;
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data3[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data3[i]);
    }
  }
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}
function bindKey(parent, group, enter, update, exit, data3, key) {
  var i, node, nodeByKeyValue = new Map(), groupLength = group.length, dataLength = data3.length, keyValues = new Array(groupLength), keyValue;
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data3[i], i, data3) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data3[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent, data3[i]);
    }
  }
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
      exit[i] = node;
    }
  }
}
function datum(node) {
  return node.__data__;
}
function selection_data(value2, key) {
  if (!arguments.length)
    return Array.from(this, datum);
  var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
  if (typeof value2 !== "function")
    value2 = constant$1(value2);
  for (var m3 = groups.length, update = new Array(m3), enter = new Array(m3), exit = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    var parent = parents[j2], group = groups[j2], groupLength = group.length, data3 = array$1(value2.call(parent, parent && parent.__data__, j2, parents)), dataLength = data3.length, enterGroup = enter[j2] = new Array(dataLength), updateGroup = update[j2] = new Array(dataLength), exitGroup = exit[j2] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data3, key);
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1)
          i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength)
          ;
        previous._next = next || null;
      }
    }
  }
  update = new Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
function selection_exit() {
  return new Selection(this._exit || this._groups.map(sparse), this._parents);
}
function selection_join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null)
    update = onupdate(update);
  if (onexit == null)
    exit.remove();
  else
    onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
function selection_merge(selection2) {
  if (!(selection2 instanceof Selection))
    throw new Error("invalid merge");
  for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m3 = Math.min(m0, m1), merges = new Array(m0), j2 = 0; j2 < m3; ++j2) {
    for (var group0 = groups0[j2], group1 = groups1[j2], n3 = group0.length, merge3 = merges[j2] = new Array(n3), node, i = 0; i < n3; ++i) {
      if (node = group0[i] || group1[i]) {
        merge3[i] = node;
      }
    }
  }
  for (; j2 < m0; ++j2) {
    merges[j2] = groups0[j2];
  }
  return new Selection(merges, this._parents);
}
function selection_order() {
  for (var groups = this._groups, j2 = -1, m3 = groups.length; ++j2 < m3; ) {
    for (var group = groups[j2], i = group.length - 1, next = group[i], node; --i >= 0; ) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4)
          next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }
  return this;
}
function selection_sort(compare) {
  if (!compare)
    compare = ascending2;
  function compareNode(a3, b10) {
    return a3 && b10 ? compare(a3.__data__, b10.__data__) : !a3 - !b10;
  }
  for (var groups = this._groups, m3 = groups.length, sortgroups = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, sortgroup = sortgroups[j2] = new Array(n3), node, i = 0; i < n3; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }
  return new Selection(sortgroups, this._parents).order();
}
function ascending2(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function selection_call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
function selection_nodes() {
  return Array.from(this);
}
function selection_node() {
  for (var groups = this._groups, j2 = 0, m3 = groups.length; j2 < m3; ++j2) {
    for (var group = groups[j2], i = 0, n3 = group.length; i < n3; ++i) {
      var node = group[i];
      if (node)
        return node;
    }
  }
  return null;
}
function selection_size() {
  let size = 0;
  for (const node of this)
    ++size;
  return size;
}
function selection_empty() {
  return !this.node();
}
function selection_each(callback) {
  for (var groups = this._groups, j2 = 0, m3 = groups.length; j2 < m3; ++j2) {
    for (var group = groups[j2], i = 0, n3 = group.length, node; i < n3; ++i) {
      if (node = group[i])
        callback.call(node, node.__data__, i, group);
    }
  }
  return this;
}
function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant(name, value2) {
  return function() {
    this.setAttribute(name, value2);
  };
}
function attrConstantNS(fullname, value2) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value2);
  };
}
function attrFunction(name, value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    if (v3 == null)
      this.removeAttribute(name);
    else
      this.setAttribute(name, v3);
  };
}
function attrFunctionNS(fullname, value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    if (v3 == null)
      this.removeAttributeNS(fullname.space, fullname.local);
    else
      this.setAttributeNS(fullname.space, fullname.local, v3);
  };
}
function selection_attr(name, value2) {
  var fullname = namespace(name);
  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }
  return this.each((value2 == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value2 === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value2));
}
function defaultView(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
}
function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant(name, value2, priority) {
  return function() {
    this.style.setProperty(name, value2, priority);
  };
}
function styleFunction(name, value2, priority) {
  return function() {
    var v3 = value2.apply(this, arguments);
    if (v3 == null)
      this.style.removeProperty(name);
    else
      this.style.setProperty(name, v3, priority);
  };
}
function selection_style(name, value2, priority) {
  return arguments.length > 1 ? this.each((value2 == null ? styleRemove : typeof value2 === "function" ? styleFunction : styleConstant)(name, value2, priority == null ? "" : priority)) : styleValue(this.node(), name);
}
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
}
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}
function propertyConstant(name, value2) {
  return function() {
    this[name] = value2;
  };
}
function propertyFunction(name, value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    if (v3 == null)
      delete this[name];
    else
      this[name] = v3;
  };
}
function selection_property(name, value2) {
  return arguments.length > 1 ? this.each((value2 == null ? propertyRemove : typeof value2 === "function" ? propertyFunction : propertyConstant)(name, value2)) : this.node()[name];
}
function classArray(string2) {
  return string2.trim().split(/^|\s+/);
}
function classList(node) {
  return node.classList || new ClassList(node);
}
function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}
ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};
function classedAdd(node, names) {
  var list = classList(node), i = -1, n3 = names.length;
  while (++i < n3)
    list.add(names[i]);
}
function classedRemove(node, names) {
  var list = classList(node), i = -1, n3 = names.length;
  while (++i < n3)
    list.remove(names[i]);
}
function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}
function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}
function classedFunction(names, value2) {
  return function() {
    (value2.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}
function selection_classed(name, value2) {
  var names = classArray(name + "");
  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n3 = names.length;
    while (++i < n3)
      if (!list.contains(names[i]))
        return false;
    return true;
  }
  return this.each((typeof value2 === "function" ? classedFunction : value2 ? classedTrue : classedFalse)(names, value2));
}
function textRemove() {
  this.textContent = "";
}
function textConstant(value2) {
  return function() {
    this.textContent = value2;
  };
}
function textFunction(value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    this.textContent = v3 == null ? "" : v3;
  };
}
function selection_text(value2) {
  return arguments.length ? this.each(value2 == null ? textRemove : (typeof value2 === "function" ? textFunction : textConstant)(value2)) : this.node().textContent;
}
function htmlRemove() {
  this.innerHTML = "";
}
function htmlConstant(value2) {
  return function() {
    this.innerHTML = value2;
  };
}
function htmlFunction(value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    this.innerHTML = v3 == null ? "" : v3;
  };
}
function selection_html(value2) {
  return arguments.length ? this.each(value2 == null ? htmlRemove : (typeof value2 === "function" ? htmlFunction : htmlConstant)(value2)) : this.node().innerHTML;
}
function raise() {
  if (this.nextSibling)
    this.parentNode.appendChild(this);
}
function selection_raise() {
  return this.each(raise);
}
function lower() {
  if (this.previousSibling)
    this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function selection_lower() {
  return this.each(lower);
}
function selection_append(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}
function constantNull() {
  return null;
}
function selection_insert(name, before) {
  var create = typeof name === "function" ? name : creator(name), select2 = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select2.apply(this, arguments) || null);
  });
}
function remove() {
  var parent = this.parentNode;
  if (parent)
    parent.removeChild(this);
}
function selection_remove() {
  return this.each(remove);
}
function selection_cloneShallow() {
  var clone2 = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_cloneDeep() {
  var clone2 = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
function selection_datum(value2) {
  return arguments.length ? this.property("__data__", value2) : this.node().__data__;
}
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}
function parseTypenames$1(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t4) {
    var name = "", i = t4.indexOf(".");
    if (i >= 0)
      name = t4.slice(i + 1), t4 = t4.slice(0, i);
    return {type: t4, name};
  });
}
function onRemove(typename) {
  return function() {
    var on2 = this.__on;
    if (!on2)
      return;
    for (var j2 = 0, i = -1, m3 = on2.length, o; j2 < m3; ++j2) {
      if (o = on2[j2], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on2[++i] = o;
      }
    }
    if (++i)
      on2.length = i;
    else
      delete this.__on;
  };
}
function onAdd(typename, value2, options2) {
  return function() {
    var on2 = this.__on, o, listener = contextListener(value2);
    if (on2)
      for (var j2 = 0, m3 = on2.length; j2 < m3; ++j2) {
        if ((o = on2[j2]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options2);
          o.value = value2;
          return;
        }
      }
    this.addEventListener(typename.type, listener, options2);
    o = {type: typename.type, name: typename.name, value: value2, listener, options: options2};
    if (!on2)
      this.__on = [o];
    else
      on2.push(o);
  };
}
function selection_on(typename, value2, options2) {
  var typenames = parseTypenames$1(typename + ""), i, n3 = typenames.length, t4;
  if (arguments.length < 2) {
    var on2 = this.node().__on;
    if (on2)
      for (var j2 = 0, m3 = on2.length, o; j2 < m3; ++j2) {
        for (i = 0, o = on2[j2]; i < n3; ++i) {
          if ((t4 = typenames[i]).type === o.type && t4.name === o.name) {
            return o.value;
          }
        }
      }
    return;
  }
  on2 = value2 ? onAdd : onRemove;
  for (i = 0; i < n3; ++i)
    this.each(on2(typenames[i], value2, options2));
  return this;
}
function dispatchEvent(node, type3, params) {
  var window2 = defaultView(node), event = window2.CustomEvent;
  if (typeof event === "function") {
    event = new event(type3, params);
  } else {
    event = window2.document.createEvent("Event");
    if (params)
      event.initEvent(type3, params.bubbles, params.cancelable), event.detail = params.detail;
    else
      event.initEvent(type3, false, false);
  }
  node.dispatchEvent(event);
}
function dispatchConstant(type3, params) {
  return function() {
    return dispatchEvent(this, type3, params);
  };
}
function dispatchFunction(type3, params) {
  return function() {
    return dispatchEvent(this, type3, params.apply(this, arguments));
  };
}
function selection_dispatch(type3, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type3, params));
}
function* selection_iterator() {
  for (var groups = this._groups, j2 = 0, m3 = groups.length; j2 < m3; ++j2) {
    for (var group = groups[j2], i = 0, n3 = group.length, node; i < n3; ++i) {
      if (node = group[i])
        yield node;
    }
  }
}
var root2 = [null];
function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}
function selection() {
  return new Selection([[document.documentElement]], root2);
}
function selection_selection() {
  return this;
}
Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: selection_select,
  selectAll: selection_selectAll,
  selectChild: selection_selectChild,
  selectChildren: selection_selectChildren,
  filter: selection_filter,
  data: selection_data,
  enter: selection_enter,
  exit: selection_exit,
  join: selection_join,
  merge: selection_merge,
  selection: selection_selection,
  order: selection_order,
  sort: selection_sort,
  call: selection_call,
  nodes: selection_nodes,
  node: selection_node,
  size: selection_size,
  empty: selection_empty,
  each: selection_each,
  attr: selection_attr,
  style: selection_style,
  property: selection_property,
  classed: selection_classed,
  text: selection_text,
  html: selection_html,
  raise: selection_raise,
  lower: selection_lower,
  append: selection_append,
  insert: selection_insert,
  remove: selection_remove,
  clone: selection_clone,
  datum: selection_datum,
  on: selection_on,
  dispatch: selection_dispatch,
  [Symbol.iterator]: selection_iterator
};
function select(selector2) {
  return typeof selector2 === "string" ? new Selection([[document.querySelector(selector2)]], [document.documentElement]) : new Selection([[selector2]], root2);
}
var nextId = 0;
function local() {
  return new Local();
}
function Local() {
  this._ = "@" + (++nextId).toString(36);
}
Local.prototype = local.prototype = {
  constructor: Local,
  get: function(node) {
    var id3 = this._;
    while (!(id3 in node))
      if (!(node = node.parentNode))
        return;
    return node[id3];
  },
  set: function(node, value2) {
    return node[this._] = value2;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};
function sourceEvent(event) {
  let sourceEvent2;
  while (sourceEvent2 = event.sourceEvent)
    event = sourceEvent2;
  return event;
}
function pointer(event, node) {
  event = sourceEvent(event);
  if (node === void 0)
    node = event.currentTarget;
  if (node) {
    var svg2 = node.ownerSVGElement || node;
    if (svg2.createSVGPoint) {
      var point8 = svg2.createSVGPoint();
      point8.x = event.clientX, point8.y = event.clientY;
      point8 = point8.matrixTransform(node.getScreenCTM().inverse());
      return [point8.x, point8.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}
function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
function dragDisable(view) {
  var root4 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", noevent, true);
  if ("onselectstart" in root4) {
    selection2.on("selectstart.drag", noevent, true);
  } else {
    root4.__noselect = root4.style.MozUserSelect;
    root4.style.MozUserSelect = "none";
  }
}
function yesdrag(view, noclick) {
  var root4 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", null);
  if (noclick) {
    selection2.on("click.drag", noevent, true);
    setTimeout(function() {
      selection2.on("click.drag", null);
    }, 0);
  }
  if ("onselectstart" in root4) {
    selection2.on("selectstart.drag", null);
  } else {
    root4.style.MozUserSelect = root4.__noselect;
    delete root4.__noselect;
  }
}
function DragEvent(type3, {
  sourceEvent: sourceEvent2,
  subject,
  target,
  identifier,
  active,
  x: x5,
  y: y7,
  dx,
  dy,
  dispatch: dispatch2
}) {
  Object.defineProperties(this, {
    type: {value: type3, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent2, enumerable: true, configurable: true},
    subject: {value: subject, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    identifier: {value: identifier, enumerable: true, configurable: true},
    active: {value: active, enumerable: true, configurable: true},
    x: {value: x5, enumerable: true, configurable: true},
    y: {value: y7, enumerable: true, configurable: true},
    dx: {value: dx, enumerable: true, configurable: true},
    dy: {value: dy, enumerable: true, configurable: true},
    _: {value: dispatch2}
  });
}
DragEvent.prototype.on = function() {
  var value2 = this._.on.apply(this._, arguments);
  return value2 === this._ ? this : value2;
};
function timeout2(callback, delay, time3) {
  var t4 = new Timer();
  delay = delay == null ? 0 : +delay;
  t4.restart(function(elapsed) {
    t4.stop();
    callback(elapsed + delay);
  }, delay, time3);
  return t4;
}
var emptyOn = dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
function schedule(node, name, id3, index4, group, timing) {
  var schedules = node.__transition;
  if (!schedules)
    node.__transition = {};
  else if (id3 in schedules)
    return;
  create$1(node, id3, {
    name,
    index: index4,
    group,
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}
function init(node, id3) {
  var schedule2 = get$1(node, id3);
  if (schedule2.state > CREATED)
    throw new Error("too late; already scheduled");
  return schedule2;
}
function set$2(node, id3) {
  var schedule2 = get$1(node, id3);
  if (schedule2.state > STARTED)
    throw new Error("too late; already running");
  return schedule2;
}
function get$1(node, id3) {
  var schedule2 = node.__transition;
  if (!schedule2 || !(schedule2 = schedule2[id3]))
    throw new Error("transition not found");
  return schedule2;
}
function create$1(node, id3, self2) {
  var schedules = node.__transition, tween;
  schedules[id3] = self2;
  self2.timer = timer(schedule2, 0, self2.time);
  function schedule2(elapsed) {
    self2.state = SCHEDULED;
    self2.timer.restart(start2, self2.delay, self2.time);
    if (self2.delay <= elapsed)
      start2(elapsed - self2.delay);
  }
  function start2(elapsed) {
    var i, j2, n3, o;
    if (self2.state !== SCHEDULED)
      return stop();
    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self2.name)
        continue;
      if (o.state === STARTED)
        return timeout2(start2);
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } else if (+i < id3) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }
    timeout2(function() {
      if (self2.state === STARTED) {
        self2.state = RUNNING;
        self2.timer.restart(tick, self2.delay, self2.time);
        tick(elapsed);
      }
    });
    self2.state = STARTING;
    self2.on.call("start", node, node.__data__, self2.index, self2.group);
    if (self2.state !== STARTING)
      return;
    self2.state = STARTED;
    tween = new Array(n3 = self2.tween.length);
    for (i = 0, j2 = -1; i < n3; ++i) {
      if (o = self2.tween[i].value.call(node, node.__data__, self2.index, self2.group)) {
        tween[++j2] = o;
      }
    }
    tween.length = j2 + 1;
  }
  function tick(elapsed) {
    var t4 = elapsed < self2.duration ? self2.ease.call(null, elapsed / self2.duration) : (self2.timer.restart(stop), self2.state = ENDING, 1), i = -1, n3 = tween.length;
    while (++i < n3) {
      tween[i].call(node, t4);
    }
    if (self2.state === ENDING) {
      self2.on.call("end", node, node.__data__, self2.index, self2.group);
      stop();
    }
  }
  function stop() {
    self2.state = ENDED;
    self2.timer.stop();
    delete schedules[id3];
    for (var i in schedules)
      return;
    delete node.__transition;
  }
}
function interrupt(node, name) {
  var schedules = node.__transition, schedule2, active, empty2 = true, i;
  if (!schedules)
    return;
  name = name == null ? null : name + "";
  for (i in schedules) {
    if ((schedule2 = schedules[i]).name !== name) {
      empty2 = false;
      continue;
    }
    active = schedule2.state > STARTING && schedule2.state < ENDING;
    schedule2.state = ENDED;
    schedule2.timer.stop();
    schedule2.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule2.index, schedule2.group);
    delete schedules[i];
  }
  if (empty2)
    delete node.__transition;
}
function selection_interrupt(name) {
  return this.each(function() {
    interrupt(this, name);
  });
}
function tweenRemove(id3, name) {
  var tween0, tween1;
  return function() {
    var schedule2 = set$2(this, id3), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n3 = tween1.length; i < n3; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }
    schedule2.tween = tween1;
  };
}
function tweenFunction(id3, name, value2) {
  var tween0, tween1;
  if (typeof value2 !== "function")
    throw new Error();
  return function() {
    var schedule2 = set$2(this, id3), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t4 = {name, value: value2}, i = 0, n3 = tween1.length; i < n3; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t4;
          break;
        }
      }
      if (i === n3)
        tween1.push(t4);
    }
    schedule2.tween = tween1;
  };
}
function transition_tween(name, value2) {
  var id3 = this._id;
  name += "";
  if (arguments.length < 2) {
    var tween = get$1(this.node(), id3).tween;
    for (var i = 0, n3 = tween.length, t4; i < n3; ++i) {
      if ((t4 = tween[i]).name === name) {
        return t4.value;
      }
    }
    return null;
  }
  return this.each((value2 == null ? tweenRemove : tweenFunction)(id3, name, value2));
}
function tweenValue(transition2, name, value2) {
  var id3 = transition2._id;
  transition2.each(function() {
    var schedule2 = set$2(this, id3);
    (schedule2.value || (schedule2.value = {}))[name] = value2.apply(this, arguments);
  });
  return function(node) {
    return get$1(node, id3).value[name];
  };
}
function interpolate(a3, b10) {
  var c5;
  return (typeof b10 === "number" ? reinterpolate : b10 instanceof color ? interpolateRgb : (c5 = color(b10)) ? (b10 = c5, interpolateRgb) : interpolateString)(a3, b10);
}
function attrRemove$1(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS$1(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant$1(name, interpolate3, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate3(string00 = string0, value1);
  };
}
function attrConstantNS$1(fullname, interpolate3, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate3(string00 = string0, value1);
  };
}
function attrFunction$1(name, interpolate3, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value2(this), string1;
    if (value1 == null)
      return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate3(string00 = string0, value1));
  };
}
function attrFunctionNS$1(fullname, interpolate3, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value2(this), string1;
    if (value1 == null)
      return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate3(string00 = string0, value1));
  };
}
function transition_attr(name, value2) {
  var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name, typeof value2 === "function" ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value2)) : value2 == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname) : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value2));
}
function attrInterpolate(name, i) {
  return function(t4) {
    this.setAttribute(name, i.call(this, t4));
  };
}
function attrInterpolateNS(fullname, i) {
  return function(t4) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t4));
  };
}
function attrTweenNS(fullname, value2) {
  var t04, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t04 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t04;
  }
  tween._value = value2;
  return tween;
}
function attrTween(name, value2) {
  var t04, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t04 = (i0 = i) && attrInterpolate(name, i);
    return t04;
  }
  tween._value = value2;
  return tween;
}
function transition_attrTween(name, value2) {
  var key = "attr." + name;
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  var fullname = namespace(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value2));
}
function delayFunction(id3, value2) {
  return function() {
    init(this, id3).delay = +value2.apply(this, arguments);
  };
}
function delayConstant(id3, value2) {
  return value2 = +value2, function() {
    init(this, id3).delay = value2;
  };
}
function transition_delay(value2) {
  var id3 = this._id;
  return arguments.length ? this.each((typeof value2 === "function" ? delayFunction : delayConstant)(id3, value2)) : get$1(this.node(), id3).delay;
}
function durationFunction(id3, value2) {
  return function() {
    set$2(this, id3).duration = +value2.apply(this, arguments);
  };
}
function durationConstant(id3, value2) {
  return value2 = +value2, function() {
    set$2(this, id3).duration = value2;
  };
}
function transition_duration(value2) {
  var id3 = this._id;
  return arguments.length ? this.each((typeof value2 === "function" ? durationFunction : durationConstant)(id3, value2)) : get$1(this.node(), id3).duration;
}
function easeConstant(id3, value2) {
  if (typeof value2 !== "function")
    throw new Error();
  return function() {
    set$2(this, id3).ease = value2;
  };
}
function transition_ease(value2) {
  var id3 = this._id;
  return arguments.length ? this.each(easeConstant(id3, value2)) : get$1(this.node(), id3).ease;
}
function easeVarying(id3, value2) {
  return function() {
    var v3 = value2.apply(this, arguments);
    if (typeof v3 !== "function")
      throw new Error();
    set$2(this, id3).ease = v3;
  };
}
function transition_easeVarying(value2) {
  if (typeof value2 !== "function")
    throw new Error();
  return this.each(easeVarying(this._id, value2));
}
function transition_filter(match2) {
  if (typeof match2 !== "function")
    match2 = matcher(match2);
  for (var groups = this._groups, m3 = groups.length, subgroups = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, subgroup = subgroups[j2] = [], node, i = 0; i < n3; ++i) {
      if ((node = group[i]) && match2.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Transition(subgroups, this._parents, this._name, this._id);
}
function transition_merge(transition2) {
  if (transition2._id !== this._id)
    throw new Error();
  for (var groups0 = this._groups, groups1 = transition2._groups, m0 = groups0.length, m1 = groups1.length, m3 = Math.min(m0, m1), merges = new Array(m0), j2 = 0; j2 < m3; ++j2) {
    for (var group0 = groups0[j2], group1 = groups1[j2], n3 = group0.length, merge3 = merges[j2] = new Array(n3), node, i = 0; i < n3; ++i) {
      if (node = group0[i] || group1[i]) {
        merge3[i] = node;
      }
    }
  }
  for (; j2 < m0; ++j2) {
    merges[j2] = groups0[j2];
  }
  return new Transition(merges, this._parents, this._name, this._id);
}
function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t4) {
    var i = t4.indexOf(".");
    if (i >= 0)
      t4 = t4.slice(0, i);
    return !t4 || t4 === "start";
  });
}
function onFunction(id3, name, listener) {
  var on0, on1, sit = start(name) ? init : set$2;
  return function() {
    var schedule2 = sit(this, id3), on2 = schedule2.on;
    if (on2 !== on0)
      (on1 = (on0 = on2).copy()).on(name, listener);
    schedule2.on = on1;
  };
}
function transition_on(name, listener) {
  var id3 = this._id;
  return arguments.length < 2 ? get$1(this.node(), id3).on.on(name) : this.each(onFunction(id3, name, listener));
}
function removeFunction(id3) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition)
      if (+i !== id3)
        return;
    if (parent)
      parent.removeChild(this);
  };
}
function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}
function transition_select(select2) {
  var name = this._name, id3 = this._id;
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m3 = groups.length, subgroups = new Array(m3), j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, subgroup = subgroups[j2] = new Array(n3), node, subnode, i = 0; i < n3; ++i) {
      if ((node = group[i]) && (subnode = select2.call(node, node.__data__, i, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule(subgroup[i], name, id3, i, subgroup, get$1(node, id3));
      }
    }
  }
  return new Transition(subgroups, this._parents, name, id3);
}
function transition_selectAll(select2) {
  var name = this._name, id3 = this._id;
  if (typeof select2 !== "function")
    select2 = selectorAll(select2);
  for (var groups = this._groups, m3 = groups.length, subgroups = [], parents = [], j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, node, i = 0; i < n3; ++i) {
      if (node = group[i]) {
        for (var children2 = select2.call(node, node.__data__, i, group), child, inherit2 = get$1(node, id3), k6 = 0, l3 = children2.length; k6 < l3; ++k6) {
          if (child = children2[k6]) {
            schedule(child, name, id3, k6, children2, inherit2);
          }
        }
        subgroups.push(children2);
        parents.push(node);
      }
    }
  }
  return new Transition(subgroups, parents, name, id3);
}
var Selection$1 = selection.prototype.constructor;
function transition_selection() {
  return new Selection$1(this._groups, this._parents);
}
function styleNull(name, interpolate3) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate3(string00 = string0, string10 = string1);
  };
}
function styleRemove$1(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant$1(name, interpolate3, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate3(string00 = string0, value1);
  };
}
function styleFunction$1(name, interpolate3, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), value1 = value2(this), string1 = value1 + "";
    if (value1 == null)
      string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate3(string00 = string0, value1));
  };
}
function styleMaybeRemove(id3, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove2;
  return function() {
    var schedule2 = set$2(this, id3), on2 = schedule2.on, listener = schedule2.value[key] == null ? remove2 || (remove2 = styleRemove$1(name)) : void 0;
    if (on2 !== on0 || listener0 !== listener)
      (on1 = (on0 = on2).copy()).on(event, listener0 = listener);
    schedule2.on = on1;
  };
}
function transition_style(name, value2, priority) {
  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
  return value2 == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove$1(name)) : typeof value2 === "function" ? this.styleTween(name, styleFunction$1(name, i, tweenValue(this, "style." + name, value2))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant$1(name, i, value2), priority).on("end.style." + name, null);
}
function styleInterpolate(name, i, priority) {
  return function(t4) {
    this.style.setProperty(name, i.call(this, t4), priority);
  };
}
function styleTween(name, value2, priority) {
  var t4, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t4 = (i0 = i) && styleInterpolate(name, i, priority);
    return t4;
  }
  tween._value = value2;
  return tween;
}
function transition_styleTween(name, value2, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  return this.tween(key, styleTween(name, value2, priority == null ? "" : priority));
}
function textConstant$1(value2) {
  return function() {
    this.textContent = value2;
  };
}
function textFunction$1(value2) {
  return function() {
    var value1 = value2(this);
    this.textContent = value1 == null ? "" : value1;
  };
}
function transition_text(value2) {
  return this.tween("text", typeof value2 === "function" ? textFunction$1(tweenValue(this, "text", value2)) : textConstant$1(value2 == null ? "" : value2 + ""));
}
function textInterpolate(i) {
  return function(t4) {
    this.textContent = i.call(this, t4);
  };
}
function textTween(value2) {
  var t04, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t04 = (i0 = i) && textInterpolate(i);
    return t04;
  }
  tween._value = value2;
  return tween;
}
function transition_textTween(value2) {
  var key = "text";
  if (arguments.length < 1)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  return this.tween(key, textTween(value2));
}
function transition_transition() {
  var name = this._name, id0 = this._id, id1 = newId();
  for (var groups = this._groups, m3 = groups.length, j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, node, i = 0; i < n3; ++i) {
      if (node = group[i]) {
        var inherit2 = get$1(node, id0);
        schedule(node, name, id1, i, group, {
          time: inherit2.time + inherit2.delay + inherit2.duration,
          delay: 0,
          duration: inherit2.duration,
          ease: inherit2.ease
        });
      }
    }
  }
  return new Transition(groups, this._parents, name, id1);
}
function transition_end() {
  var on0, on1, that = this, id3 = that._id, size = that.size();
  return new Promise(function(resolve, reject) {
    var cancel2 = {value: reject}, end = {value: function() {
      if (--size === 0)
        resolve();
    }};
    that.each(function() {
      var schedule2 = set$2(this, id3), on2 = schedule2.on;
      if (on2 !== on0) {
        on1 = (on0 = on2).copy();
        on1._.cancel.push(cancel2);
        on1._.interrupt.push(cancel2);
        on1._.end.push(end);
      }
      schedule2.on = on1;
    });
    if (size === 0)
      resolve();
  });
}
var id2 = 0;
function Transition(groups, parents, name, id3) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id3;
}
function transition(name) {
  return selection().transition(name);
}
function newId() {
  return ++id2;
}
var selection_prototype = selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: transition_select,
  selectAll: transition_selectAll,
  filter: transition_filter,
  merge: transition_merge,
  selection: transition_selection,
  transition: transition_transition,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: transition_on,
  attr: transition_attr,
  attrTween: transition_attrTween,
  style: transition_style,
  styleTween: transition_styleTween,
  text: transition_text,
  textTween: transition_textTween,
  remove: transition_remove,
  tween: transition_tween,
  delay: transition_delay,
  duration: transition_duration,
  ease: transition_ease,
  easeVarying: transition_easeVarying,
  end: transition_end,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};
var defaultTiming = {
  time: null,
  delay: 0,
  duration: 250,
  ease: cubicInOut
};
function inherit(node, id3) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id3])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id3} not found`);
    }
  }
  return timing;
}
function selection_transition(name) {
  var id3, timing;
  if (name instanceof Transition) {
    id3 = name._id, name = name._name;
  } else {
    id3 = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
  }
  for (var groups = this._groups, m3 = groups.length, j2 = 0; j2 < m3; ++j2) {
    for (var group = groups[j2], n3 = group.length, node, i = 0; i < n3; ++i) {
      if (node = group[i]) {
        schedule(node, name, id3, i, group, timing || inherit(node, id3));
      }
    }
  }
  return new Transition(groups, this._parents, name, id3);
}
selection.prototype.interrupt = selection_interrupt;
selection.prototype.transition = selection_transition;
var constant$3 = (x5) => () => x5;
function BrushEvent(type3, {
  sourceEvent: sourceEvent2,
  target,
  selection: selection2,
  mode,
  dispatch: dispatch2
}) {
  Object.defineProperties(this, {
    type: {value: type3, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent2, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    selection: {value: selection2, enumerable: true, configurable: true},
    mode: {value: mode, enumerable: true, configurable: true},
    _: {value: dispatch2}
  });
}
function nopropagation$1(event) {
  event.stopImmediatePropagation();
}
function noevent$1(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
var MODE_DRAG = {name: "drag"};
var MODE_SPACE = {name: "space"};
var MODE_HANDLE = {name: "handle"};
var MODE_CENTER = {name: "center"};
var {abs, max: max2, min: min2} = Math;
function number1(e3) {
  return [+e3[0], +e3[1]];
}
function number22(e3) {
  return [number1(e3[0]), number1(e3[1])];
}
var X3 = {
  name: "x",
  handles: ["w", "e"].map(type2),
  input: function(x5, e3) {
    return x5 == null ? null : [[+x5[0], e3[0][1]], [+x5[1], e3[1][1]]];
  },
  output: function(xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y3 = {
  name: "y",
  handles: ["n", "s"].map(type2),
  input: function(y7, e3) {
    return y7 == null ? null : [[e3[0][0], +y7[0]], [e3[1][0], +y7[1]]];
  },
  output: function(xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type2),
  input: function(xy) {
    return xy == null ? null : number22(xy);
  },
  output: function(xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: 1,
  selection: 1,
  n: null,
  e: 1,
  s: null,
  w: -1,
  nw: -1,
  ne: 1,
  se: 1,
  sw: -1
};
var signsY = {
  overlay: 1,
  selection: 1,
  n: -1,
  e: null,
  s: 1,
  w: null,
  nw: -1,
  ne: -1,
  se: 1,
  sw: 1
};
function type2(t4) {
  return {type: t4};
}
function defaultFilter$1(event) {
  return !event.ctrlKey && !event.button;
}
function defaultExtent() {
  var svg2 = this.ownerSVGElement || this;
  if (svg2.hasAttribute("viewBox")) {
    svg2 = svg2.viewBox.baseVal;
    return [[svg2.x, svg2.y], [svg2.x + svg2.width, svg2.y + svg2.height]];
  }
  return [[0, 0], [svg2.width.baseVal.value, svg2.height.baseVal.value]];
}
function defaultTouchable$1() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function local$1(node) {
  while (!node.__brush)
    if (!(node = node.parentNode))
      return;
  return node.__brush;
}
function empty$2(extent3) {
  return extent3[0][0] === extent3[1][0] || extent3[0][1] === extent3[1][1];
}
function brushX() {
  return brush$1(X3);
}
function brush$1(dim) {
  var extent3 = defaultExtent, filter2 = defaultFilter$1, touchable = defaultTouchable$1, keys4 = true, listeners = dispatch("start", "brush", "end"), handleSize = 6, touchending;
  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type2("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function() {
      var extent4 = local$1(this).extent;
      select(this).attr("x", extent4[0][0]).attr("y", extent4[0][1]).attr("width", extent4[1][0] - extent4[0][0]).attr("height", extent4[1][1] - extent4[0][1]);
    });
    group.selectAll(".selection").data([type2("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function(d2) {
      return d2.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function(d2) {
      return "handle handle--" + d2.type;
    }).attr("cursor", function(d2) {
      return cursors[d2.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  brush.move = function(group, selection2) {
    if (group.tween) {
      group.on("start.brush", function(event) {
        emitter(this, arguments).beforestart().start(event);
      }).on("interrupt.brush end.brush", function(event) {
        emitter(this, arguments).end(event);
      }).tween("brush", function() {
        var that = this, state = that.__brush, emit2 = emitter(that, arguments), selection0 = state.selection, selection1 = dim.input(typeof selection2 === "function" ? selection2.apply(this, arguments) : selection2, state.extent), i = interpolateValue(selection0, selection1);
        function tween(t4) {
          state.selection = t4 === 1 && selection1 === null ? null : i(t4);
          redraw.call(that);
          emit2.brush();
        }
        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function() {
        var that = this, args = arguments, state = that.__brush, selection1 = dim.input(typeof selection2 === "function" ? selection2.apply(that, args) : selection2, state.extent), emit2 = emitter(that, args).beforestart();
        interrupt(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit2.start().brush().end();
      });
    }
  };
  brush.clear = function(group) {
    brush.move(group, null);
  };
  function redraw() {
    var group = select(this), selection2 = local$1(this).selection;
    if (selection2) {
      group.selectAll(".selection").style("display", null).attr("x", selection2[0][0]).attr("y", selection2[0][1]).attr("width", selection2[1][0] - selection2[0][0]).attr("height", selection2[1][1] - selection2[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function(d2) {
        return d2.type[d2.type.length - 1] === "e" ? selection2[1][0] - handleSize / 2 : selection2[0][0] - handleSize / 2;
      }).attr("y", function(d2) {
        return d2.type[0] === "s" ? selection2[1][1] - handleSize / 2 : selection2[0][1] - handleSize / 2;
      }).attr("width", function(d2) {
        return d2.type === "n" || d2.type === "s" ? selection2[1][0] - selection2[0][0] + handleSize : handleSize;
      }).attr("height", function(d2) {
        return d2.type === "e" || d2.type === "w" ? selection2[1][1] - selection2[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }
  function emitter(that, args, clean) {
    var emit2 = that.__brush.emitter;
    return emit2 && (!clean || !emit2.clean) ? emit2 : new Emitter(that, args, clean);
  }
  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }
  Emitter.prototype = {
    beforestart: function() {
      if (++this.active === 1)
        this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function(event, mode) {
      if (this.starting)
        this.starting = false, this.emit("start", event, mode);
      else
        this.emit("brush", event);
      return this;
    },
    brush: function(event, mode) {
      this.emit("brush", event, mode);
      return this;
    },
    end: function(event, mode) {
      if (--this.active === 0)
        delete this.state.emitter, this.emit("end", event, mode);
      return this;
    },
    emit: function(type3, event, mode) {
      var d2 = select(this.that).datum();
      listeners.call(type3, this.that, new BrushEvent(type3, {
        sourceEvent: event,
        target: brush,
        selection: dim.output(this.state.selection),
        mode,
        dispatch: listeners
      }), d2);
    }
  };
  function started(event) {
    if (touchending && !event.touches)
      return;
    if (!filter2.apply(this, arguments))
      return;
    var that = this, type3 = event.target.__data__.type, mode = (keys4 && event.metaKey ? type3 = "overlay" : type3) === "selection" ? MODE_DRAG : keys4 && event.altKey ? MODE_CENTER : MODE_HANDLE, signX = dim === Y3 ? null : signsX[type3], signY = dim === X3 ? null : signsY[type3], state = local$1(that), extent4 = state.extent, selection2 = state.selection, W4 = extent4[0][0], w0, w1, N3 = extent4[0][1], n0, n1, E5 = extent4[1][0], e0, e1, S4 = extent4[1][1], s0, s1, dx = 0, dy = 0, moving, shifting = signX && signY && keys4 && event.shiftKey, lockX, lockY, points = Array.from(event.touches || [event], (t4) => {
      const i = t4.identifier;
      t4 = pointer(t4, that);
      t4.point0 = t4.slice();
      t4.identifier = i;
      return t4;
    });
    if (type3 === "overlay") {
      if (selection2)
        moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection2 = [[
        w0 = dim === Y3 ? W4 : min2(pts[0][0], pts[1][0]),
        n0 = dim === X3 ? N3 : min2(pts[0][1], pts[1][1])
      ], [
        e0 = dim === Y3 ? E5 : max2(pts[0][0], pts[1][0]),
        s0 = dim === X3 ? S4 : max2(pts[0][1], pts[1][1])
      ]];
      if (points.length > 1)
        move();
    } else {
      w0 = selection2[0][0];
      n0 = selection2[0][1];
      e0 = selection2[1][0];
      s0 = selection2[1][1];
    }
    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = select(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type3]);
    interrupt(that);
    var emit2 = emitter(that, arguments, true).beforestart();
    if (event.touches) {
      emit2.moved = moved;
      emit2.ended = ended;
    } else {
      var view = select(event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys4)
        view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      dragDisable(event.view);
    }
    redraw.call(that);
    emit2.start(event, mode.name);
    function moved(event2) {
      for (const p3 of event2.changedTouches || [event2]) {
        for (const d2 of points)
          if (d2.identifier === p3.identifier)
            d2.cur = pointer(p3, that);
      }
      if (shifting && !lockX && !lockY && points.length === 1) {
        const point8 = points[0];
        if (abs(point8.cur[0] - point8[0]) > abs(point8.cur[1] - point8[1]))
          lockY = true;
        else
          lockX = true;
      }
      for (const point8 of points)
        if (point8.cur)
          point8[0] = point8.cur[0], point8[1] = point8.cur[1];
      moving = true;
      noevent$1(event2);
      move(event2);
    }
    function move(event2) {
      const point8 = points[0], point0 = point8.point0;
      var t4;
      dx = point8[0] - point0[0];
      dy = point8[1] - point0[1];
      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG: {
          if (signX)
            dx = max2(W4 - w0, min2(E5 - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
          if (signY)
            dy = max2(N3 - n0, min2(S4 - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
          break;
        }
        case MODE_HANDLE: {
          if (points[1]) {
            if (signX)
              w1 = max2(W4, min2(E5, points[0][0])), e1 = max2(W4, min2(E5, points[1][0])), signX = 1;
            if (signY)
              n1 = max2(N3, min2(S4, points[0][1])), s1 = max2(N3, min2(S4, points[1][1])), signY = 1;
          } else {
            if (signX < 0)
              dx = max2(W4 - w0, min2(E5 - w0, dx)), w1 = w0 + dx, e1 = e0;
            else if (signX > 0)
              dx = max2(W4 - e0, min2(E5 - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0)
              dy = max2(N3 - n0, min2(S4 - n0, dy)), n1 = n0 + dy, s1 = s0;
            else if (signY > 0)
              dy = max2(N3 - s0, min2(S4 - s0, dy)), n1 = n0, s1 = s0 + dy;
          }
          break;
        }
        case MODE_CENTER: {
          if (signX)
            w1 = max2(W4, min2(E5, w0 - dx * signX)), e1 = max2(W4, min2(E5, e0 + dx * signX));
          if (signY)
            n1 = max2(N3, min2(S4, n0 - dy * signY)), s1 = max2(N3, min2(S4, s0 + dy * signY));
          break;
        }
      }
      if (e1 < w1) {
        signX *= -1;
        t4 = w0, w0 = e0, e0 = t4;
        t4 = w1, w1 = e1, e1 = t4;
        if (type3 in flipX)
          overlay.attr("cursor", cursors[type3 = flipX[type3]]);
      }
      if (s1 < n1) {
        signY *= -1;
        t4 = n0, n0 = s0, s0 = t4;
        t4 = n1, n1 = s1, s1 = t4;
        if (type3 in flipY)
          overlay.attr("cursor", cursors[type3 = flipY[type3]]);
      }
      if (state.selection)
        selection2 = state.selection;
      if (lockX)
        w1 = selection2[0][0], e1 = selection2[1][0];
      if (lockY)
        n1 = selection2[0][1], s1 = selection2[1][1];
      if (selection2[0][0] !== w1 || selection2[0][1] !== n1 || selection2[1][0] !== e1 || selection2[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit2.brush(event2, mode.name);
      }
    }
    function ended(event2) {
      nopropagation$1(event2);
      if (event2.touches) {
        if (event2.touches.length)
          return;
        if (touchending)
          clearTimeout(touchending);
        touchending = setTimeout(function() {
          touchending = null;
        }, 500);
      } else {
        yesdrag(event2.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }
      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection)
        selection2 = state.selection;
      if (empty$2(selection2))
        state.selection = null, redraw.call(that);
      emit2.end(event2, mode.name);
    }
    function keydowned(event2) {
      switch (event2.keyCode) {
        case 16: {
          shifting = signX && signY;
          break;
        }
        case 18: {
          if (mode === MODE_HANDLE) {
            if (signX)
              e0 = e1 - dx * signX, w0 = w1 + dx * signX;
            if (signY)
              s0 = s1 - dy * signY, n0 = n1 + dy * signY;
            mode = MODE_CENTER;
            move();
          }
          break;
        }
        case 32: {
          if (mode === MODE_HANDLE || mode === MODE_CENTER) {
            if (signX < 0)
              e0 = e1 - dx;
            else if (signX > 0)
              w0 = w1 - dx;
            if (signY < 0)
              s0 = s1 - dy;
            else if (signY > 0)
              n0 = n1 - dy;
            mode = MODE_SPACE;
            overlay.attr("cursor", cursors.selection);
            move();
          }
          break;
        }
        default:
          return;
      }
      noevent$1(event2);
    }
    function keyupped(event2) {
      switch (event2.keyCode) {
        case 16: {
          if (shifting) {
            lockX = lockY = shifting = false;
            move();
          }
          break;
        }
        case 18: {
          if (mode === MODE_CENTER) {
            if (signX < 0)
              e0 = e1;
            else if (signX > 0)
              w0 = w1;
            if (signY < 0)
              s0 = s1;
            else if (signY > 0)
              n0 = n1;
            mode = MODE_HANDLE;
            move();
          }
          break;
        }
        case 32: {
          if (mode === MODE_SPACE) {
            if (event2.altKey) {
              if (signX)
                e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY)
                s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
            } else {
              if (signX < 0)
                e0 = e1;
              else if (signX > 0)
                w0 = w1;
              if (signY < 0)
                s0 = s1;
              else if (signY > 0)
                n0 = n1;
              mode = MODE_HANDLE;
            }
            overlay.attr("cursor", cursors[type3]);
            move();
          }
          break;
        }
        default:
          return;
      }
      noevent$1(event2);
    }
  }
  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }
  function touchended(event) {
    emitter(this, arguments).ended(event);
  }
  function initialize() {
    var state = this.__brush || {selection: null};
    state.extent = number22(extent3.apply(this, arguments));
    state.dim = dim;
    return state;
  }
  brush.extent = function(_2) {
    return arguments.length ? (extent3 = typeof _2 === "function" ? _2 : constant$3(number22(_2)), brush) : extent3;
  };
  brush.filter = function(_2) {
    return arguments.length ? (filter2 = typeof _2 === "function" ? _2 : constant$3(!!_2), brush) : filter2;
  };
  brush.touchable = function(_2) {
    return arguments.length ? (touchable = typeof _2 === "function" ? _2 : constant$3(!!_2), brush) : touchable;
  };
  brush.handleSize = function(_2) {
    return arguments.length ? (handleSize = +_2, brush) : handleSize;
  };
  brush.keyModifiers = function(_2) {
    return arguments.length ? (keys4 = !!_2, brush) : keys4;
  };
  brush.on = function() {
    var value2 = listeners.on.apply(listeners, arguments);
    return value2 === listeners ? brush : value2;
  };
  return brush;
}
var pi3 = Math.PI;
var halfPi = pi3 / 2;
var tau2 = pi3 * 2;
var slice$2 = Array.prototype.slice;
function define2(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend2(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color2() {
}
var darker2 = 0.7;
var brighter2 = 1 / darker2;
var reI2 = "\\s*([+-]?\\d+)\\s*";
var reN2 = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
var reP2 = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
var reHex2 = /^#([0-9a-f]{3,8})$/;
var reRgbInteger2 = new RegExp("^rgb\\(" + [reI2, reI2, reI2] + "\\)$");
var reRgbPercent2 = new RegExp("^rgb\\(" + [reP2, reP2, reP2] + "\\)$");
var reRgbaInteger2 = new RegExp("^rgba\\(" + [reI2, reI2, reI2, reN2] + "\\)$");
var reRgbaPercent2 = new RegExp("^rgba\\(" + [reP2, reP2, reP2, reN2] + "\\)$");
var reHslPercent2 = new RegExp("^hsl\\(" + [reN2, reP2, reP2] + "\\)$");
var reHslaPercent2 = new RegExp("^hsla\\(" + [reN2, reP2, reP2, reN2] + "\\)$");
var named2 = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define2(Color2, color2, {
  copy: function(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex2,
  formatHex: color_formatHex2,
  formatHsl: color_formatHsl2,
  formatRgb: color_formatRgb2,
  toString: color_formatRgb2
});
function color_formatHex2() {
  return this.rgb().formatHex();
}
function color_formatHsl2() {
  return hslConvert2(this).formatHsl();
}
function color_formatRgb2() {
  return this.rgb().formatRgb();
}
function color2(format6) {
  var m3, l3;
  format6 = (format6 + "").trim().toLowerCase();
  return (m3 = reHex2.exec(format6)) ? (l3 = m3[1].length, m3 = parseInt(m3[1], 16), l3 === 6 ? rgbn2(m3) : l3 === 3 ? new Rgb2(m3 >> 8 & 15 | m3 >> 4 & 240, m3 >> 4 & 15 | m3 & 240, (m3 & 15) << 4 | m3 & 15, 1) : l3 === 8 ? rgba2(m3 >> 24 & 255, m3 >> 16 & 255, m3 >> 8 & 255, (m3 & 255) / 255) : l3 === 4 ? rgba2(m3 >> 12 & 15 | m3 >> 8 & 240, m3 >> 8 & 15 | m3 >> 4 & 240, m3 >> 4 & 15 | m3 & 240, ((m3 & 15) << 4 | m3 & 15) / 255) : null) : (m3 = reRgbInteger2.exec(format6)) ? new Rgb2(m3[1], m3[2], m3[3], 1) : (m3 = reRgbPercent2.exec(format6)) ? new Rgb2(m3[1] * 255 / 100, m3[2] * 255 / 100, m3[3] * 255 / 100, 1) : (m3 = reRgbaInteger2.exec(format6)) ? rgba2(m3[1], m3[2], m3[3], m3[4]) : (m3 = reRgbaPercent2.exec(format6)) ? rgba2(m3[1] * 255 / 100, m3[2] * 255 / 100, m3[3] * 255 / 100, m3[4]) : (m3 = reHslPercent2.exec(format6)) ? hsla2(m3[1], m3[2] / 100, m3[3] / 100, 1) : (m3 = reHslaPercent2.exec(format6)) ? hsla2(m3[1], m3[2] / 100, m3[3] / 100, m3[4]) : named2.hasOwnProperty(format6) ? rgbn2(named2[format6]) : format6 === "transparent" ? new Rgb2(NaN, NaN, NaN, 0) : null;
}
function rgbn2(n3) {
  return new Rgb2(n3 >> 16 & 255, n3 >> 8 & 255, n3 & 255, 1);
}
function rgba2(r3, g2, b10, a3) {
  if (a3 <= 0)
    r3 = g2 = b10 = NaN;
  return new Rgb2(r3, g2, b10, a3);
}
function rgbConvert2(o) {
  if (!(o instanceof Color2))
    o = color2(o);
  if (!o)
    return new Rgb2();
  o = o.rgb();
  return new Rgb2(o.r, o.g, o.b, o.opacity);
}
function rgb2(r3, g2, b10, opacity) {
  return arguments.length === 1 ? rgbConvert2(r3) : new Rgb2(r3, g2, b10, opacity == null ? 1 : opacity);
}
function Rgb2(r3, g2, b10, opacity) {
  this.r = +r3;
  this.g = +g2;
  this.b = +b10;
  this.opacity = +opacity;
}
define2(Rgb2, rgb2, extend2(Color2, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter2 : Math.pow(brighter2, k6);
    return new Rgb2(this.r * k6, this.g * k6, this.b * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker2 : Math.pow(darker2, k6);
    return new Rgb2(this.r * k6, this.g * k6, this.b * k6, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex2,
  formatHex: rgb_formatHex2,
  formatRgb: rgb_formatRgb2,
  toString: rgb_formatRgb2
}));
function rgb_formatHex2() {
  return "#" + hex2(this.r) + hex2(this.g) + hex2(this.b);
}
function rgb_formatRgb2() {
  var a3 = this.opacity;
  a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
  return (a3 === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a3 === 1 ? ")" : ", " + a3 + ")");
}
function hex2(value2) {
  value2 = Math.max(0, Math.min(255, Math.round(value2) || 0));
  return (value2 < 16 ? "0" : "") + value2.toString(16);
}
function hsla2(h2, s4, l3, a3) {
  if (a3 <= 0)
    h2 = s4 = l3 = NaN;
  else if (l3 <= 0 || l3 >= 1)
    h2 = s4 = NaN;
  else if (s4 <= 0)
    h2 = NaN;
  return new Hsl2(h2, s4, l3, a3);
}
function hslConvert2(o) {
  if (o instanceof Hsl2)
    return new Hsl2(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color2))
    o = color2(o);
  if (!o)
    return new Hsl2();
  if (o instanceof Hsl2)
    return o;
  o = o.rgb();
  var r3 = o.r / 255, g2 = o.g / 255, b10 = o.b / 255, min5 = Math.min(r3, g2, b10), max6 = Math.max(r3, g2, b10), h2 = NaN, s4 = max6 - min5, l3 = (max6 + min5) / 2;
  if (s4) {
    if (r3 === max6)
      h2 = (g2 - b10) / s4 + (g2 < b10) * 6;
    else if (g2 === max6)
      h2 = (b10 - r3) / s4 + 2;
    else
      h2 = (r3 - g2) / s4 + 4;
    s4 /= l3 < 0.5 ? max6 + min5 : 2 - max6 - min5;
    h2 *= 60;
  } else {
    s4 = l3 > 0 && l3 < 1 ? 0 : h2;
  }
  return new Hsl2(h2, s4, l3, o.opacity);
}
function hsl3(h2, s4, l3, opacity) {
  return arguments.length === 1 ? hslConvert2(h2) : new Hsl2(h2, s4, l3, opacity == null ? 1 : opacity);
}
function Hsl2(h2, s4, l3, opacity) {
  this.h = +h2;
  this.s = +s4;
  this.l = +l3;
  this.opacity = +opacity;
}
define2(Hsl2, hsl3, extend2(Color2, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter2 : Math.pow(brighter2, k6);
    return new Hsl2(this.h, this.s, this.l * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker2 : Math.pow(darker2, k6);
    return new Hsl2(this.h, this.s, this.l * k6, this.opacity);
  },
  rgb: function() {
    var h2 = this.h % 360 + (this.h < 0) * 360, s4 = isNaN(h2) || isNaN(this.s) ? 0 : this.s, l3 = this.l, m22 = l3 + (l3 < 0.5 ? l3 : 1 - l3) * s4, m1 = 2 * l3 - m22;
    return new Rgb2(hsl2rgb2(h2 >= 240 ? h2 - 240 : h2 + 120, m1, m22), hsl2rgb2(h2, m1, m22), hsl2rgb2(h2 < 120 ? h2 + 240 : h2 - 120, m1, m22), this.opacity);
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a3 = this.opacity;
    a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
    return (a3 === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a3 === 1 ? ")" : ", " + a3 + ")");
  }
}));
function hsl2rgb2(h2, m1, m22) {
  return (h2 < 60 ? m1 + (m22 - m1) * h2 / 60 : h2 < 180 ? m22 : h2 < 240 ? m1 + (m22 - m1) * (240 - h2) / 60 : m1) * 255;
}
var radians = Math.PI / 180;
var degrees$1 = 180 / Math.PI;
var K3 = 18;
var Xn2 = 0.96422;
var Yn2 = 1;
var Zn2 = 0.82521;
var t03 = 4 / 29;
var t13 = 6 / 29;
var t22 = 3 * t13 * t13;
var t32 = t13 * t13 * t13;
function labConvert2(o) {
  if (o instanceof Lab2)
    return new Lab2(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl2)
    return hcl2lab2(o);
  if (!(o instanceof Rgb2))
    o = rgbConvert2(o);
  var r3 = rgb2lrgb2(o.r), g2 = rgb2lrgb2(o.g), b10 = rgb2lrgb2(o.b), y7 = xyz2lab2((0.2225045 * r3 + 0.7168786 * g2 + 0.0606169 * b10) / Yn2), x5, z3;
  if (r3 === g2 && g2 === b10)
    x5 = z3 = y7;
  else {
    x5 = xyz2lab2((0.4360747 * r3 + 0.3850649 * g2 + 0.1430804 * b10) / Xn2);
    z3 = xyz2lab2((0.0139322 * r3 + 0.0971045 * g2 + 0.7141733 * b10) / Zn2);
  }
  return new Lab2(116 * y7 - 16, 500 * (x5 - y7), 200 * (y7 - z3), o.opacity);
}
function lab2(l3, a3, b10, opacity) {
  return arguments.length === 1 ? labConvert2(l3) : new Lab2(l3, a3, b10, opacity == null ? 1 : opacity);
}
function Lab2(l3, a3, b10, opacity) {
  this.l = +l3;
  this.a = +a3;
  this.b = +b10;
  this.opacity = +opacity;
}
define2(Lab2, lab2, extend2(Color2, {
  brighter: function(k6) {
    return new Lab2(this.l + K3 * (k6 == null ? 1 : k6), this.a, this.b, this.opacity);
  },
  darker: function(k6) {
    return new Lab2(this.l - K3 * (k6 == null ? 1 : k6), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y7 = (this.l + 16) / 116, x5 = isNaN(this.a) ? y7 : y7 + this.a / 500, z3 = isNaN(this.b) ? y7 : y7 - this.b / 200;
    x5 = Xn2 * lab2xyz2(x5);
    y7 = Yn2 * lab2xyz2(y7);
    z3 = Zn2 * lab2xyz2(z3);
    return new Rgb2(lrgb2rgb2(3.1338561 * x5 - 1.6168667 * y7 - 0.4906146 * z3), lrgb2rgb2(-0.9787684 * x5 + 1.9161415 * y7 + 0.033454 * z3), lrgb2rgb2(0.0719453 * x5 - 0.2289914 * y7 + 1.4052427 * z3), this.opacity);
  }
}));
function xyz2lab2(t4) {
  return t4 > t32 ? Math.pow(t4, 1 / 3) : t4 / t22 + t03;
}
function lab2xyz2(t4) {
  return t4 > t13 ? t4 * t4 * t4 : t22 * (t4 - t03);
}
function lrgb2rgb2(x5) {
  return 255 * (x5 <= 31308e-7 ? 12.92 * x5 : 1.055 * Math.pow(x5, 1 / 2.4) - 0.055);
}
function rgb2lrgb2(x5) {
  return (x5 /= 255) <= 0.04045 ? x5 / 12.92 : Math.pow((x5 + 0.055) / 1.055, 2.4);
}
function hclConvert2(o) {
  if (o instanceof Hcl2)
    return new Hcl2(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab2))
    o = labConvert2(o);
  if (o.a === 0 && o.b === 0)
    return new Hcl2(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h2 = Math.atan2(o.b, o.a) * degrees$1;
  return new Hcl2(h2 < 0 ? h2 + 360 : h2, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function hcl2(h2, c5, l3, opacity) {
  return arguments.length === 1 ? hclConvert2(h2) : new Hcl2(h2, c5, l3, opacity == null ? 1 : opacity);
}
function Hcl2(h2, c5, l3, opacity) {
  this.h = +h2;
  this.c = +c5;
  this.l = +l3;
  this.opacity = +opacity;
}
function hcl2lab2(o) {
  if (isNaN(o.h))
    return new Lab2(o.l, 0, 0, o.opacity);
  var h2 = o.h * radians;
  return new Lab2(o.l, Math.cos(h2) * o.c, Math.sin(h2) * o.c, o.opacity);
}
define2(Hcl2, hcl2, extend2(Color2, {
  brighter: function(k6) {
    return new Hcl2(this.h, this.c, this.l + K3 * (k6 == null ? 1 : k6), this.opacity);
  },
  darker: function(k6) {
    return new Hcl2(this.h, this.c, this.l - K3 * (k6 == null ? 1 : k6), this.opacity);
  },
  rgb: function() {
    return hcl2lab2(this).rgb();
  }
}));
var A3 = -0.14861;
var B4 = 1.78277;
var C3 = -0.29227;
var D4 = -0.90649;
var E3 = 1.97294;
var ED2 = E3 * D4;
var EB2 = E3 * B4;
var BC_DA2 = B4 * C3 - D4 * A3;
function cubehelixConvert2(o) {
  if (o instanceof Cubehelix2)
    return new Cubehelix2(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb2))
    o = rgbConvert2(o);
  var r3 = o.r / 255, g2 = o.g / 255, b10 = o.b / 255, l3 = (BC_DA2 * b10 + ED2 * r3 - EB2 * g2) / (BC_DA2 + ED2 - EB2), bl = b10 - l3, k6 = (E3 * (g2 - l3) - C3 * bl) / D4, s4 = Math.sqrt(k6 * k6 + bl * bl) / (E3 * l3 * (1 - l3)), h2 = s4 ? Math.atan2(k6, bl) * degrees$1 - 120 : NaN;
  return new Cubehelix2(h2 < 0 ? h2 + 360 : h2, s4, l3, o.opacity);
}
function cubehelix2(h2, s4, l3, opacity) {
  return arguments.length === 1 ? cubehelixConvert2(h2) : new Cubehelix2(h2, s4, l3, opacity == null ? 1 : opacity);
}
function Cubehelix2(h2, s4, l3, opacity) {
  this.h = +h2;
  this.s = +s4;
  this.l = +l3;
  this.opacity = +opacity;
}
define2(Cubehelix2, cubehelix2, extend2(Color2, {
  brighter: function(k6) {
    k6 = k6 == null ? brighter2 : Math.pow(brighter2, k6);
    return new Cubehelix2(this.h, this.s, this.l * k6, this.opacity);
  },
  darker: function(k6) {
    k6 = k6 == null ? darker2 : Math.pow(darker2, k6);
    return new Cubehelix2(this.h, this.s, this.l * k6, this.opacity);
  },
  rgb: function() {
    var h2 = isNaN(this.h) ? 0 : (this.h + 120) * radians, l3 = +this.l, a3 = isNaN(this.s) ? 0 : this.s * l3 * (1 - l3), cosh = Math.cos(h2), sinh = Math.sin(h2);
    return new Rgb2(255 * (l3 + a3 * (A3 * cosh + B4 * sinh)), 255 * (l3 + a3 * (C3 * cosh + D4 * sinh)), 255 * (l3 + a3 * (E3 * cosh)), this.opacity);
  }
}));
var array$2 = Array.prototype;
var slice$3 = array$2.slice;
var EPSILON = Math.pow(2, -52);
var EDGE_STACK = new Uint32Array(512);
var tau$1 = 2 * Math.PI;
var EOL = {};
var EOF = {};
var QUOTE = 34;
var NEWLINE = 10;
var RETURN = 13;
function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function(name, i) {
    return JSON.stringify(name) + ": d[" + i + '] || ""';
  }).join(",") + "}");
}
function customConverter(columns, f3) {
  var object2 = objectConverter(columns);
  return function(row, i) {
    return f3(object2(row), i, columns);
  };
}
function inferColumns(rows) {
  var columnSet = Object.create(null), columns = [];
  rows.forEach(function(row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}
function pad2(value2, width) {
  var s4 = value2 + "", length = s4.length;
  return length < width ? new Array(width - length + 1).join(0) + s4 : s4;
}
function formatYear2(year3) {
  return year3 < 0 ? "-" + pad2(-year3, 6) : year3 > 9999 ? "+" + pad2(year3, 6) : pad2(year3, 4);
}
function formatDate2(date6) {
  var hours2 = date6.getUTCHours(), minutes2 = date6.getUTCMinutes(), seconds2 = date6.getUTCSeconds(), milliseconds2 = date6.getUTCMilliseconds();
  return isNaN(date6) ? "Invalid Date" : formatYear2(date6.getUTCFullYear()) + "-" + pad2(date6.getUTCMonth() + 1, 2) + "-" + pad2(date6.getUTCDate(), 2) + (milliseconds2 ? "T" + pad2(hours2, 2) + ":" + pad2(minutes2, 2) + ":" + pad2(seconds2, 2) + "." + pad2(milliseconds2, 3) + "Z" : seconds2 ? "T" + pad2(hours2, 2) + ":" + pad2(minutes2, 2) + ":" + pad2(seconds2, 2) + "Z" : minutes2 || hours2 ? "T" + pad2(hours2, 2) + ":" + pad2(minutes2, 2) + "Z" : "");
}
function dsvFormat(delimiter) {
  var reFormat = new RegExp('["' + delimiter + "\n\r]"), DELIMITER = delimiter.charCodeAt(0);
  function parse2(text2, f3) {
    var convert2, columns, rows = parseRows(text2, function(row, i) {
      if (convert2)
        return convert2(row, i - 1);
      columns = row, convert2 = f3 ? customConverter(row, f3) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }
  function parseRows(text2, f3) {
    var rows = [], N3 = text2.length, I3 = 0, n3 = 0, t4, eof = N3 <= 0, eol = false;
    if (text2.charCodeAt(N3 - 1) === NEWLINE)
      --N3;
    if (text2.charCodeAt(N3 - 1) === RETURN)
      --N3;
    function token2() {
      if (eof)
        return EOF;
      if (eol)
        return eol = false, EOL;
      var i, j2 = I3, c5;
      if (text2.charCodeAt(j2) === QUOTE) {
        while (I3++ < N3 && text2.charCodeAt(I3) !== QUOTE || text2.charCodeAt(++I3) === QUOTE)
          ;
        if ((i = I3) >= N3)
          eof = true;
        else if ((c5 = text2.charCodeAt(I3++)) === NEWLINE)
          eol = true;
        else if (c5 === RETURN) {
          eol = true;
          if (text2.charCodeAt(I3) === NEWLINE)
            ++I3;
        }
        return text2.slice(j2 + 1, i - 1).replace(/""/g, '"');
      }
      while (I3 < N3) {
        if ((c5 = text2.charCodeAt(i = I3++)) === NEWLINE)
          eol = true;
        else if (c5 === RETURN) {
          eol = true;
          if (text2.charCodeAt(I3) === NEWLINE)
            ++I3;
        } else if (c5 !== DELIMITER)
          continue;
        return text2.slice(j2, i);
      }
      return eof = true, text2.slice(j2, N3);
    }
    while ((t4 = token2()) !== EOF) {
      var row = [];
      while (t4 !== EOL && t4 !== EOF)
        row.push(t4), t4 = token2();
      if (f3 && (row = f3(row, n3++)) == null)
        continue;
      rows.push(row);
    }
    return rows;
  }
  function preformatBody(rows, columns) {
    return rows.map(function(row) {
      return columns.map(function(column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }
  function format6(rows, columns) {
    if (columns == null)
      columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }
  function formatBody(rows, columns) {
    if (columns == null)
      columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }
  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }
  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }
  function formatValue(value2) {
    return value2 == null ? "" : value2 instanceof Date ? formatDate2(value2) : reFormat.test(value2 += "") ? '"' + value2.replace(/"/g, '""') + '"' : value2;
  }
  return {
    parse: parse2,
    parseRows,
    format: format6,
    formatBody,
    formatRows,
    formatRow,
    formatValue
  };
}
var csv = dsvFormat(",");
var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;
var csvFormatRow = csv.formatRow;
var csvFormatValue = csv.formatValue;
var tsv = dsvFormat("	");
var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;
var tsvFormatRow = tsv.formatRow;
var tsvFormatValue = tsv.formatValue;
var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
var exponent2 = 3;
var polyIn = function custom(e3) {
  e3 = +e3;
  function polyIn3(t4) {
    return Math.pow(t4, e3);
  }
  polyIn3.exponent = custom;
  return polyIn3;
}(exponent2);
var polyOut = function custom2(e3) {
  e3 = +e3;
  function polyOut3(t4) {
    return 1 - Math.pow(1 - t4, e3);
  }
  polyOut3.exponent = custom2;
  return polyOut3;
}(exponent2);
var polyInOut = function custom3(e3) {
  e3 = +e3;
  function polyInOut3(t4) {
    return ((t4 *= 2) <= 1 ? Math.pow(t4, e3) : 2 - Math.pow(2 - t4, e3)) / 2;
  }
  polyInOut3.exponent = custom3;
  return polyInOut3;
}(exponent2);
var pi$1 = Math.PI;
var halfPi$1 = pi$1 / 2;
function tpmt(x5) {
  return (Math.pow(2, -10 * x5) - 9765625e-10) * 1.0009775171065494;
}
var b1 = 4 / 11;
var b2 = 6 / 11;
var b3 = 8 / 11;
var b4 = 3 / 4;
var b5 = 9 / 11;
var b6 = 10 / 11;
var b7 = 15 / 16;
var b8 = 21 / 22;
var b9 = 63 / 64;
var b0 = 1 / b1 / b1;
var overshoot = 1.70158;
var backIn = function custom4(s4) {
  s4 = +s4;
  function backIn3(t4) {
    return (t4 = +t4) * t4 * (s4 * (t4 - 1) + t4);
  }
  backIn3.overshoot = custom4;
  return backIn3;
}(overshoot);
var backOut = function custom5(s4) {
  s4 = +s4;
  function backOut3(t4) {
    return --t4 * t4 * ((t4 + 1) * s4 + t4) + 1;
  }
  backOut3.overshoot = custom5;
  return backOut3;
}(overshoot);
var backInOut = function custom6(s4) {
  s4 = +s4;
  function backInOut3(t4) {
    return ((t4 *= 2) < 1 ? t4 * t4 * ((s4 + 1) * t4 - s4) : (t4 -= 2) * t4 * ((s4 + 1) * t4 + s4) + 2) / 2;
  }
  backInOut3.overshoot = custom6;
  return backInOut3;
}(overshoot);
var tau$2 = 2 * Math.PI;
var amplitude = 1;
var period = 0.3;
var elasticIn = function custom7(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau$2);
  function elasticIn3(t4) {
    return a3 * tpmt(- --t4) * Math.sin((s4 - t4) / p3);
  }
  elasticIn3.amplitude = function(a4) {
    return custom7(a4, p3 * tau$2);
  };
  elasticIn3.period = function(p4) {
    return custom7(a3, p4);
  };
  return elasticIn3;
}(amplitude, period);
var elasticOut = function custom8(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau$2);
  function elasticOut3(t4) {
    return 1 - a3 * tpmt(t4 = +t4) * Math.sin((t4 + s4) / p3);
  }
  elasticOut3.amplitude = function(a4) {
    return custom8(a4, p3 * tau$2);
  };
  elasticOut3.period = function(p4) {
    return custom8(a3, p4);
  };
  return elasticOut3;
}(amplitude, period);
var elasticInOut = function custom9(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau$2);
  function elasticInOut3(t4) {
    return ((t4 = t4 * 2 - 1) < 0 ? a3 * tpmt(-t4) * Math.sin((s4 - t4) / p3) : 2 - a3 * tpmt(t4) * Math.sin((s4 + t4) / p3)) / 2;
  }
  elasticInOut3.amplitude = function(a4) {
    return custom9(a4, p3 * tau$2);
  };
  elasticInOut3.period = function(p4) {
    return custom9(a3, p4);
  };
  return elasticInOut3;
}(amplitude, period);
function responseText(response) {
  if (!response.ok)
    throw new Error(response.status + " " + response.statusText);
  return response.text();
}
function text(input, init2) {
  return fetch(input, init2).then(responseText);
}
function dsvParse(parse2) {
  return function(input, init2, row) {
    if (arguments.length === 2 && typeof init2 === "function")
      row = init2, init2 = void 0;
    return text(input, init2).then(function(response) {
      return parse2(response, row);
    });
  };
}
var csv$1 = dsvParse(csvParse);
var tsv$1 = dsvParse(tsvParse);
function parser(type3) {
  return (input, init2) => text(input, init2).then((text2) => new DOMParser().parseFromString(text2, type3));
}
var xml = parser("application/xml");
var html = parser("text/html");
var svg = parser("image/svg+xml");
function tree_add(d2) {
  const x5 = +this._x.call(null, d2), y7 = +this._y.call(null, d2);
  return add(this.cover(x5, y7), x5, y7, d2);
}
function add(tree, x5, y7, d2) {
  if (isNaN(x5) || isNaN(y7))
    return tree;
  var parent, node = tree._root, leaf = {data: d2}, x03 = tree._x0, y03 = tree._y0, x14 = tree._x1, y14 = tree._y1, xm, ym, xp, yp, right2, bottom2, i, j2;
  if (!node)
    return tree._root = leaf, tree;
  while (node.length) {
    if (right2 = x5 >= (xm = (x03 + x14) / 2))
      x03 = xm;
    else
      x14 = xm;
    if (bottom2 = y7 >= (ym = (y03 + y14) / 2))
      y03 = ym;
    else
      y14 = ym;
    if (parent = node, !(node = node[i = bottom2 << 1 | right2]))
      return parent[i] = leaf, tree;
  }
  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x5 === xp && y7 === yp)
    return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;
  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right2 = x5 >= (xm = (x03 + x14) / 2))
      x03 = xm;
    else
      x14 = xm;
    if (bottom2 = y7 >= (ym = (y03 + y14) / 2))
      y03 = ym;
    else
      y14 = ym;
  } while ((i = bottom2 << 1 | right2) === (j2 = (yp >= ym) << 1 | xp >= xm));
  return parent[j2] = node, parent[i] = leaf, tree;
}
function addAll(data3) {
  var d2, i, n3 = data3.length, x5, y7, xz = new Array(n3), yz = new Array(n3), x03 = Infinity, y03 = Infinity, x14 = -Infinity, y14 = -Infinity;
  for (i = 0; i < n3; ++i) {
    if (isNaN(x5 = +this._x.call(null, d2 = data3[i])) || isNaN(y7 = +this._y.call(null, d2)))
      continue;
    xz[i] = x5;
    yz[i] = y7;
    if (x5 < x03)
      x03 = x5;
    if (x5 > x14)
      x14 = x5;
    if (y7 < y03)
      y03 = y7;
    if (y7 > y14)
      y14 = y7;
  }
  if (x03 > x14 || y03 > y14)
    return this;
  this.cover(x03, y03).cover(x14, y14);
  for (i = 0; i < n3; ++i) {
    add(this, xz[i], yz[i], data3[i]);
  }
  return this;
}
function tree_cover(x5, y7) {
  if (isNaN(x5 = +x5) || isNaN(y7 = +y7))
    return this;
  var x03 = this._x0, y03 = this._y0, x14 = this._x1, y14 = this._y1;
  if (isNaN(x03)) {
    x14 = (x03 = Math.floor(x5)) + 1;
    y14 = (y03 = Math.floor(y7)) + 1;
  } else {
    var z3 = x14 - x03 || 1, node = this._root, parent, i;
    while (x03 > x5 || x5 >= x14 || y03 > y7 || y7 >= y14) {
      i = (y7 < y03) << 1 | x5 < x03;
      parent = new Array(4), parent[i] = node, node = parent, z3 *= 2;
      switch (i) {
        case 0:
          x14 = x03 + z3, y14 = y03 + z3;
          break;
        case 1:
          x03 = x14 - z3, y14 = y03 + z3;
          break;
        case 2:
          x14 = x03 + z3, y03 = y14 - z3;
          break;
        case 3:
          x03 = x14 - z3, y03 = y14 - z3;
          break;
      }
    }
    if (this._root && this._root.length)
      this._root = node;
  }
  this._x0 = x03;
  this._y0 = y03;
  this._x1 = x14;
  this._y1 = y14;
  return this;
}
function tree_data() {
  var data3 = [];
  this.visit(function(node) {
    if (!node.length)
      do
        data3.push(node.data);
      while (node = node.next);
  });
  return data3;
}
function tree_extent(_2) {
  return arguments.length ? this.cover(+_2[0][0], +_2[0][1]).cover(+_2[1][0], +_2[1][1]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0], [this._x1, this._y1]];
}
function Quad(node, x03, y03, x14, y14) {
  this.node = node;
  this.x0 = x03;
  this.y0 = y03;
  this.x1 = x14;
  this.y1 = y14;
}
function tree_find(x5, y7, radius) {
  var data3, x03 = this._x0, y03 = this._y0, x14, y14, x22, y22, x32 = this._x1, y32 = this._y1, quads = [], node = this._root, q2, i;
  if (node)
    quads.push(new Quad(node, x03, y03, x32, y32));
  if (radius == null)
    radius = Infinity;
  else {
    x03 = x5 - radius, y03 = y7 - radius;
    x32 = x5 + radius, y32 = y7 + radius;
    radius *= radius;
  }
  while (q2 = quads.pop()) {
    if (!(node = q2.node) || (x14 = q2.x0) > x32 || (y14 = q2.y0) > y32 || (x22 = q2.x1) < x03 || (y22 = q2.y1) < y03)
      continue;
    if (node.length) {
      var xm = (x14 + x22) / 2, ym = (y14 + y22) / 2;
      quads.push(new Quad(node[3], xm, ym, x22, y22), new Quad(node[2], x14, ym, xm, y22), new Quad(node[1], xm, y14, x22, ym), new Quad(node[0], x14, y14, xm, ym));
      if (i = (y7 >= ym) << 1 | x5 >= xm) {
        q2 = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q2;
      }
    } else {
      var dx = x5 - +this._x.call(null, node.data), dy = y7 - +this._y.call(null, node.data), d2 = dx * dx + dy * dy;
      if (d2 < radius) {
        var d4 = Math.sqrt(radius = d2);
        x03 = x5 - d4, y03 = y7 - d4;
        x32 = x5 + d4, y32 = y7 + d4;
        data3 = node.data;
      }
    }
  }
  return data3;
}
function tree_remove(d2) {
  if (isNaN(x5 = +this._x.call(null, d2)) || isNaN(y7 = +this._y.call(null, d2)))
    return this;
  var parent, node = this._root, retainer, previous, next, x03 = this._x0, y03 = this._y0, x14 = this._x1, y14 = this._y1, x5, y7, xm, ym, right2, bottom2, i, j2;
  if (!node)
    return this;
  if (node.length)
    while (true) {
      if (right2 = x5 >= (xm = (x03 + x14) / 2))
        x03 = xm;
      else
        x14 = xm;
      if (bottom2 = y7 >= (ym = (y03 + y14) / 2))
        y03 = ym;
      else
        y14 = ym;
      if (!(parent = node, node = node[i = bottom2 << 1 | right2]))
        return this;
      if (!node.length)
        break;
      if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3])
        retainer = parent, j2 = i;
    }
  while (node.data !== d2)
    if (!(previous = node, node = node.next))
      return this;
  if (next = node.next)
    delete node.next;
  if (previous)
    return next ? previous.next = next : delete previous.next, this;
  if (!parent)
    return this._root = next, this;
  next ? parent[i] = next : delete parent[i];
  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer)
      retainer[j2] = node;
    else
      this._root = node;
  }
  return this;
}
function removeAll(data3) {
  for (var i = 0, n3 = data3.length; i < n3; ++i)
    this.remove(data3[i]);
  return this;
}
function tree_root() {
  return this._root;
}
function tree_size() {
  var size = 0;
  this.visit(function(node) {
    if (!node.length)
      do
        ++size;
      while (node = node.next);
  });
  return size;
}
function tree_visit(callback) {
  var quads = [], q2, node = this._root, child, x03, y03, x14, y14;
  if (node)
    quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
  while (q2 = quads.pop()) {
    if (!callback(node = q2.node, x03 = q2.x0, y03 = q2.y0, x14 = q2.x1, y14 = q2.y1) && node.length) {
      var xm = (x03 + x14) / 2, ym = (y03 + y14) / 2;
      if (child = node[3])
        quads.push(new Quad(child, xm, ym, x14, y14));
      if (child = node[2])
        quads.push(new Quad(child, x03, ym, xm, y14));
      if (child = node[1])
        quads.push(new Quad(child, xm, y03, x14, ym));
      if (child = node[0])
        quads.push(new Quad(child, x03, y03, xm, ym));
    }
  }
  return this;
}
function tree_visitAfter(callback) {
  var quads = [], next = [], q2;
  if (this._root)
    quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
  while (q2 = quads.pop()) {
    var node = q2.node;
    if (node.length) {
      var child, x03 = q2.x0, y03 = q2.y0, x14 = q2.x1, y14 = q2.y1, xm = (x03 + x14) / 2, ym = (y03 + y14) / 2;
      if (child = node[0])
        quads.push(new Quad(child, x03, y03, xm, ym));
      if (child = node[1])
        quads.push(new Quad(child, xm, y03, x14, ym));
      if (child = node[2])
        quads.push(new Quad(child, x03, ym, xm, y14));
      if (child = node[3])
        quads.push(new Quad(child, xm, ym, x14, y14));
    }
    next.push(q2);
  }
  while (q2 = next.pop()) {
    callback(q2.node, q2.x0, q2.y0, q2.x1, q2.y1);
  }
  return this;
}
function defaultX$1(d2) {
  return d2[0];
}
function tree_x(_2) {
  return arguments.length ? (this._x = _2, this) : this._x;
}
function defaultY$1(d2) {
  return d2[1];
}
function tree_y(_2) {
  return arguments.length ? (this._y = _2, this) : this._y;
}
function quadtree(nodes, x5, y7) {
  var tree = new Quadtree(x5 == null ? defaultX$1 : x5, y7 == null ? defaultY$1 : y7, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}
function Quadtree(x5, y7, x03, y03, x14, y14) {
  this._x = x5;
  this._y = y7;
  this._x0 = x03;
  this._y0 = y03;
  this._x1 = x14;
  this._y1 = y14;
  this._root = void 0;
}
function leaf_copy(leaf) {
  var copy5 = {data: leaf.data}, next = copy5;
  while (leaf = leaf.next)
    next = next.next = {data: leaf.data};
  return copy5;
}
var treeProto = quadtree.prototype = Quadtree.prototype;
treeProto.copy = function() {
  var copy5 = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1), node = this._root, nodes, child;
  if (!node)
    return copy5;
  if (!node.length)
    return copy5._root = leaf_copy(node), copy5;
  nodes = [{source: node, target: copy5._root = new Array(4)}];
  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length)
          nodes.push({source: child, target: node.target[i] = new Array(4)});
        else
          node.target[i] = leaf_copy(child);
      }
    }
  }
  return copy5;
};
treeProto.add = tree_add;
treeProto.addAll = addAll;
treeProto.cover = tree_cover;
treeProto.data = tree_data;
treeProto.extent = tree_extent;
treeProto.find = tree_find;
treeProto.remove = tree_remove;
treeProto.removeAll = removeAll;
treeProto.root = tree_root;
treeProto.size = tree_size;
treeProto.visit = tree_visit;
treeProto.visitAfter = tree_visitAfter;
treeProto.x = tree_x;
treeProto.y = tree_y;
var initialAngle = Math.PI * (3 - Math.sqrt(5));
var epsilon$3 = 1e-6;
var epsilon2$1 = 1e-12;
var pi$2 = Math.PI;
var halfPi$2 = pi$2 / 2;
var quarterPi = pi$2 / 4;
var tau$3 = pi$2 * 2;
var degrees$2 = 180 / pi$2;
var radians$1 = pi$2 / 180;
var abs$2 = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos$1 = Math.cos;
var exp = Math.exp;
var log2 = Math.log;
var sin$1 = Math.sin;
var sign = Math.sign || function(x5) {
  return x5 > 0 ? 1 : x5 < 0 ? -1 : 0;
};
var sqrt2 = Math.sqrt;
var tan = Math.tan;
function acos(x5) {
  return x5 > 1 ? 0 : x5 < -1 ? pi$2 : Math.acos(x5);
}
function asin(x5) {
  return x5 > 1 ? halfPi$2 : x5 < -1 ? -halfPi$2 : Math.asin(x5);
}
function noop$2() {
}
function streamGeometry(geometry, stream2) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream2);
  }
}
var streamObjectType = {
  Feature: function(object2, stream2) {
    streamGeometry(object2.geometry, stream2);
  },
  FeatureCollection: function(object2, stream2) {
    var features = object2.features, i = -1, n3 = features.length;
    while (++i < n3)
      streamGeometry(features[i].geometry, stream2);
  }
};
var streamGeometryType = {
  Sphere: function(object2, stream2) {
    stream2.sphere();
  },
  Point: function(object2, stream2) {
    object2 = object2.coordinates;
    stream2.point(object2[0], object2[1], object2[2]);
  },
  MultiPoint: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      object2 = coordinates[i], stream2.point(object2[0], object2[1], object2[2]);
  },
  LineString: function(object2, stream2) {
    streamLine(object2.coordinates, stream2, 0);
  },
  MultiLineString: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamLine(coordinates[i], stream2, 0);
  },
  Polygon: function(object2, stream2) {
    streamPolygon(object2.coordinates, stream2);
  },
  MultiPolygon: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamPolygon(coordinates[i], stream2);
  },
  GeometryCollection: function(object2, stream2) {
    var geometries = object2.geometries, i = -1, n3 = geometries.length;
    while (++i < n3)
      streamGeometry(geometries[i], stream2);
  }
};
function streamLine(coordinates, stream2, closed) {
  var i = -1, n3 = coordinates.length - closed, coordinate;
  stream2.lineStart();
  while (++i < n3)
    coordinate = coordinates[i], stream2.point(coordinate[0], coordinate[1], coordinate[2]);
  stream2.lineEnd();
}
function streamPolygon(coordinates, stream2) {
  var i = -1, n3 = coordinates.length;
  stream2.polygonStart();
  while (++i < n3)
    streamLine(coordinates[i], stream2, 1);
  stream2.polygonEnd();
}
function geoStream(object2, stream2) {
  if (object2 && streamObjectType.hasOwnProperty(object2.type)) {
    streamObjectType[object2.type](object2, stream2);
  } else {
    streamGeometry(object2, stream2);
  }
}
var areaRingSum = new Adder();
var areaSum = new Adder();
function cartesian(spherical2) {
  var lambda = spherical2[0], phi3 = spherical2[1], cosPhi = cos$1(phi3);
  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi3)];
}
function cartesianCross(a3, b10) {
  return [a3[1] * b10[2] - a3[2] * b10[1], a3[2] * b10[0] - a3[0] * b10[2], a3[0] * b10[1] - a3[1] * b10[0]];
}
function cartesianNormalizeInPlace(d2) {
  var l3 = sqrt2(d2[0] * d2[0] + d2[1] * d2[1] + d2[2] * d2[2]);
  d2[0] /= l3, d2[1] /= l3, d2[2] /= l3;
}
function rotationIdentity(lambda, phi3) {
  return [abs$2(lambda) > pi$2 ? lambda + Math.round(-lambda / tau$3) * tau$3 : lambda, phi3];
}
rotationIdentity.invert = rotationIdentity;
function clipBuffer() {
  var lines = [], line2;
  return {
    point: function(x5, y7, m3) {
      line2.push([x5, y7, m3]);
    },
    lineStart: function() {
      lines.push(line2 = []);
    },
    lineEnd: noop$2,
    rejoin: function() {
      if (lines.length > 1)
        lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line2 = null;
      return result;
    }
  };
}
function pointEqual(a3, b10) {
  return abs$2(a3[0] - b10[0]) < epsilon$3 && abs$2(a3[1] - b10[1]) < epsilon$3;
}
function Intersection(point8, points, other, entry) {
  this.x = point8;
  this.z = points;
  this.o = other;
  this.e = entry;
  this.v = false;
  this.n = this.p = null;
}
function clipRejoin(segments, compareIntersection3, startInside, interpolate3, stream2) {
  var subject = [], clip3 = [], i, n3;
  segments.forEach(function(segment) {
    if ((n4 = segment.length - 1) <= 0)
      return;
    var n4, p0 = segment[0], p1 = segment[n4], x5;
    if (pointEqual(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream2.lineStart();
        for (i = 0; i < n4; ++i)
          stream2.point((p0 = segment[i])[0], p0[1]);
        stream2.lineEnd();
        return;
      }
      p1[0] += 2 * epsilon$3;
    }
    subject.push(x5 = new Intersection(p0, segment, null, true));
    clip3.push(x5.o = new Intersection(p0, null, x5, false));
    subject.push(x5 = new Intersection(p1, segment, null, false));
    clip3.push(x5.o = new Intersection(p1, null, x5, true));
  });
  if (!subject.length)
    return;
  clip3.sort(compareIntersection3);
  link$1(subject);
  link$1(clip3);
  for (i = 0, n3 = clip3.length; i < n3; ++i) {
    clip3[i].e = startInside = !startInside;
  }
  var start2 = subject[0], points, point8;
  while (1) {
    var current = start2, isSubject = true;
    while (current.v)
      if ((current = current.n) === start2)
        return;
    points = current.z;
    stream2.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n3 = points.length; i < n3; ++i)
            stream2.point((point8 = points[i])[0], point8[1]);
        } else {
          interpolate3(current.x, current.n.x, 1, stream2);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i)
            stream2.point((point8 = points[i])[0], point8[1]);
        } else {
          interpolate3(current.x, current.p.x, -1, stream2);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream2.lineEnd();
  }
}
function link$1(array5) {
  if (!(n3 = array5.length))
    return;
  var n3, i = 0, a3 = array5[0], b10;
  while (++i < n3) {
    a3.n = b10 = array5[i];
    b10.p = a3;
    a3 = b10;
  }
  a3.n = b10 = array5[0];
  b10.p = a3;
}
function longitude(point8) {
  if (abs$2(point8[0]) <= pi$2)
    return point8[0];
  else
    return sign(point8[0]) * ((abs$2(point8[0]) + pi$2) % tau$3 - pi$2);
}
function polygonContains(polygon, point8) {
  var lambda = longitude(point8), phi3 = point8[1], sinPhi = sin$1(phi3), normal2 = [sin$1(lambda), -cos$1(lambda), 0], angle = 0, winding = 0;
  var sum2 = new Adder();
  if (sinPhi === 1)
    phi3 = halfPi$2 + epsilon$3;
  else if (sinPhi === -1)
    phi3 = -halfPi$2 - epsilon$3;
  for (var i = 0, n3 = polygon.length; i < n3; ++i) {
    if (!(m3 = (ring = polygon[i]).length))
      continue;
    var ring, m3, point0 = ring[m3 - 1], lambda0 = longitude(point0), phi0 = point0[1] / 2 + quarterPi, sinPhi0 = sin$1(phi0), cosPhi0 = cos$1(phi0);
    for (var j2 = 0; j2 < m3; ++j2, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j2], lambda1 = longitude(point1), phi1 = point1[1] / 2 + quarterPi, sinPhi1 = sin$1(phi1), cosPhi1 = cos$1(phi1), delta = lambda1 - lambda0, sign5 = delta >= 0 ? 1 : -1, absDelta = sign5 * delta, antimeridian = absDelta > pi$2, k6 = sinPhi0 * sinPhi1;
      sum2.add(atan2(k6 * sign5 * sin$1(absDelta), cosPhi0 * cosPhi1 + k6 * cos$1(absDelta)));
      angle += antimeridian ? delta + sign5 * tau$3 : delta;
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection2 = cartesianCross(normal2, arc);
        cartesianNormalizeInPlace(intersection2);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection2[2]);
        if (phi3 > phiArc || phi3 === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }
  return (angle < -epsilon$3 || angle < epsilon$3 && sum2 < -epsilon2$1) ^ winding & 1;
}
function clip(pointVisible, clipLine2, interpolate3, start2) {
  return function(sink) {
    var line2 = clipLine2(sink), ringBuffer = clipBuffer(), ringSink = clipLine2(ringBuffer), polygonStarted = false, polygon, segments, ring;
    var clip3 = {
      point: point8,
      lineStart,
      lineEnd,
      polygonStart: function() {
        clip3.point = pointRing;
        clip3.lineStart = ringStart;
        clip3.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip3.point = point8;
        clip3.lineStart = lineStart;
        clip3.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start2);
        if (segments.length) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          clipRejoin(segments, compareIntersection, startInside, interpolate3, sink);
        } else if (startInside) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate3(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted)
          sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate3(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };
    function point8(lambda, phi3) {
      if (pointVisible(lambda, phi3))
        sink.point(lambda, phi3);
    }
    function pointLine(lambda, phi3) {
      line2.point(lambda, phi3);
    }
    function lineStart() {
      clip3.point = pointLine;
      line2.lineStart();
    }
    function lineEnd() {
      clip3.point = point8;
      line2.lineEnd();
    }
    function pointRing(lambda, phi3) {
      ring.push([lambda, phi3]);
      ringSink.point(lambda, phi3);
    }
    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }
    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i, n3 = ringSegments.length, m3, segment, point9;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n3)
        return;
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m3 = segment.length - 1) > 0) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m3; ++i)
            sink.point((point9 = segment[i])[0], point9[1]);
          sink.lineEnd();
        }
        return;
      }
      if (n3 > 1 && clean & 2)
        ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }
    return clip3;
  };
}
function validSegment(segment) {
  return segment.length > 1;
}
function compareIntersection(a3, b10) {
  return ((a3 = a3.x)[0] < 0 ? a3[1] - halfPi$2 - epsilon$3 : halfPi$2 - a3[1]) - ((b10 = b10.x)[0] < 0 ? b10[1] - halfPi$2 - epsilon$3 : halfPi$2 - b10[1]);
}
var clipAntimeridian = clip(function() {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi$2, -halfPi$2]);
function clipAntimeridianLine(stream2) {
  var lambda0 = NaN, phi0 = NaN, sign0 = NaN, clean;
  return {
    lineStart: function() {
      stream2.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? pi$2 : -pi$2, delta = abs$2(lambda1 - lambda0);
      if (abs$2(delta - pi$2) < epsilon$3) {
        stream2.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);
        stream2.point(sign0, phi0);
        stream2.lineEnd();
        stream2.lineStart();
        stream2.point(sign1, phi0);
        stream2.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi$2) {
        if (abs$2(lambda0 - sign0) < epsilon$3)
          lambda0 -= sign0 * epsilon$3;
        if (abs$2(lambda1 - sign1) < epsilon$3)
          lambda1 -= sign1 * epsilon$3;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream2.point(sign0, phi0);
        stream2.lineEnd();
        stream2.lineStart();
        stream2.point(sign1, phi0);
        clean = 0;
      }
      stream2.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream2.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean;
    }
  };
}
function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0, cosPhi1, sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
  return abs$2(sinLambda0Lambda1) > epsilon$3 ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1) - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}
function clipAntimeridianInterpolate(from, to2, direction, stream2) {
  var phi3;
  if (from == null) {
    phi3 = direction * halfPi$2;
    stream2.point(-pi$2, phi3);
    stream2.point(0, phi3);
    stream2.point(pi$2, phi3);
    stream2.point(pi$2, 0);
    stream2.point(pi$2, -phi3);
    stream2.point(0, -phi3);
    stream2.point(-pi$2, -phi3);
    stream2.point(-pi$2, 0);
    stream2.point(-pi$2, phi3);
  } else if (abs$2(from[0] - to2[0]) > epsilon$3) {
    var lambda = from[0] < to2[0] ? pi$2 : -pi$2;
    phi3 = direction * lambda / 2;
    stream2.point(-lambda, phi3);
    stream2.point(0, phi3);
    stream2.point(lambda, phi3);
  } else {
    stream2.point(to2[0], to2[1]);
  }
}
var clipMax = 1e9;
var clipMin = -clipMax;
var identity$3 = (x5) => x5;
var areaSum$1 = new Adder();
var areaRingSum$1 = new Adder();
var x00;
var y00;
var x0$1;
var y0$1;
var areaStream$1 = {
  point: noop$2,
  lineStart: noop$2,
  lineEnd: noop$2,
  polygonStart: function() {
    areaStream$1.lineStart = areaRingStart$1;
    areaStream$1.lineEnd = areaRingEnd$1;
  },
  polygonEnd: function() {
    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;
    areaSum$1.add(abs$2(areaRingSum$1));
    areaRingSum$1 = new Adder();
  },
  result: function() {
    var area3 = areaSum$1 / 2;
    areaSum$1 = new Adder();
    return area3;
  }
};
function areaRingStart$1() {
  areaStream$1.point = areaPointFirst$1;
}
function areaPointFirst$1(x5, y7) {
  areaStream$1.point = areaPoint$1;
  x00 = x0$1 = x5, y00 = y0$1 = y7;
}
function areaPoint$1(x5, y7) {
  areaRingSum$1.add(y0$1 * x5 - x0$1 * y7);
  x0$1 = x5, y0$1 = y7;
}
function areaRingEnd$1() {
  areaPoint$1(x00, y00);
}
var x0$2 = Infinity;
var y0$2 = x0$2;
var x1 = -x0$2;
var y1 = x1;
var boundsStream$1 = {
  point: boundsPoint$1,
  lineStart: noop$2,
  lineEnd: noop$2,
  polygonStart: noop$2,
  polygonEnd: noop$2,
  result: function() {
    var bounds = [[x0$2, y0$2], [x1, y1]];
    x1 = y1 = -(y0$2 = x0$2 = Infinity);
    return bounds;
  }
};
function boundsPoint$1(x5, y7) {
  if (x5 < x0$2)
    x0$2 = x5;
  if (x5 > x1)
    x1 = x5;
  if (y7 < y0$2)
    y0$2 = y7;
  if (y7 > y1)
    y1 = y7;
}
var X0$1 = 0;
var Y0$1 = 0;
var Z0$1 = 0;
var X1$1 = 0;
var Y1$1 = 0;
var Z1$1 = 0;
var X2$1 = 0;
var Y2$1 = 0;
var Z2$1 = 0;
var x00$1;
var y00$1;
var x0$3;
var y0$3;
var centroidStream$1 = {
  point: centroidPoint$1,
  lineStart: centroidLineStart$1,
  lineEnd: centroidLineEnd$1,
  polygonStart: function() {
    centroidStream$1.lineStart = centroidRingStart$1;
    centroidStream$1.lineEnd = centroidRingEnd$1;
  },
  polygonEnd: function() {
    centroidStream$1.point = centroidPoint$1;
    centroidStream$1.lineStart = centroidLineStart$1;
    centroidStream$1.lineEnd = centroidLineEnd$1;
  },
  result: function() {
    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1] : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1] : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1] : [NaN, NaN];
    X0$1 = Y0$1 = Z0$1 = X1$1 = Y1$1 = Z1$1 = X2$1 = Y2$1 = Z2$1 = 0;
    return centroid;
  }
};
function centroidPoint$1(x5, y7) {
  X0$1 += x5;
  Y0$1 += y7;
  ++Z0$1;
}
function centroidLineStart$1() {
  centroidStream$1.point = centroidPointFirstLine;
}
function centroidPointFirstLine(x5, y7) {
  centroidStream$1.point = centroidPointLine;
  centroidPoint$1(x0$3 = x5, y0$3 = y7);
}
function centroidPointLine(x5, y7) {
  var dx = x5 - x0$3, dy = y7 - y0$3, z3 = sqrt2(dx * dx + dy * dy);
  X1$1 += z3 * (x0$3 + x5) / 2;
  Y1$1 += z3 * (y0$3 + y7) / 2;
  Z1$1 += z3;
  centroidPoint$1(x0$3 = x5, y0$3 = y7);
}
function centroidLineEnd$1() {
  centroidStream$1.point = centroidPoint$1;
}
function centroidRingStart$1() {
  centroidStream$1.point = centroidPointFirstRing;
}
function centroidRingEnd$1() {
  centroidPointRing(x00$1, y00$1);
}
function centroidPointFirstRing(x5, y7) {
  centroidStream$1.point = centroidPointRing;
  centroidPoint$1(x00$1 = x0$3 = x5, y00$1 = y0$3 = y7);
}
function centroidPointRing(x5, y7) {
  var dx = x5 - x0$3, dy = y7 - y0$3, z3 = sqrt2(dx * dx + dy * dy);
  X1$1 += z3 * (x0$3 + x5) / 2;
  Y1$1 += z3 * (y0$3 + y7) / 2;
  Z1$1 += z3;
  z3 = y0$3 * x5 - x0$3 * y7;
  X2$1 += z3 * (x0$3 + x5);
  Y2$1 += z3 * (y0$3 + y7);
  Z2$1 += z3 * 3;
  centroidPoint$1(x0$3 = x5, y0$3 = y7);
}
function PathContext(context) {
  this._context = context;
}
PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_2) {
    return this._radius = _2, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._context.closePath();
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x5, y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x5, y7);
        break;
      }
      default: {
        this._context.moveTo(x5 + this._radius, y7);
        this._context.arc(x5, y7, this._radius, 0, tau$3);
        break;
      }
    }
  },
  result: noop$2
};
var lengthSum$1 = new Adder();
var lengthRing;
var x00$2;
var y00$2;
var x0$4;
var y0$4;
var lengthStream$1 = {
  point: noop$2,
  lineStart: function() {
    lengthStream$1.point = lengthPointFirst$1;
  },
  lineEnd: function() {
    if (lengthRing)
      lengthPoint$1(x00$2, y00$2);
    lengthStream$1.point = noop$2;
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +lengthSum$1;
    lengthSum$1 = new Adder();
    return length;
  }
};
function lengthPointFirst$1(x5, y7) {
  lengthStream$1.point = lengthPoint$1;
  x00$2 = x0$4 = x5, y00$2 = y0$4 = y7;
}
function lengthPoint$1(x5, y7) {
  x0$4 -= x5, y0$4 -= y7;
  lengthSum$1.add(sqrt2(x0$4 * x0$4 + y0$4 * y0$4));
  x0$4 = x5, y0$4 = y7;
}
function PathString() {
  this._string = [];
}
PathString.prototype = {
  _radius: 4.5,
  _circle: circle$1(4.5),
  pointRadius: function(_2) {
    if ((_2 = +_2) !== this._radius)
      this._radius = _2, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._string.push("Z");
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x5, ",", y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x5, ",", y7);
        break;
      }
      default: {
        if (this._circle == null)
          this._circle = circle$1(this._radius);
        this._string.push("M", x5, ",", y7, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};
function circle$1(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
function index$2(projection2, context) {
  var pointRadius = 4.5, projectionStream, contextStream;
  function path3(object2) {
    if (object2) {
      if (typeof pointRadius === "function")
        contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream(object2, projectionStream(contextStream));
    }
    return contextStream.result();
  }
  path3.area = function(object2) {
    geoStream(object2, projectionStream(areaStream$1));
    return areaStream$1.result();
  };
  path3.measure = function(object2) {
    geoStream(object2, projectionStream(lengthStream$1));
    return lengthStream$1.result();
  };
  path3.bounds = function(object2) {
    geoStream(object2, projectionStream(boundsStream$1));
    return boundsStream$1.result();
  };
  path3.centroid = function(object2) {
    geoStream(object2, projectionStream(centroidStream$1));
    return centroidStream$1.result();
  };
  path3.projection = function(_2) {
    return arguments.length ? (projectionStream = _2 == null ? (projection2 = null, identity$3) : (projection2 = _2).stream, path3) : projection2;
  };
  path3.context = function(_2) {
    if (!arguments.length)
      return context;
    contextStream = _2 == null ? (context = null, new PathString()) : new PathContext(context = _2);
    if (typeof pointRadius !== "function")
      contextStream.pointRadius(pointRadius);
    return path3;
  };
  path3.pointRadius = function(_2) {
    if (!arguments.length)
      return pointRadius;
    pointRadius = typeof _2 === "function" ? _2 : (contextStream.pointRadius(+_2), +_2);
    return path3;
  };
  return path3.projection(projection2).context(context);
}
function transformer4(methods) {
  return function(stream2) {
    var s4 = new TransformStream();
    for (var key in methods)
      s4[key] = methods[key];
    s4.stream = stream2;
    return s4;
  };
}
function TransformStream() {
}
TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x5, y7) {
    this.stream.point(x5, y7);
  },
  sphere: function() {
    this.stream.sphere();
  },
  lineStart: function() {
    this.stream.lineStart();
  },
  lineEnd: function() {
    this.stream.lineEnd();
  },
  polygonStart: function() {
    this.stream.polygonStart();
  },
  polygonEnd: function() {
    this.stream.polygonEnd();
  }
};
var cosMinDistance = cos$1(30 * radians$1);
var transformRadians = transformer4({
  point: function(x5, y7) {
    this.stream.point(x5 * radians$1, y7 * radians$1);
  }
});
function azimuthalRaw(scale) {
  return function(x5, y7) {
    var cx = cos$1(x5), cy = cos$1(y7), k6 = scale(cx * cy);
    if (k6 === Infinity)
      return [2, 0];
    return [
      k6 * cy * sin$1(x5),
      k6 * sin$1(y7)
    ];
  };
}
function azimuthalInvert(angle) {
  return function(x5, y7) {
    var z3 = sqrt2(x5 * x5 + y7 * y7), c5 = angle(z3), sc2 = sin$1(c5), cc2 = cos$1(c5);
    return [
      atan2(x5 * sc2, z3 * cc2),
      asin(z3 && y7 * sc2 / z3)
    ];
  };
}
var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
  return sqrt2(2 / (1 + cxcy));
});
azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z3) {
  return 2 * asin(z3 / 2);
});
var azimuthalEquidistantRaw = azimuthalRaw(function(c5) {
  return (c5 = acos(c5)) && c5 / sin$1(c5);
});
azimuthalEquidistantRaw.invert = azimuthalInvert(function(z3) {
  return z3;
});
function mercatorRaw(lambda, phi3) {
  return [lambda, log2(tan((halfPi$2 + phi3) / 2))];
}
mercatorRaw.invert = function(x5, y7) {
  return [x5, 2 * atan(exp(y7)) - halfPi$2];
};
function equirectangularRaw(lambda, phi3) {
  return [lambda, phi3];
}
equirectangularRaw.invert = equirectangularRaw;
var A1 = 1.340264;
var A22 = -0.081106;
var A32 = 893e-6;
var A4 = 3796e-6;
var M3 = sqrt2(3) / 2;
var iterations = 12;
function equalEarthRaw(lambda, phi3) {
  var l3 = asin(M3 * sin$1(phi3)), l22 = l3 * l3, l6 = l22 * l22 * l22;
  return [
    lambda * cos$1(l3) / (M3 * (A1 + 3 * A22 * l22 + l6 * (7 * A32 + 9 * A4 * l22))),
    l3 * (A1 + A22 * l22 + l6 * (A32 + A4 * l22))
  ];
}
equalEarthRaw.invert = function(x5, y7) {
  var l3 = y7, l22 = l3 * l3, l6 = l22 * l22 * l22;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l3 * (A1 + A22 * l22 + l6 * (A32 + A4 * l22)) - y7;
    fpy = A1 + 3 * A22 * l22 + l6 * (7 * A32 + 9 * A4 * l22);
    l3 -= delta = fy / fpy, l22 = l3 * l3, l6 = l22 * l22 * l22;
    if (abs$2(delta) < epsilon2$1)
      break;
  }
  return [
    M3 * x5 * (A1 + 3 * A22 * l22 + l6 * (7 * A32 + 9 * A4 * l22)) / cos$1(l3),
    asin(sin$1(l3) / M3)
  ];
};
function gnomonicRaw(x5, y7) {
  var cy = cos$1(y7), k6 = cos$1(x5) * cy;
  return [cy * sin$1(x5) / k6, sin$1(y7) / k6];
}
gnomonicRaw.invert = azimuthalInvert(atan);
function naturalEarth1Raw(lambda, phi3) {
  var phi22 = phi3 * phi3, phi4 = phi22 * phi22;
  return [
    lambda * (0.8707 - 0.131979 * phi22 + phi4 * (-0.013791 + phi4 * (3971e-6 * phi22 - 1529e-6 * phi4))),
    phi3 * (1.007226 + phi22 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi22 - 5916e-6 * phi4)))
  ];
}
naturalEarth1Raw.invert = function(x5, y7) {
  var phi3 = y7, i = 25, delta;
  do {
    var phi22 = phi3 * phi3, phi4 = phi22 * phi22;
    phi3 -= delta = (phi3 * (1.007226 + phi22 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi22 - 5916e-6 * phi4))) - y7) / (1.007226 + phi22 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi22 - 5916e-6 * 11 * phi4)));
  } while (abs$2(delta) > epsilon$3 && --i > 0);
  return [
    x5 / (0.8707 + (phi22 = phi3 * phi3) * (-0.131979 + phi22 * (-0.013791 + phi22 * phi22 * phi22 * (3971e-6 - 1529e-6 * phi22)))),
    phi3
  ];
};
function orthographicRaw(x5, y7) {
  return [cos$1(y7) * sin$1(x5), sin$1(y7)];
}
orthographicRaw.invert = azimuthalInvert(asin);
function stereographicRaw(x5, y7) {
  var cy = cos$1(y7), k6 = 1 + cos$1(x5) * cy;
  return [cy * sin$1(x5) / k6, sin$1(y7) / k6];
}
stereographicRaw.invert = azimuthalInvert(function(z3) {
  return 2 * atan(z3);
});
function transverseMercatorRaw(lambda, phi3) {
  return [log2(tan((halfPi$2 + phi3) / 2)), -lambda];
}
transverseMercatorRaw.invert = function(x5, y7) {
  return [-y7, 2 * atan(exp(x5)) - halfPi$2];
};
function count$1(node) {
  var sum2 = 0, children2 = node.children, i = children2 && children2.length;
  if (!i)
    sum2 = 1;
  else
    while (--i >= 0)
      sum2 += children2[i].value;
  node.value = sum2;
}
function node_count() {
  return this.eachAfter(count$1);
}
function node_each(callback, that) {
  let index4 = -1;
  for (const node of this) {
    callback.call(that, node, ++index4, this);
  }
  return this;
}
function node_eachBefore(callback, that) {
  var node = this, nodes = [node], children2, i, index4 = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index4, this);
    if (children2 = node.children) {
      for (i = children2.length - 1; i >= 0; --i) {
        nodes.push(children2[i]);
      }
    }
  }
  return this;
}
function node_eachAfter(callback, that) {
  var node = this, nodes = [node], next = [], children2, i, n3, index4 = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children2 = node.children) {
      for (i = 0, n3 = children2.length; i < n3; ++i) {
        nodes.push(children2[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index4, this);
  }
  return this;
}
function node_find(callback, that) {
  let index4 = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index4, this)) {
      return node;
    }
  }
}
function node_sum(value2) {
  return this.eachAfter(function(node) {
    var sum2 = +value2(node.data) || 0, children2 = node.children, i = children2 && children2.length;
    while (--i >= 0)
      sum2 += children2[i].value;
    node.value = sum2;
  });
}
function node_sort(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
function node_path(end) {
  var start2 = this, ancestor = leastCommonAncestor(start2, end), nodes = [start2];
  while (start2 !== ancestor) {
    start2 = start2.parent;
    nodes.push(start2);
  }
  var k6 = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k6, 0, end);
    end = end.parent;
  }
  return nodes;
}
function leastCommonAncestor(a3, b10) {
  if (a3 === b10)
    return a3;
  var aNodes = a3.ancestors(), bNodes = b10.ancestors(), c5 = null;
  a3 = aNodes.pop();
  b10 = bNodes.pop();
  while (a3 === b10) {
    c5 = a3;
    a3 = aNodes.pop();
    b10 = bNodes.pop();
  }
  return c5;
}
function node_ancestors() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}
function node_descendants() {
  return Array.from(this);
}
function node_leaves() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
function node_links() {
  var root4 = this, links = [];
  root4.each(function(node) {
    if (node !== root4) {
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}
function* node_iterator() {
  var node = this, current, next = [node], children2, i, n3;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children2 = node.children) {
        for (i = 0, n3 = children2.length; i < n3; ++i) {
          next.push(children2[i]);
        }
      }
    }
  } while (next.length);
}
function hierarchy(data3, children2) {
  if (data3 instanceof Map) {
    data3 = [void 0, data3];
    if (children2 === void 0)
      children2 = mapChildren;
  } else if (children2 === void 0) {
    children2 = objectChildren;
  }
  var root4 = new Node(data3), node, nodes = [root4], child, childs, i, n3;
  while (node = nodes.pop()) {
    if ((childs = children2(node.data)) && (n3 = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n3 - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }
  return root4.eachBefore(computeHeight);
}
function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}
function objectChildren(d2) {
  return d2.children;
}
function mapChildren(d2) {
  return Array.isArray(d2) ? d2[1] : null;
}
function copyData(node) {
  if (node.data.value !== void 0)
    node.value = node.data.value;
  node.data = node.data.data;
}
function computeHeight(node) {
  var height = 0;
  do
    node.height = height;
  while ((node = node.parent) && node.height < ++height);
}
function Node(data3) {
  this.data = data3;
  this.depth = this.height = 0;
  this.parent = null;
}
Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: node_count,
  each: node_each,
  eachAfter: node_eachAfter,
  eachBefore: node_eachBefore,
  find: node_find,
  sum: node_sum,
  sort: node_sort,
  path: node_path,
  ancestors: node_ancestors,
  descendants: node_descendants,
  leaves: node_leaves,
  links: node_links,
  copy: node_copy,
  [Symbol.iterator]: node_iterator
};
function treemapDice(parent, x03, y03, x14, y14) {
  var nodes = parent.children, node, i = -1, n3 = nodes.length, k6 = parent.value && (x14 - x03) / parent.value;
  while (++i < n3) {
    node = nodes[i], node.y0 = y03, node.y1 = y14;
    node.x0 = x03, node.x1 = x03 += node.value * k6;
  }
}
function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null;
  this.a = this;
  this.z = 0;
  this.m = 0;
  this.c = 0;
  this.s = 0;
  this.t = null;
  this.i = i;
}
TreeNode.prototype = Object.create(Node.prototype);
function treemapSlice(parent, x03, y03, x14, y14) {
  var nodes = parent.children, node, i = -1, n3 = nodes.length, k6 = parent.value && (y14 - y03) / parent.value;
  while (++i < n3) {
    node = nodes[i], node.x0 = x03, node.x1 = x14;
    node.y0 = y03, node.y1 = y03 += node.value * k6;
  }
}
var phi = (1 + Math.sqrt(5)) / 2;
function squarifyRatio(ratio, parent, x03, y03, x14, y14) {
  var rows = [], nodes = parent.children, row, nodeValue, i0 = 0, i1 = 0, n3 = nodes.length, dx, dy, value2 = parent.value, sumValue, minValue, maxValue, newRatio, minRatio, alpha3, beta2;
  while (i0 < n3) {
    dx = x14 - x03, dy = y14 - y03;
    do
      sumValue = nodes[i1++].value;
    while (!sumValue && i1 < n3);
    minValue = maxValue = sumValue;
    alpha3 = Math.max(dy / dx, dx / dy) / (value2 * ratio);
    beta2 = sumValue * sumValue * alpha3;
    minRatio = Math.max(maxValue / beta2, beta2 / minValue);
    for (; i1 < n3; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue)
        minValue = nodeValue;
      if (nodeValue > maxValue)
        maxValue = nodeValue;
      beta2 = sumValue * sumValue * alpha3;
      newRatio = Math.max(maxValue / beta2, beta2 / minValue);
      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }
      minRatio = newRatio;
    }
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice)
      treemapDice(row, x03, y03, x14, value2 ? y03 += dy * sumValue / value2 : y14);
    else
      treemapSlice(row, x03, y03, value2 ? x03 += dx * sumValue / value2 : x14, y14);
    value2 -= sumValue, i0 = i1;
  }
  return rows;
}
var squarify = function custom10(ratio) {
  function squarify2(parent, x03, y03, x14, y14) {
    squarifyRatio(ratio, parent, x03, y03, x14, y14);
  }
  squarify2.ratio = function(x5) {
    return custom10((x5 = +x5) > 1 ? x5 : 1);
  };
  return squarify2;
}(phi);
var resquarify = function custom11(ratio) {
  function resquarify2(parent, x03, y03, x14, y14) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows, row, nodes, i, j2 = -1, n3, m3 = rows.length, value2 = parent.value;
      while (++j2 < m3) {
        row = rows[j2], nodes = row.children;
        for (i = row.value = 0, n3 = nodes.length; i < n3; ++i)
          row.value += nodes[i].value;
        if (row.dice)
          treemapDice(row, x03, y03, x14, value2 ? y03 += (y14 - y03) * row.value / value2 : y14);
        else
          treemapSlice(row, x03, y03, value2 ? x03 += (x14 - x03) * row.value / value2 : x14, y14);
        value2 -= row.value;
      }
    } else {
      parent._squarify = rows = squarifyRatio(ratio, parent, x03, y03, x14, y14);
      rows.ratio = ratio;
    }
  }
  resquarify2.ratio = function(x5) {
    return custom11((x5 = +x5) > 1 ? x5 : 1);
  };
  return resquarify2;
}(phi);
function basis2(t14, v0, v1, v22, v3) {
  var t23 = t14 * t14, t33 = t23 * t14;
  return ((1 - 3 * t14 + 3 * t23 - t33) * v0 + (4 - 6 * t23 + 3 * t33) * v1 + (1 + 3 * t14 + 3 * t23 - 3 * t33) * v22 + t33 * v3) / 6;
}
function basis$12(values2) {
  var n3 = values2.length - 1;
  return function(t4) {
    var i = t4 <= 0 ? t4 = 0 : t4 >= 1 ? (t4 = 1, n3 - 1) : Math.floor(t4 * n3), v1 = values2[i], v22 = values2[i + 1], v0 = i > 0 ? values2[i - 1] : 2 * v1 - v22, v3 = i < n3 - 1 ? values2[i + 2] : 2 * v22 - v1;
    return basis2((t4 - i / n3) * n3, v0, v1, v22, v3);
  };
}
function basisClosed(values2) {
  var n3 = values2.length;
  return function(t4) {
    var i = Math.floor(((t4 %= 1) < 0 ? ++t4 : t4) * n3), v0 = values2[(i + n3 - 1) % n3], v1 = values2[i % n3], v22 = values2[(i + 1) % n3], v3 = values2[(i + 2) % n3];
    return basis2((t4 - i / n3) * n3, v0, v1, v22, v3);
  };
}
var constant$9 = (x5) => () => x5;
function linear$1(a3, d2) {
  return function(t4) {
    return a3 + t4 * d2;
  };
}
function exponential2(a3, b10, y7) {
  return a3 = Math.pow(a3, y7), b10 = Math.pow(b10, y7) - a3, y7 = 1 / y7, function(t4) {
    return Math.pow(a3 + t4 * b10, y7);
  };
}
function hue2(a3, b10) {
  var d2 = b10 - a3;
  return d2 ? linear$1(a3, d2 > 180 || d2 < -180 ? d2 - 360 * Math.round(d2 / 360) : d2) : constant$9(isNaN(a3) ? b10 : a3);
}
function gamma2(y7) {
  return (y7 = +y7) === 1 ? nogamma2 : function(a3, b10) {
    return b10 - a3 ? exponential2(a3, b10, y7) : constant$9(isNaN(a3) ? b10 : a3);
  };
}
function nogamma2(a3, b10) {
  var d2 = b10 - a3;
  return d2 ? linear$1(a3, d2) : constant$9(isNaN(a3) ? b10 : a3);
}
var rgb$1 = function rgbGamma2(y7) {
  var color3 = gamma2(y7);
  function rgb$12(start2, end) {
    var r3 = color3((start2 = rgb2(start2)).r, (end = rgb2(end)).r), g2 = color3(start2.g, end.g), b10 = color3(start2.b, end.b), opacity = nogamma2(start2.opacity, end.opacity);
    return function(t4) {
      start2.r = r3(t4);
      start2.g = g2(t4);
      start2.b = b10(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  }
  rgb$12.gamma = rgbGamma2;
  return rgb$12;
}(1);
function rgbSpline2(spline) {
  return function(colors5) {
    var n3 = colors5.length, r3 = new Array(n3), g2 = new Array(n3), b10 = new Array(n3), i, color3;
    for (i = 0; i < n3; ++i) {
      color3 = rgb2(colors5[i]);
      r3[i] = color3.r || 0;
      g2[i] = color3.g || 0;
      b10[i] = color3.b || 0;
    }
    r3 = spline(r3);
    g2 = spline(g2);
    b10 = spline(b10);
    color3.opacity = 1;
    return function(t4) {
      color3.r = r3(t4);
      color3.g = g2(t4);
      color3.b = b10(t4);
      return color3 + "";
    };
  };
}
var rgbBasis2 = rgbSpline2(basis$12);
var rgbBasisClosed = rgbSpline2(basisClosed);
function numberArray2(a3, b10) {
  if (!b10)
    b10 = [];
  var n3 = a3 ? Math.min(b10.length, a3.length) : 0, c5 = b10.slice(), i;
  return function(t4) {
    for (i = 0; i < n3; ++i)
      c5[i] = a3[i] * (1 - t4) + b10[i] * t4;
    return c5;
  };
}
function isNumberArray2(x5) {
  return ArrayBuffer.isView(x5) && !(x5 instanceof DataView);
}
function genericArray2(a3, b10) {
  var nb2 = b10 ? b10.length : 0, na2 = a3 ? Math.min(nb2, a3.length) : 0, x5 = new Array(na2), c5 = new Array(nb2), i;
  for (i = 0; i < na2; ++i)
    x5[i] = value(a3[i], b10[i]);
  for (; i < nb2; ++i)
    c5[i] = b10[i];
  return function(t4) {
    for (i = 0; i < na2; ++i)
      c5[i] = x5[i](t4);
    return c5;
  };
}
function date3(a3, b10) {
  var d2 = new Date();
  return a3 = +a3, b10 = +b10, function(t4) {
    return d2.setTime(a3 * (1 - t4) + b10 * t4), d2;
  };
}
function number$12(a3, b10) {
  return a3 = +a3, b10 = +b10, function(t4) {
    return a3 * (1 - t4) + b10 * t4;
  };
}
function object$1(a3, b10) {
  var i = {}, c5 = {}, k6;
  if (a3 === null || typeof a3 !== "object")
    a3 = {};
  if (b10 === null || typeof b10 !== "object")
    b10 = {};
  for (k6 in b10) {
    if (k6 in a3) {
      i[k6] = value(a3[k6], b10[k6]);
    } else {
      c5[k6] = b10[k6];
    }
  }
  return function(t4) {
    for (k6 in i)
      c5[k6] = i[k6](t4);
    return c5;
  };
}
var reA2 = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
var reB2 = new RegExp(reA2.source, "g");
function zero2(b10) {
  return function() {
    return b10;
  };
}
function one2(b10) {
  return function(t4) {
    return b10(t4) + "";
  };
}
function string(a3, b10) {
  var bi2 = reA2.lastIndex = reB2.lastIndex = 0, am, bm, bs, i = -1, s4 = [], q2 = [];
  a3 = a3 + "", b10 = b10 + "";
  while ((am = reA2.exec(a3)) && (bm = reB2.exec(b10))) {
    if ((bs = bm.index) > bi2) {
      bs = b10.slice(bi2, bs);
      if (s4[i])
        s4[i] += bs;
      else
        s4[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s4[i])
        s4[i] += bm;
      else
        s4[++i] = bm;
    } else {
      s4[++i] = null;
      q2.push({i, x: number$12(am, bm)});
    }
    bi2 = reB2.lastIndex;
  }
  if (bi2 < b10.length) {
    bs = b10.slice(bi2);
    if (s4[i])
      s4[i] += bs;
    else
      s4[++i] = bs;
  }
  return s4.length < 2 ? q2[0] ? one2(q2[0].x) : zero2(b10) : (b10 = q2.length, function(t4) {
    for (var i2 = 0, o; i2 < b10; ++i2)
      s4[(o = q2[i2]).i] = o.x(t4);
    return s4.join("");
  });
}
function value(a3, b10) {
  var t4 = typeof b10, c5;
  return b10 == null || t4 === "boolean" ? constant$9(b10) : (t4 === "number" ? number$12 : t4 === "string" ? (c5 = color2(b10)) ? (b10 = c5, rgb$1) : string : b10 instanceof color2 ? rgb$1 : b10 instanceof Date ? date3 : isNumberArray2(b10) ? numberArray2 : Array.isArray(b10) ? genericArray2 : typeof b10.valueOf !== "function" && typeof b10.toString !== "function" || isNaN(b10) ? object$1 : number$12)(a3, b10);
}
var degrees$3 = 180 / Math.PI;
var identity$5 = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function decompose$1(a3, b10, c5, d2, e3, f3) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a3 * a3 + b10 * b10))
    a3 /= scaleX, b10 /= scaleX;
  if (skewX = a3 * c5 + b10 * d2)
    c5 -= a3 * skewX, d2 -= b10 * skewX;
  if (scaleY = Math.sqrt(c5 * c5 + d2 * d2))
    c5 /= scaleY, d2 /= scaleY, skewX /= scaleY;
  if (a3 * d2 < b10 * c5)
    a3 = -a3, b10 = -b10, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e3,
    translateY: f3,
    rotate: Math.atan2(b10, a3) * degrees$3,
    skewX: Math.atan(skewX) * degrees$3,
    scaleX,
    scaleY
  };
}
var svgNode$1;
function parseCss$1(value2) {
  const m3 = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value2 + "");
  return m3.isIdentity ? identity$5 : decompose$1(m3.a, m3.b, m3.c, m3.d, m3.e, m3.f);
}
function parseSvg$1(value2) {
  if (value2 == null)
    return identity$5;
  if (!svgNode$1)
    svgNode$1 = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode$1.setAttribute("transform", value2);
  if (!(value2 = svgNode$1.transform.baseVal.consolidate()))
    return identity$5;
  value2 = value2.matrix;
  return decompose$1(value2.a, value2.b, value2.c, value2.d, value2.e, value2.f);
}
function interpolateTransform$1(parse2, pxComma, pxParen, degParen) {
  function pop(s4) {
    return s4.length ? s4.pop() + " " : "";
  }
  function translate3(xa2, ya2, xb2, yb2, s4, q2) {
    if (xa2 !== xb2 || ya2 !== yb2) {
      var i = s4.push("translate(", null, pxComma, null, pxParen);
      q2.push({i: i - 4, x: number$12(xa2, xb2)}, {i: i - 2, x: number$12(ya2, yb2)});
    } else if (xb2 || yb2) {
      s4.push("translate(" + xb2 + pxComma + yb2 + pxParen);
    }
  }
  function rotate(a3, b10, s4, q2) {
    if (a3 !== b10) {
      if (a3 - b10 > 180)
        b10 += 360;
      else if (b10 - a3 > 180)
        a3 += 360;
      q2.push({i: s4.push(pop(s4) + "rotate(", null, degParen) - 2, x: number$12(a3, b10)});
    } else if (b10) {
      s4.push(pop(s4) + "rotate(" + b10 + degParen);
    }
  }
  function skewX(a3, b10, s4, q2) {
    if (a3 !== b10) {
      q2.push({i: s4.push(pop(s4) + "skewX(", null, degParen) - 2, x: number$12(a3, b10)});
    } else if (b10) {
      s4.push(pop(s4) + "skewX(" + b10 + degParen);
    }
  }
  function scale(xa2, ya2, xb2, yb2, s4, q2) {
    if (xa2 !== xb2 || ya2 !== yb2) {
      var i = s4.push(pop(s4) + "scale(", null, ",", null, ")");
      q2.push({i: i - 4, x: number$12(xa2, xb2)}, {i: i - 2, x: number$12(ya2, yb2)});
    } else if (xb2 !== 1 || yb2 !== 1) {
      s4.push(pop(s4) + "scale(" + xb2 + "," + yb2 + ")");
    }
  }
  return function(a3, b10) {
    var s4 = [], q2 = [];
    a3 = parse2(a3), b10 = parse2(b10);
    translate3(a3.translateX, a3.translateY, b10.translateX, b10.translateY, s4, q2);
    rotate(a3.rotate, b10.rotate, s4, q2);
    skewX(a3.skewX, b10.skewX, s4, q2);
    scale(a3.scaleX, a3.scaleY, b10.scaleX, b10.scaleY, s4, q2);
    a3 = b10 = null;
    return function(t4) {
      var i = -1, n3 = q2.length, o;
      while (++i < n3)
        s4[(o = q2[i]).i] = o.x(t4);
      return s4.join("");
    };
  };
}
var interpolateTransformCss$1 = interpolateTransform$1(parseCss$1, "px, ", "px)", "deg)");
var interpolateTransformSvg$1 = interpolateTransform$1(parseSvg$1, ", ", ")", ")");
var epsilon2$2 = 1e-12;
function cosh$1(x5) {
  return ((x5 = Math.exp(x5)) + 1 / x5) / 2;
}
function sinh$1(x5) {
  return ((x5 = Math.exp(x5)) - 1 / x5) / 2;
}
function tanh$1(x5) {
  return ((x5 = Math.exp(2 * x5)) - 1) / (x5 + 1);
}
var zoom = function zoomRho(rho, rho2, rho4) {
  function zoom2(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S4;
    if (d2 < epsilon2$2) {
      S4 = Math.log(w1 / w0) / rho;
      i = function(t4) {
        return [
          ux0 + t4 * dx,
          uy0 + t4 * dy,
          w0 * Math.exp(rho * t4 * S4)
        ];
      };
    } else {
      var d1 = Math.sqrt(d2), b03 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b13 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b03 * b03 + 1) - b03), r1 = Math.log(Math.sqrt(b13 * b13 + 1) - b13);
      S4 = (r1 - r0) / rho;
      i = function(t4) {
        var s4 = t4 * S4, coshr0 = cosh$1(r0), u2 = w0 / (rho2 * d1) * (coshr0 * tanh$1(rho * s4 + r0) - sinh$1(r0));
        return [
          ux0 + u2 * dx,
          uy0 + u2 * dy,
          w0 * coshr0 / cosh$1(rho * s4 + r0)
        ];
      };
    }
    i.duration = S4 * 1e3 * rho / Math.SQRT2;
    return i;
  }
  zoom2.rho = function(_2) {
    var _1 = Math.max(1e-3, +_2), _22 = _1 * _1, _4 = _22 * _22;
    return zoomRho(_1, _22, _4);
  };
  return zoom2;
}(Math.SQRT2, 2, 4);
function hsl$1(hue3) {
  return function(start2, end) {
    var h2 = hue3((start2 = hsl3(start2)).h, (end = hsl3(end)).h), s4 = nogamma2(start2.s, end.s), l3 = nogamma2(start2.l, end.l), opacity = nogamma2(start2.opacity, end.opacity);
    return function(t4) {
      start2.h = h2(t4);
      start2.s = s4(t4);
      start2.l = l3(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  };
}
var hsl$2 = hsl$1(hue2);
var hslLong2 = hsl$1(nogamma2);
function hcl$12(hue3) {
  return function(start2, end) {
    var h2 = hue3((start2 = hcl2(start2)).h, (end = hcl2(end)).h), c5 = nogamma2(start2.c, end.c), l3 = nogamma2(start2.l, end.l), opacity = nogamma2(start2.opacity, end.opacity);
    return function(t4) {
      start2.h = h2(t4);
      start2.c = c5(t4);
      start2.l = l3(t4);
      start2.opacity = opacity(t4);
      return start2 + "";
    };
  };
}
var hcl$2 = hcl$12(hue2);
var hclLong2 = hcl$12(nogamma2);
function cubehelix$12(hue3) {
  return function cubehelixGamma(y7) {
    y7 = +y7;
    function cubehelix$13(start2, end) {
      var h2 = hue3((start2 = cubehelix2(start2)).h, (end = cubehelix2(end)).h), s4 = nogamma2(start2.s, end.s), l3 = nogamma2(start2.l, end.l), opacity = nogamma2(start2.opacity, end.opacity);
      return function(t4) {
        start2.h = h2(t4);
        start2.s = s4(t4);
        start2.l = l3(Math.pow(t4, y7));
        start2.opacity = opacity(t4);
        return start2 + "";
      };
    }
    cubehelix$13.gamma = cubehelixGamma;
    return cubehelix$13;
  }(1);
}
var cubehelix$2 = cubehelix$12(hue2);
var cubehelixLong2 = cubehelix$12(nogamma2);
function piecewise2(interpolate3, values2) {
  if (values2 === void 0)
    values2 = interpolate3, interpolate3 = value;
  var i = 0, n3 = values2.length - 1, v3 = values2[0], I3 = new Array(n3 < 0 ? 0 : n3);
  while (i < n3)
    I3[i] = interpolate3(v3, v3 = values2[++i]);
  return function(t4) {
    var i2 = Math.max(0, Math.min(n3 - 1, Math.floor(t4 *= n3)));
    return I3[i2](t4 - i2);
  };
}
var pi$3 = Math.PI;
var tau$4 = 2 * pi$3;
var epsilon$4 = 1e-6;
var tauEpsilon2 = tau$4 - epsilon$4;
function Path$1() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path2() {
  return new Path$1();
}
Path$1.prototype = path2.prototype = {
  constructor: Path$1,
  moveTo: function(x5, y7) {
    this._ += "M" + (this._x0 = this._x1 = +x5) + "," + (this._y0 = this._y1 = +y7);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x5, y7) {
    this._ += "L" + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  quadraticCurveTo: function(x14, y14, x5, y7) {
    this._ += "Q" + +x14 + "," + +y14 + "," + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  bezierCurveTo: function(x14, y14, x22, y22, x5, y7) {
    this._ += "C" + +x14 + "," + +y14 + "," + +x22 + "," + +y22 + "," + (this._x1 = +x5) + "," + (this._y1 = +y7);
  },
  arcTo: function(x14, y14, x22, y22, r3) {
    x14 = +x14, y14 = +y14, x22 = +x22, y22 = +y22, r3 = +r3;
    var x03 = this._x1, y03 = this._y1, x21 = x22 - x14, y21 = y22 - y14, x01 = x03 - x14, y01 = y03 - y14, l01_2 = x01 * x01 + y01 * y01;
    if (r3 < 0)
      throw new Error("negative radius: " + r3);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x14) + "," + (this._y1 = y14);
    } else if (!(l01_2 > epsilon$4))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$4) || !r3) {
      this._ += "L" + (this._x1 = x14) + "," + (this._y1 = y14);
    } else {
      var x20 = x22 - x03, y20 = y22 - y03, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l3 = r3 * Math.tan((pi$3 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l3 / l01, t21 = l3 / l21;
      if (Math.abs(t01 - 1) > epsilon$4) {
        this._ += "L" + (x14 + t01 * x01) + "," + (y14 + t01 * y01);
      }
      this._ += "A" + r3 + "," + r3 + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x14 + t21 * x21) + "," + (this._y1 = y14 + t21 * y21);
    }
  },
  arc: function(x5, y7, r3, a0, a1, ccw) {
    x5 = +x5, y7 = +y7, r3 = +r3, ccw = !!ccw;
    var dx = r3 * Math.cos(a0), dy = r3 * Math.sin(a0), x03 = x5 + dx, y03 = y7 + dy, cw = 1 ^ ccw, da2 = ccw ? a0 - a1 : a1 - a0;
    if (r3 < 0)
      throw new Error("negative radius: " + r3);
    if (this._x1 === null) {
      this._ += "M" + x03 + "," + y03;
    } else if (Math.abs(this._x1 - x03) > epsilon$4 || Math.abs(this._y1 - y03) > epsilon$4) {
      this._ += "L" + x03 + "," + y03;
    }
    if (!r3)
      return;
    if (da2 < 0)
      da2 = da2 % tau$4 + tau$4;
    if (da2 > tauEpsilon2) {
      this._ += "A" + r3 + "," + r3 + ",0,1," + cw + "," + (x5 - dx) + "," + (y7 - dy) + "A" + r3 + "," + r3 + ",0,1," + cw + "," + (this._x1 = x03) + "," + (this._y1 = y03);
    } else if (da2 > epsilon$4) {
      this._ += "A" + r3 + "," + r3 + ",0," + +(da2 >= pi$3) + "," + cw + "," + (this._x1 = x5 + r3 * Math.cos(a1)) + "," + (this._y1 = y7 + r3 * Math.sin(a1));
    }
  },
  rect: function(x5, y7, w3, h2) {
    this._ += "M" + (this._x0 = this._x1 = +x5) + "," + (this._y0 = this._y1 = +y7) + "h" + +w3 + "v" + +h2 + "h" + -w3 + "Z";
  },
  toString: function() {
    return this._;
  }
};
var defaultSource$1 = Math.random;
var uniform = function sourceRandomUniform(source) {
  function randomUniform(min5, max6) {
    min5 = min5 == null ? 0 : +min5;
    max6 = max6 == null ? 1 : +max6;
    if (arguments.length === 1)
      max6 = min5, min5 = 0;
    else
      max6 -= min5;
    return function() {
      return source() * max6 + min5;
    };
  }
  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(defaultSource$1);
var int = function sourceRandomInt(source) {
  function randomInt(min5, max6) {
    if (arguments.length < 2)
      max6 = min5, min5 = 0;
    min5 = Math.floor(min5);
    max6 = Math.floor(max6) - min5;
    return function() {
      return Math.floor(source() * max6 + min5);
    };
  }
  randomInt.source = sourceRandomInt;
  return randomInt;
}(defaultSource$1);
var normal = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x5, r3;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function() {
      var y7;
      if (x5 != null)
        y7 = x5, x5 = null;
      else
        do {
          x5 = source() * 2 - 1;
          y7 = source() * 2 - 1;
          r3 = x5 * x5 + y7 * y7;
        } while (!r3 || r3 > 1);
      return mu + sigma * y7 * Math.sqrt(-2 * Math.log(r3) / r3);
    };
  }
  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(defaultSource$1);
var logNormal = function sourceRandomLogNormal(source) {
  var N3 = normal.source(source);
  function randomLogNormal() {
    var randomNormal = N3.apply(this, arguments);
    return function() {
      return Math.exp(randomNormal());
    };
  }
  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(defaultSource$1);
var irwinHall = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n3) {
    if ((n3 = +n3) <= 0)
      return () => 0;
    return function() {
      for (var sum2 = 0, i = n3; i > 1; --i)
        sum2 += source();
      return sum2 + i * source();
    };
  }
  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(defaultSource$1);
var bates = function sourceRandomBates(source) {
  var I3 = irwinHall.source(source);
  function randomBates(n3) {
    if ((n3 = +n3) === 0)
      return source;
    var randomIrwinHall = I3(n3);
    return function() {
      return randomIrwinHall() / n3;
    };
  }
  randomBates.source = sourceRandomBates;
  return randomBates;
}(defaultSource$1);
var exponential$1 = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function() {
      return -Math.log1p(-source()) / lambda;
    };
  }
  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(defaultSource$1);
var pareto = function sourceRandomPareto(source) {
  function randomPareto(alpha3) {
    if ((alpha3 = +alpha3) < 0)
      throw new RangeError("invalid alpha");
    alpha3 = 1 / -alpha3;
    return function() {
      return Math.pow(1 - source(), alpha3);
    };
  }
  randomPareto.source = sourceRandomPareto;
  return randomPareto;
}(defaultSource$1);
var bernoulli = function sourceRandomBernoulli(source) {
  function randomBernoulli(p3) {
    if ((p3 = +p3) < 0 || p3 > 1)
      throw new RangeError("invalid p");
    return function() {
      return Math.floor(source() + p3);
    };
  }
  randomBernoulli.source = sourceRandomBernoulli;
  return randomBernoulli;
}(defaultSource$1);
var geometric = function sourceRandomGeometric(source) {
  function randomGeometric(p3) {
    if ((p3 = +p3) < 0 || p3 > 1)
      throw new RangeError("invalid p");
    if (p3 === 0)
      return () => Infinity;
    if (p3 === 1)
      return () => 1;
    p3 = Math.log1p(-p3);
    return function() {
      return 1 + Math.floor(Math.log1p(-source()) / p3);
    };
  }
  randomGeometric.source = sourceRandomGeometric;
  return randomGeometric;
}(defaultSource$1);
var gamma$1 = function sourceRandomGamma(source) {
  var randomNormal = normal.source(source)();
  function randomGamma(k6, theta) {
    if ((k6 = +k6) < 0)
      throw new RangeError("invalid k");
    if (k6 === 0)
      return () => 0;
    theta = theta == null ? 1 : +theta;
    if (k6 === 1)
      return () => -Math.log1p(-source()) * theta;
    var d2 = (k6 < 1 ? k6 + 1 : k6) - 1 / 3, c5 = 1 / (3 * Math.sqrt(d2)), multiplier = k6 < 1 ? () => Math.pow(source(), 1 / k6) : () => 1;
    return function() {
      do {
        do {
          var x5 = randomNormal(), v3 = 1 + c5 * x5;
        } while (v3 <= 0);
        v3 *= v3 * v3;
        var u2 = 1 - source();
      } while (u2 >= 1 - 0.0331 * x5 * x5 * x5 * x5 && Math.log(u2) >= 0.5 * x5 * x5 + d2 * (1 - v3 + Math.log(v3)));
      return d2 * v3 * multiplier() * theta;
    };
  }
  randomGamma.source = sourceRandomGamma;
  return randomGamma;
}(defaultSource$1);
var beta = function sourceRandomBeta(source) {
  var G4 = gamma$1.source(source);
  function randomBeta(alpha3, beta2) {
    var X5 = G4(alpha3), Y5 = G4(beta2);
    return function() {
      var x5 = X5();
      return x5 === 0 ? 0 : x5 / (x5 + Y5());
    };
  }
  randomBeta.source = sourceRandomBeta;
  return randomBeta;
}(defaultSource$1);
var binomial = function sourceRandomBinomial(source) {
  var G4 = geometric.source(source), B6 = beta.source(source);
  function randomBinomial(n3, p3) {
    n3 = +n3;
    if ((p3 = +p3) >= 1)
      return () => n3;
    if (p3 <= 0)
      return () => 0;
    return function() {
      var acc = 0, nn = n3, pp = p3;
      while (nn * pp > 16 && nn * (1 - pp) > 16) {
        var i = Math.floor((nn + 1) * pp), y7 = B6(i, nn - i + 1)();
        if (y7 <= pp) {
          acc += i;
          nn -= i;
          pp = (pp - y7) / (1 - y7);
        } else {
          nn = i - 1;
          pp /= y7;
        }
      }
      var sign5 = pp < 0.5, pFinal = sign5 ? pp : 1 - pp, g2 = G4(pFinal);
      for (var s4 = g2(), k6 = 0; s4 <= nn; ++k6)
        s4 += g2();
      return acc + (sign5 ? k6 : nn - k6);
    };
  }
  randomBinomial.source = sourceRandomBinomial;
  return randomBinomial;
}(defaultSource$1);
var weibull = function sourceRandomWeibull(source) {
  function randomWeibull(k6, a3, b10) {
    var outerFunc;
    if ((k6 = +k6) === 0) {
      outerFunc = (x5) => -Math.log(x5);
    } else {
      k6 = 1 / k6;
      outerFunc = (x5) => Math.pow(x5, k6);
    }
    a3 = a3 == null ? 0 : +a3;
    b10 = b10 == null ? 1 : +b10;
    return function() {
      return a3 + b10 * outerFunc(-Math.log1p(-source()));
    };
  }
  randomWeibull.source = sourceRandomWeibull;
  return randomWeibull;
}(defaultSource$1);
var cauchy = function sourceRandomCauchy(source) {
  function randomCauchy(a3, b10) {
    a3 = a3 == null ? 0 : +a3;
    b10 = b10 == null ? 1 : +b10;
    return function() {
      return a3 + b10 * Math.tan(Math.PI * source());
    };
  }
  randomCauchy.source = sourceRandomCauchy;
  return randomCauchy;
}(defaultSource$1);
var logistic = function sourceRandomLogistic(source) {
  function randomLogistic(a3, b10) {
    a3 = a3 == null ? 0 : +a3;
    b10 = b10 == null ? 1 : +b10;
    return function() {
      var u2 = source();
      return a3 + b10 * Math.log(u2 / (1 - u2));
    };
  }
  randomLogistic.source = sourceRandomLogistic;
  return randomLogistic;
}(defaultSource$1);
var poisson = function sourceRandomPoisson(source) {
  var G4 = gamma$1.source(source), B6 = binomial.source(source);
  function randomPoisson(lambda) {
    return function() {
      var acc = 0, l3 = lambda;
      while (l3 > 16) {
        var n3 = Math.floor(0.875 * l3), t4 = G4(n3)();
        if (t4 > l3)
          return acc + B6(n3 - 1, l3 / t4)();
        acc += n3;
        l3 -= t4;
      }
      for (var s4 = -Math.log1p(-source()), k6 = 0; s4 <= l3; ++k6)
        s4 -= Math.log1p(-source());
      return acc + k6;
    };
  }
  randomPoisson.source = sourceRandomPoisson;
  return randomPoisson;
}(defaultSource$1);
var eps = 1 / 4294967296;
function constant$a(x5) {
  return function constant7() {
    return x5;
  };
}
var epsilon$5 = 1e-12;
var pi$4 = Math.PI;
var halfPi$3 = pi$4 / 2;
var tau$5 = 2 * pi$4;
var slice$4 = Array.prototype.slice;
function array$5(x5) {
  return typeof x5 === "object" && "length" in x5 ? x5 : Array.from(x5);
}
function Linear2(context) {
  this._context = context;
}
Linear2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x5, y7);
        break;
    }
  }
};
function curveLinear2(context) {
  return new Linear2(context);
}
function x$3(p3) {
  return p3[0];
}
function y$3(p3) {
  return p3[1];
}
function line(x5, y7) {
  var defined4 = constant$a(true), context = null, curve = curveLinear2, output = null;
  x5 = typeof x5 === "function" ? x5 : x5 === void 0 ? x$3 : constant$a(x5);
  y7 = typeof y7 === "function" ? y7 : y7 === void 0 ? y$3 : constant$a(y7);
  function line2(data3) {
    var i, n3 = (data3 = array$5(data3)).length, d2, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path2());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x5(d2, i, data3), +y7(d2, i, data3));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line2.x = function(_2) {
    return arguments.length ? (x5 = typeof _2 === "function" ? _2 : constant$a(+_2), line2) : x5;
  };
  line2.y = function(_2) {
    return arguments.length ? (y7 = typeof _2 === "function" ? _2 : constant$a(+_2), line2) : y7;
  };
  line2.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant$a(!!_2), line2) : defined4;
  };
  line2.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), line2) : curve;
  };
  line2.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), line2) : context;
  };
  return line2;
}
function area$3(x03, y03, y14) {
  var x14 = null, defined4 = constant$a(true), context = null, curve = curveLinear2, output = null;
  x03 = typeof x03 === "function" ? x03 : x03 === void 0 ? x$3 : constant$a(+x03);
  y03 = typeof y03 === "function" ? y03 : y03 === void 0 ? constant$a(0) : constant$a(+y03);
  y14 = typeof y14 === "function" ? y14 : y14 === void 0 ? y$3 : constant$a(+y14);
  function area3(data3) {
    var i, j2, k6, n3 = (data3 = array$5(data3)).length, d2, defined0 = false, buffer, x0z = new Array(n3), y0z = new Array(n3);
    if (context == null)
      output = curve(buffer = path2());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0) {
          j2 = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k6 = i - 1; k6 >= j2; --k6) {
            output.point(x0z[k6], y0z[k6]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x03(d2, i, data3), y0z[i] = +y03(d2, i, data3);
        output.point(x14 ? +x14(d2, i, data3) : x0z[i], y14 ? +y14(d2, i, data3) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return line().defined(defined4).curve(curve).context(context);
  }
  area3.x = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant$a(+_2), x14 = null, area3) : x03;
  };
  area3.x0 = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant$a(+_2), area3) : x03;
  };
  area3.x1 = function(_2) {
    return arguments.length ? (x14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant$a(+_2), area3) : x14;
  };
  area3.y = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant$a(+_2), y14 = null, area3) : y03;
  };
  area3.y0 = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant$a(+_2), area3) : y03;
  };
  area3.y1 = function(_2) {
    return arguments.length ? (y14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant$a(+_2), area3) : y14;
  };
  area3.lineX0 = area3.lineY0 = function() {
    return arealine().x(x03).y(y03);
  };
  area3.lineY1 = function() {
    return arealine().x(x03).y(y14);
  };
  area3.lineX1 = function() {
    return arealine().x(x14).y(y03);
  };
  area3.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant$a(!!_2), area3) : defined4;
  };
  area3.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), area3) : curve;
  };
  area3.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), area3) : context;
  };
  return area3;
}
var curveRadialLinear = curveRadial(curveLinear2);
function Radial(curve) {
  this._curve = curve;
}
Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a3, r3) {
    this._curve.point(r3 * Math.sin(a3), r3 * -Math.cos(a3));
  }
};
function curveRadial(curve) {
  function radial2(context) {
    return new Radial(curve(context));
  }
  radial2._curve = curve;
  return radial2;
}
var tan30 = Math.sqrt(1 / 3);
var tan30_2 = tan30 * 2;
var kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);
var kx = Math.sin(tau$5 / 10) * kr;
var ky = -Math.cos(tau$5 / 10) * kr;
var sqrt3 = Math.sqrt(3);
var s = Math.sqrt(3) / 2;
var k2 = 1 / Math.sqrt(12);
var a$1 = (k2 / 2 + 1) * 3;
function noop$3() {
}
function point2(that, x5, y7) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x5) / 6, (that._y0 + 4 * that._y1 + y7) / 6);
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point2(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point2(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function basis$2(context) {
  return new Basis(context);
}
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop$3,
  areaEnd: noop$3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x5, this._y2 = y7;
        break;
      case 1:
        this._point = 2;
        this._x3 = x5, this._y3 = y7;
        break;
      case 2:
        this._point = 3;
        this._x4 = x5, this._y4 = y7;
        this._context.moveTo((this._x0 + 4 * this._x1 + x5) / 6, (this._y0 + 4 * this._y1 + y7) / 6);
        break;
      default:
        point2(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x03 = (this._x0 + 4 * this._x1 + x5) / 6, y03 = (this._y0 + 4 * this._y1 + y7) / 6;
        this._line ? this._context.lineTo(x03, y03) : this._context.moveTo(x03, y03);
        break;
      case 3:
        this._point = 4;
      default:
        point2(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function Bundle(context, beta2) {
  this._basis = new Basis(context);
  this._beta = beta2;
}
Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x5 = this._x, y7 = this._y, j2 = x5.length - 1;
    if (j2 > 0) {
      var x03 = x5[0], y03 = y7[0], dx = x5[j2] - x03, dy = y7[j2] - y03, i = -1, t4;
      while (++i <= j2) {
        t4 = i / j2;
        this._basis.point(this._beta * x5[i] + (1 - this._beta) * (x03 + t4 * dx), this._beta * y7[i] + (1 - this._beta) * (y03 + t4 * dy));
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x5, y7) {
    this._x.push(+x5);
    this._y.push(+y7);
  }
};
var bundle = function custom12(beta2) {
  function bundle2(context) {
    return beta2 === 1 ? new Basis(context) : new Bundle(context, beta2);
  }
  bundle2.beta = function(beta3) {
    return custom12(+beta3);
  };
  return bundle2;
}(0.85);
function point$1(that, x5, y7) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x5), that._y2 + that._k * (that._y1 - y7), that._x2, that._y2);
}
function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point$1(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        this._x1 = x5, this._y1 = y7;
        break;
      case 2:
        this._point = 3;
      default:
        point$1(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var cardinal = function custom13(tension) {
  function cardinal2(context) {
    return new Cardinal(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom13(+tension2);
  };
  return cardinal2;
}(0);
function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: noop$3,
  areaEnd: noop$3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x5, this._y3 = y7;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x5, this._y4 = y7);
        break;
      case 2:
        this._point = 3;
        this._x5 = x5, this._y5 = y7;
        break;
      default:
        point$1(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var cardinalClosed = function custom14(tension) {
  function cardinal2(context) {
    return new CardinalClosed(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom14(+tension2);
  };
  return cardinal2;
}(0);
function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$1(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var cardinalOpen = function custom15(tension) {
  function cardinal2(context) {
    return new CardinalOpen(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom15(+tension2);
  };
  return cardinal2;
}(0);
function point$2(that, x5, y7) {
  var x14 = that._x1, y14 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon$5) {
    var a3 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n3 = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x14 = (x14 * a3 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n3;
    y14 = (y14 * a3 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n3;
  }
  if (that._l23_a > epsilon$5) {
    var b10 = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m3 = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b10 + that._x1 * that._l23_2a - x5 * that._l12_2a) / m3;
    y22 = (y22 * b10 + that._y1 * that._l23_2a - y7 * that._l12_2a) / m3;
  }
  that._context.bezierCurveTo(x14, y14, x22, y22, that._x2, that._y2);
}
function CatmullRom(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point$2(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var catmullRom = function custom16(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRom(context, alpha3) : new Cardinal(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom16(+alpha4);
  };
  return catmullRom2;
}(0.5);
function CatmullRomClosed(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRomClosed.prototype = {
  areaStart: noop$3,
  areaEnd: noop$3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x5, this._y3 = y7;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x5, this._y4 = y7);
        break;
      case 2:
        this._point = 3;
        this._x5 = x5, this._y5 = y7;
        break;
      default:
        point$2(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var catmullRomClosed = function custom17(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRomClosed(context, alpha3) : new CardinalClosed(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom17(+alpha4);
  };
  return catmullRom2;
}(0.5);
function CatmullRomOpen(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$2(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var catmullRomOpen = function custom18(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRomOpen(context, alpha3) : new CardinalOpen(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom18(+alpha4);
  };
  return catmullRom2;
}(0.5);
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop$3,
  areaEnd: noop$3,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point)
      this._context.lineTo(x5, y7);
    else
      this._point = 1, this._context.moveTo(x5, y7);
  }
};
function sign$1(x5) {
  return x5 < 0 ? -1 : 1;
}
function slope3(that, x22, y22) {
  var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p3 = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p3)) || 0;
}
function slope2(that, t4) {
  var h2 = that._x1 - that._x0;
  return h2 ? (3 * (that._y1 - that._y0) / h2 - t4) / 2 : t4;
}
function point$3(that, t04, t14) {
  var x03 = that._x0, y03 = that._y0, x14 = that._x1, y14 = that._y1, dx = (x14 - x03) / 3;
  that._context.bezierCurveTo(x03 + dx, y03 + dx * t04, x14 - dx, y14 - dx * t14, x14, y14);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point$3(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    var t14 = NaN;
    x5 = +x5, y7 = +y7;
    if (x5 === this._x1 && y7 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point$3(this, slope2(this, t14 = slope3(this, x5, y7)), t14);
        break;
      default:
        point$3(this, this._t0, t14 = slope3(this, x5, y7));
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
    this._t0 = t14;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x5, y7) {
  MonotoneX.prototype.point.call(this, y7, x5);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x5, y7) {
    this._context.moveTo(y7, x5);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x5, y7) {
    this._context.lineTo(y7, x5);
  },
  bezierCurveTo: function(x14, y14, x22, y22, x5, y7) {
    this._context.bezierCurveTo(y14, x14, y22, x22, y7, x5);
  }
};
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x5 = this._x, y7 = this._y, n3 = x5.length;
    if (n3) {
      this._line ? this._context.lineTo(x5[0], y7[0]) : this._context.moveTo(x5[0], y7[0]);
      if (n3 === 2) {
        this._context.lineTo(x5[1], y7[1]);
      } else {
        var px = controlPoints(x5), py = controlPoints(y7);
        for (var i0 = 0, i1 = 1; i1 < n3; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x5[i1], y7[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n3 === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x5, y7) {
    this._x.push(+x5);
    this._y.push(+y7);
  }
};
function controlPoints(x5) {
  var i, n3 = x5.length - 1, m3, a3 = new Array(n3), b10 = new Array(n3), r3 = new Array(n3);
  a3[0] = 0, b10[0] = 2, r3[0] = x5[0] + 2 * x5[1];
  for (i = 1; i < n3 - 1; ++i)
    a3[i] = 1, b10[i] = 4, r3[i] = 4 * x5[i] + 2 * x5[i + 1];
  a3[n3 - 1] = 2, b10[n3 - 1] = 7, r3[n3 - 1] = 8 * x5[n3 - 1] + x5[n3];
  for (i = 1; i < n3; ++i)
    m3 = a3[i] / b10[i - 1], b10[i] -= m3, r3[i] -= m3 * r3[i - 1];
  a3[n3 - 1] = r3[n3 - 1] / b10[n3 - 1];
  for (i = n3 - 2; i >= 0; --i)
    a3[i] = (r3[i] - a3[i + 1]) / b10[i];
  b10[n3 - 1] = (x5[n3] + a3[n3 - 1]) / 2;
  for (i = 0; i < n3 - 1; ++i)
    b10[i] = 2 * x5[i + 1] - a3[i + 1];
  return [a3, b10];
}
function Step(context, t4) {
  this._context = context;
  this._t = t4;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y7);
          this._context.lineTo(x5, y7);
        } else {
          var x14 = this._x * (1 - this._t) + x5 * this._t;
          this._context.lineTo(x14, this._y);
          this._context.lineTo(x14, y7);
        }
        break;
      }
    }
    this._x = x5, this._y = y7;
  }
};
function none$1(series, order) {
  if (!((n3 = series.length) > 1))
    return;
  for (var i = 1, j2, s0, s1 = series[order[0]], n3, m3 = s1.length; i < n3; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j2 = 0; j2 < m3; ++j2) {
      s1[j2][1] += s1[j2][0] = isNaN(s0[j2][1]) ? s0[j2][0] : s0[j2][1];
    }
  }
}
function none$2(series) {
  var n3 = series.length, o = new Array(n3);
  while (--n3 >= 0)
    o[n3] = n3;
  return o;
}
function stackValue2(d2, key) {
  return d2[key];
}
function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}
function stack2() {
  var keys4 = constant$a([]), order = none$2, offset = none$1, value2 = stackValue2;
  function stack3(data3) {
    var sz = Array.from(keys4.apply(this, arguments), stackSeries), i, n3 = sz.length, j2 = -1, oz;
    for (const d2 of data3) {
      for (i = 0, ++j2; i < n3; ++i) {
        (sz[i][j2] = [0, +value2(d2, sz[i].key, j2, data3)]).data = d2;
      }
    }
    for (i = 0, oz = array$5(order(sz)); i < n3; ++i) {
      sz[oz[i]].index = i;
    }
    offset(sz, oz);
    return sz;
  }
  stack3.keys = function(_2) {
    return arguments.length ? (keys4 = typeof _2 === "function" ? _2 : constant$a(Array.from(_2)), stack3) : keys4;
  };
  stack3.value = function(_2) {
    return arguments.length ? (value2 = typeof _2 === "function" ? _2 : constant$a(+_2), stack3) : value2;
  };
  stack3.order = function(_2) {
    return arguments.length ? (order = _2 == null ? none$2 : typeof _2 === "function" ? _2 : constant$a(Array.from(_2)), stack3) : order;
  };
  stack3.offset = function(_2) {
    return arguments.length ? (offset = _2 == null ? none$1 : _2, stack3) : offset;
  };
  return stack3;
}
function wiggle(series, order) {
  if (!((n3 = series.length) > 0) || !((m3 = (s0 = series[order[0]]).length) > 0))
    return;
  for (var y7 = 0, j2 = 1, s0, m3, n3; j2 < m3; ++j2) {
    for (var i = 0, s1 = 0, s22 = 0; i < n3; ++i) {
      var si2 = series[order[i]], sij0 = si2[j2][1] || 0, sij1 = si2[j2 - 1][1] || 0, s32 = (sij0 - sij1) / 2;
      for (var k6 = 0; k6 < i; ++k6) {
        var sk2 = series[order[k6]], skj0 = sk2[j2][1] || 0, skj1 = sk2[j2 - 1][1] || 0;
        s32 += skj0 - skj1;
      }
      s1 += sij0, s22 += s32 * sij0;
    }
    s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
    if (s1)
      y7 -= s22 / s1;
  }
  s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
  none$1(series, order);
}
function appearance2(series) {
  var peaks = series.map(peak2);
  return none$2(series).sort(function(a3, b10) {
    return peaks[a3] - peaks[b10];
  });
}
function peak2(series) {
  var i = -1, j2 = 0, n3 = series.length, vi2, vj2 = -Infinity;
  while (++i < n3)
    if ((vi2 = +series[i][1]) > vj2)
      vj2 = vi2, j2 = i;
  return j2;
}
function sum$1(series) {
  var s4 = 0, i = -1, n3 = series.length, v3;
  while (++i < n3)
    if (v3 = +series[i][1])
      s4 += v3;
  return s4;
}
function insideOut(series) {
  var n3 = series.length, i, j2, sums = series.map(sum$1), order = appearance2(series), top2 = 0, bottom2 = 0, tops = [], bottoms = [];
  for (i = 0; i < n3; ++i) {
    j2 = order[i];
    if (top2 < bottom2) {
      top2 += sums[j2];
      tops.push(j2);
    } else {
      bottom2 += sums[j2];
      bottoms.push(j2);
    }
  }
  return bottoms.reverse().concat(tops);
}
var t0$1 = new Date();
var t1$1 = new Date();
function newInterval2(floori, offseti, count2, field) {
  function interval3(date6) {
    return floori(date6 = arguments.length === 0 ? new Date() : new Date(+date6)), date6;
  }
  interval3.floor = function(date6) {
    return floori(date6 = new Date(+date6)), date6;
  };
  interval3.ceil = function(date6) {
    return floori(date6 = new Date(date6 - 1)), offseti(date6, 1), floori(date6), date6;
  };
  interval3.round = function(date6) {
    var d0 = interval3(date6), d1 = interval3.ceil(date6);
    return date6 - d0 < d1 - date6 ? d0 : d1;
  };
  interval3.offset = function(date6, step) {
    return offseti(date6 = new Date(+date6), step == null ? 1 : Math.floor(step)), date6;
  };
  interval3.range = function(start2, stop, step) {
    var range7 = [], previous;
    start2 = interval3.ceil(start2);
    step = step == null ? 1 : Math.floor(step);
    if (!(start2 < stop) || !(step > 0))
      return range7;
    do
      range7.push(previous = new Date(+start2)), offseti(start2, step), floori(start2);
    while (previous < start2 && start2 < stop);
    return range7;
  };
  interval3.filter = function(test) {
    return newInterval2(function(date6) {
      if (date6 >= date6)
        while (floori(date6), !test(date6))
          date6.setTime(date6 - 1);
    }, function(date6, step) {
      if (date6 >= date6) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date6, -1), !test(date6)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date6, 1), !test(date6)) {
            }
          }
      }
    });
  };
  if (count2) {
    interval3.count = function(start2, end) {
      t0$1.setTime(+start2), t1$1.setTime(+end);
      floori(t0$1), floori(t1$1);
      return Math.floor(count2(t0$1, t1$1));
    };
    interval3.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval3 : interval3.filter(field ? function(d2) {
        return field(d2) % step === 0;
      } : function(d2) {
        return interval3.count(0, d2) % step === 0;
      });
    };
  }
  return interval3;
}
var millisecond2 = newInterval2(function() {
}, function(date6, step) {
  date6.setTime(+date6 + step);
}, function(start2, end) {
  return end - start2;
});
millisecond2.every = function(k6) {
  k6 = Math.floor(k6);
  if (!isFinite(k6) || !(k6 > 0))
    return null;
  if (!(k6 > 1))
    return millisecond2;
  return newInterval2(function(date6) {
    date6.setTime(Math.floor(date6 / k6) * k6);
  }, function(date6, step) {
    date6.setTime(+date6 + step * k6);
  }, function(start2, end) {
    return (end - start2) / k6;
  });
};
var milliseconds = millisecond2.range;
var durationSecond3 = 1e3;
var durationMinute3 = 6e4;
var durationHour3 = 36e5;
var durationDay3 = 864e5;
var durationWeek3 = 6048e5;
var second2 = newInterval2(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds());
}, function(date6, step) {
  date6.setTime(+date6 + step * durationSecond3);
}, function(start2, end) {
  return (end - start2) / durationSecond3;
}, function(date6) {
  return date6.getUTCSeconds();
});
var seconds = second2.range;
var minute2 = newInterval2(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds() - date6.getSeconds() * durationSecond3);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationMinute3);
}, function(start2, end) {
  return (end - start2) / durationMinute3;
}, function(date6) {
  return date6.getMinutes();
});
var minutes = minute2.range;
var hour2 = newInterval2(function(date6) {
  date6.setTime(date6 - date6.getMilliseconds() - date6.getSeconds() * durationSecond3 - date6.getMinutes() * durationMinute3);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationHour3);
}, function(start2, end) {
  return (end - start2) / durationHour3;
}, function(date6) {
  return date6.getHours();
});
var hours = hour2.range;
var day2 = newInterval2((date6) => date6.setHours(0, 0, 0, 0), (date6, step) => date6.setDate(date6.getDate() + step), (start2, end) => (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute3) / durationDay3, (date6) => date6.getDate() - 1);
var days = day2.range;
function weekday2(i) {
  return newInterval2(function(date6) {
    date6.setDate(date6.getDate() - (date6.getDay() + 7 - i) % 7);
    date6.setHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setDate(date6.getDate() + step * 7);
  }, function(start2, end) {
    return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute3) / durationWeek3;
  });
}
var sunday2 = weekday2(0);
var monday2 = weekday2(1);
var tuesday2 = weekday2(2);
var wednesday2 = weekday2(3);
var thursday2 = weekday2(4);
var friday2 = weekday2(5);
var saturday2 = weekday2(6);
var sundays = sunday2.range;
var mondays = monday2.range;
var tuesdays = tuesday2.range;
var wednesdays = wednesday2.range;
var thursdays = thursday2.range;
var fridays = friday2.range;
var saturdays = saturday2.range;
var month2 = newInterval2(function(date6) {
  date6.setDate(1);
  date6.setHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setMonth(date6.getMonth() + step);
}, function(start2, end) {
  return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
}, function(date6) {
  return date6.getMonth();
});
var months = month2.range;
var year2 = newInterval2(function(date6) {
  date6.setMonth(0, 1);
  date6.setHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setFullYear(date6.getFullYear() + step);
}, function(start2, end) {
  return end.getFullYear() - start2.getFullYear();
}, function(date6) {
  return date6.getFullYear();
});
year2.every = function(k6) {
  return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval2(function(date6) {
    date6.setFullYear(Math.floor(date6.getFullYear() / k6) * k6);
    date6.setMonth(0, 1);
    date6.setHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setFullYear(date6.getFullYear() + step * k6);
  });
};
var years = year2.range;
var utcMinute2 = newInterval2(function(date6) {
  date6.setUTCSeconds(0, 0);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationMinute3);
}, function(start2, end) {
  return (end - start2) / durationMinute3;
}, function(date6) {
  return date6.getUTCMinutes();
});
var utcMinutes = utcMinute2.range;
var utcHour2 = newInterval2(function(date6) {
  date6.setUTCMinutes(0, 0, 0);
}, function(date6, step) {
  date6.setTime(+date6 + step * durationHour3);
}, function(start2, end) {
  return (end - start2) / durationHour3;
}, function(date6) {
  return date6.getUTCHours();
});
var utcHours = utcHour2.range;
var utcDay2 = newInterval2(function(date6) {
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCDate(date6.getUTCDate() + step);
}, function(start2, end) {
  return (end - start2) / durationDay3;
}, function(date6) {
  return date6.getUTCDate() - 1;
});
var utcDays = utcDay2.range;
function utcWeekday2(i) {
  return newInterval2(function(date6) {
    date6.setUTCDate(date6.getUTCDate() - (date6.getUTCDay() + 7 - i) % 7);
    date6.setUTCHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setUTCDate(date6.getUTCDate() + step * 7);
  }, function(start2, end) {
    return (end - start2) / durationWeek3;
  });
}
var utcSunday2 = utcWeekday2(0);
var utcMonday2 = utcWeekday2(1);
var utcTuesday2 = utcWeekday2(2);
var utcWednesday2 = utcWeekday2(3);
var utcThursday2 = utcWeekday2(4);
var utcFriday2 = utcWeekday2(5);
var utcSaturday2 = utcWeekday2(6);
var utcSundays = utcSunday2.range;
var utcMondays = utcMonday2.range;
var utcTuesdays = utcTuesday2.range;
var utcWednesdays = utcWednesday2.range;
var utcThursdays = utcThursday2.range;
var utcFridays = utcFriday2.range;
var utcSaturdays = utcSaturday2.range;
var utcMonth2 = newInterval2(function(date6) {
  date6.setUTCDate(1);
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCMonth(date6.getUTCMonth() + step);
}, function(start2, end) {
  return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
}, function(date6) {
  return date6.getUTCMonth();
});
var utcMonths = utcMonth2.range;
var utcYear2 = newInterval2(function(date6) {
  date6.setUTCMonth(0, 1);
  date6.setUTCHours(0, 0, 0, 0);
}, function(date6, step) {
  date6.setUTCFullYear(date6.getUTCFullYear() + step);
}, function(start2, end) {
  return end.getUTCFullYear() - start2.getUTCFullYear();
}, function(date6) {
  return date6.getUTCFullYear();
});
utcYear2.every = function(k6) {
  return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval2(function(date6) {
    date6.setUTCFullYear(Math.floor(date6.getUTCFullYear() / k6) * k6);
    date6.setUTCMonth(0, 1);
    date6.setUTCHours(0, 0, 0, 0);
  }, function(date6, step) {
    date6.setUTCFullYear(date6.getUTCFullYear() + step * k6);
  });
};
var utcYears = utcYear2.range;
var frame2 = 0;
var timeout$1 = 0;
var interval2 = 0;
var pokeDelay2 = 1e3;
var taskHead2;
var taskTail2;
var clockLast2 = 0;
var clockNow2 = 0;
var clockSkew2 = 0;
var clock2 = typeof performance === "object" && performance.now ? performance : Date;
var setFrame2 = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f3) {
  setTimeout(f3, 17);
};
function now2() {
  return clockNow2 || (setFrame2(clearNow2), clockNow2 = clock2.now() + clockSkew2);
}
function clearNow2() {
  clockNow2 = 0;
}
function Timer2() {
  this._call = this._time = this._next = null;
}
Timer2.prototype = timer2.prototype = {
  constructor: Timer2,
  restart: function(callback, delay, time3) {
    if (typeof callback !== "function")
      throw new TypeError("callback is not a function");
    time3 = (time3 == null ? now2() : +time3) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail2 !== this) {
      if (taskTail2)
        taskTail2._next = this;
      else
        taskHead2 = this;
      taskTail2 = this;
    }
    this._call = callback;
    this._time = time3;
    sleep2();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep2();
    }
  }
};
function timer2(callback, delay, time3) {
  var t4 = new Timer2();
  t4.restart(callback, delay, time3);
  return t4;
}
function timerFlush2() {
  now2();
  ++frame2;
  var t4 = taskHead2, e3;
  while (t4) {
    if ((e3 = clockNow2 - t4._time) >= 0)
      t4._call.call(null, e3);
    t4 = t4._next;
  }
  --frame2;
}
function wake2() {
  clockNow2 = (clockLast2 = clock2.now()) + clockSkew2;
  frame2 = timeout$1 = 0;
  try {
    timerFlush2();
  } finally {
    frame2 = 0;
    nap2();
    clockNow2 = 0;
  }
}
function poke2() {
  var now5 = clock2.now(), delay = now5 - clockLast2;
  if (delay > pokeDelay2)
    clockSkew2 -= delay, clockLast2 = now5;
}
function nap2() {
  var t04, t14 = taskHead2, t23, time3 = Infinity;
  while (t14) {
    if (t14._call) {
      if (time3 > t14._time)
        time3 = t14._time;
      t04 = t14, t14 = t14._next;
    } else {
      t23 = t14._next, t14._next = null;
      t14 = t04 ? t04._next = t23 : taskHead2 = t23;
    }
  }
  taskTail2 = t04;
  sleep2(time3);
}
function sleep2(time3) {
  if (frame2)
    return;
  if (timeout$1)
    timeout$1 = clearTimeout(timeout$1);
  var delay = time3 - clockNow2;
  if (delay > 24) {
    if (time3 < Infinity)
      timeout$1 = setTimeout(wake2, time3 - clock2.now() - clockSkew2);
    if (interval2)
      interval2 = clearInterval(interval2);
  } else {
    if (!interval2)
      clockLast2 = clock2.now(), interval2 = setInterval(poke2, pokeDelay2);
    frame2 = 1, setFrame2(wake2);
  }
}
function Transform(k6, x5, y7) {
  this.k = k6;
  this.x = x5;
  this.y = y7;
}
Transform.prototype = {
  constructor: Transform,
  scale: function(k6) {
    return k6 === 1 ? this : new Transform(this.k * k6, this.x, this.y);
  },
  translate: function(x5, y7) {
    return x5 === 0 & y7 === 0 ? this : new Transform(this.k, this.x + this.k * x5, this.y + this.k * y7);
  },
  apply: function(point8) {
    return [point8[0] * this.k + this.x, point8[1] * this.k + this.y];
  },
  applyX: function(x5) {
    return x5 * this.k + this.x;
  },
  applyY: function(y7) {
    return y7 * this.k + this.y;
  },
  invert: function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function(x5) {
    return (x5 - this.x) / this.k;
  },
  invertY: function(y7) {
    return (y7 - this.y) / this.k;
  },
  rescaleX: function(x5) {
    return x5.copy().domain(x5.range().map(this.invertX, this).map(x5.invert, x5));
  },
  rescaleY: function(y7) {
    return y7.copy().domain(y7.range().map(this.invertY, this).map(y7.invert, y7));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity$7 = new Transform(1, 0, 0);
transform$1.prototype = Transform.prototype;
function transform$1(node) {
  while (!node.__zoom)
    if (!(node = node.parentNode))
      return identity$7;
  return node.__zoom;
}

// dist/components/d3examples/barchart.js
var barData = [
  {key: "0", value: 59},
  {key: "1", value: 78},
  {key: "2", value: 49},
  {key: "3", value: 73},
  {key: "4", value: 76},
  {key: "5", value: 71}
];
function D3HBars({data: data3 = barData, width = 400, height = 25}) {
  const h2 = barData.length * height;
  const margin = 10;
  const scaleX = linear2().domain([0, max(barData, (d2) => d2.value)]).range([0, width]);
  const color3 = sequential(plasma).domain(barData.map((d2) => d2.value));
  const scaleY = band().domain(data3.map((d2) => d2.key)).range([h2, 0]);
  const xMargin = scaleX.copy().range([margin, width - margin]);
  const yMargin = scaleY.copy().range([h2 - margin, margin]);
  const bars = data3.map((d2, i) => /* @__PURE__ */ react.createElement("g", {
    key: i,
    style: {transform: `translate(${margin}px, ${yMargin(d2.key)}px)`}
  }, /* @__PURE__ */ react.createElement("rect", {
    width: xMargin(d2.value) - xMargin(0),
    height: yMargin.bandwidth(),
    stroke: "white",
    fill: color3(d2.value)
  }), /* @__PURE__ */ react.createElement("text", {
    x: xMargin(d2.value) - xMargin(0),
    dx: "-20",
    dy: "1.2em",
    fill: "white",
    fontSize: "small"
  }, d2.value)));
  const xAxis = axisBottom(xMargin);
  const yAxis = axisLeft(yMargin);
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, "Horizontal Bar chart"), /* @__PURE__ */ react.createElement("svg", {
    width,
    height: h2,
    style: {border: "1px dotted grey"}
  }, bars, /* @__PURE__ */ react.createElement("g", {
    style: {transform: `translate(0, ${h2 - margin}px)`}
  }, xAxis), /* @__PURE__ */ react.createElement("g", {
    style: {transform: `translate(${margin}px, 0)`}
  }, yAxis)));
}
function D3VBars({data: data3 = barData, width = 30, height = 200}) {
  const chart = useRef();
  const w3 = barData.length * width;
  const margin = 20;
  const scaleX = band().domain(data3.map((d2) => d2.key)).range([0, w3]);
  const color3 = sequential(interpolateRdYlBu).domain(barData.map((d2) => d2.value));
  const scaleY = linear2().domain([max(data3, (d2) => d2.value), 0]).range([0, height]);
  const xMargin = scaleX.copy().range([w3 - margin, margin]);
  const yMargin = scaleY.copy().range([margin, height - margin]);
  useEffect(() => {
    const container = select(chart.current);
    container.append("g").attr("transform", `translate(0, ${height - margin})`).call(axisBottom(xMargin));
    container.append("g").attr("transform", `translate(${margin}, 0)`).call(axisLeft(yMargin));
  }, []);
  const bars = data3.map((d2, i) => /* @__PURE__ */ react.createElement("g", {
    key: i,
    style: {transform: `translate(${xMargin(d2.key)}px, ${margin}px)`}
  }, /* @__PURE__ */ react.createElement("rect", {
    y: yMargin(d2.value) - margin,
    width: xMargin.bandwidth(),
    height: height - yMargin(d2.value) - margin,
    stroke: "white",
    fill: color3(d2.value)
  }), /* @__PURE__ */ react.createElement("text", {
    y: yMargin(d2.value) - margin,
    dx: "4",
    dy: "-0.25em",
    fill: "white",
    stroke: "black",
    fontSize: "small"
  }, d2.value)));
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, "Vertical Bar chart"), /* @__PURE__ */ react.createElement("svg", {
    width: w3,
    height,
    ref: chart
  }, bars));
}

// dist/components/d3react.js
function getMarginObjectForNumber(number6) {
  return {
    top: number6,
    right: number6,
    bottom: number6,
    left: number6
  };
}
function getMarginObject(margin) {
  if (!margin) {
    return getMarginObjectForNumber(0);
  }
  if (typeof margin === "number") {
    return getMarginObjectForNumber(margin);
  }
  const {
    top: top2,
    right: right2,
    bottom: bottom2,
    left: left2,
    vertical,
    horizontal
  } = margin;
  return {
    top: top2 || vertical || 0,
    right: right2 || horizontal || 0,
    bottom: bottom2 || vertical || 0,
    left: left2 || horizontal || 0
  };
}
function getContentContainerStyle({
  margin
}) {
  const marginObject = getMarginObject(margin);
  return {
    transform: `translate(${marginObject.left}px, ${marginObject.top}px)`
  };
}
function getSVGDimensions({
  height,
  margin,
  width
}) {
  const marginObject = getMarginObject(margin);
  const heightWithMargin = height + marginObject.top + marginObject.bottom;
  const widthWithMargin = width + marginObject.left + marginObject.right;
  return {
    height: heightWithMargin,
    width: widthWithMargin
  };
}
var SVGWithMargin = ({
  children: children2,
  contentContainerBackgroundRectClassName,
  contentContainerGroupClassName,
  height,
  margin,
  renderContentContainerBackground,
  width,
  ...rest
}) => /* @__PURE__ */ react.createElement("svg", {
  ...rest,
  ...getSVGDimensions({
    height,
    margin,
    width
  })
}, /* @__PURE__ */ react.createElement("g", {
  className: contentContainerGroupClassName,
  style: getContentContainerStyle({margin})
}, !!contentContainerBackgroundRectClassName && /* @__PURE__ */ react.createElement("rect", {
  className: contentContainerBackgroundRectClassName,
  height,
  width,
  x: 0,
  y: 0
}), children2));
var D3react = ({
  data: data3,
  height,
  width,
  margin,
  selectX,
  selectY
}) => {
  const xScale = time().domain(extent(data3, selectX)).range([0, width]);
  const yScale = linear2().domain(extent(data3, selectY)).range([height, 0]);
  const xAxis = axisBottom().scale(xScale).ticks(data3.length / 2);
  const yAxis = axisLeft().scale(yScale).ticks(3);
  const selectScaledX = (datum2) => xScale(selectX(datum2));
  const selectScaledY = (datum2) => yScale(selectY(datum2));
  const sparkLine = line().x(selectScaledX).y(selectScaledY);
  const linePath = sparkLine(data3);
  const circlePoints = data3.map((datum2) => ({
    x: selectScaledX(datum2),
    y: selectScaledY(datum2)
  }));
  return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement(SVGWithMargin, {
    className: "container",
    contentContainerBackgroundRectClassName: "contentContainerBackgroundRect",
    contentContainerGroupClassName: "contentContainer",
    height,
    margin,
    width
  }, /* @__PURE__ */ react.createElement("g", {
    className: "xAxis",
    ref: (node) => select(node).call(xAxis),
    style: {
      transform: `translateY(${height}px)`
    }
  }), /* @__PURE__ */ react.createElement("g", {
    className: "yAxis",
    ref: (node) => select(node).call(yAxis)
  }), /* @__PURE__ */ react.createElement("g", {
    className: "line"
  }, /* @__PURE__ */ react.createElement("path", {
    d: linePath
  })), /* @__PURE__ */ react.createElement("g", {
    className: "scatter"
  }, circlePoints.map((circlePoint) => /* @__PURE__ */ react.createElement("circle", {
    cx: circlePoint.x,
    cy: circlePoint.y,
    key: `${circlePoint.x},${circlePoint.y}`,
    r: 4
  })))), /* @__PURE__ */ react.createElement(D3HBars, null), /* @__PURE__ */ react.createElement(D3VBars, null));
};

// snowpack/pkg/d3-geo.js
var epsilon3 = 1e-6;
var epsilon22 = 1e-12;
var pi4 = Math.PI;
var halfPi2 = pi4 / 2;
var quarterPi2 = pi4 / 4;
var tau3 = pi4 * 2;
var degrees2 = 180 / pi4;
var radians2 = pi4 / 180;
var abs2 = Math.abs;
var atan3 = Math.atan;
var atan22 = Math.atan2;
var cos = Math.cos;
var exp2 = Math.exp;
var log3 = Math.log;
var sin = Math.sin;
var sign2 = Math.sign || function(x5) {
  return x5 > 0 ? 1 : x5 < 0 ? -1 : 0;
};
var sqrt4 = Math.sqrt;
var tan2 = Math.tan;
function acos2(x5) {
  return x5 > 1 ? 0 : x5 < -1 ? pi4 : Math.acos(x5);
}
function asin2(x5) {
  return x5 > 1 ? halfPi2 : x5 < -1 ? -halfPi2 : Math.asin(x5);
}
function noop2() {
}
function streamGeometry2(geometry, stream2) {
  if (geometry && streamGeometryType2.hasOwnProperty(geometry.type)) {
    streamGeometryType2[geometry.type](geometry, stream2);
  }
}
var streamObjectType2 = {
  Feature: function(object2, stream2) {
    streamGeometry2(object2.geometry, stream2);
  },
  FeatureCollection: function(object2, stream2) {
    var features = object2.features, i = -1, n3 = features.length;
    while (++i < n3)
      streamGeometry2(features[i].geometry, stream2);
  }
};
var streamGeometryType2 = {
  Sphere: function(object2, stream2) {
    stream2.sphere();
  },
  Point: function(object2, stream2) {
    object2 = object2.coordinates;
    stream2.point(object2[0], object2[1], object2[2]);
  },
  MultiPoint: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      object2 = coordinates[i], stream2.point(object2[0], object2[1], object2[2]);
  },
  LineString: function(object2, stream2) {
    streamLine2(object2.coordinates, stream2, 0);
  },
  MultiLineString: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamLine2(coordinates[i], stream2, 0);
  },
  Polygon: function(object2, stream2) {
    streamPolygon2(object2.coordinates, stream2);
  },
  MultiPolygon: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamPolygon2(coordinates[i], stream2);
  },
  GeometryCollection: function(object2, stream2) {
    var geometries = object2.geometries, i = -1, n3 = geometries.length;
    while (++i < n3)
      streamGeometry2(geometries[i], stream2);
  }
};
function streamLine2(coordinates, stream2, closed) {
  var i = -1, n3 = coordinates.length - closed, coordinate;
  stream2.lineStart();
  while (++i < n3)
    coordinate = coordinates[i], stream2.point(coordinate[0], coordinate[1], coordinate[2]);
  stream2.lineEnd();
}
function streamPolygon2(coordinates, stream2) {
  var i = -1, n3 = coordinates.length;
  stream2.polygonStart();
  while (++i < n3)
    streamLine2(coordinates[i], stream2, 1);
  stream2.polygonEnd();
}
function geoStream2(object2, stream2) {
  if (object2 && streamObjectType2.hasOwnProperty(object2.type)) {
    streamObjectType2[object2.type](object2, stream2);
  } else {
    streamGeometry2(object2, stream2);
  }
}
function spherical(cartesian3) {
  return [atan22(cartesian3[1], cartesian3[0]), asin2(cartesian3[2])];
}
function cartesian2(spherical2) {
  var lambda = spherical2[0], phi3 = spherical2[1], cosPhi = cos(phi3);
  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi3)];
}
function cartesianDot(a3, b10) {
  return a3[0] * b10[0] + a3[1] * b10[1] + a3[2] * b10[2];
}
function cartesianCross2(a3, b10) {
  return [a3[1] * b10[2] - a3[2] * b10[1], a3[2] * b10[0] - a3[0] * b10[2], a3[0] * b10[1] - a3[1] * b10[0]];
}
function cartesianAddInPlace(a3, b10) {
  a3[0] += b10[0], a3[1] += b10[1], a3[2] += b10[2];
}
function cartesianScale(vector, k6) {
  return [vector[0] * k6, vector[1] * k6, vector[2] * k6];
}
function cartesianNormalizeInPlace2(d2) {
  var l3 = sqrt4(d2[0] * d2[0] + d2[1] * d2[1] + d2[2] * d2[2]);
  d2[0] /= l3, d2[1] /= l3, d2[2] /= l3;
}
function compose(a3, b10) {
  function compose4(x5, y7) {
    return x5 = a3(x5, y7), b10(x5[0], x5[1]);
  }
  if (a3.invert && b10.invert)
    compose4.invert = function(x5, y7) {
      return x5 = b10.invert(x5, y7), x5 && a3.invert(x5[0], x5[1]);
    };
  return compose4;
}
function rotationIdentity2(lambda, phi3) {
  return [abs2(lambda) > pi4 ? lambda + Math.round(-lambda / tau3) * tau3 : lambda, phi3];
}
rotationIdentity2.invert = rotationIdentity2;
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= tau3) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity2;
}
function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi3) {
    return lambda += deltaLambda, [lambda > pi4 ? lambda - tau3 : lambda < -pi4 ? lambda + tau3 : lambda, phi3];
  };
}
function rotationLambda(deltaLambda) {
  var rotation2 = forwardRotationLambda(deltaLambda);
  rotation2.invert = forwardRotationLambda(-deltaLambda);
  return rotation2;
}
function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = cos(deltaPhi), sinDeltaPhi = sin(deltaPhi), cosDeltaGamma = cos(deltaGamma), sinDeltaGamma = sin(deltaGamma);
  function rotation2(lambda, phi3) {
    var cosPhi = cos(phi3), x5 = cos(lambda) * cosPhi, y7 = sin(lambda) * cosPhi, z3 = sin(phi3), k6 = z3 * cosDeltaPhi + x5 * sinDeltaPhi;
    return [
      atan22(y7 * cosDeltaGamma - k6 * sinDeltaGamma, x5 * cosDeltaPhi - z3 * sinDeltaPhi),
      asin2(k6 * cosDeltaGamma + y7 * sinDeltaGamma)
    ];
  }
  rotation2.invert = function(lambda, phi3) {
    var cosPhi = cos(phi3), x5 = cos(lambda) * cosPhi, y7 = sin(lambda) * cosPhi, z3 = sin(phi3), k6 = z3 * cosDeltaGamma - y7 * sinDeltaGamma;
    return [
      atan22(y7 * cosDeltaGamma + z3 * sinDeltaGamma, x5 * cosDeltaPhi + k6 * sinDeltaPhi),
      asin2(k6 * cosDeltaPhi - x5 * sinDeltaPhi)
    ];
  };
  return rotation2;
}
function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * radians2, rotate[1] * radians2, rotate.length > 2 ? rotate[2] * radians2 : 0);
  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * radians2, coordinates[1] * radians2);
    return coordinates[0] *= degrees2, coordinates[1] *= degrees2, coordinates;
  }
  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * radians2, coordinates[1] * radians2);
    return coordinates[0] *= degrees2, coordinates[1] *= degrees2, coordinates;
  };
  return forward;
}
function circleStream(stream2, radius, delta, direction, t04, t14) {
  if (!delta)
    return;
  var cosRadius = cos(radius), sinRadius = sin(radius), step = direction * delta;
  if (t04 == null) {
    t04 = radius + direction * tau3;
    t14 = radius - step / 2;
  } else {
    t04 = circleRadius(cosRadius, t04);
    t14 = circleRadius(cosRadius, t14);
    if (direction > 0 ? t04 < t14 : t04 > t14)
      t04 += direction * tau3;
  }
  for (var point8, t4 = t04; direction > 0 ? t4 > t14 : t4 < t14; t4 -= step) {
    point8 = spherical([cosRadius, -sinRadius * cos(t4), -sinRadius * sin(t4)]);
    stream2.point(point8[0], point8[1]);
  }
}
function circleRadius(cosRadius, point8) {
  point8 = cartesian2(point8), point8[0] -= cosRadius;
  cartesianNormalizeInPlace2(point8);
  var radius = acos2(-point8[1]);
  return ((-point8[2] < 0 ? -radius : radius) + tau3 - epsilon3) % tau3;
}
function clipBuffer2() {
  var lines = [], line2;
  return {
    point: function(x5, y7, m3) {
      line2.push([x5, y7, m3]);
    },
    lineStart: function() {
      lines.push(line2 = []);
    },
    lineEnd: noop2,
    rejoin: function() {
      if (lines.length > 1)
        lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line2 = null;
      return result;
    }
  };
}
function pointEqual2(a3, b10) {
  return abs2(a3[0] - b10[0]) < epsilon3 && abs2(a3[1] - b10[1]) < epsilon3;
}
function Intersection2(point8, points, other, entry) {
  this.x = point8;
  this.z = points;
  this.o = other;
  this.e = entry;
  this.v = false;
  this.n = this.p = null;
}
function clipRejoin2(segments, compareIntersection3, startInside, interpolate3, stream2) {
  var subject = [], clip3 = [], i, n3;
  segments.forEach(function(segment) {
    if ((n4 = segment.length - 1) <= 0)
      return;
    var n4, p0 = segment[0], p1 = segment[n4], x5;
    if (pointEqual2(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream2.lineStart();
        for (i = 0; i < n4; ++i)
          stream2.point((p0 = segment[i])[0], p0[1]);
        stream2.lineEnd();
        return;
      }
      p1[0] += 2 * epsilon3;
    }
    subject.push(x5 = new Intersection2(p0, segment, null, true));
    clip3.push(x5.o = new Intersection2(p0, null, x5, false));
    subject.push(x5 = new Intersection2(p1, segment, null, false));
    clip3.push(x5.o = new Intersection2(p1, null, x5, true));
  });
  if (!subject.length)
    return;
  clip3.sort(compareIntersection3);
  link(subject);
  link(clip3);
  for (i = 0, n3 = clip3.length; i < n3; ++i) {
    clip3[i].e = startInside = !startInside;
  }
  var start2 = subject[0], points, point8;
  while (1) {
    var current = start2, isSubject = true;
    while (current.v)
      if ((current = current.n) === start2)
        return;
    points = current.z;
    stream2.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n3 = points.length; i < n3; ++i)
            stream2.point((point8 = points[i])[0], point8[1]);
        } else {
          interpolate3(current.x, current.n.x, 1, stream2);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i)
            stream2.point((point8 = points[i])[0], point8[1]);
        } else {
          interpolate3(current.x, current.p.x, -1, stream2);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream2.lineEnd();
  }
}
function link(array5) {
  if (!(n3 = array5.length))
    return;
  var n3, i = 0, a3 = array5[0], b10;
  while (++i < n3) {
    a3.n = b10 = array5[i];
    b10.p = a3;
    a3 = b10;
  }
  a3.n = b10 = array5[0];
  b10.p = a3;
}
function longitude2(point8) {
  if (abs2(point8[0]) <= pi4)
    return point8[0];
  else
    return sign2(point8[0]) * ((abs2(point8[0]) + pi4) % tau3 - pi4);
}
function polygonContains2(polygon, point8) {
  var lambda = longitude2(point8), phi3 = point8[1], sinPhi = sin(phi3), normal2 = [sin(lambda), -cos(lambda), 0], angle = 0, winding = 0;
  var sum2 = new Adder();
  if (sinPhi === 1)
    phi3 = halfPi2 + epsilon3;
  else if (sinPhi === -1)
    phi3 = -halfPi2 - epsilon3;
  for (var i = 0, n3 = polygon.length; i < n3; ++i) {
    if (!(m3 = (ring = polygon[i]).length))
      continue;
    var ring, m3, point0 = ring[m3 - 1], lambda0 = longitude2(point0), phi0 = point0[1] / 2 + quarterPi2, sinPhi0 = sin(phi0), cosPhi0 = cos(phi0);
    for (var j2 = 0; j2 < m3; ++j2, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j2], lambda1 = longitude2(point1), phi1 = point1[1] / 2 + quarterPi2, sinPhi1 = sin(phi1), cosPhi1 = cos(phi1), delta = lambda1 - lambda0, sign5 = delta >= 0 ? 1 : -1, absDelta = sign5 * delta, antimeridian = absDelta > pi4, k6 = sinPhi0 * sinPhi1;
      sum2.add(atan22(k6 * sign5 * sin(absDelta), cosPhi0 * cosPhi1 + k6 * cos(absDelta)));
      angle += antimeridian ? delta + sign5 * tau3 : delta;
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = cartesianCross2(cartesian2(point0), cartesian2(point1));
        cartesianNormalizeInPlace2(arc);
        var intersection2 = cartesianCross2(normal2, arc);
        cartesianNormalizeInPlace2(intersection2);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin2(intersection2[2]);
        if (phi3 > phiArc || phi3 === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }
  return (angle < -epsilon3 || angle < epsilon3 && sum2 < -epsilon22) ^ winding & 1;
}
function clip2(pointVisible, clipLine2, interpolate3, start2) {
  return function(sink) {
    var line2 = clipLine2(sink), ringBuffer = clipBuffer2(), ringSink = clipLine2(ringBuffer), polygonStarted = false, polygon, segments, ring;
    var clip3 = {
      point: point8,
      lineStart,
      lineEnd,
      polygonStart: function() {
        clip3.point = pointRing;
        clip3.lineStart = ringStart;
        clip3.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip3.point = point8;
        clip3.lineStart = lineStart;
        clip3.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains2(polygon, start2);
        if (segments.length) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          clipRejoin2(segments, compareIntersection2, startInside, interpolate3, sink);
        } else if (startInside) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate3(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted)
          sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate3(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };
    function point8(lambda, phi3) {
      if (pointVisible(lambda, phi3))
        sink.point(lambda, phi3);
    }
    function pointLine(lambda, phi3) {
      line2.point(lambda, phi3);
    }
    function lineStart() {
      clip3.point = pointLine;
      line2.lineStart();
    }
    function lineEnd() {
      clip3.point = point8;
      line2.lineEnd();
    }
    function pointRing(lambda, phi3) {
      ring.push([lambda, phi3]);
      ringSink.point(lambda, phi3);
    }
    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }
    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i, n3 = ringSegments.length, m3, segment, point9;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n3)
        return;
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m3 = segment.length - 1) > 0) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m3; ++i)
            sink.point((point9 = segment[i])[0], point9[1]);
          sink.lineEnd();
        }
        return;
      }
      if (n3 > 1 && clean & 2)
        ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment2));
    }
    return clip3;
  };
}
function validSegment2(segment) {
  return segment.length > 1;
}
function compareIntersection2(a3, b10) {
  return ((a3 = a3.x)[0] < 0 ? a3[1] - halfPi2 - epsilon3 : halfPi2 - a3[1]) - ((b10 = b10.x)[0] < 0 ? b10[1] - halfPi2 - epsilon3 : halfPi2 - b10[1]);
}
var clipAntimeridian2 = clip2(function() {
  return true;
}, clipAntimeridianLine2, clipAntimeridianInterpolate2, [-pi4, -halfPi2]);
function clipAntimeridianLine2(stream2) {
  var lambda0 = NaN, phi0 = NaN, sign0 = NaN, clean;
  return {
    lineStart: function() {
      stream2.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? pi4 : -pi4, delta = abs2(lambda1 - lambda0);
      if (abs2(delta - pi4) < epsilon3) {
        stream2.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi2 : -halfPi2);
        stream2.point(sign0, phi0);
        stream2.lineEnd();
        stream2.lineStart();
        stream2.point(sign1, phi0);
        stream2.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi4) {
        if (abs2(lambda0 - sign0) < epsilon3)
          lambda0 -= sign0 * epsilon3;
        if (abs2(lambda1 - sign1) < epsilon3)
          lambda1 -= sign1 * epsilon3;
        phi0 = clipAntimeridianIntersect2(lambda0, phi0, lambda1, phi1);
        stream2.point(sign0, phi0);
        stream2.lineEnd();
        stream2.lineStart();
        stream2.point(sign1, phi0);
        clean = 0;
      }
      stream2.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream2.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean;
    }
  };
}
function clipAntimeridianIntersect2(lambda0, phi0, lambda1, phi1) {
  var cosPhi0, cosPhi1, sinLambda0Lambda1 = sin(lambda0 - lambda1);
  return abs2(sinLambda0Lambda1) > epsilon3 ? atan3((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}
function clipAntimeridianInterpolate2(from, to2, direction, stream2) {
  var phi3;
  if (from == null) {
    phi3 = direction * halfPi2;
    stream2.point(-pi4, phi3);
    stream2.point(0, phi3);
    stream2.point(pi4, phi3);
    stream2.point(pi4, 0);
    stream2.point(pi4, -phi3);
    stream2.point(0, -phi3);
    stream2.point(-pi4, -phi3);
    stream2.point(-pi4, 0);
    stream2.point(-pi4, phi3);
  } else if (abs2(from[0] - to2[0]) > epsilon3) {
    var lambda = from[0] < to2[0] ? pi4 : -pi4;
    phi3 = direction * lambda / 2;
    stream2.point(-lambda, phi3);
    stream2.point(0, phi3);
    stream2.point(lambda, phi3);
  } else {
    stream2.point(to2[0], to2[1]);
  }
}
function clipCircle(radius) {
  var cr = cos(radius), delta = 6 * radians2, smallRadius = cr > 0, notHemisphere = abs2(cr) > epsilon3;
  function interpolate3(from, to2, direction, stream2) {
    circleStream(stream2, radius, delta, direction, from, to2);
  }
  function visible(lambda, phi3) {
    return cos(lambda) * cos(phi3) > cr;
  }
  function clipLine2(stream2) {
    var point0, c0, v0, v00, clean;
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi3) {
        var point1 = [lambda, phi3], point22, v3 = visible(lambda, phi3), c5 = smallRadius ? v3 ? 0 : code(lambda, phi3) : v3 ? code(lambda + (lambda < 0 ? pi4 : -pi4), phi3) : 0;
        if (!point0 && (v00 = v0 = v3))
          stream2.lineStart();
        if (v3 !== v0) {
          point22 = intersect2(point0, point1);
          if (!point22 || pointEqual2(point0, point22) || pointEqual2(point1, point22))
            point1[2] = 1;
        }
        if (v3 !== v0) {
          clean = 0;
          if (v3) {
            stream2.lineStart();
            point22 = intersect2(point1, point0);
            stream2.point(point22[0], point22[1]);
          } else {
            point22 = intersect2(point0, point1);
            stream2.point(point22[0], point22[1], 2);
            stream2.lineEnd();
          }
          point0 = point22;
        } else if (notHemisphere && point0 && smallRadius ^ v3) {
          var t4;
          if (!(c5 & c0) && (t4 = intersect2(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream2.lineStart();
              stream2.point(t4[0][0], t4[0][1]);
              stream2.point(t4[1][0], t4[1][1]);
              stream2.lineEnd();
            } else {
              stream2.point(t4[1][0], t4[1][1]);
              stream2.lineEnd();
              stream2.lineStart();
              stream2.point(t4[0][0], t4[0][1], 3);
            }
          }
        }
        if (v3 && (!point0 || !pointEqual2(point0, point1))) {
          stream2.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v3, c0 = c5;
      },
      lineEnd: function() {
        if (v0)
          stream2.lineEnd();
        point0 = null;
      },
      clean: function() {
        return clean | (v00 && v0) << 1;
      }
    };
  }
  function intersect2(a3, b10, two) {
    var pa2 = cartesian2(a3), pb2 = cartesian2(b10);
    var n1 = [1, 0, 0], n22 = cartesianCross2(pa2, pb2), n2n2 = cartesianDot(n22, n22), n1n2 = n22[0], determinant = n2n2 - n1n2 * n1n2;
    if (!determinant)
      return !two && a3;
    var c1 = cr * n2n2 / determinant, c22 = -cr * n1n2 / determinant, n1xn2 = cartesianCross2(n1, n22), A6 = cartesianScale(n1, c1), B6 = cartesianScale(n22, c22);
    cartesianAddInPlace(A6, B6);
    var u2 = n1xn2, w3 = cartesianDot(A6, u2), uu = cartesianDot(u2, u2), t23 = w3 * w3 - uu * (cartesianDot(A6, A6) - 1);
    if (t23 < 0)
      return;
    var t4 = sqrt4(t23), q2 = cartesianScale(u2, (-w3 - t4) / uu);
    cartesianAddInPlace(q2, A6);
    q2 = spherical(q2);
    if (!two)
      return q2;
    var lambda0 = a3[0], lambda1 = b10[0], phi0 = a3[1], phi1 = b10[1], z3;
    if (lambda1 < lambda0)
      z3 = lambda0, lambda0 = lambda1, lambda1 = z3;
    var delta2 = lambda1 - lambda0, polar = abs2(delta2 - pi4) < epsilon3, meridian = polar || delta2 < epsilon3;
    if (!polar && phi1 < phi0)
      z3 = phi0, phi0 = phi1, phi1 = z3;
    if (meridian ? polar ? phi0 + phi1 > 0 ^ q2[1] < (abs2(q2[0] - lambda0) < epsilon3 ? phi0 : phi1) : phi0 <= q2[1] && q2[1] <= phi1 : delta2 > pi4 ^ (lambda0 <= q2[0] && q2[0] <= lambda1)) {
      var q1 = cartesianScale(u2, (-w3 + t4) / uu);
      cartesianAddInPlace(q1, A6);
      return [q2, spherical(q1)];
    }
  }
  function code(lambda, phi3) {
    var r3 = smallRadius ? radius : pi4 - radius, code2 = 0;
    if (lambda < -r3)
      code2 |= 1;
    else if (lambda > r3)
      code2 |= 2;
    if (phi3 < -r3)
      code2 |= 4;
    else if (phi3 > r3)
      code2 |= 8;
    return code2;
  }
  return clip2(visible, clipLine2, interpolate3, smallRadius ? [0, -radius] : [-pi4, radius - pi4]);
}
function clipLine(a3, b10, x03, y03, x14, y14) {
  var ax = a3[0], ay = a3[1], bx = b10[0], by = b10[1], t04 = 0, t14 = 1, dx = bx - ax, dy = by - ay, r3;
  r3 = x03 - ax;
  if (!dx && r3 > 0)
    return;
  r3 /= dx;
  if (dx < 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  } else if (dx > 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  }
  r3 = x14 - ax;
  if (!dx && r3 < 0)
    return;
  r3 /= dx;
  if (dx < 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  } else if (dx > 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  }
  r3 = y03 - ay;
  if (!dy && r3 > 0)
    return;
  r3 /= dy;
  if (dy < 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  } else if (dy > 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  }
  r3 = y14 - ay;
  if (!dy && r3 < 0)
    return;
  r3 /= dy;
  if (dy < 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  } else if (dy > 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  }
  if (t04 > 0)
    a3[0] = ax + t04 * dx, a3[1] = ay + t04 * dy;
  if (t14 < 1)
    b10[0] = ax + t14 * dx, b10[1] = ay + t14 * dy;
  return true;
}
var clipMax2 = 1e9;
var clipMin2 = -clipMax2;
function clipRectangle(x03, y03, x14, y14) {
  function visible(x5, y7) {
    return x03 <= x5 && x5 <= x14 && y03 <= y7 && y7 <= y14;
  }
  function interpolate3(from, to2, direction, stream2) {
    var a3 = 0, a1 = 0;
    if (from == null || (a3 = corner(from, direction)) !== (a1 = corner(to2, direction)) || comparePoint(from, to2) < 0 ^ direction > 0) {
      do
        stream2.point(a3 === 0 || a3 === 3 ? x03 : x14, a3 > 1 ? y14 : y03);
      while ((a3 = (a3 + direction + 4) % 4) !== a1);
    } else {
      stream2.point(to2[0], to2[1]);
    }
  }
  function corner(p3, direction) {
    return abs2(p3[0] - x03) < epsilon3 ? direction > 0 ? 0 : 3 : abs2(p3[0] - x14) < epsilon3 ? direction > 0 ? 2 : 1 : abs2(p3[1] - y03) < epsilon3 ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
  }
  function compareIntersection3(a3, b10) {
    return comparePoint(a3.x, b10.x);
  }
  function comparePoint(a3, b10) {
    var ca2 = corner(a3, 1), cb2 = corner(b10, 1);
    return ca2 !== cb2 ? ca2 - cb2 : ca2 === 0 ? b10[1] - a3[1] : ca2 === 1 ? a3[0] - b10[0] : ca2 === 2 ? a3[1] - b10[1] : b10[0] - a3[0];
  }
  return function(stream2) {
    var activeStream = stream2, bufferStream = clipBuffer2(), segments, polygon, ring, x__, y__, v__, x_, y_, v_, first, clean;
    var clipStream = {
      point: point8,
      lineStart,
      lineEnd,
      polygonStart,
      polygonEnd
    };
    function point8(x5, y7) {
      if (visible(x5, y7))
        activeStream.point(x5, y7);
    }
    function polygonInside() {
      var winding = 0;
      for (var i = 0, n3 = polygon.length; i < n3; ++i) {
        for (var ring2 = polygon[i], j2 = 1, m3 = ring2.length, point9 = ring2[0], a0, a1, b03 = point9[0], b13 = point9[1]; j2 < m3; ++j2) {
          a0 = b03, a1 = b13, point9 = ring2[j2], b03 = point9[0], b13 = point9[1];
          if (a1 <= y14) {
            if (b13 > y14 && (b03 - a0) * (y14 - a1) > (b13 - a1) * (x03 - a0))
              ++winding;
          } else {
            if (b13 <= y14 && (b03 - a0) * (y14 - a1) < (b13 - a1) * (x03 - a0))
              --winding;
          }
        }
      }
      return winding;
    }
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }
    function polygonEnd() {
      var startInside = polygonInside(), cleanInside = clean && startInside, visible2 = (segments = merge(segments)).length;
      if (cleanInside || visible2) {
        stream2.polygonStart();
        if (cleanInside) {
          stream2.lineStart();
          interpolate3(null, null, 1, stream2);
          stream2.lineEnd();
        }
        if (visible2) {
          clipRejoin2(segments, compareIntersection3, startInside, interpolate3, stream2);
        }
        stream2.polygonEnd();
      }
      activeStream = stream2, segments = polygon = ring = null;
    }
    function lineStart() {
      clipStream.point = linePoint;
      if (polygon)
        polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_)
          bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point8;
      if (v_)
        activeStream.lineEnd();
    }
    function linePoint(x5, y7) {
      var v3 = visible(x5, y7);
      if (polygon)
        ring.push([x5, y7]);
      if (first) {
        x__ = x5, y__ = y7, v__ = v3;
        first = false;
        if (v3) {
          activeStream.lineStart();
          activeStream.point(x5, y7);
        }
      } else {
        if (v3 && v_)
          activeStream.point(x5, y7);
        else {
          var a3 = [x_ = Math.max(clipMin2, Math.min(clipMax2, x_)), y_ = Math.max(clipMin2, Math.min(clipMax2, y_))], b10 = [x5 = Math.max(clipMin2, Math.min(clipMax2, x5)), y7 = Math.max(clipMin2, Math.min(clipMax2, y7))];
          if (clipLine(a3, b10, x03, y03, x14, y14)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a3[0], a3[1]);
            }
            activeStream.point(b10[0], b10[1]);
            if (!v3)
              activeStream.lineEnd();
            clean = false;
          } else if (v3) {
            activeStream.lineStart();
            activeStream.point(x5, y7);
            clean = false;
          }
        }
      }
      x_ = x5, y_ = y7, v_ = v3;
    }
    return clipStream;
  };
}
var identity3 = (x5) => x5;
var areaSum2 = new Adder();
var areaRingSum2 = new Adder();
var x002;
var y002;
var x0;
var y0;
var areaStream = {
  point: noop2,
  lineStart: noop2,
  lineEnd: noop2,
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop2;
    areaSum2.add(abs2(areaRingSum2));
    areaRingSum2 = new Adder();
  },
  result: function() {
    var area3 = areaSum2 / 2;
    areaSum2 = new Adder();
    return area3;
  }
};
function areaRingStart() {
  areaStream.point = areaPointFirst;
}
function areaPointFirst(x5, y7) {
  areaStream.point = areaPoint;
  x002 = x0 = x5, y002 = y0 = y7;
}
function areaPoint(x5, y7) {
  areaRingSum2.add(y0 * x5 - x0 * y7);
  x0 = x5, y0 = y7;
}
function areaRingEnd() {
  areaPoint(x002, y002);
}
var x0$12 = Infinity;
var y0$12 = x0$12;
var x12 = -x0$12;
var y12 = x12;
var boundsStream = {
  point: boundsPoint,
  lineStart: noop2,
  lineEnd: noop2,
  polygonStart: noop2,
  polygonEnd: noop2,
  result: function() {
    var bounds = [[x0$12, y0$12], [x12, y12]];
    x12 = y12 = -(y0$12 = x0$12 = Infinity);
    return bounds;
  }
};
function boundsPoint(x5, y7) {
  if (x5 < x0$12)
    x0$12 = x5;
  if (x5 > x12)
    x12 = x5;
  if (y7 < y0$12)
    y0$12 = y7;
  if (y7 > y12)
    y12 = y7;
}
var X0 = 0;
var Y0 = 0;
var Z0 = 0;
var X1 = 0;
var Y1 = 0;
var Z1 = 0;
var X22 = 0;
var Y22 = 0;
var Z22 = 0;
var x00$12;
var y00$12;
var x0$22;
var y0$22;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid = Z22 ? [X22 / Z22, Y22 / Z22] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X22 = Y22 = Z22 = 0;
    return centroid;
  }
};
function centroidPoint(x5, y7) {
  X0 += x5;
  Y0 += y7;
  ++Z0;
}
function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine2;
}
function centroidPointFirstLine2(x5, y7) {
  centroidStream.point = centroidPointLine2;
  centroidPoint(x0$22 = x5, y0$22 = y7);
}
function centroidPointLine2(x5, y7) {
  var dx = x5 - x0$22, dy = y7 - y0$22, z3 = sqrt4(dx * dx + dy * dy);
  X1 += z3 * (x0$22 + x5) / 2;
  Y1 += z3 * (y0$22 + y7) / 2;
  Z1 += z3;
  centroidPoint(x0$22 = x5, y0$22 = y7);
}
function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}
function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing2;
}
function centroidRingEnd() {
  centroidPointRing2(x00$12, y00$12);
}
function centroidPointFirstRing2(x5, y7) {
  centroidStream.point = centroidPointRing2;
  centroidPoint(x00$12 = x0$22 = x5, y00$12 = y0$22 = y7);
}
function centroidPointRing2(x5, y7) {
  var dx = x5 - x0$22, dy = y7 - y0$22, z3 = sqrt4(dx * dx + dy * dy);
  X1 += z3 * (x0$22 + x5) / 2;
  Y1 += z3 * (y0$22 + y7) / 2;
  Z1 += z3;
  z3 = y0$22 * x5 - x0$22 * y7;
  X22 += z3 * (x0$22 + x5);
  Y22 += z3 * (y0$22 + y7);
  Z22 += z3 * 3;
  centroidPoint(x0$22 = x5, y0$22 = y7);
}
function PathContext2(context) {
  this._context = context;
}
PathContext2.prototype = {
  _radius: 4.5,
  pointRadius: function(_2) {
    return this._radius = _2, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._context.closePath();
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x5, y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x5, y7);
        break;
      }
      default: {
        this._context.moveTo(x5 + this._radius, y7);
        this._context.arc(x5, y7, this._radius, 0, tau3);
        break;
      }
    }
  },
  result: noop2
};
var lengthSum = new Adder();
var lengthRing2;
var x00$22;
var y00$22;
var x0$32;
var y0$32;
var lengthStream = {
  point: noop2,
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing2)
      lengthPoint(x00$22, y00$22);
    lengthStream.point = noop2;
  },
  polygonStart: function() {
    lengthRing2 = true;
  },
  polygonEnd: function() {
    lengthRing2 = null;
  },
  result: function() {
    var length = +lengthSum;
    lengthSum = new Adder();
    return length;
  }
};
function lengthPointFirst(x5, y7) {
  lengthStream.point = lengthPoint;
  x00$22 = x0$32 = x5, y00$22 = y0$32 = y7;
}
function lengthPoint(x5, y7) {
  x0$32 -= x5, y0$32 -= y7;
  lengthSum.add(sqrt4(x0$32 * x0$32 + y0$32 * y0$32));
  x0$32 = x5, y0$32 = y7;
}
function PathString2() {
  this._string = [];
}
PathString2.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_2) {
    if ((_2 = +_2) !== this._radius)
      this._radius = _2, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._string.push("Z");
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x5, ",", y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x5, ",", y7);
        break;
      }
      default: {
        if (this._circle == null)
          this._circle = circle(this._radius);
        this._string.push("M", x5, ",", y7, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};
function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
function index(projection2, context) {
  var pointRadius = 4.5, projectionStream, contextStream;
  function path3(object2) {
    if (object2) {
      if (typeof pointRadius === "function")
        contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream2(object2, projectionStream(contextStream));
    }
    return contextStream.result();
  }
  path3.area = function(object2) {
    geoStream2(object2, projectionStream(areaStream));
    return areaStream.result();
  };
  path3.measure = function(object2) {
    geoStream2(object2, projectionStream(lengthStream));
    return lengthStream.result();
  };
  path3.bounds = function(object2) {
    geoStream2(object2, projectionStream(boundsStream));
    return boundsStream.result();
  };
  path3.centroid = function(object2) {
    geoStream2(object2, projectionStream(centroidStream));
    return centroidStream.result();
  };
  path3.projection = function(_2) {
    return arguments.length ? (projectionStream = _2 == null ? (projection2 = null, identity3) : (projection2 = _2).stream, path3) : projection2;
  };
  path3.context = function(_2) {
    if (!arguments.length)
      return context;
    contextStream = _2 == null ? (context = null, new PathString2()) : new PathContext2(context = _2);
    if (typeof pointRadius !== "function")
      contextStream.pointRadius(pointRadius);
    return path3;
  };
  path3.pointRadius = function(_2) {
    if (!arguments.length)
      return pointRadius;
    pointRadius = typeof _2 === "function" ? _2 : (contextStream.pointRadius(+_2), +_2);
    return path3;
  };
  return path3.projection(projection2).context(context);
}
function transformer5(methods) {
  return function(stream2) {
    var s4 = new TransformStream2();
    for (var key in methods)
      s4[key] = methods[key];
    s4.stream = stream2;
    return s4;
  };
}
function TransformStream2() {
}
TransformStream2.prototype = {
  constructor: TransformStream2,
  point: function(x5, y7) {
    this.stream.point(x5, y7);
  },
  sphere: function() {
    this.stream.sphere();
  },
  lineStart: function() {
    this.stream.lineStart();
  },
  lineEnd: function() {
    this.stream.lineEnd();
  },
  polygonStart: function() {
    this.stream.polygonStart();
  },
  polygonEnd: function() {
    this.stream.polygonEnd();
  }
};
function fit(projection2, fitBounds, object2) {
  var clip3 = projection2.clipExtent && projection2.clipExtent();
  projection2.scale(150).translate([0, 0]);
  if (clip3 != null)
    projection2.clipExtent(null);
  geoStream2(object2, projection2.stream(boundsStream));
  fitBounds(boundsStream.result());
  if (clip3 != null)
    projection2.clipExtent(clip3);
  return projection2;
}
function fitExtent(projection2, extent3, object2) {
  return fit(projection2, function(b10) {
    var w3 = extent3[1][0] - extent3[0][0], h2 = extent3[1][1] - extent3[0][1], k6 = Math.min(w3 / (b10[1][0] - b10[0][0]), h2 / (b10[1][1] - b10[0][1])), x5 = +extent3[0][0] + (w3 - k6 * (b10[1][0] + b10[0][0])) / 2, y7 = +extent3[0][1] + (h2 - k6 * (b10[1][1] + b10[0][1])) / 2;
    projection2.scale(150 * k6).translate([x5, y7]);
  }, object2);
}
function fitSize(projection2, size, object2) {
  return fitExtent(projection2, [[0, 0], size], object2);
}
function fitWidth(projection2, width, object2) {
  return fit(projection2, function(b10) {
    var w3 = +width, k6 = w3 / (b10[1][0] - b10[0][0]), x5 = (w3 - k6 * (b10[1][0] + b10[0][0])) / 2, y7 = -k6 * b10[0][1];
    projection2.scale(150 * k6).translate([x5, y7]);
  }, object2);
}
function fitHeight(projection2, height, object2) {
  return fit(projection2, function(b10) {
    var h2 = +height, k6 = h2 / (b10[1][1] - b10[0][1]), x5 = -k6 * b10[0][0], y7 = (h2 - k6 * (b10[1][1] + b10[0][1])) / 2;
    projection2.scale(150 * k6).translate([x5, y7]);
  }, object2);
}
var maxDepth = 16;
var cosMinDistance2 = cos(30 * radians2);
function resample(project, delta2) {
  return +delta2 ? resample$1(project, delta2) : resampleNone(project);
}
function resampleNone(project) {
  return transformer5({
    point: function(x5, y7) {
      x5 = project(x5, y7);
      this.stream.point(x5[0], x5[1]);
    }
  });
}
function resample$1(project, delta2) {
  function resampleLineTo(x03, y03, lambda0, a0, b03, c0, x14, y14, lambda1, a1, b13, c1, depth, stream2) {
    var dx = x14 - x03, dy = y14 - y03, d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a3 = a0 + a1, b10 = b03 + b13, c5 = c0 + c1, m3 = sqrt4(a3 * a3 + b10 * b10 + c5 * c5), phi22 = asin2(c5 /= m3), lambda2 = abs2(abs2(c5) - 1) < epsilon3 || abs2(lambda0 - lambda1) < epsilon3 ? (lambda0 + lambda1) / 2 : atan22(b10, a3), p3 = project(lambda2, phi22), x22 = p3[0], y22 = p3[1], dx2 = x22 - x03, dy2 = y22 - y03, dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 || abs2((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 || a0 * a1 + b03 * b13 + c0 * c1 < cosMinDistance2) {
        resampleLineTo(x03, y03, lambda0, a0, b03, c0, x22, y22, lambda2, a3 /= m3, b10 /= m3, c5, depth, stream2);
        stream2.point(x22, y22);
        resampleLineTo(x22, y22, lambda2, a3, b10, c5, x14, y14, lambda1, a1, b13, c1, depth, stream2);
      }
    }
  }
  return function(stream2) {
    var lambda00, x004, y004, a00, b00, c00, lambda0, x03, y03, a0, b03, c0;
    var resampleStream = {
      point: point8,
      lineStart,
      lineEnd,
      polygonStart: function() {
        stream2.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function() {
        stream2.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };
    function point8(x5, y7) {
      x5 = project(x5, y7);
      stream2.point(x5[0], x5[1]);
    }
    function lineStart() {
      x03 = NaN;
      resampleStream.point = linePoint;
      stream2.lineStart();
    }
    function linePoint(lambda, phi3) {
      var c5 = cartesian2([lambda, phi3]), p3 = project(lambda, phi3);
      resampleLineTo(x03, y03, lambda0, a0, b03, c0, x03 = p3[0], y03 = p3[1], lambda0 = lambda, a0 = c5[0], b03 = c5[1], c0 = c5[2], maxDepth, stream2);
      stream2.point(x03, y03);
    }
    function lineEnd() {
      resampleStream.point = point8;
      stream2.lineEnd();
    }
    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }
    function ringPoint(lambda, phi3) {
      linePoint(lambda00 = lambda, phi3), x004 = x03, y004 = y03, a00 = a0, b00 = b03, c00 = c0;
      resampleStream.point = linePoint;
    }
    function ringEnd() {
      resampleLineTo(x03, y03, lambda0, a0, b03, c0, x004, y004, lambda00, a00, b00, c00, maxDepth, stream2);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }
    return resampleStream;
  };
}
var transformRadians2 = transformer5({
  point: function(x5, y7) {
    this.stream.point(x5 * radians2, y7 * radians2);
  }
});
function transformRotate(rotate) {
  return transformer5({
    point: function(x5, y7) {
      var r3 = rotate(x5, y7);
      return this.stream.point(r3[0], r3[1]);
    }
  });
}
function scaleTranslate(k6, dx, dy, sx, sy) {
  function transform(x5, y7) {
    x5 *= sx;
    y7 *= sy;
    return [dx + k6 * x5, dy - k6 * y7];
  }
  transform.invert = function(x5, y7) {
    return [(x5 - dx) / k6 * sx, (dy - y7) / k6 * sy];
  };
  return transform;
}
function scaleTranslateRotate(k6, dx, dy, sx, sy, alpha3) {
  if (!alpha3)
    return scaleTranslate(k6, dx, dy, sx, sy);
  var cosAlpha = cos(alpha3), sinAlpha = sin(alpha3), a3 = cosAlpha * k6, b10 = sinAlpha * k6, ai2 = cosAlpha / k6, bi2 = sinAlpha / k6, ci2 = (sinAlpha * dy - cosAlpha * dx) / k6, fi2 = (sinAlpha * dx + cosAlpha * dy) / k6;
  function transform(x5, y7) {
    x5 *= sx;
    y7 *= sy;
    return [a3 * x5 - b10 * y7 + dx, dy - b10 * x5 - a3 * y7];
  }
  transform.invert = function(x5, y7) {
    return [sx * (ai2 * x5 - bi2 * y7 + ci2), sy * (fi2 - bi2 * x5 - ai2 * y7)];
  };
  return transform;
}
function projection(project) {
  return projectionMutator(function() {
    return project;
  })();
}
function projectionMutator(projectAt) {
  var project, k6 = 150, x5 = 480, y7 = 250, lambda = 0, phi3 = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha3 = 0, sx = 1, sy = 1, theta = null, preclip = clipAntimeridian2, x03 = null, y03, x14, y14, postclip = identity3, delta2 = 0.5, projectResample, projectTransform, projectRotateTransform, cache, cacheStream;
  function projection2(point8) {
    return projectRotateTransform(point8[0] * radians2, point8[1] * radians2);
  }
  function invert2(point8) {
    point8 = projectRotateTransform.invert(point8[0], point8[1]);
    return point8 && [point8[0] * degrees2, point8[1] * degrees2];
  }
  projection2.stream = function(stream2) {
    return cache && cacheStream === stream2 ? cache : cache = transformRadians2(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream2)))));
  };
  projection2.preclip = function(_2) {
    return arguments.length ? (preclip = _2, theta = void 0, reset()) : preclip;
  };
  projection2.postclip = function(_2) {
    return arguments.length ? (postclip = _2, x03 = y03 = x14 = y14 = null, reset()) : postclip;
  };
  projection2.clipAngle = function(_2) {
    return arguments.length ? (preclip = +_2 ? clipCircle(theta = _2 * radians2) : (theta = null, clipAntimeridian2), reset()) : theta * degrees2;
  };
  projection2.clipExtent = function(_2) {
    return arguments.length ? (postclip = _2 == null ? (x03 = y03 = x14 = y14 = null, identity3) : clipRectangle(x03 = +_2[0][0], y03 = +_2[0][1], x14 = +_2[1][0], y14 = +_2[1][1]), reset()) : x03 == null ? null : [[x03, y03], [x14, y14]];
  };
  projection2.scale = function(_2) {
    return arguments.length ? (k6 = +_2, recenter()) : k6;
  };
  projection2.translate = function(_2) {
    return arguments.length ? (x5 = +_2[0], y7 = +_2[1], recenter()) : [x5, y7];
  };
  projection2.center = function(_2) {
    return arguments.length ? (lambda = _2[0] % 360 * radians2, phi3 = _2[1] % 360 * radians2, recenter()) : [lambda * degrees2, phi3 * degrees2];
  };
  projection2.rotate = function(_2) {
    return arguments.length ? (deltaLambda = _2[0] % 360 * radians2, deltaPhi = _2[1] % 360 * radians2, deltaGamma = _2.length > 2 ? _2[2] % 360 * radians2 : 0, recenter()) : [deltaLambda * degrees2, deltaPhi * degrees2, deltaGamma * degrees2];
  };
  projection2.angle = function(_2) {
    return arguments.length ? (alpha3 = _2 % 360 * radians2, recenter()) : alpha3 * degrees2;
  };
  projection2.reflectX = function(_2) {
    return arguments.length ? (sx = _2 ? -1 : 1, recenter()) : sx < 0;
  };
  projection2.reflectY = function(_2) {
    return arguments.length ? (sy = _2 ? -1 : 1, recenter()) : sy < 0;
  };
  projection2.precision = function(_2) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _2 * _2), reset()) : sqrt4(delta2);
  };
  projection2.fitExtent = function(extent3, object2) {
    return fitExtent(projection2, extent3, object2);
  };
  projection2.fitSize = function(size, object2) {
    return fitSize(projection2, size, object2);
  };
  projection2.fitWidth = function(width, object2) {
    return fitWidth(projection2, width, object2);
  };
  projection2.fitHeight = function(height, object2) {
    return fitHeight(projection2, height, object2);
  };
  function recenter() {
    var center3 = scaleTranslateRotate(k6, 0, 0, sx, sy, alpha3).apply(null, project(lambda, phi3)), transform = scaleTranslateRotate(k6, x5 - center3[0], y7 - center3[1], sx, sy, alpha3);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose(project, transform);
    projectRotateTransform = compose(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }
  function reset() {
    cache = cacheStream = null;
    return projection2;
  }
  return function() {
    project = projectAt.apply(this, arguments);
    projection2.invert = project.invert && invert2;
    return recenter();
  };
}
function mercatorRaw2(lambda, phi3) {
  return [lambda, log3(tan2((halfPi2 + phi3) / 2))];
}
mercatorRaw2.invert = function(x5, y7) {
  return [x5, 2 * atan3(exp2(y7)) - halfPi2];
};
function mercator() {
  return mercatorProjection(mercatorRaw2).scale(961 / tau3);
}
function mercatorProjection(project) {
  var m3 = projection(project), center3 = m3.center, scale = m3.scale, translate3 = m3.translate, clipExtent = m3.clipExtent, x03 = null, y03, x14, y14;
  m3.scale = function(_2) {
    return arguments.length ? (scale(_2), reclip()) : scale();
  };
  m3.translate = function(_2) {
    return arguments.length ? (translate3(_2), reclip()) : translate3();
  };
  m3.center = function(_2) {
    return arguments.length ? (center3(_2), reclip()) : center3();
  };
  m3.clipExtent = function(_2) {
    return arguments.length ? (_2 == null ? x03 = y03 = x14 = y14 = null : (x03 = +_2[0][0], y03 = +_2[0][1], x14 = +_2[1][0], y14 = +_2[1][1]), reclip()) : x03 == null ? null : [[x03, y03], [x14, y14]];
  };
  function reclip() {
    var k6 = pi4 * scale(), t4 = m3(rotation(m3.rotate()).invert([0, 0]));
    return clipExtent(x03 == null ? [[t4[0] - k6, t4[1] - k6], [t4[0] + k6, t4[1] + k6]] : project === mercatorRaw2 ? [[Math.max(t4[0] - k6, x03), y03], [Math.min(t4[0] + k6, x14), y14]] : [[x03, Math.max(t4[1] - k6, y03)], [x14, Math.min(t4[1] + k6, y14)]]);
  }
  return reclip();
}

// dist/components/dashboard/WorldMap.js
function WorldMap(props) {
  const {onHover, hoverElement, colorScale: colorScale3, size, data: data3} = props;
  const projection2 = mercator().scale(100).translate([350, 300]);
  const pathGenerator = index().projection(projection2);
  const countries = data3.map((d2, i) => /* @__PURE__ */ react.createElement("path", {
    key: "path" + i,
    d: pathGenerator(d2),
    onMouseEnter: () => {
      onHover(d2);
    },
    style: {fill: hoverElement === d2.id ? "#FCBC34" : colorScale3(d2.launchday), stroke: "black", strokeOpacity: 0.5},
    className: "countries"
  }));
  return /* @__PURE__ */ react.createElement("svg", {
    width: size[0] * 2,
    height: size[1] * 3
  }, countries);
}
var WorldMap_default = WorldMap;

// dist/components/dashboard/BarChart.js
function BarChart(props) {
  const {data: data3, size, onHover, hoverElement, colorScale: colorScale3} = props;
  const barWidth = size[0] / data3.length;
  const dataMax = data3.reduce((a3, c5, i) => Math.max(a3, c5.data[i] ?? 0), 0);
  const yScale = linear2().domain([0, dataMax]).range([0, size[1]]);
  const legendColors = ["rgb(117,115,159)", "rgb(94,175,198)", "rgb(65,163,104)", "rgb(147,196,100)"];
  const legendEl = /* @__PURE__ */ react.createElement("g", {
    className: "legend",
    transform: `translate(${size[0]}, 50)`
  }, /* @__PURE__ */ react.createElement("g", {
    className: "legendCells"
  }, ["Wave 1", "Wave 2", "Wave 3", "Wave 4"].map((text2, i) => /* @__PURE__ */ react.createElement("g", {
    key: i,
    className: "cell",
    transform: `translate(0, ${i * 20})`
  }, /* @__PURE__ */ react.createElement("rect", {
    className: "swatch",
    height: "15",
    width: "15",
    fill: legendColors[i]
  }), /* @__PURE__ */ react.createElement("text", {
    className: "label",
    transform: `translate(25, 12.5)`
  }, text2)))));
  const bars = data3.map((d2, i) => {
    return /* @__PURE__ */ react.createElement("rect", {
      key: i,
      className: "bar",
      onMouseOver: onHover,
      x: i * barWidth,
      y: size[1] - yScale(d2.data[i] ?? 0),
      height: yScale(d2.data[i] ?? 0),
      width: barWidth,
      fill: hoverElement === d2.id ? "#FCBC34" : colorScale3(d2.launchday),
      stroke: "black",
      strokeOpacity: "0.25"
    });
  });
  return /* @__PURE__ */ react.createElement("svg", {
    width: size[0] + 100,
    height: size[1] * 2
  }, /* @__PURE__ */ react.createElement("g", null, bars), legendEl);
}
var BarChart_default = BarChart;

// dist/components/dashboard/StreamGraph.js
function StreamGraph(props) {
  const {data: data3, size, onHover, hoverElement, colorScale: colorScale3} = props;
  const stackData2 = Array(30).fill(1).map((_2, i) => ({}));
  const stackData1 = data3.map((d2, i) => ({[d2.id]: d2.data[i]}));
  for (let x5 = 0; x5 < 30; x5++) {
    data3.forEach((country) => {
      stackData2[x5][country.id] = country.data[x5];
    });
  }
  const xScale = linear2().domain([0, 30]).range([0, size[0]]);
  const yScale = linear2().domain([0, 60]).range([size[1], 0]);
  const stackLayout = stack2().offset(wiggle).order(insideOut).keys(Object.keys(stackData2[0]));
  const stackArea = area$3().x((d2, i) => xScale(i)).y0((d2) => yScale(d2[0])).y1((d2) => yScale(d2[1])).curve(basis$2);
  const stacks = stackLayout(stackData2).map((d2, i) => /* @__PURE__ */ react.createElement("path", {
    key: "stack" + i,
    d: stackArea(d2),
    onMouseEnter: () => {
      onHover(data3[i]);
    },
    style: {fill: hoverElement === data3[i]["id"] ? "#FCBC34" : colorScale3(data3[i].launchday), stroke: "black", strokeOpacity: 0.5}
  }));
  return /* @__PURE__ */ react.createElement("svg", {
    width: size[0],
    height: size[1],
    onClick: () => console.log("0", data3, "1", stackData2, "2", stackData1)
  }, /* @__PURE__ */ react.createElement("g", {
    transform: "translate(0," + -size[1] / 2 + ")"
  }, stacks));
}
var StreamGraph_default = StreamGraph;

// dist/components/dashboard/Brush.js
function Brush(props) {
  const {size, changeBrush} = props;
  const node = useRef();
  const createBrush = () => {
    const scale = linear2().domain([0, 36]).range([0, size[0]]);
    const dayBrush = brushX().extent([[0, 0], size]).on("brush", brushed);
    const dayAxis = axisBottom().scale(scale);
    select(node.current).selectAll("g.brushaxis").data([0]).enter().append("g").attr("class", "brushaxis").attr("transform", "translate(0,25)");
    select(node.current).select("g.brushaxis").call(dayAxis);
    select(node.current).selectAll("g.brush").data([0]).enter().append("g").attr("class", "brush").attr("transform", "translate(0,0)");
    select(node.current).select("g.brush").call(dayBrush);
    select(node.current).select("g.brush").selectAll("g.resize").selectAll("circle").data([0]).enter().append("circle").attr("r", 25).attr("cy", 25).style("fill", "white").style("stroke", "black").style("stroke-width", "4px").style("opacity", 0.75);
    const brushFn = changeBrush;
    function brushed(e3) {
      const selectedExtent = e3.selection.map((d2) => scale.invert(d2));
      brushFn(selectedExtent);
    }
  };
  useEffect(() => {
    if (node.current)
      createBrush();
  }, []);
  return /* @__PURE__ */ react.createElement("svg", {
    ref: node,
    width: size[0],
    height: 50
  });
}
var Brush_default = Brush;

// dist/components/dashboard/StatLine.js
function StatLine(props) {
  const {allData, filteredData} = props;
  let allSales = allData.reduce((a3, c5, i) => {
    return a3 + (c5.data[i] ?? 0);
  }, 0);
  allSales = Math.floor(allSales * 100) / 100;
  let filteredSales = filteredData.reduce((a3, c5, i) => {
    return a3 + (c5.data[i] ?? 0);
  }, 0);
  filteredSales = Math.floor(filteredSales * 100) / 100;
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, /* @__PURE__ */ react.createElement("div", null, "Stats: ", /* @__PURE__ */ react.createElement("span", null, filteredData.length, "/", allData.length, " countries selected. ")), /* @__PURE__ */ react.createElement("div", null, "Average sales: ", /* @__PURE__ */ react.createElement("span", null, filteredSales, " (", allSales, ")"))));
}

// data/americas.js
var americas_default = {type: "FeatureCollection", features: [
  {type: "Feature", id: "AFG", properties: {name: "Afghanistan"}, geometry: {type: "Polygon", coordinates: [[[61.210817, 35.650072], [62.230651, 35.270664], [62.984662, 35.404041], [63.193538, 35.857166], [63.982896, 36.007957], [64.546479, 36.312073], [64.746105, 37.111818], [65.588948, 37.305217], [65.745631, 37.661164], [66.217385, 37.39379], [66.518607, 37.362784], [67.075782, 37.356144], [67.83, 37.144994], [68.135562, 37.023115], [68.859446, 37.344336], [69.196273, 37.151144], [69.518785, 37.608997], [70.116578, 37.588223], [70.270574, 37.735165], [70.376304, 38.138396], [70.806821, 38.486282], [71.348131, 38.258905], [71.239404, 37.953265], [71.541918, 37.905774], [71.448693, 37.065645], [71.844638, 36.738171], [72.193041, 36.948288], [72.63689, 37.047558], [73.260056, 37.495257], [73.948696, 37.421566], [74.980002, 37.41999], [75.158028, 37.133031], [74.575893, 37.020841], [74.067552, 36.836176], [72.920025, 36.720007], [71.846292, 36.509942], [71.262348, 36.074388], [71.498768, 35.650563], [71.613076, 35.153203], [71.115019, 34.733126], [71.156773, 34.348911], [70.881803, 33.988856], [69.930543, 34.02012], [70.323594, 33.358533], [69.687147, 33.105499], [69.262522, 32.501944], [69.317764, 31.901412], [68.926677, 31.620189], [68.556932, 31.71331], [67.792689, 31.58293], [67.683394, 31.303154], [66.938891, 31.304911], [66.381458, 30.738899], [66.346473, 29.887943], [65.046862, 29.472181], [64.350419, 29.560031], [64.148002, 29.340819], [63.550261, 29.468331], [62.549857, 29.318572], [60.874248, 29.829239], [61.781222, 30.73585], [61.699314, 31.379506], [60.941945, 31.548075], [60.863655, 32.18292], [60.536078, 32.981269], [60.9637, 33.528832], [60.52843, 33.676446], [60.803193, 34.404102], [61.210817, 35.650072]]]}},
  {type: "Feature", id: "AGO", properties: {name: "Angola"}, geometry: {type: "MultiPolygon", coordinates: [[[[16.326528, -5.87747], [16.57318, -6.622645], [16.860191, -7.222298], [17.089996, -7.545689], [17.47297, -8.068551], [18.134222, -7.987678], [18.464176, -7.847014], [19.016752, -7.988246], [19.166613, -7.738184], [19.417502, -7.155429], [20.037723, -7.116361], [20.091622, -6.94309], [20.601823, -6.939318], [20.514748, -7.299606], [21.728111, -7.290872], [21.746456, -7.920085], [21.949131, -8.305901], [21.801801, -8.908707], [21.875182, -9.523708], [22.208753, -9.894796], [22.155268, -11.084801], [22.402798, -10.993075], [22.837345, -11.017622], [23.456791, -10.867863], [23.912215, -10.926826], [24.017894, -11.237298], [23.904154, -11.722282], [24.079905, -12.191297], [23.930922, -12.565848], [24.016137, -12.911046], [21.933886, -12.898437], [21.887843, -16.08031], [22.562478, -16.898451], [23.215048, -17.523116], [21.377176, -17.930636], [18.956187, -17.789095], [18.263309, -17.309951], [14.209707, -17.353101], [14.058501, -17.423381], [13.462362, -16.971212], [12.814081, -16.941343], [12.215461, -17.111668], [11.734199, -17.301889], [11.640096, -16.673142], [11.778537, -15.793816], [12.123581, -14.878316], [12.175619, -14.449144], [12.500095, -13.5477], [12.738479, -13.137906], [13.312914, -12.48363], [13.633721, -12.038645], [13.738728, -11.297863], [13.686379, -10.731076], [13.387328, -10.373578], [13.120988, -9.766897], [12.87537, -9.166934], [12.929061, -8.959091], [13.236433, -8.562629], [12.93304, -7.596539], [12.728298, -6.927122], [12.227347, -6.294448], [12.322432, -6.100092], [12.735171, -5.965682], [13.024869, -5.984389], [13.375597, -5.864241], [16.326528, -5.87747]]], [[[12.436688, -5.684304], [12.182337, -5.789931], [11.914963, -5.037987], [12.318608, -4.60623], [12.62076, -4.438023], [12.995517, -4.781103], [12.631612, -4.991271], [12.468004, -5.248362], [12.436688, -5.684304]]]]}},
  {type: "Feature", id: "ALB", properties: {name: "Albania"}, geometry: {type: "Polygon", coordinates: [[[20.590247, 41.855404], [20.463175, 41.515089], [20.605182, 41.086226], [21.02004, 40.842727], [20.99999, 40.580004], [20.674997, 40.435], [20.615, 40.110007], [20.150016, 39.624998], [19.98, 39.694993], [19.960002, 39.915006], [19.406082, 40.250773], [19.319059, 40.72723], [19.40355, 41.409566], [19.540027, 41.719986], [19.371769, 41.877548], [19.304486, 42.195745], [19.738051, 42.688247], [19.801613, 42.500093], [20.0707, 42.58863], [20.283755, 42.32026], [20.52295, 42.21787], [20.590247, 41.855404]]]}},
  {type: "Feature", id: "ARE", properties: {name: "United Arab Emirates"}, geometry: {type: "Polygon", coordinates: [[[51.579519, 24.245497], [51.757441, 24.294073], [51.794389, 24.019826], [52.577081, 24.177439], [53.404007, 24.151317], [54.008001, 24.121758], [54.693024, 24.797892], [55.439025, 25.439145], [56.070821, 26.055464], [56.261042, 25.714606], [56.396847, 24.924732], [55.886233, 24.920831], [55.804119, 24.269604], [55.981214, 24.130543], [55.528632, 23.933604], [55.525841, 23.524869], [55.234489, 23.110993], [55.208341, 22.70833], [55.006803, 22.496948], [52.000733, 23.001154], [51.617708, 24.014219], [51.579519, 24.245497]]]}},
  {type: "Feature", id: "ARG", properties: {name: "Argentina"}, geometry: {type: "MultiPolygon", coordinates: [[[[-65.5, -55.2], [-66.45, -55.25], [-66.95992, -54.89681], [-67.56244, -54.87001], [-68.63335, -54.8695], [-68.63401, -52.63637], [-68.25, -53.1], [-67.75, -53.85], [-66.45, -54.45], [-65.05, -54.7], [-65.5, -55.2]]], [[[-64.964892, -22.075862], [-64.377021, -22.798091], [-63.986838, -21.993644], [-62.846468, -22.034985], [-62.685057, -22.249029], [-60.846565, -23.880713], [-60.028966, -24.032796], [-58.807128, -24.771459], [-57.777217, -25.16234], [-57.63366, -25.603657], [-58.618174, -27.123719], [-57.60976, -27.395899], [-56.486702, -27.548499], [-55.695846, -27.387837], [-54.788795, -26.621786], [-54.625291, -25.739255], [-54.13005, -25.547639], [-53.628349, -26.124865], [-53.648735, -26.923473], [-54.490725, -27.474757], [-55.162286, -27.881915], [-56.2909, -28.852761], [-57.625133, -30.216295], [-57.874937, -31.016556], [-58.14244, -32.044504], [-58.132648, -33.040567], [-58.349611, -33.263189], [-58.427074, -33.909454], [-58.495442, -34.43149], [-57.22583, -35.288027], [-57.362359, -35.97739], [-56.737487, -36.413126], [-56.788285, -36.901572], [-57.749157, -38.183871], [-59.231857, -38.72022], [-61.237445, -38.928425], [-62.335957, -38.827707], [-62.125763, -39.424105], [-62.330531, -40.172586], [-62.145994, -40.676897], [-62.745803, -41.028761], [-63.770495, -41.166789], [-64.73209, -40.802677], [-65.118035, -41.064315], [-64.978561, -42.058001], [-64.303408, -42.359016], [-63.755948, -42.043687], [-63.458059, -42.563138], [-64.378804, -42.873558], [-65.181804, -43.495381], [-65.328823, -44.501366], [-65.565269, -45.036786], [-66.509966, -45.039628], [-67.293794, -45.551896], [-67.580546, -46.301773], [-66.597066, -47.033925], [-65.641027, -47.236135], [-65.985088, -48.133289], [-67.166179, -48.697337], [-67.816088, -49.869669], [-68.728745, -50.264218], [-69.138539, -50.73251], [-68.815561, -51.771104], [-68.149995, -52.349983], [-68.571545, -52.299444], [-69.498362, -52.142761], [-71.914804, -52.009022], [-72.329404, -51.425956], [-72.309974, -50.67701], [-72.975747, -50.74145], [-73.328051, -50.378785], [-73.415436, -49.318436], [-72.648247, -48.878618], [-72.331161, -48.244238], [-72.447355, -47.738533], [-71.917258, -46.884838], [-71.552009, -45.560733], [-71.659316, -44.973689], [-71.222779, -44.784243], [-71.329801, -44.407522], [-71.793623, -44.207172], [-71.464056, -43.787611], [-71.915424, -43.408565], [-72.148898, -42.254888], [-71.746804, -42.051386], [-71.915734, -40.832339], [-71.680761, -39.808164], [-71.413517, -38.916022], [-70.814664, -38.552995], [-71.118625, -37.576827], [-71.121881, -36.658124], [-70.364769, -36.005089], [-70.388049, -35.169688], [-69.817309, -34.193571], [-69.814777, -33.273886], [-70.074399, -33.09121], [-70.535069, -31.36501], [-69.919008, -30.336339], [-70.01355, -29.367923], [-69.65613, -28.459141], [-69.001235, -27.521214], [-68.295542, -26.89934], [-68.5948, -26.506909], [-68.386001, -26.185016], [-68.417653, -24.518555], [-67.328443, -24.025303], [-66.985234, -22.986349], [-67.106674, -22.735925], [-66.273339, -21.83231], [-64.964892, -22.075862]]]]}},
  {type: "Feature", id: "ARM", properties: {name: "Armenia"}, geometry: {type: "Polygon", coordinates: [[[43.582746, 41.092143], [44.97248, 41.248129], [45.179496, 40.985354], [45.560351, 40.81229], [45.359175, 40.561504], [45.891907, 40.218476], [45.610012, 39.899994], [46.034534, 39.628021], [46.483499, 39.464155], [46.50572, 38.770605], [46.143623, 38.741201], [45.735379, 39.319719], [45.739978, 39.473999], [45.298145, 39.471751], [45.001987, 39.740004], [44.79399, 39.713003], [44.400009, 40.005], [43.656436, 40.253564], [43.752658, 40.740201], [43.582746, 41.092143]]]}},
  {type: "Feature", id: "ATA", properties: {name: "Antarctica"}, geometry: {type: "MultiPolygon", coordinates: [[[[-59.572095, -80.040179], [-59.865849, -80.549657], [-60.159656, -81.000327], [-62.255393, -80.863178], [-64.488125, -80.921934], [-65.741666, -80.588827], [-65.741666, -80.549657], [-66.290031, -80.255773], [-64.037688, -80.294944], [-61.883246, -80.39287], [-61.138976, -79.981371], [-60.610119, -79.628679], [-59.572095, -80.040179]]], [[[-159.208184, -79.497059], [-161.127601, -79.634209], [-162.439847, -79.281465], [-163.027408, -78.928774], [-163.066604, -78.869966], [-163.712896, -78.595667], [-163.105801, -78.223338], [-161.245113, -78.380176], [-160.246208, -78.693645], [-159.482405, -79.046338], [-159.208184, -79.497059]]], [[[-45.154758, -78.04707], [-43.920828, -78.478103], [-43.48995, -79.08556], [-43.372438, -79.516645], [-43.333267, -80.026123], [-44.880537, -80.339644], [-46.506174, -80.594357], [-48.386421, -80.829485], [-50.482107, -81.025442], [-52.851988, -80.966685], [-54.164259, -80.633528], [-53.987991, -80.222028], [-51.853134, -79.94773], [-50.991326, -79.614623], [-50.364595, -79.183487], [-49.914131, -78.811209], [-49.306959, -78.458569], [-48.660616, -78.047018], [-48.660616, -78.047019], [-48.151396, -78.04707], [-46.662857, -77.831476], [-45.154758, -78.04707]]], [[[-121.211511, -73.50099], [-119.918851, -73.657725], [-118.724143, -73.481353], [-119.292119, -73.834097], [-120.232217, -74.08881], [-121.62283, -74.010468], [-122.621735, -73.657778], [-122.621735, -73.657777], [-122.406245, -73.324619], [-121.211511, -73.50099]]], [[[-125.559566, -73.481353], [-124.031882, -73.873268], [-124.619469, -73.834097], [-125.912181, -73.736118], [-127.28313, -73.461769], [-127.28313, -73.461768], [-126.558472, -73.246226], [-125.559566, -73.481353]]], [[[-98.98155, -71.933334], [-97.884743, -72.070535], [-96.787937, -71.952971], [-96.20035, -72.521205], [-96.983765, -72.442864], [-98.198083, -72.482035], [-99.432013, -72.442864], [-100.783455, -72.50162], [-101.801868, -72.305663], [-102.330725, -71.894164], [-101.703967, -71.717792], [-100.430919, -71.854993], [-98.98155, -71.933334]]], [[[-68.451346, -70.955823], [-68.333834, -71.406493], [-68.510128, -71.798407], [-68.784297, -72.170736], [-69.959471, -72.307885], [-71.075889, -72.503842], [-72.388134, -72.484257], [-71.8985, -72.092343], [-73.073622, -72.229492], [-74.19004, -72.366693], [-74.953895, -72.072757], [-75.012625, -71.661258], [-73.915819, -71.269345], [-73.915819, -71.269344], [-73.230331, -71.15178], [-72.074717, -71.190951], [-71.780962, -70.681473], [-71.72218, -70.309196], [-71.741791, -69.505782], [-71.173815, -69.035475], [-70.253252, -68.87874], [-69.724447, -69.251017], [-69.489422, -69.623346], [-69.058518, -70.074016], [-68.725541, -70.505153], [-68.451346, -70.955823]]], [[[-58.614143, -64.152467], [-59.045073, -64.36801], [-59.789342, -64.211223], [-60.611928, -64.309202], [-61.297416, -64.54433], [-62.0221, -64.799094], [-62.51176, -65.09303], [-62.648858, -65.484942], [-62.590128, -65.857219], [-62.120079, -66.190326], [-62.805567, -66.425505], [-63.74569, -66.503847], [-64.294106, -66.837004], [-64.881693, -67.150474], [-65.508425, -67.58161], [-65.665082, -67.953887], [-65.312545, -68.365335], [-64.783715, -68.678908], [-63.961103, -68.913984], [-63.1973, -69.227556], [-62.785955, -69.619419], [-62.570516, -69.991747], [-62.276736, -70.383661], [-61.806661, -70.716768], [-61.512906, -71.089045], [-61.375809, -72.010074], [-61.081977, -72.382351], [-61.003661, -72.774265], [-60.690269, -73.166179], [-60.827367, -73.695242], [-61.375809, -74.106742], [-61.96337, -74.439848], [-63.295201, -74.576997], [-63.74569, -74.92974], [-64.352836, -75.262847], [-65.860987, -75.635124], [-67.192818, -75.79191], [-68.446282, -76.007452], [-69.797724, -76.222995], [-70.600724, -76.634494], [-72.206776, -76.673665], [-73.969536, -76.634494], [-75.555977, -76.712887], [-77.24037, -76.712887], [-76.926979, -77.104802], [-75.399294, -77.28107], [-74.282876, -77.55542], [-73.656119, -77.908112], [-74.772536, -78.221633], [-76.4961, -78.123654], [-77.925858, -78.378419], [-77.984666, -78.789918], [-78.023785, -79.181833], [-76.848637, -79.514939], [-76.633224, -79.887216], [-75.360097, -80.259545], [-73.244852, -80.416331], [-71.442946, -80.69063], [-70.013163, -81.004151], [-68.191646, -81.317672], [-65.704279, -81.474458], [-63.25603, -81.748757], [-61.552026, -82.042692], [-59.691416, -82.37585], [-58.712121, -82.846106], [-58.222487, -83.218434], [-57.008117, -82.865691], [-55.362894, -82.571755], [-53.619771, -82.258235], [-51.543644, -82.003521], [-49.76135, -81.729171], [-47.273931, -81.709586], [-44.825708, -81.846735], [-42.808363, -82.081915], [-42.16202, -81.65083], [-40.771433, -81.356894], [-38.244818, -81.337309], [-36.26667, -81.121715], [-34.386397, -80.906172], [-32.310296, -80.769023], [-30.097098, -80.592651], [-28.549802, -80.337938], [-29.254901, -79.985195], [-29.685805, -79.632503], [-29.685805, -79.260226], [-31.624808, -79.299397], [-33.681324, -79.456132], [-35.639912, -79.456132], [-35.914107, -79.083855], [-35.77701, -78.339248], [-35.326546, -78.123654], [-33.896763, -77.888526], [-32.212369, -77.65345], [-30.998051, -77.359515], [-29.783732, -77.065579], [-28.882779, -76.673665], [-27.511752, -76.497345], [-26.160336, -76.360144], [-25.474822, -76.281803], [-23.927552, -76.24258], [-22.458598, -76.105431], [-21.224694, -75.909474], [-20.010375, -75.674346], [-18.913543, -75.439218], [-17.522982, -75.125698], [-16.641589, -74.79254], [-15.701491, -74.498604], [-15.40771, -74.106742], [-16.46532, -73.871614], [-16.112784, -73.460114], [-15.446855, -73.146542], [-14.408805, -72.950585], [-13.311973, -72.715457], [-12.293508, -72.401936], [-11.510067, -72.010074], [-11.020433, -71.539767], [-10.295774, -71.265416], [-9.101015, -71.324224], [-8.611381, -71.65733], [-7.416622, -71.696501], [-7.377451, -71.324224], [-6.868232, -70.93231], [-5.790985, -71.030289], [-5.536375, -71.402617], [-4.341667, -71.461373], [-3.048981, -71.285053], [-1.795492, -71.167438], [-0.659489, -71.226246], [-0.228637, -71.637745], [0.868195, -71.304639], [1.886686, -71.128267], [3.022638, -70.991118], [4.139055, -70.853917], [5.157546, -70.618789], [6.273912, -70.462055], [7.13572, -70.246512], [7.742866, -69.893769], [8.48711, -70.148534], [9.525135, -70.011333], [10.249845, -70.48164], [10.817821, -70.834332], [11.953824, -70.638375], [12.404287, -70.246512], [13.422778, -69.972162], [14.734998, -70.030918], [15.126757, -70.403247], [15.949342, -70.030918], [17.026589, -69.913354], [18.201711, -69.874183], [19.259373, -69.893769], [20.375739, -70.011333], [21.452985, -70.07014], [21.923034, -70.403247], [22.569403, -70.697182], [23.666184, -70.520811], [24.841357, -70.48164], [25.977309, -70.48164], [27.093726, -70.462055], [28.09258, -70.324854], [29.150242, -70.20729], [30.031583, -69.93294], [30.971733, -69.75662], [31.990172, -69.658641], [32.754053, -69.384291], [33.302443, -68.835642], [33.870419, -68.502588], [34.908495, -68.659271], [35.300202, -69.012014], [36.16201, -69.247142], [37.200035, -69.168748], [37.905108, -69.52144], [38.649404, -69.776205], [39.667894, -69.541077], [40.020431, -69.109941], [40.921358, -68.933621], [41.959434, -68.600514], [42.938702, -68.463313], [44.113876, -68.267408], [44.897291, -68.051866], [45.719928, -67.816738], [46.503343, -67.601196], [47.44344, -67.718759], [48.344419, -67.366068], [48.990736, -67.091718], [49.930885, -67.111303], [50.753471, -66.876175], [50.949325, -66.523484], [51.791547, -66.249133], [52.614133, -66.053176], [53.613038, -65.89639], [54.53355, -65.818049], [55.414943, -65.876805], [56.355041, -65.974783], [57.158093, -66.249133], [57.255968, -66.680218], [58.137361, -67.013324], [58.744508, -67.287675], [59.939318, -67.405239], [60.605221, -67.679589], [61.427806, -67.953887], [62.387489, -68.012695], [63.19049, -67.816738], [64.052349, -67.405239], [64.992447, -67.620729], [65.971715, -67.738345], [66.911864, -67.855909], [67.891133, -67.934302], [68.890038, -67.934302], [69.712624, -68.972791], [69.673453, -69.227556], [69.555941, -69.678226], [68.596258, -69.93294], [67.81274, -70.305268], [67.949889, -70.697182], [69.066307, -70.677545], [68.929157, -71.069459], [68.419989, -71.441788], [67.949889, -71.853287], [68.71377, -72.166808], [69.869307, -72.264787], [71.024895, -72.088415], [71.573285, -71.696501], [71.906288, -71.324224], [72.454627, -71.010703], [73.08141, -70.716768], [73.33602, -70.364024], [73.864877, -69.874183], [74.491557, -69.776205], [75.62756, -69.737034], [76.626465, -69.619419], [77.644904, -69.462684], [78.134539, -69.07077], [78.428371, -68.698441], [79.113859, -68.326216], [80.093127, -68.071503], [80.93535, -67.875546], [81.483792, -67.542388], [82.051767, -67.366068], [82.776426, -67.209282], [83.775331, -67.30726], [84.676206, -67.209282], [85.655527, -67.091718], [86.752359, -67.150474], [87.477017, -66.876175], [87.986289, -66.209911], [88.358411, -66.484261], [88.828408, -66.954568], [89.67063, -67.150474], [90.630365, -67.228867], [91.5901, -67.111303], [92.608539, -67.189696], [93.548637, -67.209282], [94.17542, -67.111303], [95.017591, -67.170111], [95.781472, -67.385653], [96.682399, -67.248504], [97.759646, -67.248504], [98.68021, -67.111303], [99.718182, -67.248504], [100.384188, -66.915346], [100.893356, -66.58224], [101.578896, -66.30789], [102.832411, -65.563284], [103.478676, -65.700485], [104.242557, -65.974783], [104.90846, -66.327527], [106.181561, -66.934931], [107.160881, -66.954568], [108.081393, -66.954568], [109.15864, -66.837004], [110.235835, -66.699804], [111.058472, -66.425505], [111.74396, -66.13157], [112.860378, -66.092347], [113.604673, -65.876805], [114.388088, -66.072762], [114.897308, -66.386283], [115.602381, -66.699804], [116.699161, -66.660633], [117.384701, -66.915346], [118.57946, -67.170111], [119.832924, -67.268089], [120.871, -67.189696], [121.654415, -66.876175], [122.320369, -66.562654], [123.221296, -66.484261], [124.122274, -66.621462], [125.160247, -66.719389], [126.100396, -66.562654], [127.001427, -66.562654], [127.882768, -66.660633], [128.80328, -66.758611], [129.704259, -66.58224], [130.781454, -66.425505], [131.799945, -66.386283], [132.935896, -66.386283], [133.85646, -66.288304], [134.757387, -66.209963], [135.031582, -65.72007], [135.070753, -65.308571], [135.697485, -65.582869], [135.873805, -66.033591], [136.206705, -66.44509], [136.618049, -66.778197], [137.460271, -66.954568], [138.596223, -66.895761], [139.908442, -66.876175], [140.809421, -66.817367], [142.121692, -66.817367], [143.061842, -66.797782], [144.374061, -66.837004], [145.490427, -66.915346], [146.195552, -67.228867], [145.999699, -67.601196], [146.646067, -67.895131], [147.723263, -68.130259], [148.839629, -68.385024], [150.132314, -68.561292], [151.483705, -68.71813], [152.502247, -68.874813], [153.638199, -68.894502], [154.284567, -68.561292], [155.165857, -68.835642], [155.92979, -69.149215], [156.811132, -69.384291], [158.025528, -69.482269], [159.181013, -69.599833], [159.670699, -69.991747], [160.80665, -70.226875], [161.570479, -70.579618], [162.686897, -70.736353], [163.842434, -70.716768], [164.919681, -70.775524], [166.11444, -70.755938], [167.309095, -70.834332], [168.425616, -70.971481], [169.463589, -71.20666], [170.501665, -71.402617], [171.20679, -71.696501], [171.089227, -72.088415], [170.560422, -72.441159], [170.109958, -72.891829], [169.75737, -73.24452], [169.287321, -73.65602], [167.975101, -73.812806], [167.387489, -74.165498], [166.094803, -74.38104], [165.644391, -74.772954], [164.958851, -75.145283], [164.234193, -75.458804], [163.822797, -75.870303], [163.568239, -76.24258], [163.47026, -76.693302], [163.489897, -77.065579], [164.057873, -77.457442], [164.273363, -77.82977], [164.743464, -78.182514], [166.604126, -78.319611], [166.995781, -78.750748], [165.193876, -78.907483], [163.666217, -79.123025], [161.766385, -79.162248], [160.924162, -79.730482], [160.747894, -80.200737], [160.316964, -80.573066], [159.788211, -80.945395], [161.120016, -81.278501], [161.629287, -81.690001], [162.490992, -82.062278], [163.705336, -82.395435], [165.095949, -82.708956], [166.604126, -83.022477], [168.895665, -83.335998], [169.404782, -83.825891], [172.283934, -84.041433], [172.477049, -84.117914], [173.224083, -84.41371], [175.985672, -84.158997], [178.277212, -84.472518], [180, -84.71338], [-179.942499, -84.721443], [-179.058677, -84.139412], [-177.256772, -84.452933], [-177.140807, -84.417941], [-176.084673, -84.099259], [-175.947235, -84.110449], [-175.829882, -84.117914], [-174.382503, -84.534323], [-173.116559, -84.117914], [-172.889106, -84.061019], [-169.951223, -83.884647], [-168.999989, -84.117914], [-168.530199, -84.23739], [-167.022099, -84.570497], [-164.182144, -84.82521], [-161.929775, -85.138731], [-158.07138, -85.37391], [-155.192253, -85.09956], [-150.942099, -85.295517], [-148.533073, -85.609038], [-145.888918, -85.315102], [-143.107718, -85.040752], [-142.892279, -84.570497], [-146.829068, -84.531274], [-150.060732, -84.296146], [-150.902928, -83.904232], [-153.586201, -83.68869], [-153.409907, -83.23802], [-153.037759, -82.82652], [-152.665637, -82.454192], [-152.861517, -82.042692], [-154.526299, -81.768394], [-155.29018, -81.41565], [-156.83745, -81.102129], [-154.408787, -81.160937], [-152.097662, -81.004151], [-150.648293, -81.337309], [-148.865998, -81.043373], [-147.22075, -80.671045], [-146.417749, -80.337938], [-146.770286, -79.926439], [-148.062947, -79.652089], [-149.531901, -79.358205], [-151.588416, -79.299397], [-153.390322, -79.162248], [-155.329376, -79.064269], [-155.975668, -78.69194], [-157.268302, -78.378419], [-158.051768, -78.025676], [-158.365134, -76.889207], [-157.875474, -76.987238], [-156.974573, -77.300759], [-155.329376, -77.202728], [-153.742832, -77.065579], [-152.920247, -77.496664], [-151.33378, -77.398737], [-150.00195, -77.183143], [-148.748486, -76.908845], [-147.612483, -76.575738], [-146.104409, -76.47776], [-146.143528, -76.105431], [-146.496091, -75.733154], [-146.20231, -75.380411], [-144.909624, -75.204039], [-144.322037, -75.537197], [-142.794353, -75.34124], [-141.638764, -75.086475], [-140.209007, -75.06689], [-138.85759, -74.968911], [-137.5062, -74.733783], [-136.428901, -74.518241], [-135.214583, -74.302699], [-134.431194, -74.361455], [-133.745654, -74.439848], [-132.257168, -74.302699], [-130.925311, -74.479019], [-129.554284, -74.459433], [-128.242038, -74.322284], [-126.890622, -74.420263], [-125.402082, -74.518241], [-124.011496, -74.479019], [-122.562152, -74.498604], [-121.073613, -74.518241], [-119.70256, -74.479019], [-118.684145, -74.185083], [-117.469801, -74.028348], [-116.216312, -74.243891], [-115.021552, -74.067519], [-113.944331, -73.714828], [-113.297988, -74.028348], [-112.945452, -74.38104], [-112.299083, -74.714198], [-111.261059, -74.420263], [-110.066325, -74.79254], [-108.714909, -74.910103], [-107.559346, -75.184454], [-106.149148, -75.125698], [-104.876074, -74.949326], [-103.367949, -74.988497], [-102.016507, -75.125698], [-100.645531, -75.302018], [-100.1167, -74.870933], [-100.763043, -74.537826], [-101.252703, -74.185083], [-102.545337, -74.106742], [-103.113313, -73.734413], [-103.328752, -73.362084], [-103.681289, -72.61753], [-102.917485, -72.754679], [-101.60524, -72.813436], [-100.312528, -72.754679], [-99.13738, -72.911414], [-98.118889, -73.20535], [-97.688037, -73.558041], [-96.336595, -73.616849], [-95.043961, -73.4797], [-93.672907, -73.283743], [-92.439003, -73.166179], [-91.420564, -73.401307], [-90.088733, -73.322914], [-89.226951, -72.558722], [-88.423951, -73.009393], [-87.268337, -73.185764], [-86.014822, -73.087786], [-85.192236, -73.4797], [-83.879991, -73.518871], [-82.665646, -73.636434], [-81.470913, -73.851977], [-80.687447, -73.4797], [-80.295791, -73.126956], [-79.296886, -73.518871], [-77.925858, -73.420892], [-76.907367, -73.636434], [-76.221879, -73.969541], [-74.890049, -73.871614], [-73.852024, -73.65602], [-72.833533, -73.401307], [-71.619215, -73.264157], [-70.209042, -73.146542], [-68.935916, -73.009393], [-67.956622, -72.79385], [-67.369061, -72.480329], [-67.134036, -72.049244], [-67.251548, -71.637745], [-67.56494, -71.245831], [-67.917477, -70.853917], [-68.230843, -70.462055], [-68.485452, -70.109311], [-68.544209, -69.717397], [-68.446282, -69.325535], [-67.976233, -68.953206], [-67.5845, -68.541707], [-67.427843, -68.149844], [-67.62367, -67.718759], [-67.741183, -67.326845], [-67.251548, -66.876175], [-66.703184, -66.58224], [-66.056815, -66.209963], [-65.371327, -65.89639], [-64.568276, -65.602506], [-64.176542, -65.171423], [-63.628152, -64.897073], [-63.001394, -64.642308], [-62.041686, -64.583552], [-61.414928, -64.270031], [-60.709855, -64.074074], [-59.887269, -63.95651], [-59.162585, -63.701745], [-58.594557, -63.388224], [-57.811143, -63.27066], [-57.223582, -63.525425], [-57.59573, -63.858532], [-58.614143, -64.152467]]]]}},
  {type: "Feature", id: "ATF", properties: {name: "French Southern and Antarctic Lands"}, geometry: {type: "Polygon", coordinates: [[[68.935, -48.625], [69.58, -48.94], [70.525, -49.065], [70.56, -49.255], [70.28, -49.71], [68.745, -49.775], [68.72, -49.2425], [68.8675, -48.83], [68.935, -48.625]]]}},
  {type: "Feature", id: "AUS", properties: {name: "Australia"}, geometry: {type: "MultiPolygon", coordinates: [[[[145.397978, -40.792549], [146.364121, -41.137695], [146.908584, -41.000546], [147.689259, -40.808258], [148.289068, -40.875438], [148.359865, -42.062445], [148.017301, -42.407024], [147.914052, -43.211522], [147.564564, -42.937689], [146.870343, -43.634597], [146.663327, -43.580854], [146.048378, -43.549745], [145.43193, -42.693776], [145.29509, -42.03361], [144.718071, -41.162552], [144.743755, -40.703975], [145.397978, -40.792549]]], [[[143.561811, -13.763656], [143.922099, -14.548311], [144.563714, -14.171176], [144.894908, -14.594458], [145.374724, -14.984976], [145.271991, -15.428205], [145.48526, -16.285672], [145.637033, -16.784918], [145.888904, -16.906926], [146.160309, -17.761655], [146.063674, -18.280073], [146.387478, -18.958274], [147.471082, -19.480723], [148.177602, -19.955939], [148.848414, -20.39121], [148.717465, -20.633469], [149.28942, -21.260511], [149.678337, -22.342512], [150.077382, -22.122784], [150.482939, -22.556142], [150.727265, -22.402405], [150.899554, -23.462237], [151.609175, -24.076256], [152.07354, -24.457887], [152.855197, -25.267501], [153.136162, -26.071173], [153.161949, -26.641319], [153.092909, -27.2603], [153.569469, -28.110067], [153.512108, -28.995077], [153.339095, -29.458202], [153.069241, -30.35024], [153.089602, -30.923642], [152.891578, -31.640446], [152.450002, -32.550003], [151.709117, -33.041342], [151.343972, -33.816023], [151.010555, -34.31036], [150.714139, -35.17346], [150.32822, -35.671879], [150.075212, -36.420206], [149.946124, -37.109052], [149.997284, -37.425261], [149.423882, -37.772681], [148.304622, -37.809061], [147.381733, -38.219217], [146.922123, -38.606532], [146.317922, -39.035757], [145.489652, -38.593768], [144.876976, -38.417448], [145.032212, -37.896188], [144.485682, -38.085324], [143.609974, -38.809465], [142.745427, -38.538268], [142.17833, -38.380034], [141.606582, -38.308514], [140.638579, -38.019333], [139.992158, -37.402936], [139.806588, -36.643603], [139.574148, -36.138362], [139.082808, -35.732754], [138.120748, -35.612296], [138.449462, -35.127261], [138.207564, -34.384723], [137.71917, -35.076825], [136.829406, -35.260535], [137.352371, -34.707339], [137.503886, -34.130268], [137.890116, -33.640479], [137.810328, -32.900007], [136.996837, -33.752771], [136.372069, -34.094766], [135.989043, -34.890118], [135.208213, -34.47867], [135.239218, -33.947953], [134.613417, -33.222778], [134.085904, -32.848072], [134.273903, -32.617234], [132.990777, -32.011224], [132.288081, -31.982647], [131.326331, -31.495803], [129.535794, -31.590423], [128.240938, -31.948489], [127.102867, -32.282267], [126.148714, -32.215966], [125.088623, -32.728751], [124.221648, -32.959487], [124.028947, -33.483847], [123.659667, -33.890179], [122.811036, -33.914467], [122.183064, -34.003402], [121.299191, -33.821036], [120.580268, -33.930177], [119.893695, -33.976065], [119.298899, -34.509366], [119.007341, -34.464149], [118.505718, -34.746819], [118.024972, -35.064733], [117.295507, -35.025459], [116.625109, -35.025097], [115.564347, -34.386428], [115.026809, -34.196517], [115.048616, -33.623425], [115.545123, -33.487258], [115.714674, -33.259572], [115.679379, -32.900369], [115.801645, -32.205062], [115.689611, -31.612437], [115.160909, -30.601594], [114.997043, -30.030725], [115.040038, -29.461095], [114.641974, -28.810231], [114.616498, -28.516399], [114.173579, -28.118077], [114.048884, -27.334765], [113.477498, -26.543134], [113.338953, -26.116545], [113.778358, -26.549025], [113.440962, -25.621278], [113.936901, -25.911235], [114.232852, -26.298446], [114.216161, -25.786281], [113.721255, -24.998939], [113.625344, -24.683971], [113.393523, -24.384764], [113.502044, -23.80635], [113.706993, -23.560215], [113.843418, -23.059987], [113.736552, -22.475475], [114.149756, -21.755881], [114.225307, -22.517488], [114.647762, -21.82952], [115.460167, -21.495173], [115.947373, -21.068688], [116.711615, -20.701682], [117.166316, -20.623599], [117.441545, -20.746899], [118.229559, -20.374208], [118.836085, -20.263311], [118.987807, -20.044203], [119.252494, -19.952942], [119.805225, -19.976506], [120.85622, -19.683708], [121.399856, -19.239756], [121.655138, -18.705318], [122.241665, -18.197649], [122.286624, -17.798603], [122.312772, -17.254967], [123.012574, -16.4052], [123.433789, -17.268558], [123.859345, -17.069035], [123.503242, -16.596506], [123.817073, -16.111316], [124.258287, -16.327944], [124.379726, -15.56706], [124.926153, -15.0751], [125.167275, -14.680396], [125.670087, -14.51007], [125.685796, -14.230656], [126.125149, -14.347341], [126.142823, -14.095987], [126.582589, -13.952791], [127.065867, -13.817968], [127.804633, -14.276906], [128.35969, -14.86917], [128.985543, -14.875991], [129.621473, -14.969784], [129.4096, -14.42067], [129.888641, -13.618703], [130.339466, -13.357376], [130.183506, -13.10752], [130.617795, -12.536392], [131.223495, -12.183649], [131.735091, -12.302453], [132.575298, -12.114041], [132.557212, -11.603012], [131.824698, -11.273782], [132.357224, -11.128519], [133.019561, -11.376411], [133.550846, -11.786515], [134.393068, -12.042365], [134.678632, -11.941183], [135.298491, -12.248606], [135.882693, -11.962267], [136.258381, -12.049342], [136.492475, -11.857209], [136.95162, -12.351959], [136.685125, -12.887223], [136.305407, -13.29123], [135.961758, -13.324509], [136.077617, -13.724278], [135.783836, -14.223989], [135.428664, -14.715432], [135.500184, -14.997741], [136.295175, -15.550265], [137.06536, -15.870762], [137.580471, -16.215082], [138.303217, -16.807604], [138.585164, -16.806622], [139.108543, -17.062679], [139.260575, -17.371601], [140.215245, -17.710805], [140.875463, -17.369069], [141.07111, -16.832047], [141.274095, -16.38887], [141.398222, -15.840532], [141.702183, -15.044921], [141.56338, -14.561333], [141.63552, -14.270395], [141.519869, -13.698078], [141.65092, -12.944688], [141.842691, -12.741548], [141.68699, -12.407614], [141.928629, -11.877466], [142.118488, -11.328042], [142.143706, -11.042737], [142.51526, -10.668186], [142.79731, -11.157355], [142.866763, -11.784707], [143.115947, -11.90563], [143.158632, -12.325656], [143.522124, -12.834358], [143.597158, -13.400422], [143.561811, -13.763656]]]]}},
  {type: "Feature", id: "AUT", properties: {name: "Austria"}, geometry: {type: "Polygon", coordinates: [[[16.979667, 48.123497], [16.903754, 47.714866], [16.340584, 47.712902], [16.534268, 47.496171], [16.202298, 46.852386], [16.011664, 46.683611], [15.137092, 46.658703], [14.632472, 46.431817], [13.806475, 46.509306], [12.376485, 46.767559], [12.153088, 47.115393], [11.164828, 46.941579], [11.048556, 46.751359], [10.442701, 46.893546], [9.932448, 46.920728], [9.47997, 47.10281], [9.632932, 47.347601], [9.594226, 47.525058], [9.896068, 47.580197], [10.402084, 47.302488], [10.544504, 47.566399], [11.426414, 47.523766], [12.141357, 47.703083], [12.62076, 47.672388], [12.932627, 47.467646], [13.025851, 47.637584], [12.884103, 48.289146], [13.243357, 48.416115], [13.595946, 48.877172], [14.338898, 48.555305], [14.901447, 48.964402], [15.253416, 49.039074], [16.029647, 48.733899], [16.499283, 48.785808], [16.960288, 48.596982], [16.879983, 48.470013], [16.979667, 48.123497]]]}},
  {type: "Feature", id: "AZE", properties: {name: "Azerbaijan"}, geometry: {type: "MultiPolygon", coordinates: [[[[45.001987, 39.740004], [45.298145, 39.471751], [45.739978, 39.473999], [45.735379, 39.319719], [46.143623, 38.741201], [45.457722, 38.874139], [44.952688, 39.335765], [44.79399, 39.713003], [45.001987, 39.740004]]], [[[47.373315, 41.219732], [47.815666, 41.151416], [47.987283, 41.405819], [48.584353, 41.80887], [49.110264, 41.282287], [49.618915, 40.572924], [50.08483, 40.526157], [50.392821, 40.256561], [49.569202, 40.176101], [49.395259, 39.399482], [49.223228, 39.049219], [48.856532, 38.815486], [48.883249, 38.320245], [48.634375, 38.270378], [48.010744, 38.794015], [48.355529, 39.288765], [48.060095, 39.582235], [47.685079, 39.508364], [46.50572, 38.770605], [46.483499, 39.464155], [46.034534, 39.628021], [45.610012, 39.899994], [45.891907, 40.218476], [45.359175, 40.561504], [45.560351, 40.81229], [45.179496, 40.985354], [44.97248, 41.248129], [45.217426, 41.411452], [45.962601, 41.123873], [46.501637, 41.064445], [46.637908, 41.181673], [46.145432, 41.722802], [46.404951, 41.860675], [46.686071, 41.827137], [47.373315, 41.219732]]]]}},
  {type: "Feature", id: "BDI", properties: {name: "Burundi"}, geometry: {type: "Polygon", coordinates: [[[29.339998, -4.499983], [29.276384, -3.293907], [29.024926, -2.839258], [29.632176, -2.917858], [29.938359, -2.348487], [30.469696, -2.413858], [30.527677, -2.807632], [30.743013, -3.034285], [30.752263, -3.35933], [30.50556, -3.568567], [30.116333, -4.090138], [29.753512, -4.452389], [29.339998, -4.499983]]]}},
  {type: "Feature", id: "BEL", properties: {name: "Belgium"}, geometry: {type: "Polygon", coordinates: [[[3.314971, 51.345781], [4.047071, 51.267259], [4.973991, 51.475024], [5.606976, 51.037298], [6.156658, 50.803721], [6.043073, 50.128052], [5.782417, 50.090328], [5.674052, 49.529484], [4.799222, 49.985373], [4.286023, 49.907497], [3.588184, 50.378992], [3.123252, 50.780363], [2.658422, 50.796848], [2.513573, 51.148506], [3.314971, 51.345781]]]}},
  {type: "Feature", id: "BEN", properties: {name: "Benin"}, geometry: {type: "Polygon", coordinates: [[[2.691702, 6.258817], [1.865241, 6.142158], [1.618951, 6.832038], [1.664478, 9.12859], [1.463043, 9.334624], [1.425061, 9.825395], [1.077795, 10.175607], [0.772336, 10.470808], [0.899563, 10.997339], [1.24347, 11.110511], [1.447178, 11.547719], [1.935986, 11.64115], [2.154474, 11.94015], [2.490164, 12.233052], [2.848643, 12.235636], [3.61118, 11.660167], [3.572216, 11.327939], [3.797112, 10.734746], [3.60007, 10.332186], [3.705438, 10.06321], [3.220352, 9.444153], [2.912308, 9.137608], [2.723793, 8.506845], [2.749063, 7.870734], [2.691702, 6.258817]]]}},
  {type: "Feature", id: "BFA", properties: {name: "Burkina Faso"}, geometry: {type: "Polygon", coordinates: [[[-2.827496, 9.642461], [-3.511899, 9.900326], [-3.980449, 9.862344], [-4.330247, 9.610835], [-4.779884, 9.821985], [-4.954653, 10.152714], [-5.404342, 10.370737], [-5.470565, 10.95127], [-5.197843, 11.375146], [-5.220942, 11.713859], [-4.427166, 12.542646], [-4.280405, 13.228444], [-4.006391, 13.472485], [-3.522803, 13.337662], [-3.103707, 13.541267], [-2.967694, 13.79815], [-2.191825, 14.246418], [-2.001035, 14.559008], [-1.066363, 14.973815], [-0.515854, 15.116158], [-0.266257, 14.924309], [0.374892, 14.928908], [0.295646, 14.444235], [0.429928, 13.988733], [0.993046, 13.33575], [1.024103, 12.851826], [2.177108, 12.625018], [2.154474, 11.94015], [1.935986, 11.64115], [1.447178, 11.547719], [1.24347, 11.110511], [0.899563, 10.997339], [0.023803, 11.018682], [-0.438702, 11.098341], [-0.761576, 10.93693], [-1.203358, 11.009819], [-2.940409, 10.96269], [-2.963896, 10.395335], [-2.827496, 9.642461]]]}},
  {type: "Feature", id: "BGD", properties: {name: "Bangladesh"}, geometry: {type: "Polygon", coordinates: [[[92.672721, 22.041239], [92.652257, 21.324048], [92.303234, 21.475485], [92.368554, 20.670883], [92.082886, 21.192195], [92.025215, 21.70157], [91.834891, 22.182936], [91.417087, 22.765019], [90.496006, 22.805017], [90.586957, 22.392794], [90.272971, 21.836368], [89.847467, 22.039146], [89.70205, 21.857116], [89.418863, 21.966179], [89.031961, 22.055708], [88.876312, 22.879146], [88.52977, 23.631142], [88.69994, 24.233715], [88.084422, 24.501657], [88.306373, 24.866079], [88.931554, 25.238692], [88.209789, 25.768066], [88.563049, 26.446526], [89.355094, 26.014407], [89.832481, 25.965082], [89.920693, 25.26975], [90.872211, 25.132601], [91.799596, 25.147432], [92.376202, 24.976693], [91.915093, 24.130414], [91.46773, 24.072639], [91.158963, 23.503527], [91.706475, 22.985264], [91.869928, 23.624346], [92.146035, 23.627499], [92.672721, 22.041239]]]}},
  {type: "Feature", id: "BGR", properties: {name: "Bulgaria"}, geometry: {type: "Polygon", coordinates: [[[22.65715, 44.234923], [22.944832, 43.823785], [23.332302, 43.897011], [24.100679, 43.741051], [25.569272, 43.688445], [26.065159, 43.943494], [27.2424, 44.175986], [27.970107, 43.812468], [28.558081, 43.707462], [28.039095, 43.293172], [27.673898, 42.577892], [27.99672, 42.007359], [27.135739, 42.141485], [26.117042, 41.826905], [26.106138, 41.328899], [25.197201, 41.234486], [24.492645, 41.583896], [23.692074, 41.309081], [22.952377, 41.337994], [22.881374, 41.999297], [22.380526, 42.32026], [22.545012, 42.461362], [22.436595, 42.580321], [22.604801, 42.898519], [22.986019, 43.211161], [22.500157, 43.642814], [22.410446, 44.008063], [22.65715, 44.234923]]]}},
  {type: "Feature", id: "BHS", properties: {name: "The Bahamas"}, geometry: {type: "MultiPolygon", coordinates: [[[[-77.53466, 23.75975], [-77.78, 23.71], [-78.03405, 24.28615], [-78.40848, 24.57564], [-78.19087, 25.2103], [-77.89, 25.17], [-77.54, 24.34], [-77.53466, 23.75975]]], [[[-77.82, 26.58], [-78.91, 26.42], [-78.98, 26.79], [-78.51, 26.87], [-77.85, 26.84], [-77.82, 26.58]]], [[[-77, 26.59], [-77.17255, 25.87918], [-77.35641, 26.00735], [-77.34, 26.53], [-77.78802, 26.92516], [-77.79, 27.04], [-77, 26.59]]]]}},
  {type: "Feature", id: "BIH", properties: {name: "Bosnia and Herzegovina"}, geometry: {type: "Polygon", coordinates: [[[19.005486, 44.860234], [19.36803, 44.863], [19.11761, 44.42307], [19.59976, 44.03847], [19.454, 43.5681], [19.21852, 43.52384], [19.03165, 43.43253], [18.70648, 43.20011], [18.56, 42.65], [17.674922, 43.028563], [17.297373, 43.446341], [16.916156, 43.667722], [16.456443, 44.04124], [16.23966, 44.351143], [15.750026, 44.818712], [15.959367, 45.233777], [16.318157, 45.004127], [16.534939, 45.211608], [17.002146, 45.233777], [17.861783, 45.06774], [18.553214, 45.08159], [19.005486, 44.860234]]]}},
  {type: "Feature", id: "BLR", properties: {name: "Belarus"}, geometry: {type: "Polygon", coordinates: [[[23.484128, 53.912498], [24.450684, 53.905702], [25.536354, 54.282423], [25.768433, 54.846963], [26.588279, 55.167176], [26.494331, 55.615107], [27.10246, 55.783314], [28.176709, 56.16913], [29.229513, 55.918344], [29.371572, 55.670091], [29.896294, 55.789463], [30.873909, 55.550976], [30.971836, 55.081548], [30.757534, 54.811771], [31.384472, 54.157056], [31.791424, 53.974639], [31.731273, 53.794029], [32.405599, 53.618045], [32.693643, 53.351421], [32.304519, 53.132726], [31.497644, 53.167427], [31.305201, 53.073996], [31.540018, 52.742052], [31.785998, 52.101678], [30.927549, 52.042353], [30.619454, 51.822806], [30.555117, 51.319503], [30.157364, 51.416138], [29.254938, 51.368234], [28.992835, 51.602044], [28.617613, 51.427714], [28.241615, 51.572227], [27.454066, 51.592303], [26.337959, 51.832289], [25.327788, 51.910656], [24.553106, 51.888461], [24.005078, 51.617444], [23.527071, 51.578454], [23.508002, 52.023647], [23.199494, 52.486977], [23.799199, 52.691099], [23.804935, 53.089731], [23.527536, 53.470122], [23.484128, 53.912498]]]}},
  {type: "Feature", id: "BLZ", properties: {name: "Belize"}, geometry: {type: "Polygon", coordinates: [[[-89.14308, 17.808319], [-89.150909, 17.955468], [-89.029857, 18.001511], [-88.848344, 17.883198], [-88.490123, 18.486831], [-88.300031, 18.499982], [-88.296336, 18.353273], [-88.106813, 18.348674], [-88.123479, 18.076675], [-88.285355, 17.644143], [-88.197867, 17.489475], [-88.302641, 17.131694], [-88.239518, 17.036066], [-88.355428, 16.530774], [-88.551825, 16.265467], [-88.732434, 16.233635], [-88.930613, 15.887273], [-89.229122, 15.886938], [-89.150806, 17.015577], [-89.14308, 17.808319]]]}},
  {type: "Feature", id: "BOL", properties: {name: "Bolivia"}, geometry: {type: "Polygon", coordinates: [[[-62.846468, -22.034985], [-63.986838, -21.993644], [-64.377021, -22.798091], [-64.964892, -22.075862], [-66.273339, -21.83231], [-67.106674, -22.735925], [-67.82818, -22.872919], [-68.219913, -21.494347], [-68.757167, -20.372658], [-68.442225, -19.405068], [-68.966818, -18.981683], [-69.100247, -18.260125], [-69.590424, -17.580012], [-68.959635, -16.500698], [-69.389764, -15.660129], [-69.160347, -15.323974], [-69.339535, -14.953195], [-68.948887, -14.453639], [-68.929224, -13.602684], [-68.88008, -12.899729], [-68.66508, -12.5613], [-69.529678, -10.951734], [-68.786158, -11.03638], [-68.271254, -11.014521], [-68.048192, -10.712059], [-67.173801, -10.306812], [-66.646908, -9.931331], [-65.338435, -9.761988], [-65.444837, -10.511451], [-65.321899, -10.895872], [-65.402281, -11.56627], [-64.316353, -12.461978], [-63.196499, -12.627033], [-62.80306, -13.000653], [-62.127081, -13.198781], [-61.713204, -13.489202], [-61.084121, -13.479384], [-60.503304, -13.775955], [-60.459198, -14.354007], [-60.264326, -14.645979], [-60.251149, -15.077219], [-60.542966, -15.09391], [-60.15839, -16.258284], [-58.24122, -16.299573], [-58.388058, -16.877109], [-58.280804, -17.27171], [-57.734558, -17.552468], [-57.498371, -18.174188], [-57.676009, -18.96184], [-57.949997, -19.400004], [-57.853802, -19.969995], [-58.166392, -20.176701], [-58.183471, -19.868399], [-59.115042, -19.356906], [-60.043565, -19.342747], [-61.786326, -19.633737], [-62.265961, -20.513735], [-62.291179, -21.051635], [-62.685057, -22.249029], [-62.846468, -22.034985]]]}},
  {type: "Feature", id: "BRA", properties: {name: "Brazil"}, geometry: {type: "Polygon", coordinates: [[[-57.625133, -30.216295], [-56.2909, -28.852761], [-55.162286, -27.881915], [-54.490725, -27.474757], [-53.648735, -26.923473], [-53.628349, -26.124865], [-54.13005, -25.547639], [-54.625291, -25.739255], [-54.428946, -25.162185], [-54.293476, -24.5708], [-54.29296, -24.021014], [-54.652834, -23.839578], [-55.027902, -24.001274], [-55.400747, -23.956935], [-55.517639, -23.571998], [-55.610683, -22.655619], [-55.797958, -22.35693], [-56.473317, -22.0863], [-56.88151, -22.282154], [-57.937156, -22.090176], [-57.870674, -20.732688], [-58.166392, -20.176701], [-57.853802, -19.969995], [-57.949997, -19.400004], [-57.676009, -18.96184], [-57.498371, -18.174188], [-57.734558, -17.552468], [-58.280804, -17.27171], [-58.388058, -16.877109], [-58.24122, -16.299573], [-60.15839, -16.258284], [-60.542966, -15.09391], [-60.251149, -15.077219], [-60.264326, -14.645979], [-60.459198, -14.354007], [-60.503304, -13.775955], [-61.084121, -13.479384], [-61.713204, -13.489202], [-62.127081, -13.198781], [-62.80306, -13.000653], [-63.196499, -12.627033], [-64.316353, -12.461978], [-65.402281, -11.56627], [-65.321899, -10.895872], [-65.444837, -10.511451], [-65.338435, -9.761988], [-66.646908, -9.931331], [-67.173801, -10.306812], [-68.048192, -10.712059], [-68.271254, -11.014521], [-68.786158, -11.03638], [-69.529678, -10.951734], [-70.093752, -11.123972], [-70.548686, -11.009147], [-70.481894, -9.490118], [-71.302412, -10.079436], [-72.184891, -10.053598], [-72.563033, -9.520194], [-73.226713, -9.462213], [-73.015383, -9.032833], [-73.571059, -8.424447], [-73.987235, -7.52383], [-73.723401, -7.340999], [-73.724487, -6.918595], [-73.120027, -6.629931], [-73.219711, -6.089189], [-72.964507, -5.741251], [-72.891928, -5.274561], [-71.748406, -4.593983], [-70.928843, -4.401591], [-70.794769, -4.251265], [-69.893635, -4.298187], [-69.444102, -1.556287], [-69.420486, -1.122619], [-69.577065, -0.549992], [-70.020656, -0.185156], [-70.015566, 0.541414], [-69.452396, 0.706159], [-69.252434, 0.602651], [-69.218638, 0.985677], [-69.804597, 1.089081], [-69.816973, 1.714805], [-67.868565, 1.692455], [-67.53781, 2.037163], [-67.259998, 1.719999], [-67.065048, 1.130112], [-66.876326, 1.253361], [-66.325765, 0.724452], [-65.548267, 0.789254], [-65.354713, 1.095282], [-64.611012, 1.328731], [-64.199306, 1.492855], [-64.083085, 1.916369], [-63.368788, 2.2009], [-63.422867, 2.411068], [-64.269999, 2.497006], [-64.408828, 3.126786], [-64.368494, 3.79721], [-64.816064, 4.056445], [-64.628659, 4.148481], [-63.888343, 4.02053], [-63.093198, 3.770571], [-62.804533, 4.006965], [-62.08543, 4.162124], [-60.966893, 4.536468], [-60.601179, 4.918098], [-60.733574, 5.200277], [-60.213683, 5.244486], [-59.980959, 5.014061], [-60.111002, 4.574967], [-59.767406, 4.423503], [-59.53804, 3.958803], [-59.815413, 3.606499], [-59.974525, 2.755233], [-59.718546, 2.24963], [-59.646044, 1.786894], [-59.030862, 1.317698], [-58.540013, 1.268088], [-58.429477, 1.463942], [-58.11345, 1.507195], [-57.660971, 1.682585], [-57.335823, 1.948538], [-56.782704, 1.863711], [-56.539386, 1.899523], [-55.995698, 1.817667], [-55.9056, 2.021996], [-56.073342, 2.220795], [-55.973322, 2.510364], [-55.569755, 2.421506], [-55.097587, 2.523748], [-54.524754, 2.311849], [-54.088063, 2.105557], [-53.778521, 2.376703], [-53.554839, 2.334897], [-53.418465, 2.053389], [-52.939657, 2.124858], [-52.556425, 2.504705], [-52.249338, 3.241094], [-51.657797, 4.156232], [-51.317146, 4.203491], [-51.069771, 3.650398], [-50.508875, 1.901564], [-49.974076, 1.736483], [-49.947101, 1.04619], [-50.699251, 0.222984], [-50.388211, -0.078445], [-48.620567, -0.235489], [-48.584497, -1.237805], [-47.824956, -0.581618], [-46.566584, -0.941028], [-44.905703, -1.55174], [-44.417619, -2.13775], [-44.581589, -2.691308], [-43.418791, -2.38311], [-41.472657, -2.912018], [-39.978665, -2.873054], [-38.500383, -3.700652], [-37.223252, -4.820946], [-36.452937, -5.109404], [-35.597796, -5.149504], [-35.235389, -5.464937], [-34.89603, -6.738193], [-34.729993, -7.343221], [-35.128212, -8.996401], [-35.636967, -9.649282], [-37.046519, -11.040721], [-37.683612, -12.171195], [-38.423877, -13.038119], [-38.673887, -13.057652], [-38.953276, -13.79337], [-38.882298, -15.667054], [-39.161092, -17.208407], [-39.267339, -17.867746], [-39.583521, -18.262296], [-39.760823, -19.599113], [-40.774741, -20.904512], [-40.944756, -21.937317], [-41.754164, -22.370676], [-41.988284, -22.97007], [-43.074704, -22.967693], [-44.647812, -23.351959], [-45.352136, -23.796842], [-46.472093, -24.088969], [-47.648972, -24.885199], [-48.495458, -25.877025], [-48.641005, -26.623698], [-48.474736, -27.175912], [-48.66152, -28.186135], [-48.888457, -28.674115], [-49.587329, -29.224469], [-50.696874, -30.984465], [-51.576226, -31.777698], [-52.256081, -32.24537], [-52.7121, -33.196578], [-53.373662, -33.768378], [-53.650544, -33.202004], [-53.209589, -32.727666], [-53.787952, -32.047243], [-54.572452, -31.494511], [-55.60151, -30.853879], [-55.973245, -30.883076], [-56.976026, -30.109686], [-57.625133, -30.216295]]]}},
  {type: "Feature", id: "BRN", properties: {name: "Brunei"}, geometry: {type: "Polygon", coordinates: [[[114.204017, 4.525874], [114.599961, 4.900011], [115.45071, 5.44773], [115.4057, 4.955228], [115.347461, 4.316636], [114.869557, 4.348314], [114.659596, 4.007637], [114.204017, 4.525874]]]}},
  {type: "Feature", id: "BTN", properties: {name: "Bhutan"}, geometry: {type: "Polygon", coordinates: [[[91.696657, 27.771742], [92.103712, 27.452614], [92.033484, 26.83831], [91.217513, 26.808648], [90.373275, 26.875724], [89.744528, 26.719403], [88.835643, 27.098966], [88.814248, 27.299316], [89.47581, 28.042759], [90.015829, 28.296439], [90.730514, 28.064954], [91.258854, 28.040614], [91.696657, 27.771742]]]}},
  {type: "Feature", id: "BWA", properties: {name: "Botswana"}, geometry: {type: "Polygon", coordinates: [[[25.649163, -18.536026], [25.850391, -18.714413], [26.164791, -19.293086], [27.296505, -20.39152], [27.724747, -20.499059], [27.727228, -20.851802], [28.02137, -21.485975], [28.794656, -21.639454], [29.432188, -22.091313], [28.017236, -22.827754], [27.11941, -23.574323], [26.786407, -24.240691], [26.485753, -24.616327], [25.941652, -24.696373], [25.765849, -25.174845], [25.664666, -25.486816], [25.025171, -25.71967], [24.211267, -25.670216], [23.73357, -25.390129], [23.312097, -25.26869], [22.824271, -25.500459], [22.579532, -25.979448], [22.105969, -26.280256], [21.605896, -26.726534], [20.889609, -26.828543], [20.66647, -26.477453], [20.758609, -25.868136], [20.165726, -24.917962], [19.895768, -24.76779], [19.895458, -21.849157], [20.881134, -21.814327], [20.910641, -18.252219], [21.65504, -18.219146], [23.196858, -17.869038], [23.579006, -18.281261], [24.217365, -17.889347], [24.520705, -17.887125], [25.084443, -17.661816], [25.264226, -17.73654], [25.649163, -18.536026]]]}},
  {type: "Feature", id: "CAF", properties: {name: "Central African Republic"}, geometry: {type: "Polygon", coordinates: [[[15.27946, 7.421925], [16.106232, 7.497088], [16.290562, 7.754307], [16.456185, 7.734774], [16.705988, 7.508328], [17.96493, 7.890914], [18.389555, 8.281304], [18.911022, 8.630895], [18.81201, 8.982915], [19.094008, 9.074847], [20.059685, 9.012706], [21.000868, 9.475985], [21.723822, 10.567056], [22.231129, 10.971889], [22.864165, 11.142395], [22.977544, 10.714463], [23.554304, 10.089255], [23.55725, 9.681218], [23.394779, 9.265068], [23.459013, 8.954286], [23.805813, 8.666319], [24.567369, 8.229188], [25.114932, 7.825104], [25.124131, 7.500085], [25.796648, 6.979316], [26.213418, 6.546603], [26.465909, 5.946717], [27.213409, 5.550953], [27.374226, 5.233944], [27.044065, 5.127853], [26.402761, 5.150875], [25.650455, 5.256088], [25.278798, 5.170408], [25.128833, 4.927245], [24.805029, 4.897247], [24.410531, 5.108784], [23.297214, 4.609693], [22.84148, 4.710126], [22.704124, 4.633051], [22.405124, 4.02916], [21.659123, 4.224342], [20.927591, 4.322786], [20.290679, 4.691678], [19.467784, 5.031528], [18.932312, 4.709506], [18.542982, 4.201785], [18.453065, 3.504386], [17.8099, 3.560196], [17.133042, 3.728197], [16.537058, 3.198255], [16.012852, 2.26764], [15.907381, 2.557389], [15.862732, 3.013537], [15.405396, 3.335301], [15.03622, 3.851367], [14.950953, 4.210389], [14.478372, 4.732605], [14.558936, 5.030598], [14.459407, 5.451761], [14.53656, 6.226959], [14.776545, 6.408498], [15.27946, 7.421925]]]}},
  {type: "Feature", id: "CAN", properties: {name: "Canada"}, geometry: {type: "MultiPolygon", coordinates: [[[[-63.6645, 46.55001], [-62.9393, 46.41587], [-62.01208, 46.44314], [-62.50391, 46.03339], [-62.87433, 45.96818], [-64.1428, 46.39265], [-64.39261, 46.72747], [-64.01486, 47.03601], [-63.6645, 46.55001]]], [[[-61.806305, 49.10506], [-62.29318, 49.08717], [-63.58926, 49.40069], [-64.51912, 49.87304], [-64.17322, 49.95718], [-62.85829, 49.70641], [-61.835585, 49.28855], [-61.806305, 49.10506]]], [[[-123.510002, 48.510011], [-124.012891, 48.370846], [-125.655013, 48.825005], [-125.954994, 49.179996], [-126.850004, 49.53], [-127.029993, 49.814996], [-128.059336, 49.994959], [-128.444584, 50.539138], [-128.358414, 50.770648], [-127.308581, 50.552574], [-126.695001, 50.400903], [-125.755007, 50.295018], [-125.415002, 49.950001], [-124.920768, 49.475275], [-123.922509, 49.062484], [-123.510002, 48.510011]]], [[[-56.134036, 50.68701], [-56.795882, 49.812309], [-56.143105, 50.150117], [-55.471492, 49.935815], [-55.822401, 49.587129], [-54.935143, 49.313011], [-54.473775, 49.556691], [-53.476549, 49.249139], [-53.786014, 48.516781], [-53.086134, 48.687804], [-52.958648, 48.157164], [-52.648099, 47.535548], [-53.069158, 46.655499], [-53.521456, 46.618292], [-54.178936, 46.807066], [-53.961869, 47.625207], [-54.240482, 47.752279], [-55.400773, 46.884994], [-55.997481, 46.91972], [-55.291219, 47.389562], [-56.250799, 47.632545], [-57.325229, 47.572807], [-59.266015, 47.603348], [-59.419494, 47.899454], [-58.796586, 48.251525], [-59.231625, 48.523188], [-58.391805, 49.125581], [-57.35869, 50.718274], [-56.73865, 51.287438], [-55.870977, 51.632094], [-55.406974, 51.588273], [-55.600218, 51.317075], [-56.134036, 50.68701]]], [[[-132.710008, 54.040009], [-131.74999, 54.120004], [-132.04948, 52.984621], [-131.179043, 52.180433], [-131.57783, 52.182371], [-132.180428, 52.639707], [-132.549992, 53.100015], [-133.054611, 53.411469], [-133.239664, 53.85108], [-133.180004, 54.169975], [-132.710008, 54.040009]]], [[[-79.26582, 62.158675], [-79.65752, 61.63308], [-80.09956, 61.7181], [-80.36215, 62.01649], [-80.315395, 62.085565], [-79.92939, 62.3856], [-79.52002, 62.36371], [-79.26582, 62.158675]]], [[[-81.89825, 62.7108], [-83.06857, 62.15922], [-83.77462, 62.18231], [-83.99367, 62.4528], [-83.25048, 62.91409], [-81.87699, 62.90458], [-81.89825, 62.7108]]], [[[-85.161308, 65.657285], [-84.975764, 65.217518], [-84.464012, 65.371772], [-83.882626, 65.109618], [-82.787577, 64.766693], [-81.642014, 64.455136], [-81.55344, 63.979609], [-80.817361, 64.057486], [-80.103451, 63.725981], [-80.99102, 63.411246], [-82.547178, 63.651722], [-83.108798, 64.101876], [-84.100417, 63.569712], [-85.523405, 63.052379], [-85.866769, 63.637253], [-87.221983, 63.541238], [-86.35276, 64.035833], [-86.224886, 64.822917], [-85.883848, 65.738778], [-85.161308, 65.657285]]], [[[-75.86588, 67.14886], [-76.98687, 67.09873], [-77.2364, 67.58809], [-76.81166, 68.14856], [-75.89521, 68.28721], [-75.1145, 68.01036], [-75.10333, 67.58202], [-75.21597, 67.44425], [-75.86588, 67.14886]]], [[[-95.647681, 69.10769], [-96.269521, 68.75704], [-97.617401, 69.06003], [-98.431801, 68.9507], [-99.797401, 69.40003], [-98.917401, 69.71003], [-98.218261, 70.14354], [-97.157401, 69.86003], [-96.557401, 69.68003], [-96.257401, 69.49003], [-95.647681, 69.10769]]], [[[-90.5471, 69.49766], [-90.55151, 68.47499], [-89.21515, 69.25873], [-88.01966, 68.61508], [-88.31749, 67.87338], [-87.35017, 67.19872], [-86.30607, 67.92146], [-85.57664, 68.78456], [-85.52197, 69.88211], [-84.10081, 69.80539], [-82.62258, 69.65826], [-81.28043, 69.16202], [-81.2202, 68.66567], [-81.96436, 68.13253], [-81.25928, 67.59716], [-81.38653, 67.11078], [-83.34456, 66.41154], [-84.73542, 66.2573], [-85.76943, 66.55833], [-86.0676, 66.05625], [-87.03143, 65.21297], [-87.32324, 64.77563], [-88.48296, 64.09897], [-89.91444, 64.03273], [-90.70398, 63.61017], [-90.77004, 62.96021], [-91.93342, 62.83508], [-93.15698, 62.02469], [-94.24153, 60.89865], [-94.62931, 60.11021], [-94.6846, 58.94882], [-93.21502, 58.78212], [-92.76462, 57.84571], [-92.29703, 57.08709], [-90.89769, 57.28468], [-89.03953, 56.85172], [-88.03978, 56.47162], [-87.32421, 55.99914], [-86.07121, 55.72383], [-85.01181, 55.3026], [-83.36055, 55.24489], [-82.27285, 55.14832], [-82.4362, 54.28227], [-82.12502, 53.27703], [-81.40075, 52.15788], [-79.91289, 51.20842], [-79.14301, 51.53393], [-78.60191, 52.56208], [-79.12421, 54.14145], [-79.82958, 54.66772], [-78.22874, 55.13645], [-77.0956, 55.83741], [-76.54137, 56.53423], [-76.62319, 57.20263], [-77.30226, 58.05209], [-78.51688, 58.80458], [-77.33676, 59.85261], [-77.77272, 60.75788], [-78.10687, 62.31964], [-77.41067, 62.55053], [-75.69621, 62.2784], [-74.6682, 62.18111], [-73.83988, 62.4438], [-72.90853, 62.10507], [-71.67708, 61.52535], [-71.37369, 61.13717], [-69.59042, 61.06141], [-69.62033, 60.22125], [-69.2879, 58.95736], [-68.37455, 58.80106], [-67.64976, 58.21206], [-66.20178, 58.76731], [-65.24517, 59.87071], [-64.58352, 60.33558], [-63.80475, 59.4426], [-62.50236, 58.16708], [-61.39655, 56.96745], [-61.79866, 56.33945], [-60.46853, 55.77548], [-59.56962, 55.20407], [-57.97508, 54.94549], [-57.3332, 54.6265], [-56.93689, 53.78032], [-56.15811, 53.64749], [-55.75632, 53.27036], [-55.68338, 52.14664], [-56.40916, 51.7707], [-57.12691, 51.41972], [-58.77482, 51.0643], [-60.03309, 50.24277], [-61.72366, 50.08046], [-63.86251, 50.29099], [-65.36331, 50.2982], [-66.39905, 50.22897], [-67.23631, 49.51156], [-68.51114, 49.06836], [-69.95362, 47.74488], [-71.10458, 46.82171], [-70.25522, 46.98606], [-68.65, 48.3], [-66.55243, 49.1331], [-65.05626, 49.23278], [-64.17099, 48.74248], [-65.11545, 48.07085], [-64.79854, 46.99297], [-64.47219, 46.23849], [-63.17329, 45.73902], [-61.52072, 45.88377], [-60.51815, 47.00793], [-60.4486, 46.28264], [-59.80287, 45.9204], [-61.03988, 45.26525], [-63.25471, 44.67014], [-64.24656, 44.26553], [-65.36406, 43.54523], [-66.1234, 43.61867], [-66.16173, 44.46512], [-64.42549, 45.29204], [-66.02605, 45.25931], [-67.13741, 45.13753], [-67.79134, 45.70281], [-67.79046, 47.06636], [-68.23444, 47.35486], [-68.905, 47.185], [-69.237216, 47.447781], [-69.99997, 46.69307], [-70.305, 45.915], [-70.66, 45.46], [-71.08482, 45.30524], [-71.405, 45.255], [-71.50506, 45.0082], [-73.34783, 45.00738], [-74.867, 45.00048], [-75.31821, 44.81645], [-76.375, 44.09631], [-76.5, 44.018459], [-76.820034, 43.628784], [-77.737885, 43.629056], [-78.72028, 43.625089], [-79.171674, 43.466339], [-79.01, 43.27], [-78.92, 42.965], [-78.939362, 42.863611], [-80.247448, 42.3662], [-81.277747, 42.209026], [-82.439278, 41.675105], [-82.690089, 41.675105], [-83.02981, 41.832796], [-83.142, 41.975681], [-83.12, 42.08], [-82.9, 42.43], [-82.43, 42.98], [-82.137642, 43.571088], [-82.337763, 44.44], [-82.550925, 45.347517], [-83.592851, 45.816894], [-83.469551, 45.994686], [-83.616131, 46.116927], [-83.890765, 46.116927], [-84.091851, 46.275419], [-84.14212, 46.512226], [-84.3367, 46.40877], [-84.6049, 46.4396], [-84.543749, 46.538684], [-84.779238, 46.637102], [-84.87608, 46.900083], [-85.652363, 47.220219], [-86.461991, 47.553338], [-87.439793, 47.94], [-88.378114, 48.302918], [-89.272917, 48.019808], [-89.6, 48.01], [-90.83, 48.27], [-91.64, 48.14], [-92.61, 48.45], [-93.63087, 48.60926], [-94.32914, 48.67074], [-94.64, 48.84], [-94.81758, 49.38905], [-95.15609, 49.38425], [-95.15907, 49], [-97.22872, 49.0007], [-100.65, 49], [-104.04826, 48.99986], [-107.05, 49], [-110.05, 49], [-113, 49], [-116.04818, 49], [-117.03121, 49], [-120, 49], [-122.84, 49], [-122.97421, 49.002538], [-124.91024, 49.98456], [-125.62461, 50.41656], [-127.43561, 50.83061], [-127.99276, 51.71583], [-127.85032, 52.32961], [-129.12979, 52.75538], [-129.30523, 53.56159], [-130.51497, 54.28757], [-130.53611, 54.80278], [-129.98, 55.285], [-130.00778, 55.91583], [-131.70781, 56.55212], [-132.73042, 57.69289], [-133.35556, 58.41028], [-134.27111, 58.86111], [-134.945, 59.27056], [-135.47583, 59.78778], [-136.47972, 59.46389], [-137.4525, 58.905], [-138.34089, 59.56211], [-139.039, 60], [-140.013, 60.27682], [-140.99778, 60.30639], [-140.9925, 66.00003], [-140.986, 69.712], [-139.12052, 69.47102], [-137.54636, 68.99002], [-136.50358, 68.89804], [-135.62576, 69.31512], [-134.41464, 69.62743], [-132.92925, 69.50534], [-131.43136, 69.94451], [-129.79471, 70.19369], [-129.10773, 69.77927], [-128.36156, 70.01286], [-128.13817, 70.48384], [-127.44712, 70.37721], [-125.75632, 69.48058], [-124.42483, 70.1584], [-124.28968, 69.39969], [-123.06108, 69.56372], [-122.6835, 69.85553], [-121.47226, 69.79778], [-119.94288, 69.37786], [-117.60268, 69.01128], [-116.22643, 68.84151], [-115.2469, 68.90591], [-113.89794, 68.3989], [-115.30489, 67.90261], [-113.49727, 67.68815], [-110.798, 67.80612], [-109.94619, 67.98104], [-108.8802, 67.38144], [-107.79239, 67.88736], [-108.81299, 68.31164], [-108.16721, 68.65392], [-106.95, 68.7], [-106.15, 68.8], [-105.34282, 68.56122], [-104.33791, 68.018], [-103.22115, 68.09775], [-101.45433, 67.64689], [-99.90195, 67.80566], [-98.4432, 67.78165], [-98.5586, 68.40394], [-97.66948, 68.57864], [-96.11991, 68.23939], [-96.12588, 67.29338], [-95.48943, 68.0907], [-94.685, 68.06383], [-94.23282, 69.06903], [-95.30408, 69.68571], [-96.47131, 70.08976], [-96.39115, 71.19482], [-95.2088, 71.92053], [-93.88997, 71.76015], [-92.87818, 71.31869], [-91.51964, 70.19129], [-92.40692, 69.69997], [-90.5471, 69.49766]]], [[[-114.16717, 73.12145], [-114.66634, 72.65277], [-112.44102, 72.9554], [-111.05039, 72.4504], [-109.92035, 72.96113], [-109.00654, 72.63335], [-108.18835, 71.65089], [-107.68599, 72.06548], [-108.39639, 73.08953], [-107.51645, 73.23598], [-106.52259, 73.07601], [-105.40246, 72.67259], [-104.77484, 71.6984], [-104.46476, 70.99297], [-102.78537, 70.49776], [-100.98078, 70.02432], [-101.08929, 69.58447], [-102.73116, 69.50402], [-102.09329, 69.11962], [-102.43024, 68.75282], [-104.24, 68.91], [-105.96, 69.18], [-107.12254, 69.11922], [-109, 68.78], [-111.534149, 68.630059], [-113.3132, 68.53554], [-113.85496, 69.00744], [-115.22, 69.28], [-116.10794, 69.16821], [-117.34, 69.96], [-116.67473, 70.06655], [-115.13112, 70.2373], [-113.72141, 70.19237], [-112.4161, 70.36638], [-114.35, 70.6], [-116.48684, 70.52045], [-117.9048, 70.54056], [-118.43238, 70.9092], [-116.11311, 71.30918], [-117.65568, 71.2952], [-119.40199, 71.55859], [-118.56267, 72.30785], [-117.86642, 72.70594], [-115.18909, 73.31459], [-114.16717, 73.12145]]], [[[-104.5, 73.42], [-105.38, 72.76], [-106.94, 73.46], [-106.6, 73.6], [-105.26, 73.64], [-104.5, 73.42]]], [[[-76.34, 73.102685], [-76.251404, 72.826385], [-77.314438, 72.855545], [-78.39167, 72.876656], [-79.486252, 72.742203], [-79.775833, 72.802902], [-80.876099, 73.333183], [-80.833885, 73.693184], [-80.353058, 73.75972], [-78.064438, 73.651932], [-76.34, 73.102685]]], [[[-86.562179, 73.157447], [-85.774371, 72.534126], [-84.850112, 73.340278], [-82.31559, 73.750951], [-80.600088, 72.716544], [-80.748942, 72.061907], [-78.770639, 72.352173], [-77.824624, 72.749617], [-75.605845, 72.243678], [-74.228616, 71.767144], [-74.099141, 71.33084], [-72.242226, 71.556925], [-71.200015, 70.920013], [-68.786054, 70.525024], [-67.91497, 70.121948], [-66.969033, 69.186087], [-68.805123, 68.720198], [-66.449866, 68.067163], [-64.862314, 67.847539], [-63.424934, 66.928473], [-61.851981, 66.862121], [-62.163177, 66.160251], [-63.918444, 64.998669], [-65.14886, 65.426033], [-66.721219, 66.388041], [-68.015016, 66.262726], [-68.141287, 65.689789], [-67.089646, 65.108455], [-65.73208, 64.648406], [-65.320168, 64.382737], [-64.669406, 63.392927], [-65.013804, 62.674185], [-66.275045, 62.945099], [-68.783186, 63.74567], [-67.369681, 62.883966], [-66.328297, 62.280075], [-66.165568, 61.930897], [-68.877367, 62.330149], [-71.023437, 62.910708], [-72.235379, 63.397836], [-71.886278, 63.679989], [-73.378306, 64.193963], [-74.834419, 64.679076], [-74.818503, 64.389093], [-77.70998, 64.229542], [-78.555949, 64.572906], [-77.897281, 65.309192], [-76.018274, 65.326969], [-73.959795, 65.454765], [-74.293883, 65.811771], [-73.944912, 66.310578], [-72.651167, 67.284576], [-72.92606, 67.726926], [-73.311618, 68.069437], [-74.843307, 68.554627], [-76.869101, 68.894736], [-76.228649, 69.147769], [-77.28737, 69.76954], [-78.168634, 69.826488], [-78.957242, 70.16688], [-79.492455, 69.871808], [-81.305471, 69.743185], [-84.944706, 69.966634], [-87.060003, 70.260001], [-88.681713, 70.410741], [-89.51342, 70.762038], [-88.467721, 71.218186], [-89.888151, 71.222552], [-90.20516, 72.235074], [-89.436577, 73.129464], [-88.408242, 73.537889], [-85.826151, 73.803816], [-86.562179, 73.157447]]], [[[-100.35642, 73.84389], [-99.16387, 73.63339], [-97.38, 73.76], [-97.12, 73.47], [-98.05359, 72.99052], [-96.54, 72.56], [-96.72, 71.66], [-98.35966, 71.27285], [-99.32286, 71.35639], [-100.01482, 71.73827], [-102.5, 72.51], [-102.48, 72.83], [-100.43836, 72.70588], [-101.54, 73.36], [-100.35642, 73.84389]]], [[[-93.196296, 72.771992], [-94.269047, 72.024596], [-95.409856, 72.061881], [-96.033745, 72.940277], [-96.018268, 73.43743], [-95.495793, 73.862417], [-94.503658, 74.134907], [-92.420012, 74.100025], [-90.509793, 73.856732], [-92.003965, 72.966244], [-93.196296, 72.771992]]], [[[-120.46, 71.383602], [-123.09219, 70.90164], [-123.62, 71.34], [-125.928949, 71.868688], [-125.5, 72.292261], [-124.80729, 73.02256], [-123.94, 73.68], [-124.91775, 74.29275], [-121.53788, 74.44893], [-120.10978, 74.24135], [-117.55564, 74.18577], [-116.58442, 73.89607], [-115.51081, 73.47519], [-116.76794, 73.22292], [-119.22, 72.52], [-120.46, 71.82], [-120.46, 71.383602]]], [[[-93.612756, 74.979997], [-94.156909, 74.592347], [-95.608681, 74.666864], [-96.820932, 74.927623], [-96.288587, 75.377828], [-94.85082, 75.647218], [-93.977747, 75.29649], [-93.612756, 74.979997]]], [[[-98.5, 76.72], [-97.735585, 76.25656], [-97.704415, 75.74344], [-98.16, 75], [-99.80874, 74.89744], [-100.88366, 75.05736], [-100.86292, 75.64075], [-102.50209, 75.5638], [-102.56552, 76.3366], [-101.48973, 76.30537], [-99.98349, 76.64634], [-98.57699, 76.58859], [-98.5, 76.72]]], [[[-108.21141, 76.20168], [-107.81943, 75.84552], [-106.92893, 76.01282], [-105.881, 75.9694], [-105.70498, 75.47951], [-106.31347, 75.00527], [-109.7, 74.85], [-112.22307, 74.41696], [-113.74381, 74.39427], [-113.87135, 74.72029], [-111.79421, 75.1625], [-116.31221, 75.04343], [-117.7104, 75.2222], [-116.34602, 76.19903], [-115.40487, 76.47887], [-112.59056, 76.14134], [-110.81422, 75.54919], [-109.0671, 75.47321], [-110.49726, 76.42982], [-109.5811, 76.79417], [-108.54859, 76.67832], [-108.21141, 76.20168]]], [[[-94.684086, 77.097878], [-93.573921, 76.776296], [-91.605023, 76.778518], [-90.741846, 76.449597], [-90.969661, 76.074013], [-89.822238, 75.847774], [-89.187083, 75.610166], [-87.838276, 75.566189], [-86.379192, 75.482421], [-84.789625, 75.699204], [-82.753445, 75.784315], [-81.128531, 75.713983], [-80.057511, 75.336849], [-79.833933, 74.923127], [-80.457771, 74.657304], [-81.948843, 74.442459], [-83.228894, 74.564028], [-86.097452, 74.410032], [-88.15035, 74.392307], [-89.764722, 74.515555], [-92.422441, 74.837758], [-92.768285, 75.38682], [-92.889906, 75.882655], [-93.893824, 76.319244], [-95.962457, 76.441381], [-97.121379, 76.751078], [-96.745123, 77.161389], [-94.684086, 77.097878]]], [[[-116.198587, 77.645287], [-116.335813, 76.876962], [-117.106051, 76.530032], [-118.040412, 76.481172], [-119.899318, 76.053213], [-121.499995, 75.900019], [-122.854924, 76.116543], [-122.854925, 76.116543], [-121.157535, 76.864508], [-119.103939, 77.51222], [-117.570131, 77.498319], [-116.198587, 77.645287]]], [[[-93.840003, 77.519997], [-94.295608, 77.491343], [-96.169654, 77.555111], [-96.436304, 77.834629], [-94.422577, 77.820005], [-93.720656, 77.634331], [-93.840003, 77.519997]]], [[[-110.186938, 77.697015], [-112.051191, 77.409229], [-113.534279, 77.732207], [-112.724587, 78.05105], [-111.264443, 78.152956], [-109.854452, 77.996325], [-110.186938, 77.697015]]], [[[-109.663146, 78.601973], [-110.881314, 78.40692], [-112.542091, 78.407902], [-112.525891, 78.550555], [-111.50001, 78.849994], [-110.963661, 78.804441], [-109.663146, 78.601973]]], [[[-95.830295, 78.056941], [-97.309843, 77.850597], [-98.124289, 78.082857], [-98.552868, 78.458105], [-98.631984, 78.87193], [-97.337231, 78.831984], [-96.754399, 78.765813], [-95.559278, 78.418315], [-95.830295, 78.056941]]], [[[-100.060192, 78.324754], [-99.670939, 77.907545], [-101.30394, 78.018985], [-102.949809, 78.343229], [-105.176133, 78.380332], [-104.210429, 78.67742], [-105.41958, 78.918336], [-105.492289, 79.301594], [-103.529282, 79.165349], [-100.825158, 78.800462], [-100.060192, 78.324754]]], [[[-87.02, 79.66], [-85.81435, 79.3369], [-87.18756, 79.0393], [-89.03535, 78.28723], [-90.80436, 78.21533], [-92.87669, 78.34333], [-93.95116, 78.75099], [-93.93574, 79.11373], [-93.14524, 79.3801], [-94.974, 79.37248], [-96.07614, 79.70502], [-96.70972, 80.15777], [-96.01644, 80.60233], [-95.32345, 80.90729], [-94.29843, 80.97727], [-94.73542, 81.20646], [-92.40984, 81.25739], [-91.13289, 80.72345], [-89.45, 80.509322], [-87.81, 80.32], [-87.02, 79.66]]], [[[-68.5, 83.106322], [-65.82735, 83.02801], [-63.68, 82.9], [-61.85, 82.6286], [-61.89388, 82.36165], [-64.334, 81.92775], [-66.75342, 81.72527], [-67.65755, 81.50141], [-65.48031, 81.50657], [-67.84, 80.9], [-69.4697, 80.61683], [-71.18, 79.8], [-73.2428, 79.63415], [-73.88, 79.430162], [-76.90773, 79.32309], [-75.52924, 79.19766], [-76.22046, 79.01907], [-75.39345, 78.52581], [-76.34354, 78.18296], [-77.88851, 77.89991], [-78.36269, 77.50859], [-79.75951, 77.20968], [-79.61965, 76.98336], [-77.91089, 77.022045], [-77.88911, 76.777955], [-80.56125, 76.17812], [-83.17439, 76.45403], [-86.11184, 76.29901], [-87.6, 76.42], [-89.49068, 76.47239], [-89.6161, 76.95213], [-87.76739, 77.17833], [-88.26, 77.9], [-87.65, 77.970222], [-84.97634, 77.53873], [-86.34, 78.18], [-87.96192, 78.37181], [-87.15198, 78.75867], [-85.37868, 78.9969], [-85.09495, 79.34543], [-86.50734, 79.73624], [-86.93179, 80.25145], [-84.19844, 80.20836], [-83.408696, 80.1], [-81.84823, 80.46442], [-84.1, 80.58], [-87.59895, 80.51627], [-89.36663, 80.85569], [-90.2, 81.26], [-91.36786, 81.5531], [-91.58702, 81.89429], [-90.1, 82.085], [-88.93227, 82.11751], [-86.97024, 82.27961], [-85.5, 82.652273], [-84.260005, 82.6], [-83.18, 82.32], [-82.42, 82.86], [-81.1, 83.02], [-79.30664, 83.13056], [-76.25, 83.172059], [-75.71878, 83.06404], [-72.83153, 83.23324], [-70.665765, 83.169781], [-68.5, 83.106322]]]]}},
  {type: "Feature", id: "CHE", properties: {name: "Switzerland"}, geometry: {type: "Polygon", coordinates: [[[9.594226, 47.525058], [9.632932, 47.347601], [9.47997, 47.10281], [9.932448, 46.920728], [10.442701, 46.893546], [10.363378, 46.483571], [9.922837, 46.314899], [9.182882, 46.440215], [8.966306, 46.036932], [8.489952, 46.005151], [8.31663, 46.163642], [7.755992, 45.82449], [7.273851, 45.776948], [6.843593, 45.991147], [6.5001, 46.429673], [6.022609, 46.27299], [6.037389, 46.725779], [6.768714, 47.287708], [6.736571, 47.541801], [7.192202, 47.449766], [7.466759, 47.620582], [8.317301, 47.61358], [8.522612, 47.830828], [9.594226, 47.525058]]]}},
  {type: "Feature", id: "CHL", properties: {name: "Chile"}, geometry: {type: "MultiPolygon", coordinates: [[[[-68.63401, -52.63637], [-68.63335, -54.8695], [-67.56244, -54.87001], [-66.95992, -54.89681], [-67.29103, -55.30124], [-68.14863, -55.61183], [-68.639991, -55.580018], [-69.2321, -55.49906], [-69.95809, -55.19843], [-71.00568, -55.05383], [-72.2639, -54.49514], [-73.2852, -53.95752], [-74.66253, -52.83749], [-73.8381, -53.04743], [-72.43418, -53.7154], [-71.10773, -54.07433], [-70.59178, -53.61583], [-70.26748, -52.93123], [-69.34565, -52.5183], [-68.63401, -52.63637]]], [[[-68.219913, -21.494347], [-67.82818, -22.872919], [-67.106674, -22.735925], [-66.985234, -22.986349], [-67.328443, -24.025303], [-68.417653, -24.518555], [-68.386001, -26.185016], [-68.5948, -26.506909], [-68.295542, -26.89934], [-69.001235, -27.521214], [-69.65613, -28.459141], [-70.01355, -29.367923], [-69.919008, -30.336339], [-70.535069, -31.36501], [-70.074399, -33.09121], [-69.814777, -33.273886], [-69.817309, -34.193571], [-70.388049, -35.169688], [-70.364769, -36.005089], [-71.121881, -36.658124], [-71.118625, -37.576827], [-70.814664, -38.552995], [-71.413517, -38.916022], [-71.680761, -39.808164], [-71.915734, -40.832339], [-71.746804, -42.051386], [-72.148898, -42.254888], [-71.915424, -43.408565], [-71.464056, -43.787611], [-71.793623, -44.207172], [-71.329801, -44.407522], [-71.222779, -44.784243], [-71.659316, -44.973689], [-71.552009, -45.560733], [-71.917258, -46.884838], [-72.447355, -47.738533], [-72.331161, -48.244238], [-72.648247, -48.878618], [-73.415436, -49.318436], [-73.328051, -50.378785], [-72.975747, -50.74145], [-72.309974, -50.67701], [-72.329404, -51.425956], [-71.914804, -52.009022], [-69.498362, -52.142761], [-68.571545, -52.299444], [-69.461284, -52.291951], [-69.94278, -52.537931], [-70.845102, -52.899201], [-71.006332, -53.833252], [-71.429795, -53.856455], [-72.557943, -53.53141], [-73.702757, -52.835069], [-73.702757, -52.83507], [-74.946763, -52.262754], [-75.260026, -51.629355], [-74.976632, -51.043396], [-75.479754, -50.378372], [-75.608015, -48.673773], [-75.18277, -47.711919], [-74.126581, -46.939253], [-75.644395, -46.647643], [-74.692154, -45.763976], [-74.351709, -44.103044], [-73.240356, -44.454961], [-72.717804, -42.383356], [-73.3889, -42.117532], [-73.701336, -43.365776], [-74.331943, -43.224958], [-74.017957, -41.794813], [-73.677099, -39.942213], [-73.217593, -39.258689], [-73.505559, -38.282883], [-73.588061, -37.156285], [-73.166717, -37.12378], [-72.553137, -35.50884], [-71.861732, -33.909093], [-71.43845, -32.418899], [-71.668721, -30.920645], [-71.370083, -30.095682], [-71.489894, -28.861442], [-70.905124, -27.64038], [-70.724954, -25.705924], [-70.403966, -23.628997], [-70.091246, -21.393319], [-70.16442, -19.756468], [-70.372572, -18.347975], [-69.858444, -18.092694], [-69.590424, -17.580012], [-69.100247, -18.260125], [-68.966818, -18.981683], [-68.442225, -19.405068], [-68.757167, -20.372658], [-68.219913, -21.494347]]]]}},
  {type: "Feature", id: "CHN", properties: {name: "China"}, geometry: {type: "MultiPolygon", coordinates: [[[[110.339188, 18.678395], [109.47521, 18.197701], [108.655208, 18.507682], [108.626217, 19.367888], [109.119056, 19.821039], [110.211599, 20.101254], [110.786551, 20.077534], [111.010051, 19.69593], [110.570647, 19.255879], [110.339188, 18.678395]]], [[[127.657407, 49.76027], [129.397818, 49.4406], [130.582293, 48.729687], [130.987282, 47.790132], [132.506672, 47.78897], [133.373596, 48.183442], [135.026311, 48.47823], [134.500814, 47.57844], [134.112362, 47.212467], [133.769644, 46.116927], [133.097127, 45.144066], [131.883454, 45.321162], [131.025212, 44.967953], [131.288555, 44.11152], [131.144688, 42.92999], [130.633866, 42.903015], [130.640016, 42.395009], [129.994267, 42.985387], [129.596669, 42.424982], [128.052215, 41.994285], [128.208433, 41.466772], [127.343783, 41.503152], [126.869083, 41.816569], [126.182045, 41.107336], [125.079942, 40.569824], [124.265625, 39.928493], [122.86757, 39.637788], [122.131388, 39.170452], [121.054554, 38.897471], [121.585995, 39.360854], [121.376757, 39.750261], [122.168595, 40.422443], [121.640359, 40.94639], [120.768629, 40.593388], [119.639602, 39.898056], [119.023464, 39.252333], [118.042749, 39.204274], [117.532702, 38.737636], [118.059699, 38.061476], [118.87815, 37.897325], [118.911636, 37.448464], [119.702802, 37.156389], [120.823457, 37.870428], [121.711259, 37.481123], [122.357937, 37.454484], [122.519995, 36.930614], [121.104164, 36.651329], [120.637009, 36.11144], [119.664562, 35.609791], [119.151208, 34.909859], [120.227525, 34.360332], [120.620369, 33.376723], [121.229014, 32.460319], [121.908146, 31.692174], [121.891919, 30.949352], [121.264257, 30.676267], [121.503519, 30.142915], [122.092114, 29.83252], [121.938428, 29.018022], [121.684439, 28.225513], [121.125661, 28.135673], [120.395473, 27.053207], [119.585497, 25.740781], [118.656871, 24.547391], [117.281606, 23.624501], [115.890735, 22.782873], [114.763827, 22.668074], [114.152547, 22.22376], [113.80678, 22.54834], [113.241078, 22.051367], [111.843592, 21.550494], [110.785466, 21.397144], [110.444039, 20.341033], [109.889861, 20.282457], [109.627655, 21.008227], [109.864488, 21.395051], [108.522813, 21.715212], [108.05018, 21.55238], [107.04342, 21.811899], [106.567273, 22.218205], [106.725403, 22.794268], [105.811247, 22.976892], [105.329209, 23.352063], [104.476858, 22.81915], [103.504515, 22.703757], [102.706992, 22.708795], [102.170436, 22.464753], [101.652018, 22.318199], [101.80312, 21.174367], [101.270026, 21.201652], [101.180005, 21.436573], [101.150033, 21.849984], [100.416538, 21.558839], [99.983489, 21.742937], [99.240899, 22.118314], [99.531992, 22.949039], [98.898749, 23.142722], [98.660262, 24.063286], [97.60472, 23.897405], [97.724609, 25.083637], [98.671838, 25.918703], [98.712094, 26.743536], [98.68269, 27.508812], [98.246231, 27.747221], [97.911988, 28.335945], [97.327114, 28.261583], [96.248833, 28.411031], [96.586591, 28.83098], [96.117679, 29.452802], [95.404802, 29.031717], [94.56599, 29.277438], [93.413348, 28.640629], [92.503119, 27.896876], [91.696657, 27.771742], [91.258854, 28.040614], [90.730514, 28.064954], [90.015829, 28.296439], [89.47581, 28.042759], [88.814248, 27.299316], [88.730326, 28.086865], [88.120441, 27.876542], [86.954517, 27.974262], [85.82332, 28.203576], [85.011638, 28.642774], [84.23458, 28.839894], [83.898993, 29.320226], [83.337115, 29.463732], [82.327513, 30.115268], [81.525804, 30.422717], [81.111256, 30.183481], [79.721367, 30.882715], [78.738894, 31.515906], [78.458446, 32.618164], [79.176129, 32.48378], [79.208892, 32.994395], [78.811086, 33.506198], [78.912269, 34.321936], [77.837451, 35.49401], [76.192848, 35.898403], [75.896897, 36.666806], [75.158028, 37.133031], [74.980002, 37.41999], [74.829986, 37.990007], [74.864816, 38.378846], [74.257514, 38.606507], [73.928852, 38.505815], [73.675379, 39.431237], [73.960013, 39.660008], [73.822244, 39.893973], [74.776862, 40.366425], [75.467828, 40.562072], [76.526368, 40.427946], [76.904484, 41.066486], [78.187197, 41.185316], [78.543661, 41.582243], [80.11943, 42.123941], [80.25999, 42.349999], [80.18015, 42.920068], [80.866206, 43.180362], [79.966106, 44.917517], [81.947071, 45.317027], [82.458926, 45.53965], [83.180484, 47.330031], [85.16429, 47.000956], [85.720484, 47.452969], [85.768233, 48.455751], [86.598776, 48.549182], [87.35997, 49.214981], [87.751264, 49.297198], [88.013832, 48.599463], [88.854298, 48.069082], [90.280826, 47.693549], [90.970809, 46.888146], [90.585768, 45.719716], [90.94554, 45.286073], [92.133891, 45.115076], [93.480734, 44.975472], [94.688929, 44.352332], [95.306875, 44.241331], [95.762455, 43.319449], [96.349396, 42.725635], [97.451757, 42.74889], [99.515817, 42.524691], [100.845866, 42.663804], [101.83304, 42.514873], [103.312278, 41.907468], [104.522282, 41.908347], [104.964994, 41.59741], [106.129316, 42.134328], [107.744773, 42.481516], [109.243596, 42.519446], [110.412103, 42.871234], [111.129682, 43.406834], [111.829588, 43.743118], [111.667737, 44.073176], [111.348377, 44.457442], [111.873306, 45.102079], [112.436062, 45.011646], [113.463907, 44.808893], [114.460332, 45.339817], [115.985096, 45.727235], [116.717868, 46.388202], [117.421701, 46.672733], [118.874326, 46.805412], [119.66327, 46.69268], [119.772824, 47.048059], [118.866574, 47.74706], [118.064143, 48.06673], [117.295507, 47.697709], [116.308953, 47.85341], [115.742837, 47.726545], [115.485282, 48.135383], [116.191802, 49.134598], [116.678801, 49.888531], [117.879244, 49.510983], [119.288461, 50.142883], [119.279366, 50.582908], [120.18205, 51.643566], [120.738191, 51.964115], [120.725789, 52.516226], [120.177089, 52.753886], [121.003085, 53.251401], [122.245748, 53.431726], [123.571507, 53.458804], [125.068211, 53.161045], [125.946349, 52.792799], [126.564399, 51.784255], [126.939157, 51.353894], [127.287456, 50.739797], [127.657407, 49.76027]]]]}},
  {type: "Feature", id: "CIV", properties: {name: "Ivory Coast"}, geometry: {type: "Polygon", coordinates: [[[-2.856125, 4.994476], [-3.311084, 4.984296], [-4.00882, 5.179813], [-4.649917, 5.168264], [-5.834496, 4.993701], [-6.528769, 4.705088], [-7.518941, 4.338288], [-7.712159, 4.364566], [-7.635368, 5.188159], [-7.539715, 5.313345], [-7.570153, 5.707352], [-7.993693, 6.12619], [-8.311348, 6.193033], [-8.60288, 6.467564], [-8.385452, 6.911801], [-8.485446, 7.395208], [-8.439298, 7.686043], [-8.280703, 7.68718], [-8.221792, 8.123329], [-8.299049, 8.316444], [-8.203499, 8.455453], [-7.8321, 8.575704], [-8.079114, 9.376224], [-8.309616, 9.789532], [-8.229337, 10.12902], [-8.029944, 10.206535], [-7.89959, 10.297382], [-7.622759, 10.147236], [-6.850507, 10.138994], [-6.666461, 10.430811], [-6.493965, 10.411303], [-6.205223, 10.524061], [-6.050452, 10.096361], [-5.816926, 10.222555], [-5.404342, 10.370737], [-4.954653, 10.152714], [-4.779884, 9.821985], [-4.330247, 9.610835], [-3.980449, 9.862344], [-3.511899, 9.900326], [-2.827496, 9.642461], [-2.56219, 8.219628], [-2.983585, 7.379705], [-3.24437, 6.250472], [-2.810701, 5.389051], [-2.856125, 4.994476]]]}},
  {type: "Feature", id: "CMR", properties: {name: "Cameroon"}, geometry: {type: "Polygon", coordinates: [[[13.075822, 2.267097], [12.951334, 2.321616], [12.35938, 2.192812], [11.751665, 2.326758], [11.276449, 2.261051], [9.649158, 2.283866], [9.795196, 3.073404], [9.404367, 3.734527], [8.948116, 3.904129], [8.744924, 4.352215], [8.488816, 4.495617], [8.500288, 4.771983], [8.757533, 5.479666], [9.233163, 6.444491], [9.522706, 6.453482], [10.118277, 7.03877], [10.497375, 7.055358], [11.058788, 6.644427], [11.745774, 6.981383], [11.839309, 7.397042], [12.063946, 7.799808], [12.218872, 8.305824], [12.753672, 8.717763], [12.955468, 9.417772], [13.1676, 9.640626], [13.308676, 10.160362], [13.57295, 10.798566], [14.415379, 11.572369], [14.468192, 11.904752], [14.577178, 12.085361], [14.181336, 12.483657], [14.213531, 12.802035], [14.495787, 12.859396], [14.893386, 12.219048], [14.960152, 11.555574], [14.923565, 10.891325], [15.467873, 9.982337], [14.909354, 9.992129], [14.627201, 9.920919], [14.171466, 10.021378], [13.954218, 9.549495], [14.544467, 8.965861], [14.979996, 8.796104], [15.120866, 8.38215], [15.436092, 7.692812], [15.27946, 7.421925], [14.776545, 6.408498], [14.53656, 6.226959], [14.459407, 5.451761], [14.558936, 5.030598], [14.478372, 4.732605], [14.950953, 4.210389], [15.03622, 3.851367], [15.405396, 3.335301], [15.862732, 3.013537], [15.907381, 2.557389], [16.012852, 2.26764], [15.940919, 1.727673], [15.146342, 1.964015], [14.337813, 2.227875], [13.075822, 2.267097]]]}},
  {type: "Feature", id: "COD", properties: {name: "Democratic Republic of the Congo"}, geometry: {type: "Polygon", coordinates: [[[30.83386, 3.509166], [30.773347, 2.339883], [31.174149, 2.204465], [30.85267, 1.849396], [30.468508, 1.583805], [30.086154, 1.062313], [29.875779, 0.59738], [29.819503, -0.20531], [29.587838, -0.587406], [29.579466, -1.341313], [29.291887, -1.620056], [29.254835, -2.21511], [29.117479, -2.292211], [29.024926, -2.839258], [29.276384, -3.293907], [29.339998, -4.499983], [29.519987, -5.419979], [29.419993, -5.939999], [29.620032, -6.520015], [30.199997, -7.079981], [30.740015, -8.340007], [30.346086, -8.238257], [29.002912, -8.407032], [28.734867, -8.526559], [28.449871, -9.164918], [28.673682, -9.605925], [28.49607, -10.789884], [28.372253, -11.793647], [28.642417, -11.971569], [29.341548, -12.360744], [29.616001, -12.178895], [29.699614, -13.257227], [28.934286, -13.248958], [28.523562, -12.698604], [28.155109, -12.272481], [27.388799, -12.132747], [27.16442, -11.608748], [26.553088, -11.92444], [25.75231, -11.784965], [25.418118, -11.330936], [24.78317, -11.238694], [24.314516, -11.262826], [24.257155, -10.951993], [23.912215, -10.926826], [23.456791, -10.867863], [22.837345, -11.017622], [22.402798, -10.993075], [22.155268, -11.084801], [22.208753, -9.894796], [21.875182, -9.523708], [21.801801, -8.908707], [21.949131, -8.305901], [21.746456, -7.920085], [21.728111, -7.290872], [20.514748, -7.299606], [20.601823, -6.939318], [20.091622, -6.94309], [20.037723, -7.116361], [19.417502, -7.155429], [19.166613, -7.738184], [19.016752, -7.988246], [18.464176, -7.847014], [18.134222, -7.987678], [17.47297, -8.068551], [17.089996, -7.545689], [16.860191, -7.222298], [16.57318, -6.622645], [16.326528, -5.87747], [13.375597, -5.864241], [13.024869, -5.984389], [12.735171, -5.965682], [12.322432, -6.100092], [12.182337, -5.789931], [12.436688, -5.684304], [12.468004, -5.248362], [12.631612, -4.991271], [12.995517, -4.781103], [13.25824, -4.882957], [13.600235, -4.500138], [14.144956, -4.510009], [14.209035, -4.793092], [14.582604, -4.970239], [15.170992, -4.343507], [15.75354, -3.855165], [16.00629, -3.535133], [15.972803, -2.712392], [16.407092, -1.740927], [16.865307, -1.225816], [17.523716, -0.74383], [17.638645, -0.424832], [17.663553, -0.058084], [17.82654, 0.288923], [17.774192, 0.855659], [17.898835, 1.741832], [18.094276, 2.365722], [18.393792, 2.900443], [18.453065, 3.504386], [18.542982, 4.201785], [18.932312, 4.709506], [19.467784, 5.031528], [20.290679, 4.691678], [20.927591, 4.322786], [21.659123, 4.224342], [22.405124, 4.02916], [22.704124, 4.633051], [22.84148, 4.710126], [23.297214, 4.609693], [24.410531, 5.108784], [24.805029, 4.897247], [25.128833, 4.927245], [25.278798, 5.170408], [25.650455, 5.256088], [26.402761, 5.150875], [27.044065, 5.127853], [27.374226, 5.233944], [27.979977, 4.408413], [28.428994, 4.287155], [28.696678, 4.455077], [29.159078, 4.389267], [29.715995, 4.600805], [29.9535, 4.173699], [30.83386, 3.509166]]]}},
  {type: "Feature", id: "COG", properties: {name: "Republic of the Congo"}, geometry: {type: "Polygon", coordinates: [[[12.995517, -4.781103], [12.62076, -4.438023], [12.318608, -4.60623], [11.914963, -5.037987], [11.093773, -3.978827], [11.855122, -3.426871], [11.478039, -2.765619], [11.820964, -2.514161], [12.495703, -2.391688], [12.575284, -1.948511], [13.109619, -2.42874], [13.992407, -2.470805], [14.29921, -1.998276], [14.425456, -1.333407], [14.316418, -0.552627], [13.843321, 0.038758], [14.276266, 1.19693], [14.026669, 1.395677], [13.282631, 1.314184], [13.003114, 1.830896], [13.075822, 2.267097], [14.337813, 2.227875], [15.146342, 1.964015], [15.940919, 1.727673], [16.012852, 2.26764], [16.537058, 3.198255], [17.133042, 3.728197], [17.8099, 3.560196], [18.453065, 3.504386], [18.393792, 2.900443], [18.094276, 2.365722], [17.898835, 1.741832], [17.774192, 0.855659], [17.82654, 0.288923], [17.663553, -0.058084], [17.638645, -0.424832], [17.523716, -0.74383], [16.865307, -1.225816], [16.407092, -1.740927], [15.972803, -2.712392], [16.00629, -3.535133], [15.75354, -3.855165], [15.170992, -4.343507], [14.582604, -4.970239], [14.209035, -4.793092], [14.144956, -4.510009], [13.600235, -4.500138], [13.25824, -4.882957], [12.995517, -4.781103]]]}},
  {type: "Feature", id: "COL", properties: {name: "Colombia"}, geometry: {type: "Polygon", coordinates: [[[-75.373223, -0.152032], [-75.801466, 0.084801], [-76.292314, 0.416047], [-76.57638, 0.256936], [-77.424984, 0.395687], [-77.668613, 0.825893], [-77.855061, 0.809925], [-78.855259, 1.380924], [-78.990935, 1.69137], [-78.617831, 1.766404], [-78.662118, 2.267355], [-78.42761, 2.629556], [-77.931543, 2.696606], [-77.510431, 3.325017], [-77.12769, 3.849636], [-77.496272, 4.087606], [-77.307601, 4.667984], [-77.533221, 5.582812], [-77.318815, 5.845354], [-77.476661, 6.691116], [-77.881571, 7.223771], [-77.753414, 7.70984], [-77.431108, 7.638061], [-77.242566, 7.935278], [-77.474723, 8.524286], [-77.353361, 8.670505], [-76.836674, 8.638749], [-76.086384, 9.336821], [-75.6746, 9.443248], [-75.664704, 9.774003], [-75.480426, 10.61899], [-74.906895, 11.083045], [-74.276753, 11.102036], [-74.197223, 11.310473], [-73.414764, 11.227015], [-72.627835, 11.731972], [-72.238195, 11.95555], [-71.75409, 12.437303], [-71.399822, 12.376041], [-71.137461, 12.112982], [-71.331584, 11.776284], [-71.973922, 11.608672], [-72.227575, 11.108702], [-72.614658, 10.821975], [-72.905286, 10.450344], [-73.027604, 9.73677], [-73.304952, 9.152], [-72.78873, 9.085027], [-72.660495, 8.625288], [-72.439862, 8.405275], [-72.360901, 8.002638], [-72.479679, 7.632506], [-72.444487, 7.423785], [-72.198352, 7.340431], [-71.960176, 6.991615], [-70.674234, 7.087785], [-70.093313, 6.960376], [-69.38948, 6.099861], [-68.985319, 6.206805], [-68.265052, 6.153268], [-67.695087, 6.267318], [-67.34144, 6.095468], [-67.521532, 5.55687], [-67.744697, 5.221129], [-67.823012, 4.503937], [-67.621836, 3.839482], [-67.337564, 3.542342], [-67.303173, 3.318454], [-67.809938, 2.820655], [-67.447092, 2.600281], [-67.181294, 2.250638], [-66.876326, 1.253361], [-67.065048, 1.130112], [-67.259998, 1.719999], [-67.53781, 2.037163], [-67.868565, 1.692455], [-69.816973, 1.714805], [-69.804597, 1.089081], [-69.218638, 0.985677], [-69.252434, 0.602651], [-69.452396, 0.706159], [-70.015566, 0.541414], [-70.020656, -0.185156], [-69.577065, -0.549992], [-69.420486, -1.122619], [-69.444102, -1.556287], [-69.893635, -4.298187], [-70.394044, -3.766591], [-70.692682, -3.742872], [-70.047709, -2.725156], [-70.813476, -2.256865], [-71.413646, -2.342802], [-71.774761, -2.16979], [-72.325787, -2.434218], [-73.070392, -2.308954], [-73.659504, -1.260491], [-74.122395, -1.002833], [-74.441601, -0.53082], [-75.106625, -0.057205], [-75.373223, -0.152032]]]}},
  {type: "Feature", id: "CRI", properties: {name: "Costa Rica"}, geometry: {type: "Polygon", coordinates: [[[-82.965783, 8.225028], [-83.508437, 8.446927], [-83.711474, 8.656836], [-83.596313, 8.830443], [-83.632642, 9.051386], [-83.909886, 9.290803], [-84.303402, 9.487354], [-84.647644, 9.615537], [-84.713351, 9.908052], [-84.97566, 10.086723], [-84.911375, 9.795992], [-85.110923, 9.55704], [-85.339488, 9.834542], [-85.660787, 9.933347], [-85.797445, 10.134886], [-85.791709, 10.439337], [-85.659314, 10.754331], [-85.941725, 10.895278], [-85.71254, 11.088445], [-85.561852, 11.217119], [-84.903003, 10.952303], [-84.673069, 11.082657], [-84.355931, 10.999226], [-84.190179, 10.79345], [-83.895054, 10.726839], [-83.655612, 10.938764], [-83.40232, 10.395438], [-83.015677, 9.992982], [-82.546196, 9.566135], [-82.932891, 9.476812], [-82.927155, 9.07433], [-82.719183, 8.925709], [-82.868657, 8.807266], [-82.829771, 8.626295], [-82.913176, 8.423517], [-82.965783, 8.225028]]]}},
  {type: "Feature", id: "CUB", properties: {name: "Cuba"}, geometry: {type: "Polygon", coordinates: [[[-82.268151, 23.188611], [-81.404457, 23.117271], [-80.618769, 23.10598], [-79.679524, 22.765303], [-79.281486, 22.399202], [-78.347434, 22.512166], [-77.993296, 22.277194], [-77.146422, 21.657851], [-76.523825, 21.20682], [-76.19462, 21.220565], [-75.598222, 21.016624], [-75.67106, 20.735091], [-74.933896, 20.693905], [-74.178025, 20.284628], [-74.296648, 20.050379], [-74.961595, 19.923435], [-75.63468, 19.873774], [-76.323656, 19.952891], [-77.755481, 19.855481], [-77.085108, 20.413354], [-77.492655, 20.673105], [-78.137292, 20.739949], [-78.482827, 21.028613], [-78.719867, 21.598114], [-79.285, 21.559175], [-80.217475, 21.827324], [-80.517535, 22.037079], [-81.820943, 22.192057], [-82.169992, 22.387109], [-81.795002, 22.636965], [-82.775898, 22.68815], [-83.494459, 22.168518], [-83.9088, 22.154565], [-84.052151, 21.910575], [-84.54703, 21.801228], [-84.974911, 21.896028], [-84.447062, 22.20495], [-84.230357, 22.565755], [-83.77824, 22.788118], [-83.267548, 22.983042], [-82.510436, 23.078747], [-82.268151, 23.188611]]]}},
  {type: "Feature", id: "-99", properties: {name: "Northern Cyprus"}, geometry: {type: "Polygon", coordinates: [[[32.73178, 35.140026], [32.802474, 35.145504], [32.946961, 35.386703], [33.667227, 35.373216], [34.576474, 35.671596], [33.900804, 35.245756], [33.973617, 35.058506], [33.86644, 35.093595], [33.675392, 35.017863], [33.525685, 35.038688], [33.475817, 35.000345], [33.455922, 35.101424], [33.383833, 35.162712], [33.190977, 35.173125], [32.919572, 35.087833], [32.73178, 35.140026]]]}},
  {type: "Feature", id: "CYP", properties: {name: "Cyprus"}, geometry: {type: "Polygon", coordinates: [[[33.973617, 35.058506], [34.004881, 34.978098], [32.979827, 34.571869], [32.490296, 34.701655], [32.256667, 35.103232], [32.73178, 35.140026], [32.919572, 35.087833], [33.190977, 35.173125], [33.383833, 35.162712], [33.455922, 35.101424], [33.475817, 35.000345], [33.525685, 35.038688], [33.675392, 35.017863], [33.86644, 35.093595], [33.973617, 35.058506]]]}},
  {type: "Feature", id: "CZE", properties: {name: "Czech Republic"}, geometry: {type: "Polygon", coordinates: [[[16.960288, 48.596982], [16.499283, 48.785808], [16.029647, 48.733899], [15.253416, 49.039074], [14.901447, 48.964402], [14.338898, 48.555305], [13.595946, 48.877172], [13.031329, 49.307068], [12.521024, 49.547415], [12.415191, 49.969121], [12.240111, 50.266338], [12.966837, 50.484076], [13.338132, 50.733234], [14.056228, 50.926918], [14.307013, 51.117268], [14.570718, 51.002339], [15.016996, 51.106674], [15.490972, 50.78473], [16.238627, 50.697733], [16.176253, 50.422607], [16.719476, 50.215747], [16.868769, 50.473974], [17.554567, 50.362146], [17.649445, 50.049038], [18.392914, 49.988629], [18.853144, 49.49623], [18.554971, 49.495015], [18.399994, 49.315001], [18.170498, 49.271515], [18.104973, 49.043983], [17.913512, 48.996493], [17.886485, 48.903475], [17.545007, 48.800019], [17.101985, 48.816969], [16.960288, 48.596982]]]}},
  {type: "Feature", id: "DEU", properties: {name: "Germany"}, geometry: {type: "Polygon", coordinates: [[[9.921906, 54.983104], [9.93958, 54.596642], [10.950112, 54.363607], [10.939467, 54.008693], [11.956252, 54.196486], [12.51844, 54.470371], [13.647467, 54.075511], [14.119686, 53.757029], [14.353315, 53.248171], [14.074521, 52.981263], [14.4376, 52.62485], [14.685026, 52.089947], [14.607098, 51.745188], [15.016996, 51.106674], [14.570718, 51.002339], [14.307013, 51.117268], [14.056228, 50.926918], [13.338132, 50.733234], [12.966837, 50.484076], [12.240111, 50.266338], [12.415191, 49.969121], [12.521024, 49.547415], [13.031329, 49.307068], [13.595946, 48.877172], [13.243357, 48.416115], [12.884103, 48.289146], [13.025851, 47.637584], [12.932627, 47.467646], [12.62076, 47.672388], [12.141357, 47.703083], [11.426414, 47.523766], [10.544504, 47.566399], [10.402084, 47.302488], [9.896068, 47.580197], [9.594226, 47.525058], [8.522612, 47.830828], [8.317301, 47.61358], [7.466759, 47.620582], [7.593676, 48.333019], [8.099279, 49.017784], [6.65823, 49.201958], [6.18632, 49.463803], [6.242751, 49.902226], [6.043073, 50.128052], [6.156658, 50.803721], [5.988658, 51.851616], [6.589397, 51.852029], [6.84287, 52.22844], [7.092053, 53.144043], [6.90514, 53.482162], [7.100425, 53.693932], [7.936239, 53.748296], [8.121706, 53.527792], [8.800734, 54.020786], [8.572118, 54.395646], [8.526229, 54.962744], [9.282049, 54.830865], [9.921906, 54.983104]]]}},
  {type: "Feature", id: "DJI", properties: {name: "Djibouti"}, geometry: {type: "Polygon", coordinates: [[[43.081226, 12.699639], [43.317852, 12.390148], [43.286381, 11.974928], [42.715874, 11.735641], [43.145305, 11.46204], [42.776852, 10.926879], [42.55493, 11.10511], [42.31414, 11.0342], [41.75557, 11.05091], [41.73959, 11.35511], [41.66176, 11.6312], [42, 12.1], [42.35156, 12.54223], [42.779642, 12.455416], [43.081226, 12.699639]]]}},
  {type: "Feature", id: "DNK", properties: {name: "Denmark"}, geometry: {type: "MultiPolygon", coordinates: [[[[12.690006, 55.609991], [12.089991, 54.800015], [11.043543, 55.364864], [10.903914, 55.779955], [12.370904, 56.111407], [12.690006, 55.609991]]], [[[10.912182, 56.458621], [10.667804, 56.081383], [10.369993, 56.190007], [9.649985, 55.469999], [9.921906, 54.983104], [9.282049, 54.830865], [8.526229, 54.962744], [8.120311, 55.517723], [8.089977, 56.540012], [8.256582, 56.809969], [8.543438, 57.110003], [9.424469, 57.172066], [9.775559, 57.447941], [10.580006, 57.730017], [10.546106, 57.215733], [10.25, 56.890016], [10.369993, 56.609982], [10.912182, 56.458621]]]]}},
  {type: "Feature", id: "DOM", properties: {name: "Dominican Republic"}, geometry: {type: "Polygon", coordinates: [[[-71.712361, 19.714456], [-71.587304, 19.884911], [-70.806706, 19.880286], [-70.214365, 19.622885], [-69.950815, 19.648], [-69.76925, 19.293267], [-69.222126, 19.313214], [-69.254346, 19.015196], [-68.809412, 18.979074], [-68.317943, 18.612198], [-68.689316, 18.205142], [-69.164946, 18.422648], [-69.623988, 18.380713], [-69.952934, 18.428307], [-70.133233, 18.245915], [-70.517137, 18.184291], [-70.669298, 18.426886], [-70.99995, 18.283329], [-71.40021, 17.598564], [-71.657662, 17.757573], [-71.708305, 18.044997], [-71.687738, 18.31666], [-71.945112, 18.6169], [-71.701303, 18.785417], [-71.624873, 19.169838], [-71.712361, 19.714456]]]}},
  {type: "Feature", id: "DZA", properties: {name: "Algeria"}, geometry: {type: "Polygon", coordinates: [[[11.999506, 23.471668], [8.572893, 21.565661], [5.677566, 19.601207], [4.267419, 19.155265], [3.158133, 19.057364], [3.146661, 19.693579], [2.683588, 19.85623], [2.060991, 20.142233], [1.823228, 20.610809], [-1.550055, 22.792666], [-4.923337, 24.974574], [-8.6844, 27.395744], [-8.665124, 27.589479], [-8.66559, 27.656426], [-8.674116, 28.841289], [-7.059228, 29.579228], [-6.060632, 29.7317], [-5.242129, 30.000443], [-4.859646, 30.501188], [-3.690441, 30.896952], [-3.647498, 31.637294], [-3.06898, 31.724498], [-2.616605, 32.094346], [-1.307899, 32.262889], [-1.124551, 32.651522], [-1.388049, 32.864015], [-1.733455, 33.919713], [-1.792986, 34.527919], [-2.169914, 35.168396], [-1.208603, 35.714849], [-0.127454, 35.888662], [0.503877, 36.301273], [1.466919, 36.605647], [3.161699, 36.783905], [4.815758, 36.865037], [5.32012, 36.716519], [6.26182, 37.110655], [7.330385, 37.118381], [7.737078, 36.885708], [8.420964, 36.946427], [8.217824, 36.433177], [8.376368, 35.479876], [8.140981, 34.655146], [7.524482, 34.097376], [7.612642, 33.344115], [8.430473, 32.748337], [8.439103, 32.506285], [9.055603, 32.102692], [9.48214, 30.307556], [9.805634, 29.424638], [9.859998, 28.95999], [9.683885, 28.144174], [9.756128, 27.688259], [9.629056, 27.140953], [9.716286, 26.512206], [9.319411, 26.094325], [9.910693, 25.365455], [9.948261, 24.936954], [10.303847, 24.379313], [10.771364, 24.562532], [11.560669, 24.097909], [11.999506, 23.471668]]]}},
  {type: "Feature", id: "ECU", properties: {name: "Ecuador"}, geometry: {type: "Polygon", coordinates: [[[-80.302561, -3.404856], [-79.770293, -2.657512], [-79.986559, -2.220794], [-80.368784, -2.685159], [-80.967765, -2.246943], [-80.764806, -1.965048], [-80.933659, -1.057455], [-80.58337, -0.906663], [-80.399325, -0.283703], [-80.020898, 0.36034], [-80.09061, 0.768429], [-79.542762, 0.982938], [-78.855259, 1.380924], [-77.855061, 0.809925], [-77.668613, 0.825893], [-77.424984, 0.395687], [-76.57638, 0.256936], [-76.292314, 0.416047], [-75.801466, 0.084801], [-75.373223, -0.152032], [-75.233723, -0.911417], [-75.544996, -1.56161], [-76.635394, -2.608678], [-77.837905, -3.003021], [-78.450684, -3.873097], [-78.639897, -4.547784], [-79.205289, -4.959129], [-79.624979, -4.454198], [-80.028908, -4.346091], [-80.442242, -4.425724], [-80.469295, -4.059287], [-80.184015, -3.821162], [-80.302561, -3.404856]]]}},
  {type: "Feature", id: "EGY", properties: {name: "Egypt"}, geometry: {type: "Polygon", coordinates: [[[34.9226, 29.50133], [34.64174, 29.09942], [34.42655, 28.34399], [34.15451, 27.8233], [33.92136, 27.6487], [33.58811, 27.97136], [33.13676, 28.41765], [32.42323, 29.85108], [32.32046, 29.76043], [32.73482, 28.70523], [33.34876, 27.69989], [34.10455, 26.14227], [34.47387, 25.59856], [34.79507, 25.03375], [35.69241, 23.92671], [35.49372, 23.75237], [35.52598, 23.10244], [36.69069, 22.20485], [36.86623, 22], [32.9, 22], [29.02, 22], [25, 22], [25, 25.6825], [25, 29.238655], [24.70007, 30.04419], [24.95762, 30.6616], [24.80287, 31.08929], [25.16482, 31.56915], [26.49533, 31.58568], [27.45762, 31.32126], [28.45048, 31.02577], [28.91353, 30.87005], [29.68342, 31.18686], [30.09503, 31.4734], [30.97693, 31.55586], [31.68796, 31.4296], [31.96041, 30.9336], [32.19247, 31.26034], [32.99392, 31.02407], [33.7734, 30.96746], [34.26544, 31.21936], [34.9226, 29.50133]]]}},
  {type: "Feature", id: "ERI", properties: {name: "Eritrea"}, geometry: {type: "Polygon", coordinates: [[[42.35156, 12.54223], [42.00975, 12.86582], [41.59856, 13.45209], [41.155194, 13.77332], [40.8966, 14.11864], [40.026219, 14.519579], [39.34061, 14.53155], [39.0994, 14.74064], [38.51295, 14.50547], [37.90607, 14.95943], [37.59377, 14.2131], [36.42951, 14.42211], [36.323189, 14.822481], [36.75386, 16.291874], [36.85253, 16.95655], [37.16747, 17.26314], [37.904, 17.42754], [38.41009, 17.998307], [38.990623, 16.840626], [39.26611, 15.922723], [39.814294, 15.435647], [41.179275, 14.49108], [41.734952, 13.921037], [42.276831, 13.343992], [42.589576, 13.000421], [43.081226, 12.699639], [42.779642, 12.455416], [42.35156, 12.54223]]]}},
  {type: "Feature", id: "ESP", properties: {name: "Spain"}, geometry: {type: "Polygon", coordinates: [[[-9.034818, 41.880571], [-8.984433, 42.592775], [-9.392884, 43.026625], [-7.97819, 43.748338], [-6.754492, 43.567909], [-5.411886, 43.57424], [-4.347843, 43.403449], [-3.517532, 43.455901], [-1.901351, 43.422802], [-1.502771, 43.034014], [0.338047, 42.579546], [0.701591, 42.795734], [1.826793, 42.343385], [2.985999, 42.473015], [3.039484, 41.89212], [2.091842, 41.226089], [0.810525, 41.014732], [0.721331, 40.678318], [0.106692, 40.123934], [-0.278711, 39.309978], [0.111291, 38.738514], [-0.467124, 38.292366], [-0.683389, 37.642354], [-1.438382, 37.443064], [-2.146453, 36.674144], [-3.415781, 36.6589], [-4.368901, 36.677839], [-4.995219, 36.324708], [-5.37716, 35.94685], [-5.866432, 36.029817], [-6.236694, 36.367677], [-6.520191, 36.942913], [-7.453726, 37.097788], [-7.537105, 37.428904], [-7.166508, 37.803894], [-7.029281, 38.075764], [-7.374092, 38.373059], [-7.098037, 39.030073], [-7.498632, 39.629571], [-7.066592, 39.711892], [-7.026413, 40.184524], [-6.86402, 40.330872], [-6.851127, 41.111083], [-6.389088, 41.381815], [-6.668606, 41.883387], [-7.251309, 41.918346], [-7.422513, 41.792075], [-8.013175, 41.790886], [-8.263857, 42.280469], [-8.671946, 42.134689], [-9.034818, 41.880571]]]}},
  {type: "Feature", id: "EST", properties: {name: "Estonia"}, geometry: {type: "Polygon", coordinates: [[[24.312863, 57.793424], [24.428928, 58.383413], [24.061198, 58.257375], [23.42656, 58.612753], [23.339795, 59.18724], [24.604214, 59.465854], [25.864189, 59.61109], [26.949136, 59.445803], [27.981114, 59.475388], [28.131699, 59.300825], [27.420166, 58.724581], [27.716686, 57.791899], [27.288185, 57.474528], [26.463532, 57.476389], [25.60281, 57.847529], [25.164594, 57.970157], [24.312863, 57.793424]]]}},
  {type: "Feature", id: "ETH", properties: {name: "Ethiopia"}, geometry: {type: "Polygon", coordinates: [[[37.90607, 14.95943], [38.51295, 14.50547], [39.0994, 14.74064], [39.34061, 14.53155], [40.02625, 14.51959], [40.8966, 14.11864], [41.1552, 13.77333], [41.59856, 13.45209], [42.00975, 12.86582], [42.35156, 12.54223], [42, 12.1], [41.66176, 11.6312], [41.73959, 11.35511], [41.75557, 11.05091], [42.31414, 11.0342], [42.55493, 11.10511], [42.776852, 10.926879], [42.55876, 10.57258], [42.92812, 10.02194], [43.29699, 9.54048], [43.67875, 9.18358], [46.94834, 7.99688], [47.78942, 8.003], [44.9636, 5.00162], [43.66087, 4.95755], [42.76967, 4.25259], [42.12861, 4.23413], [41.855083, 3.918912], [41.1718, 3.91909], [40.76848, 4.25702], [39.85494, 3.83879], [39.559384, 3.42206], [38.89251, 3.50074], [38.67114, 3.61607], [38.43697, 3.58851], [38.120915, 3.598605], [36.855093, 4.447864], [36.159079, 4.447864], [35.817448, 4.776966], [35.817448, 5.338232], [35.298007, 5.506], [34.70702, 6.59422], [34.25032, 6.82607], [34.0751, 7.22595], [33.56829, 7.71334], [32.95418, 7.78497], [33.2948, 8.35458], [33.8255, 8.37916], [33.97498, 8.68456], [33.96162, 9.58358], [34.25745, 10.63009], [34.73115, 10.91017], [34.83163, 11.31896], [35.26049, 12.08286], [35.86363, 12.57828], [36.27022, 13.56333], [36.42951, 14.42211], [37.59377, 14.2131], [37.90607, 14.95943]]]}},
  {type: "Feature", id: "FIN", properties: {name: "Finland"}, geometry: {type: "Polygon", coordinates: [[[28.59193, 69.064777], [28.445944, 68.364613], [29.977426, 67.698297], [29.054589, 66.944286], [30.21765, 65.80598], [29.54443, 64.948672], [30.444685, 64.204453], [30.035872, 63.552814], [31.516092, 62.867687], [31.139991, 62.357693], [30.211107, 61.780028], [28.069998, 60.503517], [26.255173, 60.423961], [24.496624, 60.057316], [22.869695, 59.846373], [22.290764, 60.391921], [21.322244, 60.72017], [21.544866, 61.705329], [21.059211, 62.607393], [21.536029, 63.189735], [22.442744, 63.81781], [24.730512, 64.902344], [25.398068, 65.111427], [25.294043, 65.534346], [23.903379, 66.006927], [23.56588, 66.396051], [23.539473, 67.936009], [21.978535, 68.616846], [20.645593, 69.106247], [21.244936, 69.370443], [22.356238, 68.841741], [23.66205, 68.891247], [24.735679, 68.649557], [25.689213, 69.092114], [26.179622, 69.825299], [27.732292, 70.164193], [29.015573, 69.766491], [28.59193, 69.064777]]]}},
  {type: "Feature", id: "FJI", properties: {name: "Fiji"}, geometry: {type: "MultiPolygon", coordinates: [[[[178.3736, -17.33992], [178.71806, -17.62846], [178.55271, -18.15059], [177.93266, -18.28799], [177.38146, -18.16432], [177.28504, -17.72465], [177.67087, -17.38114], [178.12557, -17.50481], [178.3736, -17.33992]]], [[[179.364143, -16.801354], [178.725059, -17.012042], [178.596839, -16.63915], [179.096609, -16.433984], [179.413509, -16.379054], [180, -16.067133], [180, -16.555217], [179.364143, -16.801354]]], [[[-179.917369, -16.501783], [-180, -16.555217], [-180, -16.067133], [-179.79332, -16.020882], [-179.917369, -16.501783]]]]}},
  {type: "Feature", id: "FLK", properties: {name: "Falkland Islands"}, geometry: {type: "Polygon", coordinates: [[[-61.2, -51.85], [-60, -51.25], [-59.15, -51.5], [-58.55, -51.1], [-57.75, -51.55], [-58.05, -51.9], [-59.4, -52.2], [-59.85, -51.85], [-60.7, -52.3], [-61.2, -51.85]]]}},
  {type: "Feature", id: "FRA", properties: {name: "France"}, geometry: {type: "MultiPolygon", coordinates: [[[[9.560016, 42.152492], [9.229752, 41.380007], [8.775723, 41.583612], [8.544213, 42.256517], [8.746009, 42.628122], [9.390001, 43.009985], [9.560016, 42.152492]]], [[[3.588184, 50.378992], [4.286023, 49.907497], [4.799222, 49.985373], [5.674052, 49.529484], [5.897759, 49.442667], [6.18632, 49.463803], [6.65823, 49.201958], [8.099279, 49.017784], [7.593676, 48.333019], [7.466759, 47.620582], [7.192202, 47.449766], [6.736571, 47.541801], [6.768714, 47.287708], [6.037389, 46.725779], [6.022609, 46.27299], [6.5001, 46.429673], [6.843593, 45.991147], [6.802355, 45.70858], [7.096652, 45.333099], [6.749955, 45.028518], [7.007562, 44.254767], [7.549596, 44.127901], [7.435185, 43.693845], [6.529245, 43.128892], [4.556963, 43.399651], [3.100411, 43.075201], [2.985999, 42.473015], [1.826793, 42.343385], [0.701591, 42.795734], [0.338047, 42.579546], [-1.502771, 43.034014], [-1.901351, 43.422802], [-1.384225, 44.02261], [-1.193798, 46.014918], [-2.225724, 47.064363], [-2.963276, 47.570327], [-4.491555, 47.954954], [-4.59235, 48.68416], [-3.295814, 48.901692], [-1.616511, 48.644421], [-1.933494, 49.776342], [-0.989469, 49.347376], [1.338761, 50.127173], [1.639001, 50.946606], [2.513573, 51.148506], [2.658422, 50.796848], [3.123252, 50.780363], [3.588184, 50.378992]]]]}},
  {type: "Feature", id: "GAB", properties: {name: "Gabon"}, geometry: {type: "Polygon", coordinates: [[[11.093773, -3.978827], [10.066135, -2.969483], [9.405245, -2.144313], [8.797996, -1.111301], [8.830087, -0.779074], [9.04842, -0.459351], [9.291351, 0.268666], [9.492889, 1.01012], [9.830284, 1.067894], [11.285079, 1.057662], [11.276449, 2.261051], [11.751665, 2.326758], [12.35938, 2.192812], [12.951334, 2.321616], [13.075822, 2.267097], [13.003114, 1.830896], [13.282631, 1.314184], [14.026669, 1.395677], [14.276266, 1.19693], [13.843321, 0.038758], [14.316418, -0.552627], [14.425456, -1.333407], [14.29921, -1.998276], [13.992407, -2.470805], [13.109619, -2.42874], [12.575284, -1.948511], [12.495703, -2.391688], [11.820964, -2.514161], [11.478039, -2.765619], [11.855122, -3.426871], [11.093773, -3.978827]]]}},
  {type: "Feature", id: "GBR", properties: {name: "United Kingdom"}, geometry: {type: "MultiPolygon", coordinates: [[[[-5.661949, 54.554603], [-6.197885, 53.867565], [-6.95373, 54.073702], [-7.572168, 54.059956], [-7.366031, 54.595841], [-7.572168, 55.131622], [-6.733847, 55.17286], [-5.661949, 54.554603]]], [[[-3.005005, 58.635], [-4.073828, 57.553025], [-3.055002, 57.690019], [-1.959281, 57.6848], [-2.219988, 56.870017], [-3.119003, 55.973793], [-2.085009, 55.909998], [-2.005676, 55.804903], [-1.114991, 54.624986], [-0.430485, 54.464376], [0.184981, 53.325014], [0.469977, 52.929999], [1.681531, 52.73952], [1.559988, 52.099998], [1.050562, 51.806761], [1.449865, 51.289428], [0.550334, 50.765739], [-0.787517, 50.774989], [-2.489998, 50.500019], [-2.956274, 50.69688], [-3.617448, 50.228356], [-4.542508, 50.341837], [-5.245023, 49.96], [-5.776567, 50.159678], [-4.30999, 51.210001], [-3.414851, 51.426009], [-3.422719, 51.426848], [-4.984367, 51.593466], [-5.267296, 51.9914], [-4.222347, 52.301356], [-4.770013, 52.840005], [-4.579999, 53.495004], [-3.093831, 53.404547], [-3.09208, 53.404441], [-2.945009, 53.985], [-3.614701, 54.600937], [-3.630005, 54.615013], [-4.844169, 54.790971], [-5.082527, 55.061601], [-4.719112, 55.508473], [-5.047981, 55.783986], [-5.586398, 55.311146], [-5.644999, 56.275015], [-6.149981, 56.78501], [-5.786825, 57.818848], [-5.009999, 58.630013], [-4.211495, 58.550845], [-3.005005, 58.635]]]]}},
  {type: "Feature", id: "GEO", properties: {name: "Georgia"}, geometry: {type: "Polygon", coordinates: [[[41.554084, 41.535656], [41.703171, 41.962943], [41.45347, 42.645123], [40.875469, 43.013628], [40.321394, 43.128634], [39.955009, 43.434998], [40.076965, 43.553104], [40.922185, 43.382159], [42.394395, 43.220308], [43.756017, 42.740828], [43.9312, 42.554974], [44.537623, 42.711993], [45.470279, 42.502781], [45.77641, 42.092444], [46.404951, 41.860675], [46.145432, 41.722802], [46.637908, 41.181673], [46.501637, 41.064445], [45.962601, 41.123873], [45.217426, 41.411452], [44.97248, 41.248129], [43.582746, 41.092143], [42.619549, 41.583173], [41.554084, 41.535656]]]}},
  {type: "Feature", id: "GHA", properties: {name: "Ghana"}, geometry: {type: "Polygon", coordinates: [[[1.060122, 5.928837], [-0.507638, 5.343473], [-1.063625, 5.000548], [-1.964707, 4.710462], [-2.856125, 4.994476], [-2.810701, 5.389051], [-3.24437, 6.250472], [-2.983585, 7.379705], [-2.56219, 8.219628], [-2.827496, 9.642461], [-2.963896, 10.395335], [-2.940409, 10.96269], [-1.203358, 11.009819], [-0.761576, 10.93693], [-0.438702, 11.098341], [0.023803, 11.018682], [-0.049785, 10.706918], [0.36758, 10.191213], [0.365901, 9.465004], [0.461192, 8.677223], [0.712029, 8.312465], [0.490957, 7.411744], [0.570384, 6.914359], [0.836931, 6.279979], [1.060122, 5.928837]]]}},
  {type: "Feature", id: "GIN", properties: {name: "Guinea"}, geometry: {type: "Polygon", coordinates: [[[-8.439298, 7.686043], [-8.722124, 7.711674], [-8.926065, 7.309037], [-9.208786, 7.313921], [-9.403348, 7.526905], [-9.33728, 7.928534], [-9.755342, 8.541055], [-10.016567, 8.428504], [-10.230094, 8.406206], [-10.505477, 8.348896], [-10.494315, 8.715541], [-10.65477, 8.977178], [-10.622395, 9.26791], [-10.839152, 9.688246], [-11.117481, 10.045873], [-11.917277, 10.046984], [-12.150338, 9.858572], [-12.425929, 9.835834], [-12.596719, 9.620188], [-12.711958, 9.342712], [-13.24655, 8.903049], [-13.685154, 9.494744], [-14.074045, 9.886167], [-14.330076, 10.01572], [-14.579699, 10.214467], [-14.693232, 10.656301], [-14.839554, 10.876572], [-15.130311, 11.040412], [-14.685687, 11.527824], [-14.382192, 11.509272], [-14.121406, 11.677117], [-13.9008, 11.678719], [-13.743161, 11.811269], [-13.828272, 12.142644], [-13.718744, 12.247186], [-13.700476, 12.586183], [-13.217818, 12.575874], [-12.499051, 12.33209], [-12.278599, 12.35444], [-12.203565, 12.465648], [-11.658301, 12.386583], [-11.513943, 12.442988], [-11.456169, 12.076834], [-11.297574, 12.077971], [-11.036556, 12.211245], [-10.87083, 12.177887], [-10.593224, 11.923975], [-10.165214, 11.844084], [-9.890993, 12.060479], [-9.567912, 12.194243], [-9.327616, 12.334286], [-9.127474, 12.30806], [-8.905265, 12.088358], [-8.786099, 11.812561], [-8.376305, 11.393646], [-8.581305, 11.136246], [-8.620321, 10.810891], [-8.407311, 10.909257], [-8.282357, 10.792597], [-8.335377, 10.494812], [-8.029944, 10.206535], [-8.229337, 10.12902], [-8.309616, 9.789532], [-8.079114, 9.376224], [-7.8321, 8.575704], [-8.203499, 8.455453], [-8.299049, 8.316444], [-8.221792, 8.123329], [-8.280703, 7.68718], [-8.439298, 7.686043]]]}},
  {type: "Feature", id: "GMB", properties: {name: "Gambia"}, geometry: {type: "Polygon", coordinates: [[[-16.841525, 13.151394], [-16.713729, 13.594959], [-15.624596, 13.623587], [-15.39877, 13.860369], [-15.081735, 13.876492], [-14.687031, 13.630357], [-14.376714, 13.62568], [-14.046992, 13.794068], [-13.844963, 13.505042], [-14.277702, 13.280585], [-14.712197, 13.298207], [-15.141163, 13.509512], [-15.511813, 13.27857], [-15.691001, 13.270353], [-15.931296, 13.130284], [-16.841525, 13.151394]]]}},
  {type: "Feature", id: "GNB", properties: {name: "Guinea Bissau"}, geometry: {type: "Polygon", coordinates: [[[-15.130311, 11.040412], [-15.66418, 11.458474], [-16.085214, 11.524594], [-16.314787, 11.806515], [-16.308947, 11.958702], [-16.613838, 12.170911], [-16.677452, 12.384852], [-16.147717, 12.547762], [-15.816574, 12.515567], [-15.548477, 12.62817], [-13.700476, 12.586183], [-13.718744, 12.247186], [-13.828272, 12.142644], [-13.743161, 11.811269], [-13.9008, 11.678719], [-14.121406, 11.677117], [-14.382192, 11.509272], [-14.685687, 11.527824], [-15.130311, 11.040412]]]}},
  {type: "Feature", id: "GNQ", properties: {name: "Equatorial Guinea"}, geometry: {type: "Polygon", coordinates: [[[9.492889, 1.01012], [9.305613, 1.160911], [9.649158, 2.283866], [11.276449, 2.261051], [11.285079, 1.057662], [9.830284, 1.067894], [9.492889, 1.01012]]]}},
  {type: "Feature", id: "GRC", properties: {name: "Greece"}, geometry: {type: "MultiPolygon", coordinates: [[[[23.69998, 35.705004], [24.246665, 35.368022], [25.025015, 35.424996], [25.769208, 35.354018], [25.745023, 35.179998], [26.290003, 35.29999], [26.164998, 35.004995], [24.724982, 34.919988], [24.735007, 35.084991], [23.514978, 35.279992], [23.69998, 35.705004]]], [[[26.604196, 41.562115], [26.294602, 40.936261], [26.056942, 40.824123], [25.447677, 40.852545], [24.925848, 40.947062], [23.714811, 40.687129], [24.407999, 40.124993], [23.899968, 39.962006], [23.342999, 39.960998], [22.813988, 40.476005], [22.626299, 40.256561], [22.849748, 39.659311], [23.350027, 39.190011], [22.973099, 38.970903], [23.530016, 38.510001], [24.025025, 38.219993], [24.040011, 37.655015], [23.115003, 37.920011], [23.409972, 37.409991], [22.774972, 37.30501], [23.154225, 36.422506], [22.490028, 36.41], [21.670026, 36.844986], [21.295011, 37.644989], [21.120034, 38.310323], [20.730032, 38.769985], [20.217712, 39.340235], [20.150016, 39.624998], [20.615, 40.110007], [20.674997, 40.435], [20.99999, 40.580004], [21.02004, 40.842727], [21.674161, 40.931275], [22.055378, 41.149866], [22.597308, 41.130487], [22.76177, 41.3048], [22.952377, 41.337994], [23.692074, 41.309081], [24.492645, 41.583896], [25.197201, 41.234486], [26.106138, 41.328899], [26.117042, 41.826905], [26.604196, 41.562115]]]]}},
  {type: "Feature", id: "GRL", properties: {name: "Greenland"}, geometry: {type: "Polygon", coordinates: [[[-46.76379, 82.62796], [-43.40644, 83.22516], [-39.89753, 83.18018], [-38.62214, 83.54905], [-35.08787, 83.64513], [-27.10046, 83.51966], [-20.84539, 82.72669], [-22.69182, 82.34165], [-26.51753, 82.29765], [-31.9, 82.2], [-31.39646, 82.02154], [-27.85666, 82.13178], [-24.84448, 81.78697], [-22.90328, 82.09317], [-22.07175, 81.73449], [-23.16961, 81.15271], [-20.62363, 81.52462], [-15.76818, 81.91245], [-12.77018, 81.71885], [-12.20855, 81.29154], [-16.28533, 80.58004], [-16.85, 80.35], [-20.04624, 80.17708], [-17.73035, 80.12912], [-18.9, 79.4], [-19.70499, 78.75128], [-19.67353, 77.63859], [-18.47285, 76.98565], [-20.03503, 76.94434], [-21.67944, 76.62795], [-19.83407, 76.09808], [-19.59896, 75.24838], [-20.66818, 75.15585], [-19.37281, 74.29561], [-21.59422, 74.22382], [-20.43454, 73.81713], [-20.76234, 73.46436], [-22.17221, 73.30955], [-23.56593, 73.30663], [-22.31311, 72.62928], [-22.29954, 72.18409], [-24.27834, 72.59788], [-24.79296, 72.3302], [-23.44296, 72.08016], [-22.13281, 71.46898], [-21.75356, 70.66369], [-23.53603, 70.471], [-24.30702, 70.85649], [-25.54341, 71.43094], [-25.20135, 70.75226], [-26.36276, 70.22646], [-23.72742, 70.18401], [-22.34902, 70.12946], [-25.02927, 69.2588], [-27.74737, 68.47046], [-30.67371, 68.12503], [-31.77665, 68.12078], [-32.81105, 67.73547], [-34.20196, 66.67974], [-36.35284, 65.9789], [-37.04378, 65.93768], [-38.37505, 65.69213], [-39.81222, 65.45848], [-40.66899, 64.83997], [-40.68281, 64.13902], [-41.1887, 63.48246], [-42.81938, 62.68233], [-42.41666, 61.90093], [-42.86619, 61.07404], [-43.3784, 60.09772], [-44.7875, 60.03676], [-46.26364, 60.85328], [-48.26294, 60.85843], [-49.23308, 61.40681], [-49.90039, 62.38336], [-51.63325, 63.62691], [-52.14014, 64.27842], [-52.27659, 65.1767], [-53.66166, 66.09957], [-53.30161, 66.8365], [-53.96911, 67.18899], [-52.9804, 68.35759], [-51.47536, 68.72958], [-51.08041, 69.14781], [-50.87122, 69.9291], [-52.013585, 69.574925], [-52.55792, 69.42616], [-53.45629, 69.283625], [-54.68336, 69.61003], [-54.75001, 70.28932], [-54.35884, 70.821315], [-53.431315, 70.835755], [-51.39014, 70.56978], [-53.10937, 71.20485], [-54.00422, 71.54719], [-55, 71.406537], [-55.83468, 71.65444], [-54.71819, 72.58625], [-55.32634, 72.95861], [-56.12003, 73.64977], [-57.32363, 74.71026], [-58.59679, 75.09861], [-58.58516, 75.51727], [-61.26861, 76.10238], [-63.39165, 76.1752], [-66.06427, 76.13486], [-68.50438, 76.06141], [-69.66485, 76.37975], [-71.40257, 77.00857], [-68.77671, 77.32312], [-66.76397, 77.37595], [-71.04293, 77.63595], [-73.297, 78.04419], [-73.15938, 78.43271], [-69.37345, 78.91388], [-65.7107, 79.39436], [-65.3239, 79.75814], [-68.02298, 80.11721], [-67.15129, 80.51582], [-63.68925, 81.21396], [-62.23444, 81.3211], [-62.65116, 81.77042], [-60.28249, 82.03363], [-57.20744, 82.19074], [-54.13442, 82.19962], [-53.04328, 81.88833], [-50.39061, 82.43883], [-48.00386, 82.06481], [-46.59984, 81.985945], [-44.523, 81.6607], [-46.9007, 82.19979], [-46.76379, 82.62796]]]}},
  {type: "Feature", id: "GTM", properties: {name: "Guatemala"}, geometry: {type: "Polygon", coordinates: [[[-90.095555, 13.735338], [-90.608624, 13.909771], [-91.23241, 13.927832], [-91.689747, 14.126218], [-92.22775, 14.538829], [-92.20323, 14.830103], [-92.087216, 15.064585], [-92.229249, 15.251447], [-91.74796, 16.066565], [-90.464473, 16.069562], [-90.438867, 16.41011], [-90.600847, 16.470778], [-90.711822, 16.687483], [-91.08167, 16.918477], [-91.453921, 17.252177], [-91.002269, 17.254658], [-91.00152, 17.817595], [-90.067934, 17.819326], [-89.14308, 17.808319], [-89.150806, 17.015577], [-89.229122, 15.886938], [-88.930613, 15.887273], [-88.604586, 15.70638], [-88.518364, 15.855389], [-88.225023, 15.727722], [-88.68068, 15.346247], [-89.154811, 15.066419], [-89.22522, 14.874286], [-89.145535, 14.678019], [-89.353326, 14.424133], [-89.587343, 14.362586], [-89.534219, 14.244816], [-89.721934, 14.134228], [-90.064678, 13.88197], [-90.095555, 13.735338]]]}},
  {type: "Feature", id: "GUF", properties: {name: "French Guiana"}, geometry: {type: "Polygon", coordinates: [[[-52.556425, 2.504705], [-52.939657, 2.124858], [-53.418465, 2.053389], [-53.554839, 2.334897], [-53.778521, 2.376703], [-54.088063, 2.105557], [-54.524754, 2.311849], [-54.27123, 2.738748], [-54.184284, 3.194172], [-54.011504, 3.62257], [-54.399542, 4.212611], [-54.478633, 4.896756], [-53.958045, 5.756548], [-53.618453, 5.646529], [-52.882141, 5.409851], [-51.823343, 4.565768], [-51.657797, 4.156232], [-52.249338, 3.241094], [-52.556425, 2.504705]]]}},
  {type: "Feature", id: "GUY", properties: {name: "Guyana"}, geometry: {type: "Polygon", coordinates: [[[-59.758285, 8.367035], [-59.101684, 7.999202], [-58.482962, 7.347691], [-58.454876, 6.832787], [-58.078103, 6.809094], [-57.542219, 6.321268], [-57.147436, 5.97315], [-57.307246, 5.073567], [-57.914289, 4.812626], [-57.86021, 4.576801], [-58.044694, 4.060864], [-57.601569, 3.334655], [-57.281433, 3.333492], [-57.150098, 2.768927], [-56.539386, 1.899523], [-56.782704, 1.863711], [-57.335823, 1.948538], [-57.660971, 1.682585], [-58.11345, 1.507195], [-58.429477, 1.463942], [-58.540013, 1.268088], [-59.030862, 1.317698], [-59.646044, 1.786894], [-59.718546, 2.24963], [-59.974525, 2.755233], [-59.815413, 3.606499], [-59.53804, 3.958803], [-59.767406, 4.423503], [-60.111002, 4.574967], [-59.980959, 5.014061], [-60.213683, 5.244486], [-60.733574, 5.200277], [-61.410303, 5.959068], [-61.139415, 6.234297], [-61.159336, 6.696077], [-60.543999, 6.856584], [-60.295668, 7.043911], [-60.637973, 7.415], [-60.550588, 7.779603], [-59.758285, 8.367035]]]}},
  {type: "Feature", id: "HND", properties: {name: "Honduras"}, geometry: {type: "Polygon", coordinates: [[[-87.316654, 12.984686], [-87.489409, 13.297535], [-87.793111, 13.38448], [-87.723503, 13.78505], [-87.859515, 13.893312], [-88.065343, 13.964626], [-88.503998, 13.845486], [-88.541231, 13.980155], [-88.843073, 14.140507], [-89.058512, 14.340029], [-89.353326, 14.424133], [-89.145535, 14.678019], [-89.22522, 14.874286], [-89.154811, 15.066419], [-88.68068, 15.346247], [-88.225023, 15.727722], [-88.121153, 15.688655], [-87.901813, 15.864458], [-87.61568, 15.878799], [-87.522921, 15.797279], [-87.367762, 15.84694], [-86.903191, 15.756713], [-86.440946, 15.782835], [-86.119234, 15.893449], [-86.001954, 16.005406], [-85.683317, 15.953652], [-85.444004, 15.885749], [-85.182444, 15.909158], [-84.983722, 15.995923], [-84.52698, 15.857224], [-84.368256, 15.835158], [-84.063055, 15.648244], [-83.773977, 15.424072], [-83.410381, 15.270903], [-83.147219, 14.995829], [-83.489989, 15.016267], [-83.628585, 14.880074], [-83.975721, 14.749436], [-84.228342, 14.748764], [-84.449336, 14.621614], [-84.649582, 14.666805], [-84.820037, 14.819587], [-84.924501, 14.790493], [-85.052787, 14.551541], [-85.148751, 14.560197], [-85.165365, 14.35437], [-85.514413, 14.079012], [-85.698665, 13.960078], [-85.801295, 13.836055], [-86.096264, 14.038187], [-86.312142, 13.771356], [-86.520708, 13.778487], [-86.755087, 13.754845], [-86.733822, 13.263093], [-86.880557, 13.254204], [-87.005769, 13.025794], [-87.316654, 12.984686]]]}},
  {type: "Feature", id: "HRV", properties: {name: "Croatia"}, geometry: {type: "Polygon", coordinates: [[[18.829838, 45.908878], [19.072769, 45.521511], [19.390476, 45.236516], [19.005486, 44.860234], [18.553214, 45.08159], [17.861783, 45.06774], [17.002146, 45.233777], [16.534939, 45.211608], [16.318157, 45.004127], [15.959367, 45.233777], [15.750026, 44.818712], [16.23966, 44.351143], [16.456443, 44.04124], [16.916156, 43.667722], [17.297373, 43.446341], [17.674922, 43.028563], [18.56, 42.65], [18.450016, 42.479991], [17.50997, 42.849995], [16.930006, 43.209998], [16.015385, 43.507215], [15.174454, 44.243191], [15.37625, 44.317915], [14.920309, 44.738484], [14.901602, 45.07606], [14.258748, 45.233777], [13.952255, 44.802124], [13.656976, 45.136935], [13.679403, 45.484149], [13.71506, 45.500324], [14.411968, 45.466166], [14.595109, 45.634941], [14.935244, 45.471695], [15.327675, 45.452316], [15.323954, 45.731783], [15.67153, 45.834154], [15.768733, 46.238108], [16.564808, 46.503751], [16.882515, 46.380632], [17.630066, 45.951769], [18.456062, 45.759481], [18.829838, 45.908878]]]}},
  {type: "Feature", id: "HTI", properties: {name: "Haiti"}, geometry: {type: "Polygon", coordinates: [[[-73.189791, 19.915684], [-72.579673, 19.871501], [-71.712361, 19.714456], [-71.624873, 19.169838], [-71.701303, 18.785417], [-71.945112, 18.6169], [-71.687738, 18.31666], [-71.708305, 18.044997], [-72.372476, 18.214961], [-72.844411, 18.145611], [-73.454555, 18.217906], [-73.922433, 18.030993], [-74.458034, 18.34255], [-74.369925, 18.664908], [-73.449542, 18.526053], [-72.694937, 18.445799], [-72.334882, 18.668422], [-72.79165, 19.101625], [-72.784105, 19.483591], [-73.415022, 19.639551], [-73.189791, 19.915684]]]}},
  {type: "Feature", id: "HUN", properties: {name: "Hungary"}, geometry: {type: "Polygon", coordinates: [[[16.202298, 46.852386], [16.534268, 47.496171], [16.340584, 47.712902], [16.903754, 47.714866], [16.979667, 48.123497], [17.488473, 47.867466], [17.857133, 47.758429], [18.696513, 47.880954], [18.777025, 48.081768], [19.174365, 48.111379], [19.661364, 48.266615], [19.769471, 48.202691], [20.239054, 48.327567], [20.473562, 48.56285], [20.801294, 48.623854], [21.872236, 48.319971], [22.085608, 48.422264], [22.64082, 48.15024], [22.710531, 47.882194], [22.099768, 47.672439], [21.626515, 46.994238], [21.021952, 46.316088], [20.220192, 46.127469], [19.596045, 46.17173], [18.829838, 45.908878], [18.456062, 45.759481], [17.630066, 45.951769], [16.882515, 46.380632], [16.564808, 46.503751], [16.370505, 46.841327], [16.202298, 46.852386]]]}},
  {type: "Feature", id: "IDN", properties: {name: "Indonesia"}, geometry: {type: "MultiPolygon", coordinates: [[[[120.715609, -10.239581], [120.295014, -10.25865], [118.967808, -9.557969], [119.90031, -9.36134], [120.425756, -9.665921], [120.775502, -9.969675], [120.715609, -10.239581]]], [[[124.43595, -10.140001], [123.579982, -10.359987], [123.459989, -10.239995], [123.550009, -9.900016], [123.980009, -9.290027], [124.968682, -8.89279], [125.07002, -9.089987], [125.08852, -9.393173], [124.43595, -10.140001]]], [[[117.900018, -8.095681], [118.260616, -8.362383], [118.87846, -8.280683], [119.126507, -8.705825], [117.970402, -8.906639], [117.277731, -9.040895], [116.740141, -9.032937], [117.083737, -8.457158], [117.632024, -8.449303], [117.900018, -8.095681]]], [[[122.903537, -8.094234], [122.756983, -8.649808], [121.254491, -8.933666], [119.924391, -8.810418], [119.920929, -8.444859], [120.715092, -8.236965], [121.341669, -8.53674], [122.007365, -8.46062], [122.903537, -8.094234]]], [[[108.623479, -6.777674], [110.539227, -6.877358], [110.759576, -6.465186], [112.614811, -6.946036], [112.978768, -7.594213], [114.478935, -7.776528], [115.705527, -8.370807], [114.564511, -8.751817], [113.464734, -8.348947], [112.559672, -8.376181], [111.522061, -8.302129], [110.58615, -8.122605], [109.427667, -7.740664], [108.693655, -7.6416], [108.277763, -7.766657], [106.454102, -7.3549], [106.280624, -6.9249], [105.365486, -6.851416], [106.051646, -5.895919], [107.265009, -5.954985], [108.072091, -6.345762], [108.486846, -6.421985], [108.623479, -6.777674]]], [[[134.724624, -6.214401], [134.210134, -6.895238], [134.112776, -6.142467], [134.290336, -5.783058], [134.499625, -5.445042], [134.727002, -5.737582], [134.724624, -6.214401]]], [[[127.249215, -3.459065], [126.874923, -3.790983], [126.183802, -3.607376], [125.989034, -3.177273], [127.000651, -3.129318], [127.249215, -3.459065]]], [[[130.471344, -3.093764], [130.834836, -3.858472], [129.990547, -3.446301], [129.155249, -3.362637], [128.590684, -3.428679], [127.898891, -3.393436], [128.135879, -2.84365], [129.370998, -2.802154], [130.471344, -3.093764]]], [[[134.143368, -1.151867], [134.422627, -2.769185], [135.457603, -3.367753], [136.293314, -2.307042], [137.440738, -1.703513], [138.329727, -1.702686], [139.184921, -2.051296], [139.926684, -2.409052], [141.00021, -2.600151], [141.017057, -5.859022], [141.033852, -9.117893], [140.143415, -8.297168], [139.127767, -8.096043], [138.881477, -8.380935], [137.614474, -8.411683], [138.039099, -7.597882], [138.668621, -7.320225], [138.407914, -6.232849], [137.92784, -5.393366], [135.98925, -4.546544], [135.164598, -4.462931], [133.66288, -3.538853], [133.367705, -4.024819], [132.983956, -4.112979], [132.756941, -3.746283], [132.753789, -3.311787], [131.989804, -2.820551], [133.066845, -2.460418], [133.780031, -2.479848], [133.696212, -2.214542], [132.232373, -2.212526], [131.836222, -1.617162], [130.94284, -1.432522], [130.519558, -0.93772], [131.867538, -0.695461], [132.380116, -0.369538], [133.985548, -0.78021], [134.143368, -1.151867]]], [[[125.240501, 1.419836], [124.437035, 0.427881], [123.685505, 0.235593], [122.723083, 0.431137], [121.056725, 0.381217], [120.183083, 0.237247], [120.04087, -0.519658], [120.935905, -1.408906], [121.475821, -0.955962], [123.340565, -0.615673], [123.258399, -1.076213], [122.822715, -0.930951], [122.38853, -1.516858], [121.508274, -1.904483], [122.454572, -3.186058], [122.271896, -3.5295], [123.170963, -4.683693], [123.162333, -5.340604], [122.628515, -5.634591], [122.236394, -5.282933], [122.719569, -4.464172], [121.738234, -4.851331], [121.489463, -4.574553], [121.619171, -4.188478], [120.898182, -3.602105], [120.972389, -2.627643], [120.305453, -2.931604], [120.390047, -4.097579], [120.430717, -5.528241], [119.796543, -5.6734], [119.366906, -5.379878], [119.653606, -4.459417], [119.498835, -3.494412], [119.078344, -3.487022], [118.767769, -2.801999], [119.180974, -2.147104], [119.323394, -1.353147], [119.825999, 0.154254], [120.035702, 0.566477], [120.885779, 1.309223], [121.666817, 1.013944], [122.927567, 0.875192], [124.077522, 0.917102], [125.065989, 1.643259], [125.240501, 1.419836]]], [[[128.688249, 1.132386], [128.635952, 0.258486], [128.12017, 0.356413], [127.968034, -0.252077], [128.379999, -0.780004], [128.100016, -0.899996], [127.696475, -0.266598], [127.39949, 1.011722], [127.600512, 1.810691], [127.932378, 2.174596], [128.004156, 1.628531], [128.594559, 1.540811], [128.688249, 1.132386]]], [[[117.875627, 1.827641], [118.996747, 0.902219], [117.811858, 0.784242], [117.478339, 0.102475], [117.521644, -0.803723], [116.560048, -1.487661], [116.533797, -2.483517], [116.148084, -4.012726], [116.000858, -3.657037], [114.864803, -4.106984], [114.468652, -3.495704], [113.755672, -3.43917], [113.256994, -3.118776], [112.068126, -3.478392], [111.703291, -2.994442], [111.04824, -3.049426], [110.223846, -2.934032], [110.070936, -1.592874], [109.571948, -1.314907], [109.091874, -0.459507], [108.952658, 0.415375], [109.069136, 1.341934], [109.66326, 2.006467], [109.830227, 1.338136], [110.514061, 0.773131], [111.159138, 0.976478], [111.797548, 0.904441], [112.380252, 1.410121], [112.859809, 1.49779], [113.80585, 1.217549], [114.621355, 1.430688], [115.134037, 2.821482], [115.519078, 3.169238], [115.865517, 4.306559], [117.015214, 4.306094], [117.882035, 4.137551], [117.313232, 3.234428], [118.04833, 2.28769], [117.875627, 1.827641]]], [[[105.817655, -5.852356], [104.710384, -5.873285], [103.868213, -5.037315], [102.584261, -4.220259], [102.156173, -3.614146], [101.399113, -2.799777], [100.902503, -2.050262], [100.141981, -0.650348], [99.26374, 0.183142], [98.970011, 1.042882], [98.601351, 1.823507], [97.699598, 2.453184], [97.176942, 3.308791], [96.424017, 3.86886], [95.380876, 4.970782], [95.293026, 5.479821], [95.936863, 5.439513], [97.484882, 5.246321], [98.369169, 4.26837], [99.142559, 3.59035], [99.693998, 3.174329], [100.641434, 2.099381], [101.658012, 2.083697], [102.498271, 1.3987], [103.07684, 0.561361], [103.838396, 0.104542], [103.437645, -0.711946], [104.010789, -1.059212], [104.369991, -1.084843], [104.53949, -1.782372], [104.887893, -2.340425], [105.622111, -2.428844], [106.108593, -3.061777], [105.857446, -4.305525], [105.817655, -5.852356]]]]}},
  {type: "Feature", id: "IND", properties: {name: "India"}, geometry: {type: "Polygon", coordinates: [[[77.837451, 35.49401], [78.912269, 34.321936], [78.811086, 33.506198], [79.208892, 32.994395], [79.176129, 32.48378], [78.458446, 32.618164], [78.738894, 31.515906], [79.721367, 30.882715], [81.111256, 30.183481], [80.476721, 29.729865], [80.088425, 28.79447], [81.057203, 28.416095], [81.999987, 27.925479], [83.304249, 27.364506], [84.675018, 27.234901], [85.251779, 26.726198], [86.024393, 26.630985], [87.227472, 26.397898], [88.060238, 26.414615], [88.174804, 26.810405], [88.043133, 27.445819], [88.120441, 27.876542], [88.730326, 28.086865], [88.814248, 27.299316], [88.835643, 27.098966], [89.744528, 26.719403], [90.373275, 26.875724], [91.217513, 26.808648], [92.033484, 26.83831], [92.103712, 27.452614], [91.696657, 27.771742], [92.503119, 27.896876], [93.413348, 28.640629], [94.56599, 29.277438], [95.404802, 29.031717], [96.117679, 29.452802], [96.586591, 28.83098], [96.248833, 28.411031], [97.327114, 28.261583], [97.402561, 27.882536], [97.051989, 27.699059], [97.133999, 27.083774], [96.419366, 27.264589], [95.124768, 26.573572], [95.155153, 26.001307], [94.603249, 25.162495], [94.552658, 24.675238], [94.106742, 23.850741], [93.325188, 24.078556], [93.286327, 23.043658], [93.060294, 22.703111], [93.166128, 22.27846], [92.672721, 22.041239], [92.146035, 23.627499], [91.869928, 23.624346], [91.706475, 22.985264], [91.158963, 23.503527], [91.46773, 24.072639], [91.915093, 24.130414], [92.376202, 24.976693], [91.799596, 25.147432], [90.872211, 25.132601], [89.920693, 25.26975], [89.832481, 25.965082], [89.355094, 26.014407], [88.563049, 26.446526], [88.209789, 25.768066], [88.931554, 25.238692], [88.306373, 24.866079], [88.084422, 24.501657], [88.69994, 24.233715], [88.52977, 23.631142], [88.876312, 22.879146], [89.031961, 22.055708], [88.888766, 21.690588], [88.208497, 21.703172], [86.975704, 21.495562], [87.033169, 20.743308], [86.499351, 20.151638], [85.060266, 19.478579], [83.941006, 18.30201], [83.189217, 17.671221], [82.192792, 17.016636], [82.191242, 16.556664], [81.692719, 16.310219], [80.791999, 15.951972], [80.324896, 15.899185], [80.025069, 15.136415], [80.233274, 13.835771], [80.286294, 13.006261], [79.862547, 12.056215], [79.857999, 10.357275], [79.340512, 10.308854], [78.885345, 9.546136], [79.18972, 9.216544], [78.277941, 8.933047], [77.941165, 8.252959], [77.539898, 7.965535], [76.592979, 8.899276], [76.130061, 10.29963], [75.746467, 11.308251], [75.396101, 11.781245], [74.864816, 12.741936], [74.616717, 13.992583], [74.443859, 14.617222], [73.534199, 15.990652], [73.119909, 17.92857], [72.820909, 19.208234], [72.824475, 20.419503], [72.630533, 21.356009], [71.175273, 20.757441], [70.470459, 20.877331], [69.16413, 22.089298], [69.644928, 22.450775], [69.349597, 22.84318], [68.176645, 23.691965], [68.842599, 24.359134], [71.04324, 24.356524], [70.844699, 25.215102], [70.282873, 25.722229], [70.168927, 26.491872], [69.514393, 26.940966], [70.616496, 27.989196], [71.777666, 27.91318], [72.823752, 28.961592], [73.450638, 29.976413], [74.42138, 30.979815], [74.405929, 31.692639], [75.258642, 32.271105], [74.451559, 32.7649], [74.104294, 33.441473], [73.749948, 34.317699], [74.240203, 34.748887], [75.757061, 34.504923], [76.871722, 34.653544], [77.837451, 35.49401]]]}},
  {type: "Feature", id: "IRL", properties: {name: "Ireland"}, geometry: {type: "Polygon", coordinates: [[[-6.197885, 53.867565], [-6.032985, 53.153164], [-6.788857, 52.260118], [-8.561617, 51.669301], [-9.977086, 51.820455], [-9.166283, 52.864629], [-9.688525, 53.881363], [-8.327987, 54.664519], [-7.572168, 55.131622], [-7.366031, 54.595841], [-7.572168, 54.059956], [-6.95373, 54.073702], [-6.197885, 53.867565]]]}},
  {type: "Feature", id: "IRN", properties: {name: "Iran"}, geometry: {type: "Polygon", coordinates: [[[53.921598, 37.198918], [54.800304, 37.392421], [55.511578, 37.964117], [56.180375, 37.935127], [56.619366, 38.121394], [57.330434, 38.029229], [58.436154, 37.522309], [59.234762, 37.412988], [60.377638, 36.527383], [61.123071, 36.491597], [61.210817, 35.650072], [60.803193, 34.404102], [60.52843, 33.676446], [60.9637, 33.528832], [60.536078, 32.981269], [60.863655, 32.18292], [60.941945, 31.548075], [61.699314, 31.379506], [61.781222, 30.73585], [60.874248, 29.829239], [61.369309, 29.303276], [61.771868, 28.699334], [62.72783, 28.259645], [62.755426, 27.378923], [63.233898, 27.217047], [63.316632, 26.756532], [61.874187, 26.239975], [61.497363, 25.078237], [59.616134, 25.380157], [58.525761, 25.609962], [57.397251, 25.739902], [56.970766, 26.966106], [56.492139, 27.143305], [55.72371, 26.964633], [54.71509, 26.480658], [53.493097, 26.812369], [52.483598, 27.580849], [51.520763, 27.86569], [50.852948, 28.814521], [50.115009, 30.147773], [49.57685, 29.985715], [48.941333, 30.31709], [48.567971, 29.926778], [48.014568, 30.452457], [48.004698, 30.985137], [47.685286, 30.984853], [47.849204, 31.709176], [47.334661, 32.469155], [46.109362, 33.017287], [45.416691, 33.967798], [45.64846, 34.748138], [46.151788, 35.093259], [46.07634, 35.677383], [45.420618, 35.977546], [44.77267, 37.17045], [44.225756, 37.971584], [44.421403, 38.281281], [44.109225, 39.428136], [44.79399, 39.713003], [44.952688, 39.335765], [45.457722, 38.874139], [46.143623, 38.741201], [46.50572, 38.770605], [47.685079, 39.508364], [48.060095, 39.582235], [48.355529, 39.288765], [48.010744, 38.794015], [48.634375, 38.270378], [48.883249, 38.320245], [49.199612, 37.582874], [50.147771, 37.374567], [50.842354, 36.872814], [52.264025, 36.700422], [53.82579, 36.965031], [53.921598, 37.198918]]]}},
  {type: "Feature", id: "IRQ", properties: {name: "Iraq"}, geometry: {type: "Polygon", coordinates: [[[45.420618, 35.977546], [46.07634, 35.677383], [46.151788, 35.093259], [45.64846, 34.748138], [45.416691, 33.967798], [46.109362, 33.017287], [47.334661, 32.469155], [47.849204, 31.709176], [47.685286, 30.984853], [48.004698, 30.985137], [48.014568, 30.452457], [48.567971, 29.926778], [47.974519, 29.975819], [47.302622, 30.05907], [46.568713, 29.099025], [44.709499, 29.178891], [41.889981, 31.190009], [40.399994, 31.889992], [39.195468, 32.161009], [38.792341, 33.378686], [41.006159, 34.419372], [41.383965, 35.628317], [41.289707, 36.358815], [41.837064, 36.605854], [42.349591, 37.229873], [42.779126, 37.385264], [43.942259, 37.256228], [44.293452, 37.001514], [44.772699, 37.170445], [45.420618, 35.977546]]]}},
  {type: "Feature", id: "ISL", properties: {name: "Iceland"}, geometry: {type: "Polygon", coordinates: [[[-14.508695, 66.455892], [-14.739637, 65.808748], [-13.609732, 65.126671], [-14.909834, 64.364082], [-17.794438, 63.678749], [-18.656246, 63.496383], [-19.972755, 63.643635], [-22.762972, 63.960179], [-21.778484, 64.402116], [-23.955044, 64.89113], [-22.184403, 65.084968], [-22.227423, 65.378594], [-24.326184, 65.611189], [-23.650515, 66.262519], [-22.134922, 66.410469], [-20.576284, 65.732112], [-19.056842, 66.276601], [-17.798624, 65.993853], [-16.167819, 66.526792], [-14.508695, 66.455892]]]}},
  {type: "Feature", id: "ISR", properties: {name: "Israel"}, geometry: {type: "Polygon", coordinates: [[[35.719918, 32.709192], [35.545665, 32.393992], [35.18393, 32.532511], [34.974641, 31.866582], [35.225892, 31.754341], [34.970507, 31.616778], [34.927408, 31.353435], [35.397561, 31.489086], [35.420918, 31.100066], [34.922603, 29.501326], [34.265433, 31.219361], [34.556372, 31.548824], [34.488107, 31.605539], [34.752587, 32.072926], [34.955417, 32.827376], [35.098457, 33.080539], [35.126053, 33.0909], [35.460709, 33.08904], [35.552797, 33.264275], [35.821101, 33.277426], [35.836397, 32.868123], [35.700798, 32.716014], [35.719918, 32.709192]]]}},
  {type: "Feature", id: "ITA", properties: {name: "Italy"}, geometry: {type: "MultiPolygon", coordinates: [[[[15.520376, 38.231155], [15.160243, 37.444046], [15.309898, 37.134219], [15.099988, 36.619987], [14.335229, 36.996631], [13.826733, 37.104531], [12.431004, 37.61295], [12.570944, 38.126381], [13.741156, 38.034966], [14.761249, 38.143874], [15.520376, 38.231155]]], [[[9.210012, 41.209991], [9.809975, 40.500009], [9.669519, 39.177376], [9.214818, 39.240473], [8.806936, 38.906618], [8.428302, 39.171847], [8.388253, 40.378311], [8.159998, 40.950007], [8.709991, 40.899984], [9.210012, 41.209991]]], [[[12.376485, 46.767559], [13.806475, 46.509306], [13.69811, 46.016778], [13.93763, 45.591016], [13.141606, 45.736692], [12.328581, 45.381778], [12.383875, 44.885374], [12.261453, 44.600482], [12.589237, 44.091366], [13.526906, 43.587727], [14.029821, 42.761008], [15.14257, 41.95514], [15.926191, 41.961315], [16.169897, 41.740295], [15.889346, 41.541082], [16.785002, 41.179606], [17.519169, 40.877143], [18.376687, 40.355625], [18.480247, 40.168866], [18.293385, 39.810774], [17.73838, 40.277671], [16.869596, 40.442235], [16.448743, 39.795401], [17.17149, 39.4247], [17.052841, 38.902871], [16.635088, 38.843572], [16.100961, 37.985899], [15.684087, 37.908849], [15.687963, 38.214593], [15.891981, 38.750942], [16.109332, 38.964547], [15.718814, 39.544072], [15.413613, 40.048357], [14.998496, 40.172949], [14.703268, 40.60455], [14.060672, 40.786348], [13.627985, 41.188287], [12.888082, 41.25309], [12.106683, 41.704535], [11.191906, 42.355425], [10.511948, 42.931463], [10.200029, 43.920007], [9.702488, 44.036279], [8.888946, 44.366336], [8.428561, 44.231228], [7.850767, 43.767148], [7.435185, 43.693845], [7.549596, 44.127901], [7.007562, 44.254767], [6.749955, 45.028518], [7.096652, 45.333099], [6.802355, 45.70858], [6.843593, 45.991147], [7.273851, 45.776948], [7.755992, 45.82449], [8.31663, 46.163642], [8.489952, 46.005151], [8.966306, 46.036932], [9.182882, 46.440215], [9.922837, 46.314899], [10.363378, 46.483571], [10.442701, 46.893546], [11.048556, 46.751359], [11.164828, 46.941579], [12.153088, 47.115393], [12.376485, 46.767559]]]]}},
  {type: "Feature", id: "JAM", properties: {name: "Jamaica"}, geometry: {type: "Polygon", coordinates: [[[-77.569601, 18.490525], [-76.896619, 18.400867], [-76.365359, 18.160701], [-76.199659, 17.886867], [-76.902561, 17.868238], [-77.206341, 17.701116], [-77.766023, 17.861597], [-78.337719, 18.225968], [-78.217727, 18.454533], [-77.797365, 18.524218], [-77.569601, 18.490525]]]}},
  {type: "Feature", id: "JOR", properties: {name: "Jordan"}, geometry: {type: "Polygon", coordinates: [[[35.545665, 32.393992], [35.719918, 32.709192], [36.834062, 32.312938], [38.792341, 33.378686], [39.195468, 32.161009], [39.004886, 32.010217], [37.002166, 31.508413], [37.998849, 30.5085], [37.66812, 30.338665], [37.503582, 30.003776], [36.740528, 29.865283], [36.501214, 29.505254], [36.068941, 29.197495], [34.956037, 29.356555], [34.922603, 29.501326], [35.420918, 31.100066], [35.397561, 31.489086], [35.545252, 31.782505], [35.545665, 32.393992]]]}},
  {type: "Feature", id: "JPN", properties: {name: "Japan"}, geometry: {type: "MultiPolygon", coordinates: [[[[134.638428, 34.149234], [134.766379, 33.806335], [134.203416, 33.201178], [133.79295, 33.521985], [133.280268, 33.28957], [133.014858, 32.704567], [132.363115, 32.989382], [132.371176, 33.463642], [132.924373, 34.060299], [133.492968, 33.944621], [133.904106, 34.364931], [134.638428, 34.149234]]], [[[140.976388, 37.142074], [140.59977, 36.343983], [140.774074, 35.842877], [140.253279, 35.138114], [138.975528, 34.6676], [137.217599, 34.606286], [135.792983, 33.464805], [135.120983, 33.849071], [135.079435, 34.596545], [133.340316, 34.375938], [132.156771, 33.904933], [130.986145, 33.885761], [132.000036, 33.149992], [131.33279, 31.450355], [130.686318, 31.029579], [130.20242, 31.418238], [130.447676, 32.319475], [129.814692, 32.61031], [129.408463, 33.296056], [130.353935, 33.604151], [130.878451, 34.232743], [131.884229, 34.749714], [132.617673, 35.433393], [134.608301, 35.731618], [135.677538, 35.527134], [136.723831, 37.304984], [137.390612, 36.827391], [138.857602, 37.827485], [139.426405, 38.215962], [140.05479, 39.438807], [139.883379, 40.563312], [140.305783, 41.195005], [141.368973, 41.37856], [141.914263, 39.991616], [141.884601, 39.180865], [140.959489, 38.174001], [140.976388, 37.142074]]], [[[143.910162, 44.1741], [144.613427, 43.960883], [145.320825, 44.384733], [145.543137, 43.262088], [144.059662, 42.988358], [143.18385, 41.995215], [141.611491, 42.678791], [141.067286, 41.584594], [139.955106, 41.569556], [139.817544, 42.563759], [140.312087, 43.333273], [141.380549, 43.388825], [141.671952, 44.772125], [141.967645, 45.551483], [143.14287, 44.510358], [143.910162, 44.1741]]]]}},
  {type: "Feature", id: "KAZ", properties: {name: "Kazakhstan"}, geometry: {type: "Polygon", coordinates: [[[70.962315, 42.266154], [70.388965, 42.081308], [69.070027, 41.384244], [68.632483, 40.668681], [68.259896, 40.662325], [67.985856, 41.135991], [66.714047, 41.168444], [66.510649, 41.987644], [66.023392, 41.994646], [66.098012, 42.99766], [64.900824, 43.728081], [63.185787, 43.650075], [62.0133, 43.504477], [61.05832, 44.405817], [60.239972, 44.784037], [58.689989, 45.500014], [58.503127, 45.586804], [55.928917, 44.995858], [55.968191, 41.308642], [55.455251, 41.259859], [54.755345, 42.043971], [54.079418, 42.324109], [52.944293, 42.116034], [52.50246, 41.783316], [52.446339, 42.027151], [52.692112, 42.443895], [52.501426, 42.792298], [51.342427, 43.132975], [50.891292, 44.031034], [50.339129, 44.284016], [50.305643, 44.609836], [51.278503, 44.514854], [51.316899, 45.245998], [52.16739, 45.408391], [53.040876, 45.259047], [53.220866, 46.234646], [53.042737, 46.853006], [52.042023, 46.804637], [51.191945, 47.048705], [50.034083, 46.60899], [49.10116, 46.39933], [48.593241, 46.561034], [48.694734, 47.075628], [48.057253, 47.743753], [47.315231, 47.715847], [46.466446, 48.394152], [47.043672, 49.152039], [46.751596, 49.356006], [47.54948, 50.454698], [48.577841, 49.87476], [48.702382, 50.605128], [50.766648, 51.692762], [52.328724, 51.718652], [54.532878, 51.02624], [55.716941, 50.621717], [56.777961, 51.043551], [58.363291, 51.063653], [59.642282, 50.545442], [59.932807, 50.842194], [61.337424, 50.79907], [61.588003, 51.272659], [59.967534, 51.96042], [60.927269, 52.447548], [60.739993, 52.719986], [61.699986, 52.979996], [60.978066, 53.664993], [61.436591, 54.006265], [65.178534, 54.354228], [65.666876, 54.601267], [68.1691, 54.970392], [69.068167, 55.38525], [70.865267, 55.169734], [71.180131, 54.133285], [72.22415, 54.376655], [73.508516, 54.035617], [73.425679, 53.48981], [74.384845, 53.546861], [76.8911, 54.490524], [76.525179, 54.177003], [77.800916, 53.404415], [80.03556, 50.864751], [80.568447, 51.388336], [81.945986, 50.812196], [83.383004, 51.069183], [83.935115, 50.889246], [84.416377, 50.3114], [85.11556, 50.117303], [85.54127, 49.692859], [86.829357, 49.826675], [87.35997, 49.214981], [86.598776, 48.549182], [85.768233, 48.455751], [85.720484, 47.452969], [85.16429, 47.000956], [83.180484, 47.330031], [82.458926, 45.53965], [81.947071, 45.317027], [79.966106, 44.917517], [80.866206, 43.180362], [80.18015, 42.920068], [80.25999, 42.349999], [79.643645, 42.496683], [79.142177, 42.856092], [77.658392, 42.960686], [76.000354, 42.988022], [75.636965, 42.8779], [74.212866, 43.298339], [73.645304, 43.091272], [73.489758, 42.500894], [71.844638, 42.845395], [71.186281, 42.704293], [70.962315, 42.266154]]]}},
  {type: "Feature", id: "KEN", properties: {name: "Kenya"}, geometry: {type: "Polygon", coordinates: [[[40.993, -0.85829], [41.58513, -1.68325], [40.88477, -2.08255], [40.63785, -2.49979], [40.26304, -2.57309], [40.12119, -3.27768], [39.80006, -3.68116], [39.60489, -4.34653], [39.20222, -4.67677], [37.7669, -3.67712], [37.69869, -3.09699], [34.07262, -1.05982], [33.903711, -0.95], [33.893569, 0.109814], [34.18, 0.515], [34.6721, 1.17694], [35.03599, 1.90584], [34.59607, 3.05374], [34.47913, 3.5556], [34.005, 4.249885], [34.620196, 4.847123], [35.298007, 5.506], [35.817448, 5.338232], [35.817448, 4.776966], [36.159079, 4.447864], [36.855093, 4.447864], [38.120915, 3.598605], [38.43697, 3.58851], [38.67114, 3.61607], [38.89251, 3.50074], [39.559384, 3.42206], [39.85494, 3.83879], [40.76848, 4.25702], [41.1718, 3.91909], [41.855083, 3.918912], [40.98105, 2.78452], [40.993, -0.85829]]]}},
  {type: "Feature", id: "KGZ", properties: {name: "Kyrgyzstan"}, geometry: {type: "Polygon", coordinates: [[[70.962315, 42.266154], [71.186281, 42.704293], [71.844638, 42.845395], [73.489758, 42.500894], [73.645304, 43.091272], [74.212866, 43.298339], [75.636965, 42.8779], [76.000354, 42.988022], [77.658392, 42.960686], [79.142177, 42.856092], [79.643645, 42.496683], [80.25999, 42.349999], [80.11943, 42.123941], [78.543661, 41.582243], [78.187197, 41.185316], [76.904484, 41.066486], [76.526368, 40.427946], [75.467828, 40.562072], [74.776862, 40.366425], [73.822244, 39.893973], [73.960013, 39.660008], [73.675379, 39.431237], [71.784694, 39.279463], [70.549162, 39.604198], [69.464887, 39.526683], [69.55961, 40.103211], [70.648019, 39.935754], [71.014198, 40.244366], [71.774875, 40.145844], [73.055417, 40.866033], [71.870115, 41.3929], [71.157859, 41.143587], [70.420022, 41.519998], [71.259248, 42.167711], [70.962315, 42.266154]]]}},
  {type: "Feature", id: "KHM", properties: {name: "Cambodia"}, geometry: {type: "Polygon", coordinates: [[[103.49728, 10.632555], [103.09069, 11.153661], [102.584932, 12.186595], [102.348099, 13.394247], [102.988422, 14.225721], [104.281418, 14.416743], [105.218777, 14.273212], [106.043946, 13.881091], [106.496373, 14.570584], [107.382727, 14.202441], [107.614548, 13.535531], [107.491403, 12.337206], [105.810524, 11.567615], [106.24967, 10.961812], [105.199915, 10.88931], [104.334335, 10.486544], [103.49728, 10.632555]]]}},
  {type: "Feature", id: "KOR", properties: {name: "South Korea"}, geometry: {type: "Polygon", coordinates: [[[128.349716, 38.612243], [129.21292, 37.432392], [129.46045, 36.784189], [129.468304, 35.632141], [129.091377, 35.082484], [128.18585, 34.890377], [127.386519, 34.475674], [126.485748, 34.390046], [126.37392, 34.93456], [126.559231, 35.684541], [126.117398, 36.725485], [126.860143, 36.893924], [126.174759, 37.749686], [126.237339, 37.840378], [126.68372, 37.804773], [127.073309, 38.256115], [127.780035, 38.304536], [128.205746, 38.370397], [128.349716, 38.612243]]]}},
  {type: "Feature", id: "CS-KM", properties: {name: "Kosovo"}, geometry: {type: "Polygon", coordinates: [[[20.76216, 42.05186], [20.71731, 41.84711], [20.59023, 41.85541], [20.52295, 42.21787], [20.28374, 42.32025], [20.0707, 42.58863], [20.25758, 42.81275], [20.49679, 42.88469], [20.63508, 43.21671], [20.81448, 43.27205], [20.95651, 43.13094], [21.143395, 43.068685], [21.27421, 42.90959], [21.43866, 42.86255], [21.63302, 42.67717], [21.77505, 42.6827], [21.66292, 42.43922], [21.54332, 42.32025], [21.576636, 42.245224], [21.3527, 42.2068], [20.76216, 42.05186]]]}},
  {type: "Feature", id: "KWT", properties: {name: "Kuwait"}, geometry: {type: "Polygon", coordinates: [[[47.974519, 29.975819], [48.183189, 29.534477], [48.093943, 29.306299], [48.416094, 28.552004], [47.708851, 28.526063], [47.459822, 29.002519], [46.568713, 29.099025], [47.302622, 30.05907], [47.974519, 29.975819]]]}},
  {type: "Feature", id: "LAO", properties: {name: "Laos"}, geometry: {type: "Polygon", coordinates: [[[105.218777, 14.273212], [105.544338, 14.723934], [105.589039, 15.570316], [104.779321, 16.441865], [104.716947, 17.428859], [103.956477, 18.240954], [103.200192, 18.309632], [102.998706, 17.961695], [102.413005, 17.932782], [102.113592, 18.109102], [101.059548, 17.512497], [101.035931, 18.408928], [101.282015, 19.462585], [100.606294, 19.508344], [100.548881, 20.109238], [100.115988, 20.41785], [100.329101, 20.786122], [101.180005, 21.436573], [101.270026, 21.201652], [101.80312, 21.174367], [101.652018, 22.318199], [102.170436, 22.464753], [102.754896, 21.675137], [103.203861, 20.766562], [104.435, 20.758733], [104.822574, 19.886642], [104.183388, 19.624668], [103.896532, 19.265181], [105.094598, 18.666975], [105.925762, 17.485315], [106.556008, 16.604284], [107.312706, 15.908538], [107.564525, 15.202173], [107.382727, 14.202441], [106.496373, 14.570584], [106.043946, 13.881091], [105.218777, 14.273212]]]}},
  {type: "Feature", id: "LBN", properties: {name: "Lebanon"}, geometry: {type: "Polygon", coordinates: [[[35.821101, 33.277426], [35.552797, 33.264275], [35.460709, 33.08904], [35.126053, 33.0909], [35.482207, 33.90545], [35.979592, 34.610058], [35.998403, 34.644914], [36.448194, 34.593935], [36.61175, 34.201789], [36.06646, 33.824912], [35.821101, 33.277426]]]}},
  {type: "Feature", id: "LBR", properties: {name: "Liberia"}, geometry: {type: "Polygon", coordinates: [[[-7.712159, 4.364566], [-7.974107, 4.355755], [-9.004794, 4.832419], [-9.91342, 5.593561], [-10.765384, 6.140711], [-11.438779, 6.785917], [-11.199802, 7.105846], [-11.146704, 7.396706], [-10.695595, 7.939464], [-10.230094, 8.406206], [-10.016567, 8.428504], [-9.755342, 8.541055], [-9.33728, 7.928534], [-9.403348, 7.526905], [-9.208786, 7.313921], [-8.926065, 7.309037], [-8.722124, 7.711674], [-8.439298, 7.686043], [-8.485446, 7.395208], [-8.385452, 6.911801], [-8.60288, 6.467564], [-8.311348, 6.193033], [-7.993693, 6.12619], [-7.570153, 5.707352], [-7.539715, 5.313345], [-7.635368, 5.188159], [-7.712159, 4.364566]]]}},
  {type: "Feature", id: "LBY", properties: {name: "Libya"}, geometry: {type: "Polygon", coordinates: [[[14.8513, 22.86295], [14.143871, 22.491289], [13.581425, 23.040506], [11.999506, 23.471668], [11.560669, 24.097909], [10.771364, 24.562532], [10.303847, 24.379313], [9.948261, 24.936954], [9.910693, 25.365455], [9.319411, 26.094325], [9.716286, 26.512206], [9.629056, 27.140953], [9.756128, 27.688259], [9.683885, 28.144174], [9.859998, 28.95999], [9.805634, 29.424638], [9.48214, 30.307556], [9.970017, 30.539325], [10.056575, 30.961831], [9.950225, 31.37607], [10.636901, 31.761421], [10.94479, 32.081815], [11.432253, 32.368903], [11.488787, 33.136996], [12.66331, 32.79278], [13.08326, 32.87882], [13.91868, 32.71196], [15.24563, 32.26508], [15.71394, 31.37626], [16.61162, 31.18218], [18.02109, 30.76357], [19.08641, 30.26639], [19.57404, 30.52582], [20.05335, 30.98576], [19.82033, 31.75179], [20.13397, 32.2382], [20.85452, 32.7068], [21.54298, 32.8432], [22.89576, 32.63858], [23.2368, 32.19149], [23.60913, 32.18726], [23.9275, 32.01667], [24.92114, 31.89936], [25.16482, 31.56915], [24.80287, 31.08929], [24.95762, 30.6616], [24.70007, 30.04419], [25, 29.238655], [25, 25.6825], [25, 22], [25, 20.00304], [23.85, 20], [23.83766, 19.58047], [19.84926, 21.49509], [15.86085, 23.40972], [14.8513, 22.86295]]]}},
  {type: "Feature", id: "LKA", properties: {name: "Sri Lanka"}, geometry: {type: "Polygon", coordinates: [[[81.787959, 7.523055], [81.637322, 6.481775], [81.21802, 6.197141], [80.348357, 5.96837], [79.872469, 6.763463], [79.695167, 8.200843], [80.147801, 9.824078], [80.838818, 9.268427], [81.304319, 8.564206], [81.787959, 7.523055]]]}},
  {type: "Feature", id: "LSO", properties: {name: "Lesotho"}, geometry: {type: "Polygon", coordinates: [[[28.978263, -28.955597], [29.325166, -29.257387], [29.018415, -29.743766], [28.8484, -30.070051], [28.291069, -30.226217], [28.107205, -30.545732], [27.749397, -30.645106], [26.999262, -29.875954], [27.532511, -29.242711], [28.074338, -28.851469], [28.5417, -28.647502], [28.978263, -28.955597]]]}},
  {type: "Feature", id: "LTU", properties: {name: "Lithuania"}, geometry: {type: "Polygon", coordinates: [[[22.731099, 54.327537], [22.651052, 54.582741], [22.757764, 54.856574], [22.315724, 55.015299], [21.268449, 55.190482], [21.0558, 56.031076], [22.201157, 56.337802], [23.878264, 56.273671], [24.860684, 56.372528], [25.000934, 56.164531], [25.533047, 56.100297], [26.494331, 55.615107], [26.588279, 55.167176], [25.768433, 54.846963], [25.536354, 54.282423], [24.450684, 53.905702], [23.484128, 53.912498], [23.243987, 54.220567], [22.731099, 54.327537]]]}},
  {type: "Feature", id: "LUX", properties: {name: "Luxembourg"}, geometry: {type: "Polygon", coordinates: [[[6.043073, 50.128052], [6.242751, 49.902226], [6.18632, 49.463803], [5.897759, 49.442667], [5.674052, 49.529484], [5.782417, 50.090328], [6.043073, 50.128052]]]}},
  {type: "Feature", id: "LVA", properties: {name: "Latvia"}, geometry: {type: "Polygon", coordinates: [[[21.0558, 56.031076], [21.090424, 56.783873], [21.581866, 57.411871], [22.524341, 57.753374], [23.318453, 57.006236], [24.12073, 57.025693], [24.312863, 57.793424], [25.164594, 57.970157], [25.60281, 57.847529], [26.463532, 57.476389], [27.288185, 57.474528], [27.770016, 57.244258], [27.855282, 56.759326], [28.176709, 56.16913], [27.10246, 55.783314], [26.494331, 55.615107], [25.533047, 56.100297], [25.000934, 56.164531], [24.860684, 56.372528], [23.878264, 56.273671], [22.201157, 56.337802], [21.0558, 56.031076]]]}},
  {type: "Feature", id: "MAR", properties: {name: "Morocco"}, geometry: {type: "Polygon", coordinates: [[[-5.193863, 35.755182], [-4.591006, 35.330712], [-3.640057, 35.399855], [-2.604306, 35.179093], [-2.169914, 35.168396], [-1.792986, 34.527919], [-1.733455, 33.919713], [-1.388049, 32.864015], [-1.124551, 32.651522], [-1.307899, 32.262889], [-2.616605, 32.094346], [-3.06898, 31.724498], [-3.647498, 31.637294], [-3.690441, 30.896952], [-4.859646, 30.501188], [-5.242129, 30.000443], [-6.060632, 29.7317], [-7.059228, 29.579228], [-8.674116, 28.841289], [-8.66559, 27.656426], [-8.817809, 27.656426], [-8.817828, 27.656426], [-8.794884, 27.120696], [-9.413037, 27.088476], [-9.735343, 26.860945], [-10.189424, 26.860945], [-10.551263, 26.990808], [-11.392555, 26.883424], [-11.71822, 26.104092], [-12.030759, 26.030866], [-12.500963, 24.770116], [-13.89111, 23.691009], [-14.221168, 22.310163], [-14.630833, 21.86094], [-14.750955, 21.5006], [-17.002962, 21.420734], [-17.020428, 21.42231], [-16.973248, 21.885745], [-16.589137, 22.158234], [-16.261922, 22.67934], [-16.326414, 23.017768], [-15.982611, 23.723358], [-15.426004, 24.359134], [-15.089332, 24.520261], [-14.824645, 25.103533], [-14.800926, 25.636265], [-14.43994, 26.254418], [-13.773805, 26.618892], [-13.139942, 27.640148], [-13.121613, 27.654148], [-12.618837, 28.038186], [-11.688919, 28.148644], [-10.900957, 28.832142], [-10.399592, 29.098586], [-9.564811, 29.933574], [-9.814718, 31.177736], [-9.434793, 32.038096], [-9.300693, 32.564679], [-8.657476, 33.240245], [-7.654178, 33.697065], [-6.912544, 34.110476], [-6.244342, 35.145865], [-5.929994, 35.759988], [-5.193863, 35.755182]]]}},
  {type: "Feature", id: "MDA", properties: {name: "Moldova"}, geometry: {type: "Polygon", coordinates: [[[26.619337, 48.220726], [26.857824, 48.368211], [27.522537, 48.467119], [28.259547, 48.155562], [28.670891, 48.118149], [29.122698, 47.849095], [29.050868, 47.510227], [29.415135, 47.346645], [29.559674, 46.928583], [29.908852, 46.674361], [29.83821, 46.525326], [30.024659, 46.423937], [29.759972, 46.349988], [29.170654, 46.379262], [29.072107, 46.517678], [28.862972, 46.437889], [28.933717, 46.25883], [28.659987, 45.939987], [28.485269, 45.596907], [28.233554, 45.488283], [28.054443, 45.944586], [28.160018, 46.371563], [28.12803, 46.810476], [27.551166, 47.405117], [27.233873, 47.826771], [26.924176, 48.123264], [26.619337, 48.220726]]]}},
  {type: "Feature", id: "MDG", properties: {name: "Madagascar"}, geometry: {type: "Polygon", coordinates: [[[49.543519, -12.469833], [49.808981, -12.895285], [50.056511, -13.555761], [50.217431, -14.758789], [50.476537, -15.226512], [50.377111, -15.706069], [50.200275, -16.000263], [49.860606, -15.414253], [49.672607, -15.710204], [49.863344, -16.451037], [49.774564, -16.875042], [49.498612, -17.106036], [49.435619, -17.953064], [49.041792, -19.118781], [48.548541, -20.496888], [47.930749, -22.391501], [47.547723, -23.781959], [47.095761, -24.94163], [46.282478, -25.178463], [45.409508, -25.601434], [44.833574, -25.346101], [44.03972, -24.988345], [43.763768, -24.460677], [43.697778, -23.574116], [43.345654, -22.776904], [43.254187, -22.057413], [43.433298, -21.336475], [43.893683, -21.163307], [43.89637, -20.830459], [44.374325, -20.072366], [44.464397, -19.435454], [44.232422, -18.961995], [44.042976, -18.331387], [43.963084, -17.409945], [44.312469, -16.850496], [44.446517, -16.216219], [44.944937, -16.179374], [45.502732, -15.974373], [45.872994, -15.793454], [46.312243, -15.780018], [46.882183, -15.210182], [47.70513, -14.594303], [48.005215, -14.091233], [47.869047, -13.663869], [48.293828, -13.784068], [48.84506, -13.089175], [48.863509, -12.487868], [49.194651, -12.040557], [49.543519, -12.469833]]]}},
  {type: "Feature", id: "MEX", properties: {name: "Mexico"}, geometry: {type: "Polygon", coordinates: [[[-97.140008, 25.869997], [-97.528072, 24.992144], [-97.702946, 24.272343], [-97.776042, 22.93258], [-97.872367, 22.444212], [-97.699044, 21.898689], [-97.38896, 21.411019], [-97.189333, 20.635433], [-96.525576, 19.890931], [-96.292127, 19.320371], [-95.900885, 18.828024], [-94.839063, 18.562717], [-94.42573, 18.144371], [-93.548651, 18.423837], [-92.786114, 18.524839], [-92.037348, 18.704569], [-91.407903, 18.876083], [-90.77187, 19.28412], [-90.53359, 19.867418], [-90.451476, 20.707522], [-90.278618, 20.999855], [-89.601321, 21.261726], [-88.543866, 21.493675], [-87.658417, 21.458846], [-87.05189, 21.543543], [-86.811982, 21.331515], [-86.845908, 20.849865], [-87.383291, 20.255405], [-87.621054, 19.646553], [-87.43675, 19.472403], [-87.58656, 19.04013], [-87.837191, 18.259816], [-88.090664, 18.516648], [-88.300031, 18.499982], [-88.490123, 18.486831], [-88.848344, 17.883198], [-89.029857, 18.001511], [-89.150909, 17.955468], [-89.14308, 17.808319], [-90.067934, 17.819326], [-91.00152, 17.817595], [-91.002269, 17.254658], [-91.453921, 17.252177], [-91.08167, 16.918477], [-90.711822, 16.687483], [-90.600847, 16.470778], [-90.438867, 16.41011], [-90.464473, 16.069562], [-91.74796, 16.066565], [-92.229249, 15.251447], [-92.087216, 15.064585], [-92.20323, 14.830103], [-92.22775, 14.538829], [-93.359464, 15.61543], [-93.875169, 15.940164], [-94.691656, 16.200975], [-95.250227, 16.128318], [-96.053382, 15.752088], [-96.557434, 15.653515], [-97.263592, 15.917065], [-98.01303, 16.107312], [-98.947676, 16.566043], [-99.697397, 16.706164], [-100.829499, 17.171071], [-101.666089, 17.649026], [-101.918528, 17.91609], [-102.478132, 17.975751], [-103.50099, 18.292295], [-103.917527, 18.748572], [-104.99201, 19.316134], [-105.493038, 19.946767], [-105.731396, 20.434102], [-105.397773, 20.531719], [-105.500661, 20.816895], [-105.270752, 21.076285], [-105.265817, 21.422104], [-105.603161, 21.871146], [-105.693414, 22.26908], [-106.028716, 22.773752], [-106.90998, 23.767774], [-107.915449, 24.548915], [-108.401905, 25.172314], [-109.260199, 25.580609], [-109.444089, 25.824884], [-109.291644, 26.442934], [-109.801458, 26.676176], [-110.391732, 27.162115], [-110.641019, 27.859876], [-111.178919, 27.941241], [-111.759607, 28.467953], [-112.228235, 28.954409], [-112.271824, 29.266844], [-112.809594, 30.021114], [-113.163811, 30.786881], [-113.148669, 31.170966], [-113.871881, 31.567608], [-114.205737, 31.524045], [-114.776451, 31.799532], [-114.9367, 31.393485], [-114.771232, 30.913617], [-114.673899, 30.162681], [-114.330974, 29.750432], [-113.588875, 29.061611], [-113.424053, 28.826174], [-113.271969, 28.754783], [-113.140039, 28.411289], [-112.962298, 28.42519], [-112.761587, 27.780217], [-112.457911, 27.525814], [-112.244952, 27.171727], [-111.616489, 26.662817], [-111.284675, 25.73259], [-110.987819, 25.294606], [-110.710007, 24.826004], [-110.655049, 24.298595], [-110.172856, 24.265548], [-109.771847, 23.811183], [-109.409104, 23.364672], [-109.433392, 23.185588], [-109.854219, 22.818272], [-110.031392, 22.823078], [-110.295071, 23.430973], [-110.949501, 24.000964], [-111.670568, 24.484423], [-112.182036, 24.738413], [-112.148989, 25.470125], [-112.300711, 26.012004], [-112.777297, 26.32196], [-113.464671, 26.768186], [-113.59673, 26.63946], [-113.848937, 26.900064], [-114.465747, 27.14209], [-115.055142, 27.722727], [-114.982253, 27.7982], [-114.570366, 27.741485], [-114.199329, 28.115003], [-114.162018, 28.566112], [-114.931842, 29.279479], [-115.518654, 29.556362], [-115.887365, 30.180794], [-116.25835, 30.836464], [-116.721526, 31.635744], [-117.12776, 32.53534], [-115.99135, 32.61239], [-114.72139, 32.72083], [-114.815, 32.52528], [-113.30498, 32.03914], [-111.02361, 31.33472], [-109.035, 31.34194], [-108.24194, 31.34222], [-108.24, 31.754854], [-106.50759, 31.75452], [-106.1429, 31.39995], [-105.63159, 31.08383], [-105.03737, 30.64402], [-104.70575, 30.12173], [-104.45697, 29.57196], [-103.94, 29.27], [-103.11, 28.97], [-102.48, 29.76], [-101.6624, 29.7793], [-100.9576, 29.38071], [-100.45584, 28.69612], [-100.11, 28.11], [-99.52, 27.54], [-99.3, 26.84], [-99.02, 26.37], [-98.24, 26.06], [-97.53, 25.84], [-97.140008, 25.869997]]]}},
  {type: "Feature", id: "MKD", properties: {name: "Macedonia"}, geometry: {type: "Polygon", coordinates: [[[20.59023, 41.85541], [20.71731, 41.84711], [20.76216, 42.05186], [21.3527, 42.2068], [21.576636, 42.245224], [21.91708, 42.30364], [22.380526, 42.32026], [22.881374, 41.999297], [22.952377, 41.337994], [22.76177, 41.3048], [22.597308, 41.130487], [22.055378, 41.149866], [21.674161, 40.931275], [21.02004, 40.842727], [20.60518, 41.08622], [20.46315, 41.51509], [20.59023, 41.85541]]]}},
  {type: "Feature", id: "MLI", properties: {name: "Mali"}, geometry: {type: "Polygon", coordinates: [[[-12.17075, 14.616834], [-11.834208, 14.799097], [-11.666078, 15.388208], [-11.349095, 15.411256], [-10.650791, 15.132746], [-10.086846, 15.330486], [-9.700255, 15.264107], [-9.550238, 15.486497], [-5.537744, 15.50169], [-5.315277, 16.201854], [-5.488523, 16.325102], [-5.971129, 20.640833], [-6.453787, 24.956591], [-4.923337, 24.974574], [-1.550055, 22.792666], [1.823228, 20.610809], [2.060991, 20.142233], [2.683588, 19.85623], [3.146661, 19.693579], [3.158133, 19.057364], [4.267419, 19.155265], [4.27021, 16.852227], [3.723422, 16.184284], [3.638259, 15.56812], [2.749993, 15.409525], [1.385528, 15.323561], [1.015783, 14.968182], [0.374892, 14.928908], [-0.266257, 14.924309], [-0.515854, 15.116158], [-1.066363, 14.973815], [-2.001035, 14.559008], [-2.191825, 14.246418], [-2.967694, 13.79815], [-3.103707, 13.541267], [-3.522803, 13.337662], [-4.006391, 13.472485], [-4.280405, 13.228444], [-4.427166, 12.542646], [-5.220942, 11.713859], [-5.197843, 11.375146], [-5.470565, 10.95127], [-5.404342, 10.370737], [-5.816926, 10.222555], [-6.050452, 10.096361], [-6.205223, 10.524061], [-6.493965, 10.411303], [-6.666461, 10.430811], [-6.850507, 10.138994], [-7.622759, 10.147236], [-7.89959, 10.297382], [-8.029944, 10.206535], [-8.335377, 10.494812], [-8.282357, 10.792597], [-8.407311, 10.909257], [-8.620321, 10.810891], [-8.581305, 11.136246], [-8.376305, 11.393646], [-8.786099, 11.812561], [-8.905265, 12.088358], [-9.127474, 12.30806], [-9.327616, 12.334286], [-9.567912, 12.194243], [-9.890993, 12.060479], [-10.165214, 11.844084], [-10.593224, 11.923975], [-10.87083, 12.177887], [-11.036556, 12.211245], [-11.297574, 12.077971], [-11.456169, 12.076834], [-11.513943, 12.442988], [-11.467899, 12.754519], [-11.553398, 13.141214], [-11.927716, 13.422075], [-12.124887, 13.994727], [-12.17075, 14.616834]]]}},
  {type: "Feature", id: "MLT", properties: {name: "Malta"}, geometry: {type: "MultiPolygon", coordinates: [[[[14.566171, 35.852721], [14.532684, 35.820191], [14.436463, 35.821664], [14.352334, 35.872281], [14.3513, 35.978399], [14.448348, 35.957444], [14.537025, 35.886285], [14.566171, 35.852721]]], [[[14.313473, 36.027569], [14.253632, 36.012143], [14.194204, 36.042245], [14.180354, 36.060383], [14.263243, 36.075809], [14.303758, 36.062295], [14.320914, 36.03625], [14.313473, 36.027569]]]]}},
  {type: "Feature", id: "MMR", properties: {name: "Myanmar"}, geometry: {type: "Polygon", coordinates: [[[99.543309, 20.186598], [98.959676, 19.752981], [98.253724, 19.708203], [97.797783, 18.62708], [97.375896, 18.445438], [97.859123, 17.567946], [98.493761, 16.837836], [98.903348, 16.177824], [98.537376, 15.308497], [98.192074, 15.123703], [98.430819, 14.622028], [99.097755, 13.827503], [99.212012, 13.269294], [99.196354, 12.804748], [99.587286, 11.892763], [99.038121, 10.960546], [98.553551, 9.93296], [98.457174, 10.675266], [98.764546, 11.441292], [98.428339, 12.032987], [98.509574, 13.122378], [98.103604, 13.64046], [97.777732, 14.837286], [97.597072, 16.100568], [97.16454, 16.928734], [96.505769, 16.427241], [95.369352, 15.71439], [94.808405, 15.803454], [94.188804, 16.037936], [94.533486, 17.27724], [94.324817, 18.213514], [93.540988, 19.366493], [93.663255, 19.726962], [93.078278, 19.855145], [92.368554, 20.670883], [92.303234, 21.475485], [92.652257, 21.324048], [92.672721, 22.041239], [93.166128, 22.27846], [93.060294, 22.703111], [93.286327, 23.043658], [93.325188, 24.078556], [94.106742, 23.850741], [94.552658, 24.675238], [94.603249, 25.162495], [95.155153, 26.001307], [95.124768, 26.573572], [96.419366, 27.264589], [97.133999, 27.083774], [97.051989, 27.699059], [97.402561, 27.882536], [97.327114, 28.261583], [97.911988, 28.335945], [98.246231, 27.747221], [98.68269, 27.508812], [98.712094, 26.743536], [98.671838, 25.918703], [97.724609, 25.083637], [97.60472, 23.897405], [98.660262, 24.063286], [98.898749, 23.142722], [99.531992, 22.949039], [99.240899, 22.118314], [99.983489, 21.742937], [100.416538, 21.558839], [101.150033, 21.849984], [101.180005, 21.436573], [100.329101, 20.786122], [100.115988, 20.41785], [99.543309, 20.186598]]]}},
  {type: "Feature", id: "MNE", properties: {name: "Montenegro"}, geometry: {type: "Polygon", coordinates: [[[19.801613, 42.500093], [19.738051, 42.688247], [19.30449, 42.19574], [19.37177, 41.87755], [19.16246, 41.95502], [18.88214, 42.28151], [18.45, 42.48], [18.56, 42.65], [18.70648, 43.20011], [19.03165, 43.43253], [19.21852, 43.52384], [19.48389, 43.35229], [19.63, 43.21378], [19.95857, 43.10604], [20.3398, 42.89852], [20.25758, 42.81275], [20.0707, 42.58863], [19.801613, 42.500093]]]}},
  {type: "Feature", id: "MNG", properties: {name: "Mongolia"}, geometry: {type: "Polygon", coordinates: [[[87.751264, 49.297198], [88.805567, 49.470521], [90.713667, 50.331812], [92.234712, 50.802171], [93.104219, 50.49529], [94.147566, 50.480537], [94.815949, 50.013433], [95.814028, 49.977467], [97.259728, 49.726061], [98.231762, 50.422401], [97.82574, 51.010995], [98.861491, 52.047366], [99.981732, 51.634006], [100.88948, 51.516856], [102.065223, 51.259921], [102.255909, 50.510561], [103.676545, 50.089966], [104.621552, 50.275329], [105.886591, 50.406019], [106.888804, 50.274296], [107.868176, 49.793705], [108.475167, 49.282548], [109.402449, 49.292961], [110.662011, 49.130128], [111.581231, 49.377968], [112.89774, 49.543565], [114.362456, 50.248303], [114.96211, 50.140247], [115.485695, 49.805177], [116.678801, 49.888531], [116.191802, 49.134598], [115.485282, 48.135383], [115.742837, 47.726545], [116.308953, 47.85341], [117.295507, 47.697709], [118.064143, 48.06673], [118.866574, 47.74706], [119.772824, 47.048059], [119.66327, 46.69268], [118.874326, 46.805412], [117.421701, 46.672733], [116.717868, 46.388202], [115.985096, 45.727235], [114.460332, 45.339817], [113.463907, 44.808893], [112.436062, 45.011646], [111.873306, 45.102079], [111.348377, 44.457442], [111.667737, 44.073176], [111.829588, 43.743118], [111.129682, 43.406834], [110.412103, 42.871234], [109.243596, 42.519446], [107.744773, 42.481516], [106.129316, 42.134328], [104.964994, 41.59741], [104.522282, 41.908347], [103.312278, 41.907468], [101.83304, 42.514873], [100.845866, 42.663804], [99.515817, 42.524691], [97.451757, 42.74889], [96.349396, 42.725635], [95.762455, 43.319449], [95.306875, 44.241331], [94.688929, 44.352332], [93.480734, 44.975472], [92.133891, 45.115076], [90.94554, 45.286073], [90.585768, 45.719716], [90.970809, 46.888146], [90.280826, 47.693549], [88.854298, 48.069082], [88.013832, 48.599463], [87.751264, 49.297198]]]}},
  {type: "Feature", id: "MOZ", properties: {name: "Mozambique"}, geometry: {type: "Polygon", coordinates: [[[34.559989, -11.52002], [35.312398, -11.439146], [36.514082, -11.720938], [36.775151, -11.594537], [37.471284, -11.568751], [37.827645, -11.268769], [38.427557, -11.285202], [39.52103, -10.896854], [40.316589, -10.317096], [40.478387, -10.765441], [40.437253, -11.761711], [40.560811, -12.639177], [40.59962, -14.201975], [40.775475, -14.691764], [40.477251, -15.406294], [40.089264, -16.100774], [39.452559, -16.720891], [38.538351, -17.101023], [37.411133, -17.586368], [36.281279, -18.659688], [35.896497, -18.84226], [35.1984, -19.552811], [34.786383, -19.784012], [34.701893, -20.497043], [35.176127, -21.254361], [35.373428, -21.840837], [35.385848, -22.14], [35.562546, -22.09], [35.533935, -23.070788], [35.371774, -23.535359], [35.60747, -23.706563], [35.458746, -24.12261], [35.040735, -24.478351], [34.215824, -24.816314], [33.01321, -25.357573], [32.574632, -25.727318], [32.660363, -26.148584], [32.915955, -26.215867], [32.83012, -26.742192], [32.071665, -26.73382], [31.985779, -26.29178], [31.837778, -25.843332], [31.752408, -25.484284], [31.930589, -24.369417], [31.670398, -23.658969], [31.191409, -22.25151], [32.244988, -21.116489], [32.508693, -20.395292], [32.659743, -20.30429], [32.772708, -19.715592], [32.611994, -19.419383], [32.654886, -18.67209], [32.849861, -17.979057], [32.847639, -16.713398], [32.328239, -16.392074], [31.852041, -16.319417], [31.636498, -16.07199], [31.173064, -15.860944], [30.338955, -15.880839], [30.274256, -15.507787], [30.179481, -14.796099], [33.214025, -13.97186], [33.7897, -14.451831], [34.064825, -14.35995], [34.459633, -14.61301], [34.517666, -15.013709], [34.307291, -15.478641], [34.381292, -16.18356], [35.03381, -16.8013], [35.339063, -16.10744], [35.771905, -15.896859], [35.686845, -14.611046], [35.267956, -13.887834], [34.907151, -13.565425], [34.559989, -13.579998], [34.280006, -12.280025], [34.559989, -11.52002]]]}},
  {type: "Feature", id: "MRT", properties: {name: "Mauritania"}, geometry: {type: "Polygon", coordinates: [[[-12.17075, 14.616834], [-12.830658, 15.303692], [-13.435738, 16.039383], [-14.099521, 16.304302], [-14.577348, 16.598264], [-15.135737, 16.587282], [-15.623666, 16.369337], [-16.12069, 16.455663], [-16.463098, 16.135036], [-16.549708, 16.673892], [-16.270552, 17.166963], [-16.146347, 18.108482], [-16.256883, 19.096716], [-16.377651, 19.593817], [-16.277838, 20.092521], [-16.536324, 20.567866], [-17.063423, 20.999752], [-16.845194, 21.333323], [-12.929102, 21.327071], [-13.118754, 22.77122], [-12.874222, 23.284832], [-11.937224, 23.374594], [-11.969419, 25.933353], [-8.687294, 25.881056], [-8.6844, 27.395744], [-4.923337, 24.974574], [-6.453787, 24.956591], [-5.971129, 20.640833], [-5.488523, 16.325102], [-5.315277, 16.201854], [-5.537744, 15.50169], [-9.550238, 15.486497], [-9.700255, 15.264107], [-10.086846, 15.330486], [-10.650791, 15.132746], [-11.349095, 15.411256], [-11.666078, 15.388208], [-11.834208, 14.799097], [-12.17075, 14.616834]]]}},
  {type: "Feature", id: "MWI", properties: {name: "Malawi"}, geometry: {type: "Polygon", coordinates: [[[34.559989, -11.52002], [34.280006, -12.280025], [34.559989, -13.579998], [34.907151, -13.565425], [35.267956, -13.887834], [35.686845, -14.611046], [35.771905, -15.896859], [35.339063, -16.10744], [35.03381, -16.8013], [34.381292, -16.18356], [34.307291, -15.478641], [34.517666, -15.013709], [34.459633, -14.61301], [34.064825, -14.35995], [33.7897, -14.451831], [33.214025, -13.97186], [32.688165, -13.712858], [32.991764, -12.783871], [33.306422, -12.435778], [33.114289, -11.607198], [33.31531, -10.79655], [33.485688, -10.525559], [33.231388, -9.676722], [32.759375, -9.230599], [33.739729, -9.417151], [33.940838, -9.693674], [34.280006, -10.16], [34.559989, -11.52002]]]}},
  {type: "Feature", id: "MYS", properties: {name: "Malaysia"}, geometry: {type: "MultiPolygon", coordinates: [[[[101.075516, 6.204867], [101.154219, 5.691384], [101.814282, 5.810808], [102.141187, 6.221636], [102.371147, 6.128205], [102.961705, 5.524495], [103.381215, 4.855001], [103.438575, 4.181606], [103.332122, 3.726698], [103.429429, 3.382869], [103.502448, 2.791019], [103.854674, 2.515454], [104.247932, 1.631141], [104.228811, 1.293048], [103.519707, 1.226334], [102.573615, 1.967115], [101.390638, 2.760814], [101.27354, 3.270292], [100.695435, 3.93914], [100.557408, 4.76728], [100.196706, 5.312493], [100.30626, 6.040562], [100.085757, 6.464489], [100.259596, 6.642825], [101.075516, 6.204867]]], [[[118.618321, 4.478202], [117.882035, 4.137551], [117.015214, 4.306094], [115.865517, 4.306559], [115.519078, 3.169238], [115.134037, 2.821482], [114.621355, 1.430688], [113.80585, 1.217549], [112.859809, 1.49779], [112.380252, 1.410121], [111.797548, 0.904441], [111.159138, 0.976478], [110.514061, 0.773131], [109.830227, 1.338136], [109.66326, 2.006467], [110.396135, 1.663775], [111.168853, 1.850637], [111.370081, 2.697303], [111.796928, 2.885897], [112.995615, 3.102395], [113.712935, 3.893509], [114.204017, 4.525874], [114.659596, 4.007637], [114.869557, 4.348314], [115.347461, 4.316636], [115.4057, 4.955228], [115.45071, 5.44773], [116.220741, 6.143191], [116.725103, 6.924771], [117.129626, 6.928053], [117.643393, 6.422166], [117.689075, 5.98749], [118.347691, 5.708696], [119.181904, 5.407836], [119.110694, 5.016128], [118.439727, 4.966519], [118.618321, 4.478202]]]]}},
  {type: "Feature", id: "NAM", properties: {name: "Namibia"}, geometry: {type: "Polygon", coordinates: [[[16.344977, -28.576705], [15.601818, -27.821247], [15.210472, -27.090956], [14.989711, -26.117372], [14.743214, -25.39292], [14.408144, -23.853014], [14.385717, -22.656653], [14.257714, -22.111208], [13.868642, -21.699037], [13.352498, -20.872834], [12.826845, -19.673166], [12.608564, -19.045349], [11.794919, -18.069129], [11.734199, -17.301889], [12.215461, -17.111668], [12.814081, -16.941343], [13.462362, -16.971212], [14.058501, -17.423381], [14.209707, -17.353101], [18.263309, -17.309951], [18.956187, -17.789095], [21.377176, -17.930636], [23.215048, -17.523116], [24.033862, -17.295843], [24.682349, -17.353411], [25.07695, -17.578823], [25.084443, -17.661816], [24.520705, -17.887125], [24.217365, -17.889347], [23.579006, -18.281261], [23.196858, -17.869038], [21.65504, -18.219146], [20.910641, -18.252219], [20.881134, -21.814327], [19.895458, -21.849157], [19.895768, -24.76779], [19.894734, -28.461105], [19.002127, -28.972443], [18.464899, -29.045462], [17.836152, -28.856378], [17.387497, -28.783514], [17.218929, -28.355943], [16.824017, -28.082162], [16.344977, -28.576705]]]}},
  {type: "Feature", id: "NCL", properties: {name: "New Caledonia"}, geometry: {type: "Polygon", coordinates: [[[165.77999, -21.080005], [166.599991, -21.700019], [167.120011, -22.159991], [166.740035, -22.399976], [166.189732, -22.129708], [165.474375, -21.679607], [164.829815, -21.14982], [164.167995, -20.444747], [164.029606, -20.105646], [164.459967, -20.120012], [165.020036, -20.459991], [165.460009, -20.800022], [165.77999, -21.080005]]]}},
  {type: "Feature", id: "NER", properties: {name: "Niger"}, geometry: {type: "Polygon", coordinates: [[[2.154474, 11.94015], [2.177108, 12.625018], [1.024103, 12.851826], [0.993046, 13.33575], [0.429928, 13.988733], [0.295646, 14.444235], [0.374892, 14.928908], [1.015783, 14.968182], [1.385528, 15.323561], [2.749993, 15.409525], [3.638259, 15.56812], [3.723422, 16.184284], [4.27021, 16.852227], [4.267419, 19.155265], [5.677566, 19.601207], [8.572893, 21.565661], [11.999506, 23.471668], [13.581425, 23.040506], [14.143871, 22.491289], [14.8513, 22.86295], [15.096888, 21.308519], [15.471077, 21.048457], [15.487148, 20.730415], [15.903247, 20.387619], [15.685741, 19.95718], [15.300441, 17.92795], [15.247731, 16.627306], [13.972202, 15.684366], [13.540394, 14.367134], [13.956699, 13.996691], [13.954477, 13.353449], [14.595781, 13.330427], [14.495787, 12.859396], [14.213531, 12.802035], [14.181336, 12.483657], [13.995353, 12.461565], [13.318702, 13.556356], [13.083987, 13.596147], [12.302071, 13.037189], [11.527803, 13.32898], [10.989593, 13.387323], [10.701032, 13.246918], [10.114814, 13.277252], [9.524928, 12.851102], [9.014933, 12.826659], [7.804671, 13.343527], [7.330747, 13.098038], [6.820442, 13.115091], [6.445426, 13.492768], [5.443058, 13.865924], [4.368344, 13.747482], [4.107946, 13.531216], [3.967283, 12.956109], [3.680634, 12.552903], [3.61118, 11.660167], [2.848643, 12.235636], [2.490164, 12.233052], [2.154474, 11.94015]]]}},
  {type: "Feature", id: "NGA", properties: {name: "Nigeria"}, geometry: {type: "Polygon", coordinates: [[[8.500288, 4.771983], [7.462108, 4.412108], [7.082596, 4.464689], [6.698072, 4.240594], [5.898173, 4.262453], [5.362805, 4.887971], [5.033574, 5.611802], [4.325607, 6.270651], [3.57418, 6.2583], [2.691702, 6.258817], [2.749063, 7.870734], [2.723793, 8.506845], [2.912308, 9.137608], [3.220352, 9.444153], [3.705438, 10.06321], [3.60007, 10.332186], [3.797112, 10.734746], [3.572216, 11.327939], [3.61118, 11.660167], [3.680634, 12.552903], [3.967283, 12.956109], [4.107946, 13.531216], [4.368344, 13.747482], [5.443058, 13.865924], [6.445426, 13.492768], [6.820442, 13.115091], [7.330747, 13.098038], [7.804671, 13.343527], [9.014933, 12.826659], [9.524928, 12.851102], [10.114814, 13.277252], [10.701032, 13.246918], [10.989593, 13.387323], [11.527803, 13.32898], [12.302071, 13.037189], [13.083987, 13.596147], [13.318702, 13.556356], [13.995353, 12.461565], [14.181336, 12.483657], [14.577178, 12.085361], [14.468192, 11.904752], [14.415379, 11.572369], [13.57295, 10.798566], [13.308676, 10.160362], [13.1676, 9.640626], [12.955468, 9.417772], [12.753672, 8.717763], [12.218872, 8.305824], [12.063946, 7.799808], [11.839309, 7.397042], [11.745774, 6.981383], [11.058788, 6.644427], [10.497375, 7.055358], [10.118277, 7.03877], [9.522706, 6.453482], [9.233163, 6.444491], [8.757533, 5.479666], [8.500288, 4.771983]]]}},
  {type: "Feature", id: "NIC", properties: {name: "Nicaragua"}, geometry: {type: "Polygon", coordinates: [[[-85.71254, 11.088445], [-86.058488, 11.403439], [-86.52585, 11.806877], [-86.745992, 12.143962], [-87.167516, 12.458258], [-87.668493, 12.90991], [-87.557467, 13.064552], [-87.392386, 12.914018], [-87.316654, 12.984686], [-87.005769, 13.025794], [-86.880557, 13.254204], [-86.733822, 13.263093], [-86.755087, 13.754845], [-86.520708, 13.778487], [-86.312142, 13.771356], [-86.096264, 14.038187], [-85.801295, 13.836055], [-85.698665, 13.960078], [-85.514413, 14.079012], [-85.165365, 14.35437], [-85.148751, 14.560197], [-85.052787, 14.551541], [-84.924501, 14.790493], [-84.820037, 14.819587], [-84.649582, 14.666805], [-84.449336, 14.621614], [-84.228342, 14.748764], [-83.975721, 14.749436], [-83.628585, 14.880074], [-83.489989, 15.016267], [-83.147219, 14.995829], [-83.233234, 14.899866], [-83.284162, 14.676624], [-83.182126, 14.310703], [-83.4125, 13.970078], [-83.519832, 13.567699], [-83.552207, 13.127054], [-83.498515, 12.869292], [-83.473323, 12.419087], [-83.626104, 12.32085], [-83.719613, 11.893124], [-83.650858, 11.629032], [-83.85547, 11.373311], [-83.808936, 11.103044], [-83.655612, 10.938764], [-83.895054, 10.726839], [-84.190179, 10.79345], [-84.355931, 10.999226], [-84.673069, 11.082657], [-84.903003, 10.952303], [-85.561852, 11.217119], [-85.71254, 11.088445]]]}},
  {type: "Feature", id: "NLD", properties: {name: "Netherlands"}, geometry: {type: "Polygon", coordinates: [[[6.074183, 53.510403], [6.90514, 53.482162], [7.092053, 53.144043], [6.84287, 52.22844], [6.589397, 51.852029], [5.988658, 51.851616], [6.156658, 50.803721], [5.606976, 51.037298], [4.973991, 51.475024], [4.047071, 51.267259], [3.314971, 51.345755], [3.830289, 51.620545], [4.705997, 53.091798], [6.074183, 53.510403]]]}},
  {type: "Feature", id: "NOR", properties: {name: "Norway"}, geometry: {type: "MultiPolygon", coordinates: [[[[28.165547, 71.185474], [31.293418, 70.453788], [30.005435, 70.186259], [31.101079, 69.55808], [29.399581, 69.156916], [28.59193, 69.064777], [29.015573, 69.766491], [27.732292, 70.164193], [26.179622, 69.825299], [25.689213, 69.092114], [24.735679, 68.649557], [23.66205, 68.891247], [22.356238, 68.841741], [21.244936, 69.370443], [20.645593, 69.106247], [20.025269, 69.065139], [19.87856, 68.407194], [17.993868, 68.567391], [17.729182, 68.010552], [16.768879, 68.013937], [16.108712, 67.302456], [15.108411, 66.193867], [13.55569, 64.787028], [13.919905, 64.445421], [13.571916, 64.049114], [12.579935, 64.066219], [11.930569, 63.128318], [11.992064, 61.800362], [12.631147, 61.293572], [12.300366, 60.117933], [11.468272, 59.432393], [11.027369, 58.856149], [10.356557, 59.469807], [8.382, 58.313288], [7.048748, 58.078884], [5.665835, 58.588155], [5.308234, 59.663232], [4.992078, 61.970998], [5.9129, 62.614473], [8.553411, 63.454008], [10.527709, 64.486038], [12.358347, 65.879726], [14.761146, 67.810642], [16.435927, 68.563205], [19.184028, 69.817444], [21.378416, 70.255169], [23.023742, 70.202072], [24.546543, 71.030497], [26.37005, 70.986262], [28.165547, 71.185474]]], [[[24.72412, 77.85385], [22.49032, 77.44493], [20.72601, 77.67704], [21.41611, 77.93504], [20.8119, 78.25463], [22.88426, 78.45494], [23.28134, 78.07954], [24.72412, 77.85385]]], [[[18.25183, 79.70175], [21.54383, 78.95611], [19.02737, 78.5626], [18.47172, 77.82669], [17.59441, 77.63796], [17.1182, 76.80941], [15.91315, 76.77045], [13.76259, 77.38035], [14.66956, 77.73565], [13.1706, 78.02493], [11.22231, 78.8693], [10.44453, 79.65239], [13.17077, 80.01046], [13.71852, 79.66039], [15.14282, 79.67431], [15.52255, 80.01608], [16.99085, 80.05086], [18.25183, 79.70175]]], [[[25.447625, 80.40734], [27.407506, 80.056406], [25.924651, 79.517834], [23.024466, 79.400012], [20.075188, 79.566823], [19.897266, 79.842362], [18.462264, 79.85988], [17.368015, 80.318896], [20.455992, 80.598156], [21.907945, 80.357679], [22.919253, 80.657144], [25.447625, 80.40734]]]]}},
  {type: "Feature", id: "NPL", properties: {name: "Nepal"}, geometry: {type: "Polygon", coordinates: [[[88.120441, 27.876542], [88.043133, 27.445819], [88.174804, 26.810405], [88.060238, 26.414615], [87.227472, 26.397898], [86.024393, 26.630985], [85.251779, 26.726198], [84.675018, 27.234901], [83.304249, 27.364506], [81.999987, 27.925479], [81.057203, 28.416095], [80.088425, 28.79447], [80.476721, 29.729865], [81.111256, 30.183481], [81.525804, 30.422717], [82.327513, 30.115268], [83.337115, 29.463732], [83.898993, 29.320226], [84.23458, 28.839894], [85.011638, 28.642774], [85.82332, 28.203576], [86.954517, 27.974262], [88.120441, 27.876542]]]}},
  {type: "Feature", id: "NZL", properties: {name: "New Zealand"}, geometry: {type: "MultiPolygon", coordinates: [[[[173.020375, -40.919052], [173.247234, -41.331999], [173.958405, -40.926701], [174.247587, -41.349155], [174.248517, -41.770008], [173.876447, -42.233184], [173.22274, -42.970038], [172.711246, -43.372288], [173.080113, -43.853344], [172.308584, -43.865694], [171.452925, -44.242519], [171.185138, -44.897104], [170.616697, -45.908929], [169.831422, -46.355775], [169.332331, -46.641235], [168.411354, -46.619945], [167.763745, -46.290197], [166.676886, -46.219917], [166.509144, -45.852705], [167.046424, -45.110941], [168.303763, -44.123973], [168.949409, -43.935819], [169.667815, -43.555326], [170.52492, -43.031688], [171.12509, -42.512754], [171.569714, -41.767424], [171.948709, -41.514417], [172.097227, -40.956104], [172.79858, -40.493962], [173.020375, -40.919052]]], [[[174.612009, -36.156397], [175.336616, -37.209098], [175.357596, -36.526194], [175.808887, -36.798942], [175.95849, -37.555382], [176.763195, -37.881253], [177.438813, -37.961248], [178.010354, -37.579825], [178.517094, -37.695373], [178.274731, -38.582813], [177.97046, -39.166343], [177.206993, -39.145776], [176.939981, -39.449736], [177.032946, -39.879943], [176.885824, -40.065978], [176.508017, -40.604808], [176.01244, -41.289624], [175.239567, -41.688308], [175.067898, -41.425895], [174.650973, -41.281821], [175.22763, -40.459236], [174.900157, -39.908933], [173.824047, -39.508854], [173.852262, -39.146602], [174.574802, -38.797683], [174.743474, -38.027808], [174.697017, -37.381129], [174.292028, -36.711092], [174.319004, -36.534824], [173.840997, -36.121981], [173.054171, -35.237125], [172.636005, -34.529107], [173.007042, -34.450662], [173.551298, -35.006183], [174.32939, -35.265496], [174.612009, -36.156397]]]]}},
  {type: "Feature", id: "OMN", properties: {name: "Oman"}, geometry: {type: "MultiPolygon", coordinates: [[[[58.861141, 21.114035], [58.487986, 20.428986], [58.034318, 20.481437], [57.826373, 20.243002], [57.665762, 19.736005], [57.7887, 19.06757], [57.694391, 18.94471], [57.234264, 18.947991], [56.609651, 18.574267], [56.512189, 18.087113], [56.283521, 17.876067], [55.661492, 17.884128], [55.269939, 17.632309], [55.2749, 17.228354], [54.791002, 16.950697], [54.239253, 17.044981], [53.570508, 16.707663], [53.108573, 16.651051], [52.782184, 17.349742], [52.00001, 19.000003], [54.999982, 19.999994], [55.666659, 22.000001], [55.208341, 22.70833], [55.234489, 23.110993], [55.525841, 23.524869], [55.528632, 23.933604], [55.981214, 24.130543], [55.804119, 24.269604], [55.886233, 24.920831], [56.396847, 24.924732], [56.84514, 24.241673], [57.403453, 23.878594], [58.136948, 23.747931], [58.729211, 23.565668], [59.180502, 22.992395], [59.450098, 22.660271], [59.80806, 22.533612], [59.806148, 22.310525], [59.442191, 21.714541], [59.282408, 21.433886], [58.861141, 21.114035]]], [[[56.391421, 25.895991], [56.261042, 25.714606], [56.070821, 26.055464], [56.362017, 26.395934], [56.485679, 26.309118], [56.391421, 25.895991]]]]}},
  {type: "Feature", id: "PAK", properties: {name: "Pakistan"}, geometry: {type: "Polygon", coordinates: [[[75.158028, 37.133031], [75.896897, 36.666806], [76.192848, 35.898403], [77.837451, 35.49401], [76.871722, 34.653544], [75.757061, 34.504923], [74.240203, 34.748887], [73.749948, 34.317699], [74.104294, 33.441473], [74.451559, 32.7649], [75.258642, 32.271105], [74.405929, 31.692639], [74.42138, 30.979815], [73.450638, 29.976413], [72.823752, 28.961592], [71.777666, 27.91318], [70.616496, 27.989196], [69.514393, 26.940966], [70.168927, 26.491872], [70.282873, 25.722229], [70.844699, 25.215102], [71.04324, 24.356524], [68.842599, 24.359134], [68.176645, 23.691965], [67.443667, 23.944844], [67.145442, 24.663611], [66.372828, 25.425141], [64.530408, 25.237039], [62.905701, 25.218409], [61.497363, 25.078237], [61.874187, 26.239975], [63.316632, 26.756532], [63.233898, 27.217047], [62.755426, 27.378923], [62.72783, 28.259645], [61.771868, 28.699334], [61.369309, 29.303276], [60.874248, 29.829239], [62.549857, 29.318572], [63.550261, 29.468331], [64.148002, 29.340819], [64.350419, 29.560031], [65.046862, 29.472181], [66.346473, 29.887943], [66.381458, 30.738899], [66.938891, 31.304911], [67.683394, 31.303154], [67.792689, 31.58293], [68.556932, 31.71331], [68.926677, 31.620189], [69.317764, 31.901412], [69.262522, 32.501944], [69.687147, 33.105499], [70.323594, 33.358533], [69.930543, 34.02012], [70.881803, 33.988856], [71.156773, 34.348911], [71.115019, 34.733126], [71.613076, 35.153203], [71.498768, 35.650563], [71.262348, 36.074388], [71.846292, 36.509942], [72.920025, 36.720007], [74.067552, 36.836176], [74.575893, 37.020841], [75.158028, 37.133031]]]}},
  {type: "Feature", id: "PAN", properties: {name: "Panama"}, geometry: {type: "Polygon", coordinates: [[[-77.881571, 7.223771], [-78.214936, 7.512255], [-78.429161, 8.052041], [-78.182096, 8.319182], [-78.435465, 8.387705], [-78.622121, 8.718124], [-79.120307, 8.996092], [-79.557877, 8.932375], [-79.760578, 8.584515], [-80.164481, 8.333316], [-80.382659, 8.298409], [-80.480689, 8.090308], [-80.00369, 7.547524], [-80.276671, 7.419754], [-80.421158, 7.271572], [-80.886401, 7.220541], [-81.059543, 7.817921], [-81.189716, 7.647906], [-81.519515, 7.70661], [-81.721311, 8.108963], [-82.131441, 8.175393], [-82.390934, 8.292362], [-82.820081, 8.290864], [-82.850958, 8.073823], [-82.965783, 8.225028], [-82.913176, 8.423517], [-82.829771, 8.626295], [-82.868657, 8.807266], [-82.719183, 8.925709], [-82.927155, 9.07433], [-82.932891, 9.476812], [-82.546196, 9.566135], [-82.187123, 9.207449], [-82.207586, 8.995575], [-81.808567, 8.950617], [-81.714154, 9.031955], [-81.439287, 8.786234], [-80.947302, 8.858504], [-80.521901, 9.111072], [-79.9146, 9.312765], [-79.573303, 9.61161], [-79.021192, 9.552931], [-79.05845, 9.454565], [-78.500888, 9.420459], [-78.055928, 9.24773], [-77.729514, 8.946844], [-77.353361, 8.670505], [-77.474723, 8.524286], [-77.242566, 7.935278], [-77.431108, 7.638061], [-77.753414, 7.70984], [-77.881571, 7.223771]]]}},
  {type: "Feature", id: "PER", properties: {name: "Peru"}, geometry: {type: "Polygon", coordinates: [[[-69.590424, -17.580012], [-69.858444, -18.092694], [-70.372572, -18.347975], [-71.37525, -17.773799], [-71.462041, -17.363488], [-73.44453, -16.359363], [-75.237883, -15.265683], [-76.009205, -14.649286], [-76.423469, -13.823187], [-76.259242, -13.535039], [-77.106192, -12.222716], [-78.092153, -10.377712], [-79.036953, -8.386568], [-79.44592, -7.930833], [-79.760578, -7.194341], [-80.537482, -6.541668], [-81.249996, -6.136834], [-80.926347, -5.690557], [-81.410943, -4.736765], [-81.09967, -4.036394], [-80.302561, -3.404856], [-80.184015, -3.821162], [-80.469295, -4.059287], [-80.442242, -4.425724], [-80.028908, -4.346091], [-79.624979, -4.454198], [-79.205289, -4.959129], [-78.639897, -4.547784], [-78.450684, -3.873097], [-77.837905, -3.003021], [-76.635394, -2.608678], [-75.544996, -1.56161], [-75.233723, -0.911417], [-75.373223, -0.152032], [-75.106625, -0.057205], [-74.441601, -0.53082], [-74.122395, -1.002833], [-73.659504, -1.260491], [-73.070392, -2.308954], [-72.325787, -2.434218], [-71.774761, -2.16979], [-71.413646, -2.342802], [-70.813476, -2.256865], [-70.047709, -2.725156], [-70.692682, -3.742872], [-70.394044, -3.766591], [-69.893635, -4.298187], [-70.794769, -4.251265], [-70.928843, -4.401591], [-71.748406, -4.593983], [-72.891928, -5.274561], [-72.964507, -5.741251], [-73.219711, -6.089189], [-73.120027, -6.629931], [-73.724487, -6.918595], [-73.723401, -7.340999], [-73.987235, -7.52383], [-73.571059, -8.424447], [-73.015383, -9.032833], [-73.226713, -9.462213], [-72.563033, -9.520194], [-72.184891, -10.053598], [-71.302412, -10.079436], [-70.481894, -9.490118], [-70.548686, -11.009147], [-70.093752, -11.123972], [-69.529678, -10.951734], [-68.66508, -12.5613], [-68.88008, -12.899729], [-68.929224, -13.602684], [-68.948887, -14.453639], [-69.339535, -14.953195], [-69.160347, -15.323974], [-69.389764, -15.660129], [-68.959635, -16.500698], [-69.590424, -17.580012]]]}},
  {type: "Feature", id: "PHL", properties: {name: "Philippines"}, geometry: {type: "MultiPolygon", coordinates: [[[[126.376814, 8.414706], [126.478513, 7.750354], [126.537424, 7.189381], [126.196773, 6.274294], [125.831421, 7.293715], [125.363852, 6.786485], [125.683161, 6.049657], [125.396512, 5.581003], [124.219788, 6.161355], [123.93872, 6.885136], [124.243662, 7.36061], [123.610212, 7.833527], [123.296071, 7.418876], [122.825506, 7.457375], [122.085499, 6.899424], [121.919928, 7.192119], [122.312359, 8.034962], [122.942398, 8.316237], [123.487688, 8.69301], [123.841154, 8.240324], [124.60147, 8.514158], [124.764612, 8.960409], [125.471391, 8.986997], [125.412118, 9.760335], [126.222714, 9.286074], [126.306637, 8.782487], [126.376814, 8.414706]]], [[[123.982438, 10.278779], [123.623183, 9.950091], [123.309921, 9.318269], [122.995883, 9.022189], [122.380055, 9.713361], [122.586089, 9.981045], [122.837081, 10.261157], [122.947411, 10.881868], [123.49885, 10.940624], [123.337774, 10.267384], [124.077936, 11.232726], [123.982438, 10.278779]]], [[[118.504581, 9.316383], [117.174275, 8.3675], [117.664477, 9.066889], [118.386914, 9.6845], [118.987342, 10.376292], [119.511496, 11.369668], [119.689677, 10.554291], [119.029458, 10.003653], [118.504581, 9.316383]]], [[[121.883548, 11.891755], [122.483821, 11.582187], [123.120217, 11.58366], [123.100838, 11.165934], [122.637714, 10.741308], [122.00261, 10.441017], [121.967367, 10.905691], [122.03837, 11.415841], [121.883548, 11.891755]]], [[[125.502552, 12.162695], [125.783465, 11.046122], [125.011884, 11.311455], [125.032761, 10.975816], [125.277449, 10.358722], [124.801819, 10.134679], [124.760168, 10.837995], [124.459101, 10.88993], [124.302522, 11.495371], [124.891013, 11.415583], [124.87799, 11.79419], [124.266762, 12.557761], [125.227116, 12.535721], [125.502552, 12.162695]]], [[[121.527394, 13.06959], [121.26219, 12.20556], [120.833896, 12.704496], [120.323436, 13.466413], [121.180128, 13.429697], [121.527394, 13.06959]]], [[[121.321308, 18.504065], [121.937601, 18.218552], [122.246006, 18.47895], [122.336957, 18.224883], [122.174279, 17.810283], [122.515654, 17.093505], [122.252311, 16.262444], [121.662786, 15.931018], [121.50507, 15.124814], [121.728829, 14.328376], [122.258925, 14.218202], [122.701276, 14.336541], [123.950295, 13.782131], [123.855107, 13.237771], [124.181289, 12.997527], [124.077419, 12.536677], [123.298035, 13.027526], [122.928652, 13.55292], [122.671355, 13.185836], [122.03465, 13.784482], [121.126385, 13.636687], [120.628637, 13.857656], [120.679384, 14.271016], [120.991819, 14.525393], [120.693336, 14.756671], [120.564145, 14.396279], [120.070429, 14.970869], [119.920929, 15.406347], [119.883773, 16.363704], [120.286488, 16.034629], [120.390047, 17.599081], [120.715867, 18.505227], [121.321308, 18.504065]]]]}},
  {type: "Feature", id: "PNG", properties: {name: "Papua New Guinea"}, geometry: {type: "MultiPolygon", coordinates: [[[[155.880026, -6.819997], [155.599991, -6.919991], [155.166994, -6.535931], [154.729192, -5.900828], [154.514114, -5.139118], [154.652504, -5.042431], [154.759991, -5.339984], [155.062918, -5.566792], [155.547746, -6.200655], [156.019965, -6.540014], [155.880026, -6.819997]]], [[[151.982796, -5.478063], [151.459107, -5.56028], [151.30139, -5.840728], [150.754447, -6.083763], [150.241197, -6.317754], [149.709963, -6.316513], [148.890065, -6.02604], [148.318937, -5.747142], [148.401826, -5.437756], [149.298412, -5.583742], [149.845562, -5.505503], [149.99625, -5.026101], [150.139756, -5.001348], [150.236908, -5.53222], [150.807467, -5.455842], [151.089672, -5.113693], [151.647881, -4.757074], [151.537862, -4.167807], [152.136792, -4.14879], [152.338743, -4.312966], [152.318693, -4.867661], [151.982796, -5.478063]]], [[[147.191874, -7.388024], [148.084636, -8.044108], [148.734105, -9.104664], [149.306835, -9.071436], [149.266631, -9.514406], [150.038728, -9.684318], [149.738798, -9.872937], [150.801628, -10.293687], [150.690575, -10.582713], [150.028393, -10.652476], [149.78231, -10.393267], [148.923138, -10.280923], [147.913018, -10.130441], [147.135443, -9.492444], [146.567881, -8.942555], [146.048481, -8.067414], [144.744168, -7.630128], [143.897088, -7.91533], [143.286376, -8.245491], [143.413913, -8.983069], [142.628431, -9.326821], [142.068259, -9.159596], [141.033852, -9.117893], [141.017057, -5.859022], [141.00021, -2.600151], [142.735247, -3.289153], [144.583971, -3.861418], [145.27318, -4.373738], [145.829786, -4.876498], [145.981922, -5.465609], [147.648073, -6.083659], [147.891108, -6.614015], [146.970905, -6.721657], [147.191874, -7.388024]]], [[[153.140038, -4.499983], [152.827292, -4.766427], [152.638673, -4.176127], [152.406026, -3.789743], [151.953237, -3.462062], [151.384279, -3.035422], [150.66205, -2.741486], [150.939965, -2.500002], [151.479984, -2.779985], [151.820015, -2.999972], [152.239989, -3.240009], [152.640017, -3.659983], [153.019994, -3.980015], [153.140038, -4.499983]]]]}},
  {type: "Feature", id: "POL", properties: {name: "Poland"}, geometry: {type: "Polygon", coordinates: [[[15.016996, 51.106674], [14.607098, 51.745188], [14.685026, 52.089947], [14.4376, 52.62485], [14.074521, 52.981263], [14.353315, 53.248171], [14.119686, 53.757029], [14.8029, 54.050706], [16.363477, 54.513159], [17.622832, 54.851536], [18.620859, 54.682606], [18.696255, 54.438719], [19.66064, 54.426084], [20.892245, 54.312525], [22.731099, 54.327537], [23.243987, 54.220567], [23.484128, 53.912498], [23.527536, 53.470122], [23.804935, 53.089731], [23.799199, 52.691099], [23.199494, 52.486977], [23.508002, 52.023647], [23.527071, 51.578454], [24.029986, 50.705407], [23.922757, 50.424881], [23.426508, 50.308506], [22.51845, 49.476774], [22.776419, 49.027395], [22.558138, 49.085738], [21.607808, 49.470107], [20.887955, 49.328772], [20.415839, 49.431453], [19.825023, 49.217125], [19.320713, 49.571574], [18.909575, 49.435846], [18.853144, 49.49623], [18.392914, 49.988629], [17.649445, 50.049038], [17.554567, 50.362146], [16.868769, 50.473974], [16.719476, 50.215747], [16.176253, 50.422607], [16.238627, 50.697733], [15.490972, 50.78473], [15.016996, 51.106674]]]}},
  {type: "Feature", id: "PRI", properties: {name: "Puerto Rico"}, geometry: {type: "Polygon", coordinates: [[[-66.282434, 18.514762], [-65.771303, 18.426679], [-65.591004, 18.228035], [-65.847164, 17.975906], [-66.599934, 17.981823], [-67.184162, 17.946553], [-67.242428, 18.37446], [-67.100679, 18.520601], [-66.282434, 18.514762]]]}},
  {type: "Feature", id: "PRK", properties: {name: "North Korea"}, geometry: {type: "Polygon", coordinates: [[[130.640016, 42.395009], [130.780007, 42.220007], [130.400031, 42.280004], [129.965949, 41.941368], [129.667362, 41.601104], [129.705189, 40.882828], [129.188115, 40.661808], [129.0104, 40.485436], [128.633368, 40.189847], [127.967414, 40.025413], [127.533436, 39.75685], [127.50212, 39.323931], [127.385434, 39.213472], [127.783343, 39.050898], [128.349716, 38.612243], [128.205746, 38.370397], [127.780035, 38.304536], [127.073309, 38.256115], [126.68372, 37.804773], [126.237339, 37.840378], [126.174759, 37.749686], [125.689104, 37.94001], [125.568439, 37.752089], [125.27533, 37.669071], [125.240087, 37.857224], [124.981033, 37.948821], [124.712161, 38.108346], [124.985994, 38.548474], [125.221949, 38.665857], [125.132859, 38.848559], [125.38659, 39.387958], [125.321116, 39.551385], [124.737482, 39.660344], [124.265625, 39.928493], [125.079942, 40.569824], [126.182045, 41.107336], [126.869083, 41.816569], [127.343783, 41.503152], [128.208433, 41.466772], [128.052215, 41.994285], [129.596669, 42.424982], [129.994267, 42.985387], [130.640016, 42.395009]]]}},
  {type: "Feature", id: "PRT", properties: {name: "Portugal"}, geometry: {type: "Polygon", coordinates: [[[-9.034818, 41.880571], [-8.671946, 42.134689], [-8.263857, 42.280469], [-8.013175, 41.790886], [-7.422513, 41.792075], [-7.251309, 41.918346], [-6.668606, 41.883387], [-6.389088, 41.381815], [-6.851127, 41.111083], [-6.86402, 40.330872], [-7.026413, 40.184524], [-7.066592, 39.711892], [-7.498632, 39.629571], [-7.098037, 39.030073], [-7.374092, 38.373059], [-7.029281, 38.075764], [-7.166508, 37.803894], [-7.537105, 37.428904], [-7.453726, 37.097788], [-7.855613, 36.838269], [-8.382816, 36.97888], [-8.898857, 36.868809], [-8.746101, 37.651346], [-8.839998, 38.266243], [-9.287464, 38.358486], [-9.526571, 38.737429], [-9.446989, 39.392066], [-9.048305, 39.755093], [-8.977353, 40.159306], [-8.768684, 40.760639], [-8.790853, 41.184334], [-8.990789, 41.543459], [-9.034818, 41.880571]]]}},
  {type: "Feature", id: "PRY", properties: {name: "Paraguay"}, geometry: {type: "Polygon", coordinates: [[[-62.685057, -22.249029], [-62.291179, -21.051635], [-62.265961, -20.513735], [-61.786326, -19.633737], [-60.043565, -19.342747], [-59.115042, -19.356906], [-58.183471, -19.868399], [-58.166392, -20.176701], [-57.870674, -20.732688], [-57.937156, -22.090176], [-56.88151, -22.282154], [-56.473317, -22.0863], [-55.797958, -22.35693], [-55.610683, -22.655619], [-55.517639, -23.571998], [-55.400747, -23.956935], [-55.027902, -24.001274], [-54.652834, -23.839578], [-54.29296, -24.021014], [-54.293476, -24.5708], [-54.428946, -25.162185], [-54.625291, -25.739255], [-54.788795, -26.621786], [-55.695846, -27.387837], [-56.486702, -27.548499], [-57.60976, -27.395899], [-58.618174, -27.123719], [-57.63366, -25.603657], [-57.777217, -25.16234], [-58.807128, -24.771459], [-60.028966, -24.032796], [-60.846565, -23.880713], [-62.685057, -22.249029]]]}},
  {type: "Feature", id: "QAT", properties: {name: "Qatar"}, geometry: {type: "Polygon", coordinates: [[[50.810108, 24.754743], [50.743911, 25.482424], [51.013352, 26.006992], [51.286462, 26.114582], [51.589079, 25.801113], [51.6067, 25.21567], [51.389608, 24.627386], [51.112415, 24.556331], [50.810108, 24.754743]]]}},
  {type: "Feature", id: "ROU", properties: {name: "Romania"}, geometry: {type: "Polygon", coordinates: [[[22.710531, 47.882194], [23.142236, 48.096341], [23.760958, 47.985598], [24.402056, 47.981878], [24.866317, 47.737526], [25.207743, 47.891056], [25.945941, 47.987149], [26.19745, 48.220881], [26.619337, 48.220726], [26.924176, 48.123264], [27.233873, 47.826771], [27.551166, 47.405117], [28.12803, 46.810476], [28.160018, 46.371563], [28.054443, 45.944586], [28.233554, 45.488283], [28.679779, 45.304031], [29.149725, 45.464925], [29.603289, 45.293308], [29.626543, 45.035391], [29.141612, 44.82021], [28.837858, 44.913874], [28.558081, 43.707462], [27.970107, 43.812468], [27.2424, 44.175986], [26.065159, 43.943494], [25.569272, 43.688445], [24.100679, 43.741051], [23.332302, 43.897011], [22.944832, 43.823785], [22.65715, 44.234923], [22.474008, 44.409228], [22.705726, 44.578003], [22.459022, 44.702517], [22.145088, 44.478422], [21.562023, 44.768947], [21.483526, 45.18117], [20.874313, 45.416375], [20.762175, 45.734573], [20.220192, 46.127469], [21.021952, 46.316088], [21.626515, 46.994238], [22.099768, 47.672439], [22.710531, 47.882194]]]}},
  {type: "Feature", id: "RUS", properties: {name: "Russia"}, geometry: {type: "MultiPolygon", coordinates: [[[[143.648007, 50.7476], [144.654148, 48.976391], [143.173928, 49.306551], [142.558668, 47.861575], [143.533492, 46.836728], [143.505277, 46.137908], [142.747701, 46.740765], [142.09203, 45.966755], [141.906925, 46.805929], [142.018443, 47.780133], [141.904445, 48.859189], [142.1358, 49.615163], [142.179983, 50.952342], [141.594076, 51.935435], [141.682546, 53.301966], [142.606934, 53.762145], [142.209749, 54.225476], [142.654786, 54.365881], [142.914616, 53.704578], [143.260848, 52.74076], [143.235268, 51.75666], [143.648007, 50.7476]]], [[[22.731099, 54.327537], [20.892245, 54.312525], [19.66064, 54.426084], [19.888481, 54.86616], [21.268449, 55.190482], [22.315724, 55.015299], [22.757764, 54.856574], [22.651052, 54.582741], [22.731099, 54.327537]]], [[[-175.01425, 66.58435], [-174.33983, 66.33556], [-174.57182, 67.06219], [-171.85731, 66.91308], [-169.89958, 65.97724], [-170.89107, 65.54139], [-172.53025, 65.43791], [-172.555, 64.46079], [-172.95533, 64.25269], [-173.89184, 64.2826], [-174.65392, 64.63125], [-175.98353, 64.92288], [-176.20716, 65.35667], [-177.22266, 65.52024], [-178.35993, 65.39052], [-178.90332, 65.74044], [-178.68611, 66.11211], [-179.88377, 65.87456], [-179.43268, 65.40411], [-180, 64.979709], [-180, 68.963636], [-177.55, 68.2], [-174.92825, 67.20589], [-175.01425, 66.58435]]], [[[180, 70.832199], [178.903425, 70.78114], [178.7253, 71.0988], [180, 71.515714], [180, 70.832199]]], [[[-178.69378, 70.89302], [-180, 70.832199], [-180, 71.515714], [-179.871875, 71.55762], [-179.02433, 71.55553], [-177.577945, 71.26948], [-177.663575, 71.13277], [-178.69378, 70.89302]]], [[[143.60385, 73.21244], [142.08763, 73.20544], [140.038155, 73.31692], [139.86312, 73.36983], [140.81171, 73.76506], [142.06207, 73.85758], [143.48283, 73.47525], [143.60385, 73.21244]]], [[[150.73167, 75.08406], [149.575925, 74.68892], [147.977465, 74.778355], [146.11919, 75.17298], [146.358485, 75.49682], [148.22223, 75.345845], [150.73167, 75.08406]]], [[[145.086285, 75.562625], [144.3, 74.82], [140.61381, 74.84768], [138.95544, 74.61148], [136.97439, 75.26167], [137.51176, 75.94917], [138.831075, 76.13676], [141.471615, 76.09289], [145.086285, 75.562625]]], [[[57.535693, 70.720464], [56.944979, 70.632743], [53.677375, 70.762658], [53.412017, 71.206662], [51.601895, 71.474759], [51.455754, 72.014881], [52.478275, 72.229442], [52.444169, 72.774731], [54.427614, 73.627548], [53.50829, 73.749814], [55.902459, 74.627486], [55.631933, 75.081412], [57.868644, 75.60939], [61.170044, 76.251883], [64.498368, 76.439055], [66.210977, 76.809782], [68.15706, 76.939697], [68.852211, 76.544811], [68.180573, 76.233642], [64.637326, 75.737755], [61.583508, 75.260885], [58.477082, 74.309056], [56.986786, 73.333044], [55.419336, 72.371268], [55.622838, 71.540595], [57.535693, 70.720464]]], [[[106.97013, 76.97419], [107.24, 76.48], [108.1538, 76.72335], [111.07726, 76.71], [113.33151, 76.22224], [114.13417, 75.84764], [113.88539, 75.32779], [112.77918, 75.03186], [110.15125, 74.47673], [109.4, 74.18], [110.64, 74.04], [112.11919, 73.78774], [113.01954, 73.97693], [113.52958, 73.33505], [113.96881, 73.59488], [115.56782, 73.75285], [118.77633, 73.58772], [119.02, 73.12], [123.20066, 72.97122], [123.25777, 73.73503], [125.38, 73.56], [126.97644, 73.56549], [128.59126, 73.03871], [129.05157, 72.39872], [128.46, 71.98], [129.71599, 71.19304], [131.28858, 70.78699], [132.2535, 71.8363], [133.85766, 71.38642], [135.56193, 71.65525], [137.49755, 71.34763], [138.23409, 71.62803], [139.86983, 71.48783], [139.14791, 72.41619], [140.46817, 72.84941], [149.5, 72.2], [150.35118, 71.60643], [152.9689, 70.84222], [157.00688, 71.03141], [158.99779, 70.86672], [159.83031, 70.45324], [159.70866, 69.72198], [160.94053, 69.43728], [162.27907, 69.64204], [164.05248, 69.66823], [165.94037, 69.47199], [167.83567, 69.58269], [169.57763, 68.6938], [170.81688, 69.01363], [170.0082, 69.65276], [170.45345, 70.09703], [173.64391, 69.81743], [175.72403, 69.87725], [178.6, 69.4], [180, 68.963636], [180, 64.979709], [179.99281, 64.97433], [178.7072, 64.53493], [177.41128, 64.60821], [178.313, 64.07593], [178.90825, 63.25197], [179.37034, 62.98262], [179.48636, 62.56894], [179.22825, 62.3041], [177.3643, 62.5219], [174.56929, 61.76915], [173.68013, 61.65261], [172.15, 60.95], [170.6985, 60.33618], [170.33085, 59.88177], [168.90046, 60.57355], [166.29498, 59.78855], [165.84, 60.16], [164.87674, 59.7316], [163.53929, 59.86871], [163.21711, 59.21101], [162.01733, 58.24328], [162.05297, 57.83912], [163.19191, 57.61503], [163.05794, 56.15924], [162.12958, 56.12219], [161.70146, 55.28568], [162.11749, 54.85514], [160.36877, 54.34433], [160.02173, 53.20257], [158.53094, 52.95868], [158.23118, 51.94269], [156.78979, 51.01105], [156.42, 51.7], [155.99182, 53.15895], [155.43366, 55.38103], [155.91442, 56.76792], [156.75815, 57.3647], [156.81035, 57.83204], [158.36433, 58.05575], [160.15064, 59.31477], [161.87204, 60.343], [163.66969, 61.1409], [164.47355, 62.55061], [163.25842, 62.46627], [162.65791, 61.6425], [160.12148, 60.54423], [159.30232, 61.77396], [156.72068, 61.43442], [154.21806, 59.75818], [155.04375, 59.14495], [152.81185, 58.88385], [151.26573, 58.78089], [151.33815, 59.50396], [149.78371, 59.65573], [148.54481, 59.16448], [145.48722, 59.33637], [142.19782, 59.03998], [138.95848, 57.08805], [135.12619, 54.72959], [136.70171, 54.60355], [137.19342, 53.97732], [138.1647, 53.75501], [138.80463, 54.25455], [139.90151, 54.18968], [141.34531, 53.08957], [141.37923, 52.23877], [140.59742, 51.23967], [140.51308, 50.04553], [140.06193, 48.44671], [138.55472, 46.99965], [138.21971, 46.30795], [136.86232, 45.1435], [135.51535, 43.989], [134.86939, 43.39821], [133.53687, 42.81147], [132.90627, 42.79849], [132.27807, 43.28456], [130.93587, 42.55274], [130.78, 42.22], [130.64, 42.395], [130.633866, 42.903015], [131.144688, 42.92999], [131.288555, 44.11152], [131.02519, 44.96796], [131.883454, 45.321162], [133.09712, 45.14409], [133.769644, 46.116927], [134.11235, 47.21248], [134.50081, 47.57845], [135.026311, 48.47823], [133.373596, 48.183442], [132.50669, 47.78896], [130.98726, 47.79013], [130.582293, 48.729687], [129.397818, 49.4406], [127.6574, 49.76027], [127.287456, 50.739797], [126.939157, 51.353894], [126.564399, 51.784255], [125.946349, 52.792799], [125.068211, 53.161045], [123.57147, 53.4588], [122.245748, 53.431726], [121.003085, 53.251401], [120.177089, 52.753886], [120.725789, 52.516226], [120.7382, 51.96411], [120.18208, 51.64355], [119.27939, 50.58292], [119.288461, 50.142883], [117.879244, 49.510983], [116.678801, 49.888531], [115.485695, 49.805177], [114.96211, 50.140247], [114.362456, 50.248303], [112.89774, 49.543565], [111.581231, 49.377968], [110.662011, 49.130128], [109.402449, 49.292961], [108.475167, 49.282548], [107.868176, 49.793705], [106.888804, 50.274296], [105.886591, 50.406019], [104.62158, 50.27532], [103.676545, 50.089966], [102.25589, 50.51056], [102.06521, 51.25991], [100.88948, 51.516856], [99.981732, 51.634006], [98.861491, 52.047366], [97.82574, 51.010995], [98.231762, 50.422401], [97.25976, 49.72605], [95.81402, 49.97746], [94.815949, 50.013433], [94.147566, 50.480537], [93.10421, 50.49529], [92.234712, 50.802171], [90.713667, 50.331812], [88.805567, 49.470521], [87.751264, 49.297198], [87.35997, 49.214981], [86.829357, 49.826675], [85.54127, 49.692859], [85.11556, 50.117303], [84.416377, 50.3114], [83.935115, 50.889246], [83.383004, 51.069183], [81.945986, 50.812196], [80.568447, 51.388336], [80.03556, 50.864751], [77.800916, 53.404415], [76.525179, 54.177003], [76.8911, 54.490524], [74.38482, 53.54685], [73.425679, 53.48981], [73.508516, 54.035617], [72.22415, 54.376655], [71.180131, 54.133285], [70.865267, 55.169734], [69.068167, 55.38525], [68.1691, 54.970392], [65.66687, 54.60125], [65.178534, 54.354228], [61.4366, 54.00625], [60.978066, 53.664993], [61.699986, 52.979996], [60.739993, 52.719986], [60.927269, 52.447548], [59.967534, 51.96042], [61.588003, 51.272659], [61.337424, 50.79907], [59.932807, 50.842194], [59.642282, 50.545442], [58.36332, 51.06364], [56.77798, 51.04355], [55.71694, 50.62171], [54.532878, 51.02624], [52.328724, 51.718652], [50.766648, 51.692762], [48.702382, 50.605128], [48.577841, 49.87476], [47.54948, 50.454698], [46.751596, 49.356006], [47.043672, 49.152039], [46.466446, 48.394152], [47.31524, 47.71585], [48.05725, 47.74377], [48.694734, 47.075628], [48.59325, 46.56104], [49.10116, 46.39933], [48.64541, 45.80629], [47.67591, 45.64149], [46.68201, 44.6092], [47.59094, 43.66016], [47.49252, 42.98658], [48.58437, 41.80888], [47.987283, 41.405819], [47.815666, 41.151416], [47.373315, 41.219732], [46.686071, 41.827137], [46.404951, 41.860675], [45.7764, 42.09244], [45.470279, 42.502781], [44.537623, 42.711993], [43.93121, 42.55496], [43.75599, 42.74083], [42.3944, 43.2203], [40.92219, 43.38215], [40.076965, 43.553104], [39.955009, 43.434998], [38.68, 44.28], [37.53912, 44.65721], [36.67546, 45.24469], [37.40317, 45.40451], [38.23295, 46.24087], [37.67372, 46.63657], [39.14767, 47.04475], [39.1212, 47.26336], [38.223538, 47.10219], [38.255112, 47.5464], [38.77057, 47.82562], [39.738278, 47.898937], [39.89562, 48.23241], [39.67465, 48.78382], [40.080789, 49.30743], [40.06904, 49.60105], [38.594988, 49.926462], [38.010631, 49.915662], [37.39346, 50.383953], [36.626168, 50.225591], [35.356116, 50.577197], [35.37791, 50.77394], [35.022183, 51.207572], [34.224816, 51.255993], [34.141978, 51.566413], [34.391731, 51.768882], [33.7527, 52.335075], [32.715761, 52.238465], [32.412058, 52.288695], [32.15944, 52.06125], [31.78597, 52.10168], [31.540018, 52.742052], [31.305201, 53.073996], [31.49764, 53.16743], [32.304519, 53.132726], [32.693643, 53.351421], [32.405599, 53.618045], [31.731273, 53.794029], [31.791424, 53.974639], [31.384472, 54.157056], [30.757534, 54.811771], [30.971836, 55.081548], [30.873909, 55.550976], [29.896294, 55.789463], [29.371572, 55.670091], [29.229513, 55.918344], [28.176709, 56.16913], [27.855282, 56.759326], [27.770016, 57.244258], [27.288185, 57.474528], [27.716686, 57.791899], [27.42015, 58.72457], [28.131699, 59.300825], [27.98112, 59.47537], [29.1177, 60.02805], [28.07, 60.50352], [30.211107, 61.780028], [31.139991, 62.357693], [31.516092, 62.867687], [30.035872, 63.552814], [30.444685, 64.204453], [29.54443, 64.948672], [30.21765, 65.80598], [29.054589, 66.944286], [29.977426, 67.698297], [28.445944, 68.364613], [28.59193, 69.064777], [29.39955, 69.15692], [31.10108, 69.55811], [32.13272, 69.90595], [33.77547, 69.30142], [36.51396, 69.06342], [40.29234, 67.9324], [41.05987, 67.45713], [41.12595, 66.79158], [40.01583, 66.26618], [38.38295, 65.99953], [33.91871, 66.75961], [33.18444, 66.63253], [34.81477, 65.90015], [34.878574, 65.436213], [34.94391, 64.41437], [36.23129, 64.10945], [37.01273, 63.84983], [37.14197, 64.33471], [36.539579, 64.76446], [37.17604, 65.14322], [39.59345, 64.52079], [40.4356, 64.76446], [39.7626, 65.49682], [42.09309, 66.47623], [43.01604, 66.41858], [43.94975, 66.06908], [44.53226, 66.75634], [43.69839, 67.35245], [44.18795, 67.95051], [43.45282, 68.57079], [46.25, 68.25], [46.82134, 67.68997], [45.55517, 67.56652], [45.56202, 67.01005], [46.34915, 66.66767], [47.89416, 66.88455], [48.13876, 67.52238], [50.22766, 67.99867], [53.71743, 68.85738], [54.47171, 68.80815], [53.48582, 68.20131], [54.72628, 68.09702], [55.44268, 68.43866], [57.31702, 68.46628], [58.802, 68.88082], [59.94142, 68.27844], [61.07784, 68.94069], [60.03, 69.52], [60.55, 69.85], [63.504, 69.54739], [64.888115, 69.234835], [68.51216, 68.09233], [69.18068, 68.61563], [68.16444, 69.14436], [68.13522, 69.35649], [66.93008, 69.45461], [67.25976, 69.92873], [66.72492, 70.70889], [66.69466, 71.02897], [68.54006, 71.9345], [69.19636, 72.84336], [69.94, 73.04], [72.58754, 72.77629], [72.79603, 72.22006], [71.84811, 71.40898], [72.47011, 71.09019], [72.79188, 70.39114], [72.5647, 69.02085], [73.66787, 68.4079], [73.2387, 67.7404], [71.28, 66.32], [72.42301, 66.17267], [72.82077, 66.53267], [73.92099, 66.78946], [74.18651, 67.28429], [75.052, 67.76047], [74.46926, 68.32899], [74.93584, 68.98918], [73.84236, 69.07146], [73.60187, 69.62763], [74.3998, 70.63175], [73.1011, 71.44717], [74.89082, 72.12119], [74.65926, 72.83227], [75.15801, 72.85497], [75.68351, 72.30056], [75.28898, 71.33556], [76.35911, 71.15287], [75.90313, 71.87401], [77.57665, 72.26717], [79.65202, 72.32011], [81.5, 71.75], [80.61071, 72.58285], [80.51109, 73.6482], [82.25, 73.85], [84.65526, 73.80591], [86.8223, 73.93688], [86.00956, 74.45967], [87.16682, 75.11643], [88.31571, 75.14393], [90.26, 75.64], [92.90058, 75.77333], [93.23421, 76.0472], [95.86, 76.14], [96.67821, 75.91548], [98.92254, 76.44689], [100.75967, 76.43028], [101.03532, 76.86189], [101.99084, 77.28754], [104.3516, 77.69792], [106.06664, 77.37389], [104.705, 77.1274], [106.97013, 76.97419]]], [[[105.07547, 78.30689], [99.43814, 77.921], [101.2649, 79.23399], [102.08635, 79.34641], [102.837815, 79.28129], [105.37243, 78.71334], [105.07547, 78.30689]]], [[[51.136187, 80.54728], [49.793685, 80.415428], [48.894411, 80.339567], [48.754937, 80.175468], [47.586119, 80.010181], [46.502826, 80.247247], [47.072455, 80.559424], [44.846958, 80.58981], [46.799139, 80.771918], [48.318477, 80.78401], [48.522806, 80.514569], [49.09719, 80.753986], [50.039768, 80.918885], [51.522933, 80.699726], [51.136187, 80.54728]]], [[[99.93976, 78.88094], [97.75794, 78.7562], [94.97259, 79.044745], [93.31288, 79.4265], [92.5454, 80.14379], [91.18107, 80.34146], [93.77766, 81.0246], [95.940895, 81.2504], [97.88385, 80.746975], [100.186655, 79.780135], [99.93976, 78.88094]]]]}},
  {type: "Feature", id: "RWA", properties: {name: "Rwanda"}, geometry: {type: "Polygon", coordinates: [[[30.419105, -1.134659], [30.816135, -1.698914], [30.758309, -2.28725], [30.469696, -2.413858], [29.938359, -2.348487], [29.632176, -2.917858], [29.024926, -2.839258], [29.117479, -2.292211], [29.254835, -2.21511], [29.291887, -1.620056], [29.579466, -1.341313], [29.821519, -1.443322], [30.419105, -1.134659]]]}},
  {type: "Feature", id: "ESH", properties: {name: "Western Sahara"}, geometry: {type: "Polygon", coordinates: [[[-8.794884, 27.120696], [-8.817828, 27.656426], [-8.66559, 27.656426], [-8.665124, 27.589479], [-8.6844, 27.395744], [-8.687294, 25.881056], [-11.969419, 25.933353], [-11.937224, 23.374594], [-12.874222, 23.284832], [-13.118754, 22.77122], [-12.929102, 21.327071], [-16.845194, 21.333323], [-17.063423, 20.999752], [-17.020428, 21.42231], [-17.002962, 21.420734], [-14.750955, 21.5006], [-14.630833, 21.86094], [-14.221168, 22.310163], [-13.89111, 23.691009], [-12.500963, 24.770116], [-12.030759, 26.030866], [-11.71822, 26.104092], [-11.392555, 26.883424], [-10.551263, 26.990808], [-10.189424, 26.860945], [-9.735343, 26.860945], [-9.413037, 27.088476], [-8.794884, 27.120696]]]}},
  {type: "Feature", id: "SAU", properties: {name: "Saudi Arabia"}, geometry: {type: "Polygon", coordinates: [[[42.779332, 16.347891], [42.649573, 16.774635], [42.347989, 17.075806], [42.270888, 17.474722], [41.754382, 17.833046], [41.221391, 18.6716], [40.939341, 19.486485], [40.247652, 20.174635], [39.801685, 20.338862], [39.139399, 21.291905], [39.023696, 21.986875], [39.066329, 22.579656], [38.492772, 23.688451], [38.02386, 24.078686], [37.483635, 24.285495], [37.154818, 24.858483], [37.209491, 25.084542], [36.931627, 25.602959], [36.639604, 25.826228], [36.249137, 26.570136], [35.640182, 27.37652], [35.130187, 28.063352], [34.632336, 28.058546], [34.787779, 28.607427], [34.83222, 28.957483], [34.956037, 29.356555], [36.068941, 29.197495], [36.501214, 29.505254], [36.740528, 29.865283], [37.503582, 30.003776], [37.66812, 30.338665], [37.998849, 30.5085], [37.002166, 31.508413], [39.004886, 32.010217], [39.195468, 32.161009], [40.399994, 31.889992], [41.889981, 31.190009], [44.709499, 29.178891], [46.568713, 29.099025], [47.459822, 29.002519], [47.708851, 28.526063], [48.416094, 28.552004], [48.807595, 27.689628], [49.299554, 27.461218], [49.470914, 27.109999], [50.152422, 26.689663], [50.212935, 26.277027], [50.113303, 25.943972], [50.239859, 25.60805], [50.527387, 25.327808], [50.660557, 24.999896], [50.810108, 24.754743], [51.112415, 24.556331], [51.389608, 24.627386], [51.579519, 24.245497], [51.617708, 24.014219], [52.000733, 23.001154], [55.006803, 22.496948], [55.208341, 22.70833], [55.666659, 22.000001], [54.999982, 19.999994], [52.00001, 19.000003], [49.116672, 18.616668], [48.183344, 18.166669], [47.466695, 17.116682], [47.000005, 16.949999], [46.749994, 17.283338], [46.366659, 17.233315], [45.399999, 17.333335], [45.216651, 17.433329], [44.062613, 17.410359], [43.791519, 17.319977], [43.380794, 17.579987], [43.115798, 17.08844], [43.218375, 16.66689], [42.779332, 16.347891]]]}},
  {type: "Feature", id: "SDN", properties: {name: "Sudan"}, geometry: {type: "Polygon", coordinates: [[[33.963393, 9.464285], [33.824963, 9.484061], [33.842131, 9.981915], [33.721959, 10.325262], [33.206938, 10.720112], [33.086766, 11.441141], [33.206938, 12.179338], [32.743419, 12.248008], [32.67475, 12.024832], [32.073892, 11.97333], [32.314235, 11.681484], [32.400072, 11.080626], [31.850716, 10.531271], [31.352862, 9.810241], [30.837841, 9.707237], [29.996639, 10.290927], [29.618957, 10.084919], [29.515953, 9.793074], [29.000932, 9.604232], [28.966597, 9.398224], [27.97089, 9.398224], [27.833551, 9.604232], [27.112521, 9.638567], [26.752006, 9.466893], [26.477328, 9.55273], [25.962307, 10.136421], [25.790633, 10.411099], [25.069604, 10.27376], [24.794926, 9.810241], [24.537415, 8.917538], [24.194068, 8.728696], [23.88698, 8.61973], [23.805813, 8.666319], [23.459013, 8.954286], [23.394779, 9.265068], [23.55725, 9.681218], [23.554304, 10.089255], [22.977544, 10.714463], [22.864165, 11.142395], [22.87622, 11.38461], [22.50869, 11.67936], [22.49762, 12.26024], [22.28801, 12.64605], [21.93681, 12.58818], [22.03759, 12.95546], [22.29658, 13.37232], [22.18329, 13.78648], [22.51202, 14.09318], [22.30351, 14.32682], [22.56795, 14.94429], [23.02459, 15.68072], [23.88689, 15.61084], [23.83766, 19.58047], [23.85, 20], [25, 20.00304], [25, 22], [29.02, 22], [32.9, 22], [36.86623, 22], [37.18872, 21.01885], [36.96941, 20.83744], [37.1147, 19.80796], [37.48179, 18.61409], [37.86276, 18.36786], [38.41009, 17.998307], [37.904, 17.42754], [37.16747, 17.26314], [36.85253, 16.95655], [36.75389, 16.29186], [36.32322, 14.82249], [36.42951, 14.42211], [36.27022, 13.56333], [35.86363, 12.57828], [35.26049, 12.08286], [34.83163, 11.31896], [34.73115, 10.91017], [34.25745, 10.63009], [33.96162, 9.58358], [33.963393, 9.464285]]]}},
  {type: "Feature", id: "SDS", properties: {name: "South Sudan"}, geometry: {type: "Polygon", coordinates: [[[33.963393, 9.464285], [33.97498, 8.68456], [33.8255, 8.37916], [33.2948, 8.35458], [32.95418, 7.78497], [33.56829, 7.71334], [34.0751, 7.22595], [34.25032, 6.82607], [34.70702, 6.59422], [35.298007, 5.506], [34.620196, 4.847123], [34.005, 4.249885], [33.39, 3.79], [32.68642, 3.79232], [31.88145, 3.55827], [31.24556, 3.7819], [30.83385, 3.50917], [29.95349, 4.1737], [29.715995, 4.600805], [29.159078, 4.389267], [28.696678, 4.455077], [28.428994, 4.287155], [27.979977, 4.408413], [27.374226, 5.233944], [27.213409, 5.550953], [26.465909, 5.946717], [26.213418, 6.546603], [25.796648, 6.979316], [25.124131, 7.500085], [25.114932, 7.825104], [24.567369, 8.229188], [23.88698, 8.61973], [24.194068, 8.728696], [24.537415, 8.917538], [24.794926, 9.810241], [25.069604, 10.27376], [25.790633, 10.411099], [25.962307, 10.136421], [26.477328, 9.55273], [26.752006, 9.466893], [27.112521, 9.638567], [27.833551, 9.604232], [27.97089, 9.398224], [28.966597, 9.398224], [29.000932, 9.604232], [29.515953, 9.793074], [29.618957, 10.084919], [29.996639, 10.290927], [30.837841, 9.707237], [31.352862, 9.810241], [31.850716, 10.531271], [32.400072, 11.080626], [32.314235, 11.681484], [32.073892, 11.97333], [32.67475, 12.024832], [32.743419, 12.248008], [33.206938, 12.179338], [33.086766, 11.441141], [33.206938, 10.720112], [33.721959, 10.325262], [33.842131, 9.981915], [33.824963, 9.484061], [33.963393, 9.464285]]]}},
  {type: "Feature", id: "SEN", properties: {name: "Senegal"}, geometry: {type: "Polygon", coordinates: [[[-16.713729, 13.594959], [-17.126107, 14.373516], [-17.625043, 14.729541], [-17.185173, 14.919477], [-16.700706, 15.621527], [-16.463098, 16.135036], [-16.12069, 16.455663], [-15.623666, 16.369337], [-15.135737, 16.587282], [-14.577348, 16.598264], [-14.099521, 16.304302], [-13.435738, 16.039383], [-12.830658, 15.303692], [-12.17075, 14.616834], [-12.124887, 13.994727], [-11.927716, 13.422075], [-11.553398, 13.141214], [-11.467899, 12.754519], [-11.513943, 12.442988], [-11.658301, 12.386583], [-12.203565, 12.465648], [-12.278599, 12.35444], [-12.499051, 12.33209], [-13.217818, 12.575874], [-13.700476, 12.586183], [-15.548477, 12.62817], [-15.816574, 12.515567], [-16.147717, 12.547762], [-16.677452, 12.384852], [-16.841525, 13.151394], [-15.931296, 13.130284], [-15.691001, 13.270353], [-15.511813, 13.27857], [-15.141163, 13.509512], [-14.712197, 13.298207], [-14.277702, 13.280585], [-13.844963, 13.505042], [-14.046992, 13.794068], [-14.376714, 13.62568], [-14.687031, 13.630357], [-15.081735, 13.876492], [-15.39877, 13.860369], [-15.624596, 13.623587], [-16.713729, 13.594959]]]}},
  {type: "Feature", id: "SLB", properties: {name: "Solomon Islands"}, geometry: {type: "MultiPolygon", coordinates: [[[[162.119025, -10.482719], [162.398646, -10.826367], [161.700032, -10.820011], [161.319797, -10.204751], [161.917383, -10.446701], [162.119025, -10.482719]]], [[[160.852229, -9.872937], [160.462588, -9.89521], [159.849447, -9.794027], [159.640003, -9.63998], [159.702945, -9.24295], [160.362956, -9.400304], [160.688518, -9.610162], [160.852229, -9.872937]]], [[[161.679982, -9.599982], [161.529397, -9.784312], [160.788253, -8.917543], [160.579997, -8.320009], [160.920028, -8.320009], [161.280006, -9.120011], [161.679982, -9.599982]]], [[[159.875027, -8.33732], [159.917402, -8.53829], [159.133677, -8.114181], [158.586114, -7.754824], [158.21115, -7.421872], [158.359978, -7.320018], [158.820001, -7.560003], [159.640003, -8.020027], [159.875027, -8.33732]]], [[[157.538426, -7.34782], [157.33942, -7.404767], [156.90203, -7.176874], [156.491358, -6.765943], [156.542828, -6.599338], [157.14, -7.021638], [157.538426, -7.34782]]]]}},
  {type: "Feature", id: "SLE", properties: {name: "Sierra Leone"}, geometry: {type: "Polygon", coordinates: [[[-11.438779, 6.785917], [-11.708195, 6.860098], [-12.428099, 7.262942], [-12.949049, 7.798646], [-13.124025, 8.163946], [-13.24655, 8.903049], [-12.711958, 9.342712], [-12.596719, 9.620188], [-12.425929, 9.835834], [-12.150338, 9.858572], [-11.917277, 10.046984], [-11.117481, 10.045873], [-10.839152, 9.688246], [-10.622395, 9.26791], [-10.65477, 8.977178], [-10.494315, 8.715541], [-10.505477, 8.348896], [-10.230094, 8.406206], [-10.695595, 7.939464], [-11.146704, 7.396706], [-11.199802, 7.105846], [-11.438779, 6.785917]]]}},
  {type: "Feature", id: "SLV", properties: {name: "El Salvador"}, geometry: {type: "Polygon", coordinates: [[[-87.793111, 13.38448], [-87.904112, 13.149017], [-88.483302, 13.163951], [-88.843228, 13.259734], [-89.256743, 13.458533], [-89.812394, 13.520622], [-90.095555, 13.735338], [-90.064678, 13.88197], [-89.721934, 14.134228], [-89.534219, 14.244816], [-89.587343, 14.362586], [-89.353326, 14.424133], [-89.058512, 14.340029], [-88.843073, 14.140507], [-88.541231, 13.980155], [-88.503998, 13.845486], [-88.065343, 13.964626], [-87.859515, 13.893312], [-87.723503, 13.78505], [-87.793111, 13.38448]]]}},
  {type: "Feature", id: "-99", properties: {name: "Somaliland"}, geometry: {type: "Polygon", coordinates: [[[48.93813, 9.451749], [48.486736, 8.837626], [47.78942, 8.003], [46.948328, 7.996877], [43.67875, 9.18358], [43.296975, 9.540477], [42.92812, 10.02194], [42.55876, 10.57258], [42.776852, 10.926879], [43.145305, 11.46204], [43.47066, 11.27771], [43.666668, 10.864169], [44.117804, 10.445538], [44.614259, 10.442205], [45.556941, 10.698029], [46.645401, 10.816549], [47.525658, 11.127228], [48.021596, 11.193064], [48.378784, 11.375482], [48.948206, 11.410622], [48.942005, 11.394266], [48.938491, 10.982327], [48.938233, 9.9735], [48.93813, 9.451749]]]}},
  {type: "Feature", id: "SOM", properties: {name: "Somalia"}, geometry: {type: "Polygon", coordinates: [[[49.72862, 11.5789], [50.25878, 11.67957], [50.73202, 12.0219], [51.1112, 12.02464], [51.13387, 11.74815], [51.04153, 11.16651], [51.04531, 10.6409], [50.83418, 10.27972], [50.55239, 9.19874], [50.07092, 8.08173], [49.4527, 6.80466], [48.59455, 5.33911], [47.74079, 4.2194], [46.56476, 2.85529], [45.56399, 2.04576], [44.06815, 1.05283], [43.13597, 0.2922], [42.04157, -0.91916], [41.81095, -1.44647], [41.58513, -1.68325], [40.993, -0.85829], [40.98105, 2.78452], [41.855083, 3.918912], [42.12861, 4.23413], [42.76967, 4.25259], [43.66087, 4.95755], [44.9636, 5.00162], [47.78942, 8.003], [48.486736, 8.837626], [48.93813, 9.451749], [48.938233, 9.9735], [48.938491, 10.982327], [48.942005, 11.394266], [48.948205, 11.410617], [49.26776, 11.43033], [49.72862, 11.5789]]]}},
  {type: "Feature", id: "SRB", properties: {name: "Republic of Serbia"}, geometry: {type: "Polygon", coordinates: [[[20.874313, 45.416375], [21.483526, 45.18117], [21.562023, 44.768947], [22.145088, 44.478422], [22.459022, 44.702517], [22.705726, 44.578003], [22.474008, 44.409228], [22.65715, 44.234923], [22.410446, 44.008063], [22.500157, 43.642814], [22.986019, 43.211161], [22.604801, 42.898519], [22.436595, 42.580321], [22.545012, 42.461362], [22.380526, 42.32026], [21.91708, 42.30364], [21.576636, 42.245224], [21.54332, 42.32025], [21.66292, 42.43922], [21.77505, 42.6827], [21.63302, 42.67717], [21.43866, 42.86255], [21.27421, 42.90959], [21.143395, 43.068685], [20.95651, 43.13094], [20.81448, 43.27205], [20.63508, 43.21671], [20.49679, 42.88469], [20.25758, 42.81275], [20.3398, 42.89852], [19.95857, 43.10604], [19.63, 43.21378], [19.48389, 43.35229], [19.21852, 43.52384], [19.454, 43.5681], [19.59976, 44.03847], [19.11761, 44.42307], [19.36803, 44.863], [19.00548, 44.86023], [19.390476, 45.236516], [19.072769, 45.521511], [18.82982, 45.90888], [19.596045, 46.17173], [20.220192, 46.127469], [20.762175, 45.734573], [20.874313, 45.416375]]]}},
  {type: "Feature", id: "SUR", properties: {name: "Suriname"}, geometry: {type: "Polygon", coordinates: [[[-57.147436, 5.97315], [-55.949318, 5.772878], [-55.84178, 5.953125], [-55.03325, 6.025291], [-53.958045, 5.756548], [-54.478633, 4.896756], [-54.399542, 4.212611], [-54.006931, 3.620038], [-54.181726, 3.18978], [-54.269705, 2.732392], [-54.524754, 2.311849], [-55.097587, 2.523748], [-55.569755, 2.421506], [-55.973322, 2.510364], [-56.073342, 2.220795], [-55.9056, 2.021996], [-55.995698, 1.817667], [-56.539386, 1.899523], [-57.150098, 2.768927], [-57.281433, 3.333492], [-57.601569, 3.334655], [-58.044694, 4.060864], [-57.86021, 4.576801], [-57.914289, 4.812626], [-57.307246, 5.073567], [-57.147436, 5.97315]]]}},
  {type: "Feature", id: "SVK", properties: {name: "Slovakia"}, geometry: {type: "Polygon", coordinates: [[[18.853144, 49.49623], [18.909575, 49.435846], [19.320713, 49.571574], [19.825023, 49.217125], [20.415839, 49.431453], [20.887955, 49.328772], [21.607808, 49.470107], [22.558138, 49.085738], [22.280842, 48.825392], [22.085608, 48.422264], [21.872236, 48.319971], [20.801294, 48.623854], [20.473562, 48.56285], [20.239054, 48.327567], [19.769471, 48.202691], [19.661364, 48.266615], [19.174365, 48.111379], [18.777025, 48.081768], [18.696513, 47.880954], [17.857133, 47.758429], [17.488473, 47.867466], [16.979667, 48.123497], [16.879983, 48.470013], [16.960288, 48.596982], [17.101985, 48.816969], [17.545007, 48.800019], [17.886485, 48.903475], [17.913512, 48.996493], [18.104973, 49.043983], [18.170498, 49.271515], [18.399994, 49.315001], [18.554971, 49.495015], [18.853144, 49.49623]]]}},
  {type: "Feature", id: "SVN", properties: {name: "Slovenia"}, geometry: {type: "Polygon", coordinates: [[[13.806475, 46.509306], [14.632472, 46.431817], [15.137092, 46.658703], [16.011664, 46.683611], [16.202298, 46.852386], [16.370505, 46.841327], [16.564808, 46.503751], [15.768733, 46.238108], [15.67153, 45.834154], [15.323954, 45.731783], [15.327675, 45.452316], [14.935244, 45.471695], [14.595109, 45.634941], [14.411968, 45.466166], [13.71506, 45.500324], [13.93763, 45.591016], [13.69811, 46.016778], [13.806475, 46.509306]]]}},
  {type: "Feature", id: "SWE", properties: {name: "Sweden"}, geometry: {type: "MultiPolygon", coordinates: [[[[22.183173, 65.723741], [21.213517, 65.026005], [21.369631, 64.413588], [19.778876, 63.609554], [17.847779, 62.7494], [17.119555, 61.341166], [17.831346, 60.636583], [18.787722, 60.081914], [17.869225, 58.953766], [16.829185, 58.719827], [16.44771, 57.041118], [15.879786, 56.104302], [14.666681, 56.200885], [14.100721, 55.407781], [12.942911, 55.361737], [12.625101, 56.30708], [11.787942, 57.441817], [11.027369, 58.856149], [11.468272, 59.432393], [12.300366, 60.117933], [12.631147, 61.293572], [11.992064, 61.800362], [11.930569, 63.128318], [12.579935, 64.066219], [13.571916, 64.049114], [13.919905, 64.445421], [13.55569, 64.787028], [15.108411, 66.193867], [16.108712, 67.302456], [16.768879, 68.013937], [17.729182, 68.010552], [17.993868, 68.567391], [19.87856, 68.407194], [20.025269, 69.065139], [20.645593, 69.106247], [21.978535, 68.616846], [23.539473, 67.936009], [23.56588, 66.396051], [23.903379, 66.006927], [22.183173, 65.723741]], [[17.061767, 57.385783], [17.210083, 57.326521], [16.430053, 56.179196], [16.364135, 56.556455], [17.061767, 57.385783]], [[19.35791, 57.958588], [18.8031, 57.651279], [18.825073, 57.444949], [18.995361, 57.441993], [18.951416, 57.370976], [18.693237, 57.305756], [18.709716, 57.204734], [18.462524, 57.127295], [18.319702, 56.926992], [18.105468, 56.891003], [18.187866, 57.109402], [18.072509, 57.267163], [18.154907, 57.394664], [18.094482, 57.545312], [18.660278, 57.929434], [19.039306, 57.941098], [19.105224, 57.993543], [19.374389, 57.996454], [19.35791, 57.958588]], [[20.846557, 63.82371], [21.066284, 63.829768], [20.9729, 63.71567], [20.824584, 63.579121], [20.695495, 63.59134], [20.819091, 63.714454], [20.799865, 63.780059], [20.846557, 63.82371]]]]}},
  {type: "Feature", id: "SWZ", properties: {name: "Swaziland"}, geometry: {type: "Polygon", coordinates: [[[32.071665, -26.73382], [31.86806, -27.177927], [31.282773, -27.285879], [30.685962, -26.743845], [30.676609, -26.398078], [30.949667, -26.022649], [31.04408, -25.731452], [31.333158, -25.660191], [31.837778, -25.843332], [31.985779, -26.29178], [32.071665, -26.73382]]]}},
  {type: "Feature", id: "SYR", properties: {name: "Syria"}, geometry: {type: "Polygon", coordinates: [[[38.792341, 33.378686], [36.834062, 32.312938], [35.719918, 32.709192], [35.700798, 32.716014], [35.836397, 32.868123], [35.821101, 33.277426], [36.06646, 33.824912], [36.61175, 34.201789], [36.448194, 34.593935], [35.998403, 34.644914], [35.905023, 35.410009], [36.149763, 35.821535], [36.41755, 36.040617], [36.685389, 36.259699], [36.739494, 36.81752], [37.066761, 36.623036], [38.167727, 36.90121], [38.699891, 36.712927], [39.52258, 36.716054], [40.673259, 37.091276], [41.212089, 37.074352], [42.349591, 37.229873], [41.837064, 36.605854], [41.289707, 36.358815], [41.383965, 35.628317], [41.006159, 34.419372], [38.792341, 33.378686]]]}},
  {type: "Feature", id: "TCD", properties: {name: "Chad"}, geometry: {type: "Polygon", coordinates: [[[14.495787, 12.859396], [14.595781, 13.330427], [13.954477, 13.353449], [13.956699, 13.996691], [13.540394, 14.367134], [13.97217, 15.68437], [15.247731, 16.627306], [15.300441, 17.92795], [15.685741, 19.95718], [15.903247, 20.387619], [15.487148, 20.730415], [15.47106, 21.04845], [15.096888, 21.308519], [14.8513, 22.86295], [15.86085, 23.40972], [19.84926, 21.49509], [23.83766, 19.58047], [23.88689, 15.61084], [23.02459, 15.68072], [22.56795, 14.94429], [22.30351, 14.32682], [22.51202, 14.09318], [22.18329, 13.78648], [22.29658, 13.37232], [22.03759, 12.95546], [21.93681, 12.58818], [22.28801, 12.64605], [22.49762, 12.26024], [22.50869, 11.67936], [22.87622, 11.38461], [22.864165, 11.142395], [22.231129, 10.971889], [21.723822, 10.567056], [21.000868, 9.475985], [20.059685, 9.012706], [19.094008, 9.074847], [18.81201, 8.982915], [18.911022, 8.630895], [18.389555, 8.281304], [17.96493, 7.890914], [16.705988, 7.508328], [16.456185, 7.734774], [16.290562, 7.754307], [16.106232, 7.497088], [15.27946, 7.421925], [15.436092, 7.692812], [15.120866, 8.38215], [14.979996, 8.796104], [14.544467, 8.965861], [13.954218, 9.549495], [14.171466, 10.021378], [14.627201, 9.920919], [14.909354, 9.992129], [15.467873, 9.982337], [14.923565, 10.891325], [14.960152, 11.555574], [14.89336, 12.21905], [14.495787, 12.859396]]]}},
  {type: "Feature", id: "TGO", properties: {name: "Togo"}, geometry: {type: "Polygon", coordinates: [[[1.865241, 6.142158], [1.060122, 5.928837], [0.836931, 6.279979], [0.570384, 6.914359], [0.490957, 7.411744], [0.712029, 8.312465], [0.461192, 8.677223], [0.365901, 9.465004], [0.36758, 10.191213], [-0.049785, 10.706918], [0.023803, 11.018682], [0.899563, 10.997339], [0.772336, 10.470808], [1.077795, 10.175607], [1.425061, 9.825395], [1.463043, 9.334624], [1.664478, 9.12859], [1.618951, 6.832038], [1.865241, 6.142158]]]}},
  {type: "Feature", id: "THA", properties: {name: "Thailand"}, geometry: {type: "Polygon", coordinates: [[[102.584932, 12.186595], [101.687158, 12.64574], [100.83181, 12.627085], [100.978467, 13.412722], [100.097797, 13.406856], [100.018733, 12.307001], [99.478921, 10.846367], [99.153772, 9.963061], [99.222399, 9.239255], [99.873832, 9.207862], [100.279647, 8.295153], [100.459274, 7.429573], [101.017328, 6.856869], [101.623079, 6.740622], [102.141187, 6.221636], [101.814282, 5.810808], [101.154219, 5.691384], [101.075516, 6.204867], [100.259596, 6.642825], [100.085757, 6.464489], [99.690691, 6.848213], [99.519642, 7.343454], [98.988253, 7.907993], [98.503786, 8.382305], [98.339662, 7.794512], [98.150009, 8.350007], [98.25915, 8.973923], [98.553551, 9.93296], [99.038121, 10.960546], [99.587286, 11.892763], [99.196354, 12.804748], [99.212012, 13.269294], [99.097755, 13.827503], [98.430819, 14.622028], [98.192074, 15.123703], [98.537376, 15.308497], [98.903348, 16.177824], [98.493761, 16.837836], [97.859123, 17.567946], [97.375896, 18.445438], [97.797783, 18.62708], [98.253724, 19.708203], [98.959676, 19.752981], [99.543309, 20.186598], [100.115988, 20.41785], [100.548881, 20.109238], [100.606294, 19.508344], [101.282015, 19.462585], [101.035931, 18.408928], [101.059548, 17.512497], [102.113592, 18.109102], [102.413005, 17.932782], [102.998706, 17.961695], [103.200192, 18.309632], [103.956477, 18.240954], [104.716947, 17.428859], [104.779321, 16.441865], [105.589039, 15.570316], [105.544338, 14.723934], [105.218777, 14.273212], [104.281418, 14.416743], [102.988422, 14.225721], [102.348099, 13.394247], [102.584932, 12.186595]]]}},
  {type: "Feature", id: "TJK", properties: {name: "Tajikistan"}, geometry: {type: "Polygon", coordinates: [[[71.014198, 40.244366], [70.648019, 39.935754], [69.55961, 40.103211], [69.464887, 39.526683], [70.549162, 39.604198], [71.784694, 39.279463], [73.675379, 39.431237], [73.928852, 38.505815], [74.257514, 38.606507], [74.864816, 38.378846], [74.829986, 37.990007], [74.980002, 37.41999], [73.948696, 37.421566], [73.260056, 37.495257], [72.63689, 37.047558], [72.193041, 36.948288], [71.844638, 36.738171], [71.448693, 37.065645], [71.541918, 37.905774], [71.239404, 37.953265], [71.348131, 38.258905], [70.806821, 38.486282], [70.376304, 38.138396], [70.270574, 37.735165], [70.116578, 37.588223], [69.518785, 37.608997], [69.196273, 37.151144], [68.859446, 37.344336], [68.135562, 37.023115], [67.83, 37.144994], [68.392033, 38.157025], [68.176025, 38.901553], [67.44222, 39.140144], [67.701429, 39.580478], [68.536416, 39.533453], [69.011633, 40.086158], [69.329495, 40.727824], [70.666622, 40.960213], [70.45816, 40.496495], [70.601407, 40.218527], [71.014198, 40.244366]]]}},
  {type: "Feature", id: "TKM", properties: {name: "Turkmenistan"}, geometry: {type: "Polygon", coordinates: [[[61.210817, 35.650072], [61.123071, 36.491597], [60.377638, 36.527383], [59.234762, 37.412988], [58.436154, 37.522309], [57.330434, 38.029229], [56.619366, 38.121394], [56.180375, 37.935127], [55.511578, 37.964117], [54.800304, 37.392421], [53.921598, 37.198918], [53.735511, 37.906136], [53.880929, 38.952093], [53.101028, 39.290574], [53.357808, 39.975286], [52.693973, 40.033629], [52.915251, 40.876523], [53.858139, 40.631034], [54.736845, 40.951015], [54.008311, 41.551211], [53.721713, 42.123191], [52.91675, 41.868117], [52.814689, 41.135371], [52.50246, 41.783316], [52.944293, 42.116034], [54.079418, 42.324109], [54.755345, 42.043971], [55.455251, 41.259859], [55.968191, 41.308642], [57.096391, 41.32231], [56.932215, 41.826026], [57.78653, 42.170553], [58.629011, 42.751551], [59.976422, 42.223082], [60.083341, 41.425146], [60.465953, 41.220327], [61.547179, 41.26637], [61.882714, 41.084857], [62.37426, 40.053886], [63.518015, 39.363257], [64.170223, 38.892407], [65.215999, 38.402695], [66.54615, 37.974685], [66.518607, 37.362784], [66.217385, 37.39379], [65.745631, 37.661164], [65.588948, 37.305217], [64.746105, 37.111818], [64.546479, 36.312073], [63.982896, 36.007957], [63.193538, 35.857166], [62.984662, 35.404041], [62.230651, 35.270664], [61.210817, 35.650072]]]}},
  {type: "Feature", id: "TLS", properties: {name: "East Timor"}, geometry: {type: "Polygon", coordinates: [[[124.968682, -8.89279], [125.086246, -8.656887], [125.947072, -8.432095], [126.644704, -8.398247], [126.957243, -8.273345], [127.335928, -8.397317], [126.967992, -8.668256], [125.925885, -9.106007], [125.08852, -9.393173], [125.07002, -9.089987], [124.968682, -8.89279]]]}},
  {type: "Feature", id: "TTO", properties: {name: "Trinidad and Tobago"}, geometry: {type: "Polygon", coordinates: [[[-61.68, 10.76], [-61.105, 10.89], [-60.895, 10.855], [-60.935, 10.11], [-61.77, 10], [-61.95, 10.09], [-61.66, 10.365], [-61.68, 10.76]]]}},
  {type: "Feature", id: "TUN", properties: {name: "Tunisia"}, geometry: {type: "Polygon", coordinates: [[[9.48214, 30.307556], [9.055603, 32.102692], [8.439103, 32.506285], [8.430473, 32.748337], [7.612642, 33.344115], [7.524482, 34.097376], [8.140981, 34.655146], [8.376368, 35.479876], [8.217824, 36.433177], [8.420964, 36.946427], [9.509994, 37.349994], [10.210002, 37.230002], [10.18065, 36.724038], [11.028867, 37.092103], [11.100026, 36.899996], [10.600005, 36.41], [10.593287, 35.947444], [10.939519, 35.698984], [10.807847, 34.833507], [10.149593, 34.330773], [10.339659, 33.785742], [10.856836, 33.76874], [11.108501, 33.293343], [11.488787, 33.136996], [11.432253, 32.368903], [10.94479, 32.081815], [10.636901, 31.761421], [9.950225, 31.37607], [10.056575, 30.961831], [9.970017, 30.539325], [9.48214, 30.307556]]]}},
  {type: "Feature", id: "TUR", properties: {name: "Turkey"}, geometry: {type: "MultiPolygon", coordinates: [[[[36.913127, 41.335358], [38.347665, 40.948586], [39.512607, 41.102763], [40.373433, 41.013673], [41.554084, 41.535656], [42.619549, 41.583173], [43.582746, 41.092143], [43.752658, 40.740201], [43.656436, 40.253564], [44.400009, 40.005], [44.79399, 39.713003], [44.109225, 39.428136], [44.421403, 38.281281], [44.225756, 37.971584], [44.772699, 37.170445], [44.293452, 37.001514], [43.942259, 37.256228], [42.779126, 37.385264], [42.349591, 37.229873], [41.212089, 37.074352], [40.673259, 37.091276], [39.52258, 36.716054], [38.699891, 36.712927], [38.167727, 36.90121], [37.066761, 36.623036], [36.739494, 36.81752], [36.685389, 36.259699], [36.41755, 36.040617], [36.149763, 35.821535], [35.782085, 36.274995], [36.160822, 36.650606], [35.550936, 36.565443], [34.714553, 36.795532], [34.026895, 36.21996], [32.509158, 36.107564], [31.699595, 36.644275], [30.621625, 36.677865], [30.391096, 36.262981], [29.699976, 36.144357], [28.732903, 36.676831], [27.641187, 36.658822], [27.048768, 37.653361], [26.318218, 38.208133], [26.8047, 38.98576], [26.170785, 39.463612], [27.28002, 40.420014], [28.819978, 40.460011], [29.240004, 41.219991], [31.145934, 41.087622], [32.347979, 41.736264], [33.513283, 42.01896], [35.167704, 42.040225], [36.913127, 41.335358]]], [[[27.192377, 40.690566], [26.358009, 40.151994], [26.043351, 40.617754], [26.056942, 40.824123], [26.294602, 40.936261], [26.604196, 41.562115], [26.117042, 41.826905], [27.135739, 42.141485], [27.99672, 42.007359], [28.115525, 41.622886], [28.988443, 41.299934], [28.806438, 41.054962], [27.619017, 40.999823], [27.192377, 40.690566]]]]}},
  {type: "Feature", id: "TWN", properties: {name: "Taiwan"}, geometry: {type: "Polygon", coordinates: [[[121.777818, 24.394274], [121.175632, 22.790857], [120.74708, 21.970571], [120.220083, 22.814861], [120.106189, 23.556263], [120.69468, 24.538451], [121.495044, 25.295459], [121.951244, 24.997596], [121.777818, 24.394274]]]}},
  {type: "Feature", id: "TZA", properties: {name: "United Republic of Tanzania"}, geometry: {type: "Polygon", coordinates: [[[33.903711, -0.95], [34.07262, -1.05982], [37.69869, -3.09699], [37.7669, -3.67712], [39.20222, -4.67677], [38.74054, -5.90895], [38.79977, -6.47566], [39.44, -6.84], [39.47, -7.1], [39.19469, -7.7039], [39.25203, -8.00781], [39.18652, -8.48551], [39.53574, -9.11237], [39.9496, -10.0984], [40.31659, -10.3171], [39.521, -10.89688], [38.427557, -11.285202], [37.82764, -11.26879], [37.47129, -11.56876], [36.775151, -11.594537], [36.514082, -11.720938], [35.312398, -11.439146], [34.559989, -11.52002], [34.28, -10.16], [33.940838, -9.693674], [33.73972, -9.41715], [32.759375, -9.230599], [32.191865, -8.930359], [31.556348, -8.762049], [31.157751, -8.594579], [30.74, -8.34], [30.2, -7.08], [29.62, -6.52], [29.419993, -5.939999], [29.519987, -5.419979], [29.339998, -4.499983], [29.753512, -4.452389], [30.11632, -4.09012], [30.50554, -3.56858], [30.75224, -3.35931], [30.74301, -3.03431], [30.52766, -2.80762], [30.46967, -2.41383], [30.758309, -2.28725], [30.816135, -1.698914], [30.419105, -1.134659], [30.76986, -1.01455], [31.86617, -1.02736], [33.903711, -0.95]]]}},
  {type: "Feature", id: "UGA", properties: {name: "Uganda"}, geometry: {type: "Polygon", coordinates: [[[31.86617, -1.02736], [30.76986, -1.01455], [30.419105, -1.134659], [29.821519, -1.443322], [29.579466, -1.341313], [29.587838, -0.587406], [29.8195, -0.2053], [29.875779, 0.59738], [30.086154, 1.062313], [30.468508, 1.583805], [30.85267, 1.849396], [31.174149, 2.204465], [30.77332, 2.33989], [30.83385, 3.50917], [31.24556, 3.7819], [31.88145, 3.55827], [32.68642, 3.79232], [33.39, 3.79], [34.005, 4.249885], [34.47913, 3.5556], [34.59607, 3.05374], [35.03599, 1.90584], [34.6721, 1.17694], [34.18, 0.515], [33.893569, 0.109814], [33.903711, -0.95], [31.86617, -1.02736]]]}},
  {type: "Feature", id: "UKR", properties: {name: "Ukraine"}, geometry: {type: "Polygon", coordinates: [[[31.785998, 52.101678], [32.159412, 52.061267], [32.412058, 52.288695], [32.715761, 52.238465], [33.7527, 52.335075], [34.391731, 51.768882], [34.141978, 51.566413], [34.224816, 51.255993], [35.022183, 51.207572], [35.377924, 50.773955], [35.356116, 50.577197], [36.626168, 50.225591], [37.39346, 50.383953], [38.010631, 49.915662], [38.594988, 49.926462], [40.069058, 49.601055], [40.080789, 49.30743], [39.674664, 48.783818], [39.895632, 48.232405], [39.738278, 47.898937], [38.770585, 47.825608], [38.255112, 47.5464], [38.223538, 47.10219], [37.425137, 47.022221], [36.759855, 46.6987], [35.823685, 46.645964], [34.962342, 46.273197], [35.020788, 45.651219], [35.510009, 45.409993], [36.529998, 45.46999], [36.334713, 45.113216], [35.239999, 44.939996], [33.882511, 44.361479], [33.326421, 44.564877], [33.546924, 45.034771], [32.454174, 45.327466], [32.630804, 45.519186], [33.588162, 45.851569], [33.298567, 46.080598], [31.74414, 46.333348], [31.675307, 46.706245], [30.748749, 46.5831], [30.377609, 46.03241], [29.603289, 45.293308], [29.149725, 45.464925], [28.679779, 45.304031], [28.233554, 45.488283], [28.485269, 45.596907], [28.659987, 45.939987], [28.933717, 46.25883], [28.862972, 46.437889], [29.072107, 46.517678], [29.170654, 46.379262], [29.759972, 46.349988], [30.024659, 46.423937], [29.83821, 46.525326], [29.908852, 46.674361], [29.559674, 46.928583], [29.415135, 47.346645], [29.050868, 47.510227], [29.122698, 47.849095], [28.670891, 48.118149], [28.259547, 48.155562], [27.522537, 48.467119], [26.857824, 48.368211], [26.619337, 48.220726], [26.19745, 48.220881], [25.945941, 47.987149], [25.207743, 47.891056], [24.866317, 47.737526], [24.402056, 47.981878], [23.760958, 47.985598], [23.142236, 48.096341], [22.710531, 47.882194], [22.64082, 48.15024], [22.085608, 48.422264], [22.280842, 48.825392], [22.558138, 49.085738], [22.776419, 49.027395], [22.51845, 49.476774], [23.426508, 50.308506], [23.922757, 50.424881], [24.029986, 50.705407], [23.527071, 51.578454], [24.005078, 51.617444], [24.553106, 51.888461], [25.327788, 51.910656], [26.337959, 51.832289], [27.454066, 51.592303], [28.241615, 51.572227], [28.617613, 51.427714], [28.992835, 51.602044], [29.254938, 51.368234], [30.157364, 51.416138], [30.555117, 51.319503], [30.619454, 51.822806], [30.927549, 52.042353], [31.785998, 52.101678]]]}},
  {type: "Feature", id: "URY", properties: {name: "Uruguay"}, geometry: {type: "Polygon", coordinates: [[[-57.625133, -30.216295], [-56.976026, -30.109686], [-55.973245, -30.883076], [-55.60151, -30.853879], [-54.572452, -31.494511], [-53.787952, -32.047243], [-53.209589, -32.727666], [-53.650544, -33.202004], [-53.373662, -33.768378], [-53.806426, -34.396815], [-54.935866, -34.952647], [-55.67409, -34.752659], [-56.215297, -34.859836], [-57.139685, -34.430456], [-57.817861, -34.462547], [-58.427074, -33.909454], [-58.349611, -33.263189], [-58.132648, -33.040567], [-58.14244, -32.044504], [-57.874937, -31.016556], [-57.625133, -30.216295]]]}},
  {type: "Feature", id: "USA", properties: {name: "United States of America"}, geometry: {type: "MultiPolygon", coordinates: [[[[-155.54211, 19.08348], [-155.68817, 18.91619], [-155.93665, 19.05939], [-155.90806, 19.33888], [-156.07347, 19.70294], [-156.02368, 19.81422], [-155.85008, 19.97729], [-155.91907, 20.17395], [-155.86108, 20.26721], [-155.78505, 20.2487], [-155.40214, 20.07975], [-155.22452, 19.99302], [-155.06226, 19.8591], [-154.80741, 19.50871], [-154.83147, 19.45328], [-155.22217, 19.23972], [-155.54211, 19.08348]]], [[[-156.07926, 20.64397], [-156.41445, 20.57241], [-156.58673, 20.783], [-156.70167, 20.8643], [-156.71055, 20.92676], [-156.61258, 21.01249], [-156.25711, 20.91745], [-155.99566, 20.76404], [-156.07926, 20.64397]]], [[[-156.75824, 21.17684], [-156.78933, 21.06873], [-157.32521, 21.09777], [-157.25027, 21.21958], [-156.75824, 21.17684]]], [[[-157.65283, 21.32217], [-157.70703, 21.26442], [-157.7786, 21.27729], [-158.12667, 21.31244], [-158.2538, 21.53919], [-158.29265, 21.57912], [-158.0252, 21.71696], [-157.94161, 21.65272], [-157.65283, 21.32217]]], [[[-159.34512, 21.982], [-159.46372, 21.88299], [-159.80051, 22.06533], [-159.74877, 22.1382], [-159.5962, 22.23618], [-159.36569, 22.21494], [-159.34512, 21.982]]], [[[-94.81758, 49.38905], [-94.64, 48.84], [-94.32914, 48.67074], [-93.63087, 48.60926], [-92.61, 48.45], [-91.64, 48.14], [-90.83, 48.27], [-89.6, 48.01], [-89.272917, 48.019808], [-88.378114, 48.302918], [-87.439793, 47.94], [-86.461991, 47.553338], [-85.652363, 47.220219], [-84.87608, 46.900083], [-84.779238, 46.637102], [-84.543749, 46.538684], [-84.6049, 46.4396], [-84.3367, 46.40877], [-84.14212, 46.512226], [-84.091851, 46.275419], [-83.890765, 46.116927], [-83.616131, 46.116927], [-83.469551, 45.994686], [-83.592851, 45.816894], [-82.550925, 45.347517], [-82.337763, 44.44], [-82.137642, 43.571088], [-82.43, 42.98], [-82.9, 42.43], [-83.12, 42.08], [-83.142, 41.975681], [-83.02981, 41.832796], [-82.690089, 41.675105], [-82.439278, 41.675105], [-81.277747, 42.209026], [-80.247448, 42.3662], [-78.939362, 42.863611], [-78.92, 42.965], [-79.01, 43.27], [-79.171674, 43.466339], [-78.72028, 43.625089], [-77.737885, 43.629056], [-76.820034, 43.628784], [-76.5, 44.018459], [-76.375, 44.09631], [-75.31821, 44.81645], [-74.867, 45.00048], [-73.34783, 45.00738], [-71.50506, 45.0082], [-71.405, 45.255], [-71.08482, 45.30524], [-70.66, 45.46], [-70.305, 45.915], [-69.99997, 46.69307], [-69.237216, 47.447781], [-68.905, 47.185], [-68.23444, 47.35486], [-67.79046, 47.06636], [-67.79134, 45.70281], [-67.13741, 45.13753], [-66.96466, 44.8097], [-68.03252, 44.3252], [-69.06, 43.98], [-70.11617, 43.68405], [-70.645476, 43.090238], [-70.81489, 42.8653], [-70.825, 42.335], [-70.495, 41.805], [-70.08, 41.78], [-70.185, 42.145], [-69.88497, 41.92283], [-69.96503, 41.63717], [-70.64, 41.475], [-71.12039, 41.49445], [-71.86, 41.32], [-72.295, 41.27], [-72.87643, 41.22065], [-73.71, 40.931102], [-72.24126, 41.11948], [-71.945, 40.93], [-73.345, 40.63], [-73.982, 40.628], [-73.952325, 40.75075], [-74.25671, 40.47351], [-73.96244, 40.42763], [-74.17838, 39.70926], [-74.90604, 38.93954], [-74.98041, 39.1964], [-75.20002, 39.24845], [-75.52805, 39.4985], [-75.32, 38.96], [-75.071835, 38.782032], [-75.05673, 38.40412], [-75.37747, 38.01551], [-75.94023, 37.21689], [-76.03127, 37.2566], [-75.72205, 37.93705], [-76.23287, 38.319215], [-76.35, 39.15], [-76.542725, 38.717615], [-76.32933, 38.08326], [-76.989998, 38.239992], [-76.30162, 37.917945], [-76.25874, 36.9664], [-75.9718, 36.89726], [-75.86804, 36.55125], [-75.72749, 35.55074], [-76.36318, 34.80854], [-77.397635, 34.51201], [-78.05496, 33.92547], [-78.55435, 33.86133], [-79.06067, 33.49395], [-79.20357, 33.15839], [-80.301325, 32.509355], [-80.86498, 32.0333], [-81.33629, 31.44049], [-81.49042, 30.72999], [-81.31371, 30.03552], [-80.98, 29.18], [-80.535585, 28.47213], [-80.53, 28.04], [-80.056539, 26.88], [-80.088015, 26.205765], [-80.13156, 25.816775], [-80.38103, 25.20616], [-80.68, 25.08], [-81.17213, 25.20126], [-81.33, 25.64], [-81.71, 25.87], [-82.24, 26.73], [-82.70515, 27.49504], [-82.85526, 27.88624], [-82.65, 28.55], [-82.93, 29.1], [-83.70959, 29.93656], [-84.1, 30.09], [-85.10882, 29.63615], [-85.28784, 29.68612], [-85.7731, 30.15261], [-86.4, 30.4], [-87.53036, 30.27433], [-88.41782, 30.3849], [-89.18049, 30.31598], [-89.593831, 30.159994], [-89.413735, 29.89419], [-89.43, 29.48864], [-89.21767, 29.29108], [-89.40823, 29.15961], [-89.77928, 29.30714], [-90.15463, 29.11743], [-90.880225, 29.148535], [-91.626785, 29.677], [-92.49906, 29.5523], [-93.22637, 29.78375], [-93.84842, 29.71363], [-94.69, 29.48], [-95.60026, 28.73863], [-96.59404, 28.30748], [-97.14, 27.83], [-97.37, 27.38], [-97.38, 26.69], [-97.33, 26.21], [-97.14, 25.87], [-97.53, 25.84], [-98.24, 26.06], [-99.02, 26.37], [-99.3, 26.84], [-99.52, 27.54], [-100.11, 28.11], [-100.45584, 28.69612], [-100.9576, 29.38071], [-101.6624, 29.7793], [-102.48, 29.76], [-103.11, 28.97], [-103.94, 29.27], [-104.45697, 29.57196], [-104.70575, 30.12173], [-105.03737, 30.64402], [-105.63159, 31.08383], [-106.1429, 31.39995], [-106.50759, 31.75452], [-108.24, 31.754854], [-108.24194, 31.34222], [-109.035, 31.34194], [-111.02361, 31.33472], [-113.30498, 32.03914], [-114.815, 32.52528], [-114.72139, 32.72083], [-115.99135, 32.61239], [-117.12776, 32.53534], [-117.295938, 33.046225], [-117.944, 33.621236], [-118.410602, 33.740909], [-118.519895, 34.027782], [-119.081, 34.078], [-119.438841, 34.348477], [-120.36778, 34.44711], [-120.62286, 34.60855], [-120.74433, 35.15686], [-121.71457, 36.16153], [-122.54747, 37.55176], [-122.51201, 37.78339], [-122.95319, 38.11371], [-123.7272, 38.95166], [-123.86517, 39.76699], [-124.39807, 40.3132], [-124.17886, 41.14202], [-124.2137, 41.99964], [-124.53284, 42.76599], [-124.14214, 43.70838], [-124.020535, 44.615895], [-123.89893, 45.52341], [-124.079635, 46.86475], [-124.39567, 47.72017], [-124.68721, 48.184433], [-124.566101, 48.379715], [-123.12, 48.04], [-122.58736, 47.096], [-122.34, 47.36], [-122.5, 48.18], [-122.84, 49], [-120, 49], [-117.03121, 49], [-116.04818, 49], [-113, 49], [-110.05, 49], [-107.05, 49], [-104.04826, 48.99986], [-100.65, 49], [-97.22872, 49.0007], [-95.15907, 49], [-95.15609, 49.38425], [-94.81758, 49.38905]]], [[[-153.006314, 57.115842], [-154.00509, 56.734677], [-154.516403, 56.992749], [-154.670993, 57.461196], [-153.76278, 57.816575], [-153.228729, 57.968968], [-152.564791, 57.901427], [-152.141147, 57.591059], [-153.006314, 57.115842]]], [[[-165.579164, 59.909987], [-166.19277, 59.754441], [-166.848337, 59.941406], [-167.455277, 60.213069], [-166.467792, 60.38417], [-165.67443, 60.293607], [-165.579164, 59.909987]]], [[[-171.731657, 63.782515], [-171.114434, 63.592191], [-170.491112, 63.694975], [-169.682505, 63.431116], [-168.689439, 63.297506], [-168.771941, 63.188598], [-169.52944, 62.976931], [-170.290556, 63.194438], [-170.671386, 63.375822], [-171.553063, 63.317789], [-171.791111, 63.405846], [-171.731657, 63.782515]]], [[[-155.06779, 71.147776], [-154.344165, 70.696409], [-153.900006, 70.889989], [-152.210006, 70.829992], [-152.270002, 70.600006], [-150.739992, 70.430017], [-149.720003, 70.53001], [-147.613362, 70.214035], [-145.68999, 70.12001], [-144.920011, 69.989992], [-143.589446, 70.152514], [-142.07251, 69.851938], [-140.985988, 69.711998], [-140.992499, 66.000029], [-140.99777, 60.306397], [-140.012998, 60.276838], [-139.039, 60.000007], [-138.34089, 59.56211], [-137.4525, 58.905], [-136.47972, 59.46389], [-135.47583, 59.78778], [-134.945, 59.27056], [-134.27111, 58.86111], [-133.355549, 58.410285], [-132.73042, 57.69289], [-131.70781, 56.55212], [-130.00778, 55.91583], [-129.979994, 55.284998], [-130.53611, 54.802753], [-131.085818, 55.178906], [-131.967211, 55.497776], [-132.250011, 56.369996], [-133.539181, 57.178887], [-134.078063, 58.123068], [-135.038211, 58.187715], [-136.628062, 58.212209], [-137.800006, 58.499995], [-139.867787, 59.537762], [-140.825274, 59.727517], [-142.574444, 60.084447], [-143.958881, 59.99918], [-145.925557, 60.45861], [-147.114374, 60.884656], [-148.224306, 60.672989], [-148.018066, 59.978329], [-148.570823, 59.914173], [-149.727858, 59.705658], [-150.608243, 59.368211], [-151.716393, 59.155821], [-151.859433, 59.744984], [-151.409719, 60.725803], [-150.346941, 61.033588], [-150.621111, 61.284425], [-151.895839, 60.727198], [-152.57833, 60.061657], [-154.019172, 59.350279], [-153.287511, 58.864728], [-154.232492, 58.146374], [-155.307491, 57.727795], [-156.308335, 57.422774], [-156.556097, 56.979985], [-158.117217, 56.463608], [-158.433321, 55.994154], [-159.603327, 55.566686], [-160.28972, 55.643581], [-161.223048, 55.364735], [-162.237766, 55.024187], [-163.069447, 54.689737], [-164.785569, 54.404173], [-164.942226, 54.572225], [-163.84834, 55.039431], [-162.870001, 55.348043], [-161.804175, 55.894986], [-160.563605, 56.008055], [-160.07056, 56.418055], [-158.684443, 57.016675], [-158.461097, 57.216921], [-157.72277, 57.570001], [-157.550274, 58.328326], [-157.041675, 58.918885], [-158.194731, 58.615802], [-158.517218, 58.787781], [-159.058606, 58.424186], [-159.711667, 58.93139], [-159.981289, 58.572549], [-160.355271, 59.071123], [-161.355003, 58.670838], [-161.968894, 58.671665], [-162.054987, 59.266925], [-161.874171, 59.633621], [-162.518059, 59.989724], [-163.818341, 59.798056], [-164.662218, 60.267484], [-165.346388, 60.507496], [-165.350832, 61.073895], [-166.121379, 61.500019], [-165.734452, 62.074997], [-164.919179, 62.633076], [-164.562508, 63.146378], [-163.753332, 63.219449], [-163.067224, 63.059459], [-162.260555, 63.541936], [-161.53445, 63.455817], [-160.772507, 63.766108], [-160.958335, 64.222799], [-161.518068, 64.402788], [-160.777778, 64.788604], [-161.391926, 64.777235], [-162.45305, 64.559445], [-162.757786, 64.338605], [-163.546394, 64.55916], [-164.96083, 64.446945], [-166.425288, 64.686672], [-166.845004, 65.088896], [-168.11056, 65.669997], [-166.705271, 66.088318], [-164.47471, 66.57666], [-163.652512, 66.57666], [-163.788602, 66.077207], [-161.677774, 66.11612], [-162.489715, 66.735565], [-163.719717, 67.116395], [-164.430991, 67.616338], [-165.390287, 68.042772], [-166.764441, 68.358877], [-166.204707, 68.883031], [-164.430811, 68.915535], [-163.168614, 69.371115], [-162.930566, 69.858062], [-161.908897, 70.33333], [-160.934797, 70.44769], [-159.039176, 70.891642], [-158.119723, 70.824721], [-156.580825, 71.357764], [-155.06779, 71.147776]]]]}},
  {type: "Feature", id: "UZB", properties: {name: "Uzbekistan"}, geometry: {type: "Polygon", coordinates: [[[66.518607, 37.362784], [66.54615, 37.974685], [65.215999, 38.402695], [64.170223, 38.892407], [63.518015, 39.363257], [62.37426, 40.053886], [61.882714, 41.084857], [61.547179, 41.26637], [60.465953, 41.220327], [60.083341, 41.425146], [59.976422, 42.223082], [58.629011, 42.751551], [57.78653, 42.170553], [56.932215, 41.826026], [57.096391, 41.32231], [55.968191, 41.308642], [55.928917, 44.995858], [58.503127, 45.586804], [58.689989, 45.500014], [60.239972, 44.784037], [61.05832, 44.405817], [62.0133, 43.504477], [63.185787, 43.650075], [64.900824, 43.728081], [66.098012, 42.99766], [66.023392, 41.994646], [66.510649, 41.987644], [66.714047, 41.168444], [67.985856, 41.135991], [68.259896, 40.662325], [68.632483, 40.668681], [69.070027, 41.384244], [70.388965, 42.081308], [70.962315, 42.266154], [71.259248, 42.167711], [70.420022, 41.519998], [71.157859, 41.143587], [71.870115, 41.3929], [73.055417, 40.866033], [71.774875, 40.145844], [71.014198, 40.244366], [70.601407, 40.218527], [70.45816, 40.496495], [70.666622, 40.960213], [69.329495, 40.727824], [69.011633, 40.086158], [68.536416, 39.533453], [67.701429, 39.580478], [67.44222, 39.140144], [68.176025, 38.901553], [68.392033, 38.157025], [67.83, 37.144994], [67.075782, 37.356144], [66.518607, 37.362784]]]}},
  {type: "Feature", id: "VEN", properties: {name: "Venezuela"}, geometry: {type: "Polygon", coordinates: [[[-71.331584, 11.776284], [-71.360006, 11.539994], [-71.94705, 11.423282], [-71.620868, 10.96946], [-71.633064, 10.446494], [-72.074174, 9.865651], [-71.695644, 9.072263], [-71.264559, 9.137195], [-71.039999, 9.859993], [-71.350084, 10.211935], [-71.400623, 10.968969], [-70.155299, 11.375482], [-70.293843, 11.846822], [-69.943245, 12.162307], [-69.5843, 11.459611], [-68.882999, 11.443385], [-68.233271, 10.885744], [-68.194127, 10.554653], [-67.296249, 10.545868], [-66.227864, 10.648627], [-65.655238, 10.200799], [-64.890452, 10.077215], [-64.329479, 10.389599], [-64.318007, 10.641418], [-63.079322, 10.701724], [-61.880946, 10.715625], [-62.730119, 10.420269], [-62.388512, 9.948204], [-61.588767, 9.873067], [-60.830597, 9.38134], [-60.671252, 8.580174], [-60.150096, 8.602757], [-59.758285, 8.367035], [-60.550588, 7.779603], [-60.637973, 7.415], [-60.295668, 7.043911], [-60.543999, 6.856584], [-61.159336, 6.696077], [-61.139415, 6.234297], [-61.410303, 5.959068], [-60.733574, 5.200277], [-60.601179, 4.918098], [-60.966893, 4.536468], [-62.08543, 4.162124], [-62.804533, 4.006965], [-63.093198, 3.770571], [-63.888343, 4.02053], [-64.628659, 4.148481], [-64.816064, 4.056445], [-64.368494, 3.79721], [-64.408828, 3.126786], [-64.269999, 2.497006], [-63.422867, 2.411068], [-63.368788, 2.2009], [-64.083085, 1.916369], [-64.199306, 1.492855], [-64.611012, 1.328731], [-65.354713, 1.095282], [-65.548267, 0.789254], [-66.325765, 0.724452], [-66.876326, 1.253361], [-67.181294, 2.250638], [-67.447092, 2.600281], [-67.809938, 2.820655], [-67.303173, 3.318454], [-67.337564, 3.542342], [-67.621836, 3.839482], [-67.823012, 4.503937], [-67.744697, 5.221129], [-67.521532, 5.55687], [-67.34144, 6.095468], [-67.695087, 6.267318], [-68.265052, 6.153268], [-68.985319, 6.206805], [-69.38948, 6.099861], [-70.093313, 6.960376], [-70.674234, 7.087785], [-71.960176, 6.991615], [-72.198352, 7.340431], [-72.444487, 7.423785], [-72.479679, 7.632506], [-72.360901, 8.002638], [-72.439862, 8.405275], [-72.660495, 8.625288], [-72.78873, 9.085027], [-73.304952, 9.152], [-73.027604, 9.73677], [-72.905286, 10.450344], [-72.614658, 10.821975], [-72.227575, 11.108702], [-71.973922, 11.608672], [-71.331584, 11.776284]]]}},
  {type: "Feature", id: "VNM", properties: {name: "Vietnam"}, geometry: {type: "Polygon", coordinates: [[[108.05018, 21.55238], [106.715068, 20.696851], [105.881682, 19.75205], [105.662006, 19.058165], [106.426817, 18.004121], [107.361954, 16.697457], [108.269495, 16.079742], [108.877107, 15.276691], [109.33527, 13.426028], [109.200136, 11.666859], [108.36613, 11.008321], [107.220929, 10.364484], [106.405113, 9.53084], [105.158264, 8.59976], [104.795185, 9.241038], [105.076202, 9.918491], [104.334335, 10.486544], [105.199915, 10.88931], [106.24967, 10.961812], [105.810524, 11.567615], [107.491403, 12.337206], [107.614548, 13.535531], [107.382727, 14.202441], [107.564525, 15.202173], [107.312706, 15.908538], [106.556008, 16.604284], [105.925762, 17.485315], [105.094598, 18.666975], [103.896532, 19.265181], [104.183388, 19.624668], [104.822574, 19.886642], [104.435, 20.758733], [103.203861, 20.766562], [102.754896, 21.675137], [102.170436, 22.464753], [102.706992, 22.708795], [103.504515, 22.703757], [104.476858, 22.81915], [105.329209, 23.352063], [105.811247, 22.976892], [106.725403, 22.794268], [106.567273, 22.218205], [107.04342, 21.811899], [108.05018, 21.55238]]]}},
  {type: "Feature", id: "VUT", properties: {name: "Vanuatu"}, geometry: {type: "MultiPolygon", coordinates: [[[[167.844877, -16.466333], [167.515181, -16.59785], [167.180008, -16.159995], [167.216801, -15.891846], [167.844877, -16.466333]]], [[[167.107712, -14.93392], [167.270028, -15.740021], [167.001207, -15.614602], [166.793158, -15.668811], [166.649859, -15.392704], [166.629137, -14.626497], [167.107712, -14.93392]]]]}},
  {type: "Feature", id: "PSE", properties: {name: "West Bank"}, geometry: {type: "Polygon", coordinates: [[[35.545665, 32.393992], [35.545252, 31.782505], [35.397561, 31.489086], [34.927408, 31.353435], [34.970507, 31.616778], [35.225892, 31.754341], [34.974641, 31.866582], [35.18393, 32.532511], [35.545665, 32.393992]]]}},
  {type: "Feature", id: "YEM", properties: {name: "Yemen"}, geometry: {type: "Polygon", coordinates: [[[53.108573, 16.651051], [52.385206, 16.382411], [52.191729, 15.938433], [52.168165, 15.59742], [51.172515, 15.17525], [49.574576, 14.708767], [48.679231, 14.003202], [48.238947, 13.94809], [47.938914, 14.007233], [47.354454, 13.59222], [46.717076, 13.399699], [45.877593, 13.347764], [45.62505, 13.290946], [45.406459, 13.026905], [45.144356, 12.953938], [44.989533, 12.699587], [44.494576, 12.721653], [44.175113, 12.58595], [43.482959, 12.6368], [43.222871, 13.22095], [43.251448, 13.767584], [43.087944, 14.06263], [42.892245, 14.802249], [42.604873, 15.213335], [42.805015, 15.261963], [42.702438, 15.718886], [42.823671, 15.911742], [42.779332, 16.347891], [43.218375, 16.66689], [43.115798, 17.08844], [43.380794, 17.579987], [43.791519, 17.319977], [44.062613, 17.410359], [45.216651, 17.433329], [45.399999, 17.333335], [46.366659, 17.233315], [46.749994, 17.283338], [47.000005, 16.949999], [47.466695, 17.116682], [48.183344, 18.166669], [49.116672, 18.616668], [52.00001, 19.000003], [52.782184, 17.349742], [53.108573, 16.651051]]]}},
  {type: "Feature", id: "ZAF", properties: {name: "South Africa"}, geometry: {type: "Polygon", coordinates: [[[31.521001, -29.257387], [31.325561, -29.401978], [30.901763, -29.909957], [30.622813, -30.423776], [30.055716, -31.140269], [28.925553, -32.172041], [28.219756, -32.771953], [27.464608, -33.226964], [26.419452, -33.61495], [25.909664, -33.66704], [25.780628, -33.944646], [25.172862, -33.796851], [24.677853, -33.987176], [23.594043, -33.794474], [22.988189, -33.916431], [22.574157, -33.864083], [21.542799, -34.258839], [20.689053, -34.417175], [20.071261, -34.795137], [19.616405, -34.819166], [19.193278, -34.462599], [18.855315, -34.444306], [18.424643, -33.997873], [18.377411, -34.136521], [18.244499, -33.867752], [18.25008, -33.281431], [17.92519, -32.611291], [18.24791, -32.429131], [18.221762, -31.661633], [17.566918, -30.725721], [17.064416, -29.878641], [17.062918, -29.875954], [16.344977, -28.576705], [16.824017, -28.082162], [17.218929, -28.355943], [17.387497, -28.783514], [17.836152, -28.856378], [18.464899, -29.045462], [19.002127, -28.972443], [19.894734, -28.461105], [19.895768, -24.76779], [20.165726, -24.917962], [20.758609, -25.868136], [20.66647, -26.477453], [20.889609, -26.828543], [21.605896, -26.726534], [22.105969, -26.280256], [22.579532, -25.979448], [22.824271, -25.500459], [23.312097, -25.26869], [23.73357, -25.390129], [24.211267, -25.670216], [25.025171, -25.71967], [25.664666, -25.486816], [25.765849, -25.174845], [25.941652, -24.696373], [26.485753, -24.616327], [26.786407, -24.240691], [27.11941, -23.574323], [28.017236, -22.827754], [29.432188, -22.091313], [29.839037, -22.102216], [30.322883, -22.271612], [30.659865, -22.151567], [31.191409, -22.25151], [31.670398, -23.658969], [31.930589, -24.369417], [31.752408, -25.484284], [31.837778, -25.843332], [31.333158, -25.660191], [31.04408, -25.731452], [30.949667, -26.022649], [30.676609, -26.398078], [30.685962, -26.743845], [31.282773, -27.285879], [31.86806, -27.177927], [32.071665, -26.73382], [32.83012, -26.742192], [32.580265, -27.470158], [32.462133, -28.301011], [32.203389, -28.752405], [31.521001, -29.257387]], [[28.978263, -28.955597], [28.5417, -28.647502], [28.074338, -28.851469], [27.532511, -29.242711], [26.999262, -29.875954], [27.749397, -30.645106], [28.107205, -30.545732], [28.291069, -30.226217], [28.8484, -30.070051], [29.018415, -29.743766], [29.325166, -29.257387], [28.978263, -28.955597]]]}},
  {type: "Feature", id: "ZMB", properties: {name: "Zambia"}, geometry: {type: "Polygon", coordinates: [[[32.759375, -9.230599], [33.231388, -9.676722], [33.485688, -10.525559], [33.31531, -10.79655], [33.114289, -11.607198], [33.306422, -12.435778], [32.991764, -12.783871], [32.688165, -13.712858], [33.214025, -13.97186], [30.179481, -14.796099], [30.274256, -15.507787], [29.516834, -15.644678], [28.947463, -16.043051], [28.825869, -16.389749], [28.467906, -16.4684], [27.598243, -17.290831], [27.044427, -17.938026], [26.706773, -17.961229], [26.381935, -17.846042], [25.264226, -17.73654], [25.084443, -17.661816], [25.07695, -17.578823], [24.682349, -17.353411], [24.033862, -17.295843], [23.215048, -17.523116], [22.562478, -16.898451], [21.887843, -16.08031], [21.933886, -12.898437], [24.016137, -12.911046], [23.930922, -12.565848], [24.079905, -12.191297], [23.904154, -11.722282], [24.017894, -11.237298], [23.912215, -10.926826], [24.257155, -10.951993], [24.314516, -11.262826], [24.78317, -11.238694], [25.418118, -11.330936], [25.75231, -11.784965], [26.553088, -11.92444], [27.16442, -11.608748], [27.388799, -12.132747], [28.155109, -12.272481], [28.523562, -12.698604], [28.934286, -13.248958], [29.699614, -13.257227], [29.616001, -12.178895], [29.341548, -12.360744], [28.642417, -11.971569], [28.372253, -11.793647], [28.49607, -10.789884], [28.673682, -9.605925], [28.449871, -9.164918], [28.734867, -8.526559], [29.002912, -8.407032], [30.346086, -8.238257], [30.740015, -8.340007], [31.157751, -8.594579], [31.556348, -8.762049], [32.191865, -8.930359], [32.759375, -9.230599]]]}},
  {type: "Feature", id: "ZWE", properties: {name: "Zimbabwe"}, geometry: {type: "Polygon", coordinates: [[[31.191409, -22.25151], [30.659865, -22.151567], [30.322883, -22.271612], [29.839037, -22.102216], [29.432188, -22.091313], [28.794656, -21.639454], [28.02137, -21.485975], [27.727228, -20.851802], [27.724747, -20.499059], [27.296505, -20.39152], [26.164791, -19.293086], [25.850391, -18.714413], [25.649163, -18.536026], [25.264226, -17.73654], [26.381935, -17.846042], [26.706773, -17.961229], [27.044427, -17.938026], [27.598243, -17.290831], [28.467906, -16.4684], [28.825869, -16.389749], [28.947463, -16.043051], [29.516834, -15.644678], [30.274256, -15.507787], [30.338955, -15.880839], [31.173064, -15.860944], [31.636498, -16.07199], [31.852041, -16.319417], [32.328239, -16.392074], [32.847639, -16.713398], [32.849861, -17.979057], [32.654886, -18.67209], [32.611994, -19.419383], [32.772708, -19.715592], [32.659743, -20.30429], [32.508693, -20.395292], [32.244988, -21.116489], [31.191409, -22.25151]]]}}
]};

// dist/components/dashboard/index.js
var appdata = americas_default.features.filter((d2) => index$2().centroid(d2)[0] < -20);
appdata.forEach((d2, i) => {
  const offset = Math.random();
  d2.launchday = i;
  d2.data = Array(30).fill(1).map((p3, q2) => q2 < i ? 0 : Math.random() * 2 + offset);
});
var colorScale2 = threshold().domain([5, 10, 20, 30]).range(["#75739F", "#5EAFC6", "#41A368", "#93C464"]);
function Dashboard() {
  const [state, setState] = useState({screenWidth: 600, screenHeight: 300, hover: "none", brushExtent: [0, 40]});
  const [filteredAppdata, setFilteredAppdata] = useState(appdata);
  const onHover = (d2) => {
    setState((state2) => ({...state2, hover: d2.id}));
  };
  const onBrush = (d2) => {
    setState((state2) => ({...state2, brushExtent: d2}));
  };
  useEffect(() => {
    if (appdata.length) {
      setFilteredAppdata(appdata.filter((d2) => d2.launchday >= state.brushExtent[0] && d2.launchday <= state.brushExtent[1]));
    }
  }, [state.brushExtent]);
  return /* @__PURE__ */ react.createElement("div", {
    className: "App",
    style: {maxWidth: "100vw"}
  }, /* @__PURE__ */ react.createElement("h2", null, "D3 Dashboard"), /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement(StatLine, {
    allData: appdata,
    filteredData: filteredAppdata
  }), /* @__PURE__ */ react.createElement(StreamGraph_default, {
    hoverElement: state.hover,
    onHover,
    colorScale: colorScale2,
    data: filteredAppdata,
    size: [state.screenWidth, state.screenHeight / 2]
  }), /* @__PURE__ */ react.createElement(Brush_default, {
    changeBrush: onBrush,
    size: [state.screenWidth, 50]
  }), /* @__PURE__ */ react.createElement(WorldMap_default, {
    hoverElement: state.hover,
    onHover,
    colorScale: colorScale2,
    data: filteredAppdata,
    size: [state.screenWidth / 2, state.screenHeight / 2]
  }), /* @__PURE__ */ react.createElement(BarChart_default, {
    hoverElement: state.hover,
    onHover,
    colorScale: colorScale2,
    data: filteredAppdata,
    size: [state.screenWidth / 2, state.screenHeight / 2]
  })));
}
var dashboard_default = Dashboard;

// snowpack/pkg/common/flatten-6e030091.js
function stackClear() {
  this.__data__ = new _ListCache();
  this.size = 0;
}
var _stackClear = stackClear;
function stackDelete(key) {
  var data3 = this.__data__, result = data3["delete"](key);
  this.size = data3.size;
  return result;
}
var _stackDelete = stackDelete;
function stackGet(key) {
  return this.__data__.get(key);
}
var _stackGet = stackGet;
function stackHas(key) {
  return this.__data__.has(key);
}
var _stackHas = stackHas;
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value2) {
  var data3 = this.__data__;
  if (data3 instanceof _ListCache) {
    var pairs = data3.__data__;
    if (!_Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value2]);
      this.size = ++data3.size;
      return this;
    }
    data3 = this.__data__ = new _MapCache(pairs);
  }
  data3.set(key, value2);
  this.size = data3.size;
  return this;
}
var _stackSet = stackSet;
function Stack(entries) {
  var data3 = this.__data__ = new _ListCache(entries);
  this.size = data3.size;
}
Stack.prototype.clear = _stackClear;
Stack.prototype["delete"] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;
var _Stack = Stack;
var defineProperty = function() {
  try {
    var func = _getNative(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e3) {
  }
}();
var _defineProperty2 = defineProperty;
function baseAssignValue(object2, key, value2) {
  if (key == "__proto__" && _defineProperty2) {
    _defineProperty2(object2, key, {
      configurable: true,
      enumerable: true,
      value: value2,
      writable: true
    });
  } else {
    object2[key] = value2;
  }
}
var _baseAssignValue = baseAssignValue;
function createBaseFor(fromRight) {
  return function(object2, iteratee, keysFunc) {
    var index4 = -1, iterable = Object(object2), props = keysFunc(object2), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index4];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object2;
  };
}
var _createBaseFor = createBaseFor;
var baseFor = _createBaseFor();
var _baseFor = baseFor;
var Uint8Array2 = _root.Uint8Array;
var _Uint8Array = Uint8Array2;
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var _overArg = overArg;
var objectProto2 = Object.prototype;
function isPrototype(value2) {
  var Ctor = value2 && value2.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto2;
  return value2 === proto2;
}
var _isPrototype = isPrototype;
function isObjectLike(value2) {
  return value2 != null && typeof value2 == "object";
}
var isObjectLike_1 = isObjectLike;
var argsTag = "[object Arguments]";
function baseIsArguments(value2) {
  return isObjectLike_1(value2) && _baseGetTag(value2) == argsTag;
}
var _baseIsArguments = baseIsArguments;
var objectProto$12 = Object.prototype;
var hasOwnProperty3 = objectProto$12.hasOwnProperty;
var propertyIsEnumerable = objectProto$12.propertyIsEnumerable;
var isArguments = _baseIsArguments(function() {
  return arguments;
}()) ? _baseIsArguments : function(value2) {
  return isObjectLike_1(value2) && hasOwnProperty3.call(value2, "callee") && !propertyIsEnumerable.call(value2, "callee");
};
var isArguments_1 = isArguments;
var isArray = Array.isArray;
var isArray_1 = isArray;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength(value2) {
  return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength;
function isArrayLike(value2) {
  return value2 != null && isLength_1(value2.length) && !isFunction_1(value2);
}
var isArrayLike_1 = isArrayLike;
function isArrayLikeObject(value2) {
  return isObjectLike_1(value2) && isArrayLike_1(value2);
}
var isArrayLikeObject_1 = isArrayLikeObject;
function stubFalse() {
  return false;
}
var stubFalse_1 = stubFalse;
var isBuffer_1 = createCommonjsModule(function(module, exports) {
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer2 = moduleExports ? _root.Buffer : void 0;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
  var isBuffer = nativeIsBuffer || stubFalse_1;
  module.exports = isBuffer;
});
var argsTag$1 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value2) {
  return isObjectLike_1(value2) && isLength_1(value2.length) && !!typedArrayTags[_baseGetTag(value2)];
}
var _baseIsTypedArray = baseIsTypedArray;
function baseUnary(func) {
  return function(value2) {
    return func(value2);
  };
}
var _baseUnary = baseUnary;
var _nodeUtil = createCommonjsModule(function(module, exports) {
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && _freeGlobal.process;
  var nodeUtil = function() {
    try {
      var types = freeModule && freeModule.require && freeModule.require("util").types;
      if (types) {
        return types;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e3) {
    }
  }();
  module.exports = nodeUtil;
});
var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;
var isTypedArray_1 = isTypedArray;
function baseTimes(n3, iteratee) {
  var index4 = -1, result = Array(n3);
  while (++index4 < n3) {
    result[index4] = iteratee(index4);
  }
  return result;
}
var _baseTimes = baseTimes;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value2, length) {
  var type3 = typeof value2;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type3 == "number" || type3 != "symbol" && reIsUint.test(value2)) && (value2 > -1 && value2 % 1 == 0 && value2 < length);
}
var _isIndex = isIndex;
var objectProto$22 = Object.prototype;
var hasOwnProperty$12 = objectProto$22.hasOwnProperty;
function arrayLikeKeys(value2, inherited) {
  var isArr = isArray_1(value2), isArg = !isArr && isArguments_1(value2), isBuff = !isArr && !isArg && isBuffer_1(value2), isType = !isArr && !isArg && !isBuff && isTypedArray_1(value2), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? _baseTimes(value2.length, String) : [], length = result.length;
  for (var key in value2) {
    if ((inherited || hasOwnProperty$12.call(value2, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || _isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var _arrayLikeKeys = arrayLikeKeys;
function identity4(value2) {
  return value2;
}
var identity_1 = identity4;
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var _apply = apply;
var nativeMax = Math.max;
function overRest(func, start2, transform) {
  start2 = nativeMax(start2 === void 0 ? func.length - 1 : start2, 0);
  return function() {
    var args = arguments, index4 = -1, length = nativeMax(args.length - start2, 0), array5 = Array(length);
    while (++index4 < length) {
      array5[index4] = args[start2 + index4];
    }
    index4 = -1;
    var otherArgs = Array(start2 + 1);
    while (++index4 < start2) {
      otherArgs[index4] = args[index4];
    }
    otherArgs[start2] = transform(array5);
    return _apply(func, this, otherArgs);
  };
}
var _overRest = overRest;
function constant3(value2) {
  return function() {
    return value2;
  };
}
var constant_1 = constant3;
var baseSetToString = !_defineProperty2 ? identity_1 : function(func, string2) {
  return _defineProperty2(func, "toString", {
    configurable: true,
    enumerable: false,
    value: constant_1(string2),
    writable: true
  });
};
var _baseSetToString = baseSetToString;
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count2 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count2 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count2 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var _shortOut = shortOut;
var setToString = _shortOut(_baseSetToString);
var _setToString = setToString;
function baseRest(func, start2) {
  return _setToString(_overRest(func, start2, identity_1), func + "");
}
var _baseRest = baseRest;
function isIterateeCall(value2, index4, object2) {
  if (!isObject_1(object2)) {
    return false;
  }
  var type3 = typeof index4;
  if (type3 == "number" ? isArrayLike_1(object2) && _isIndex(index4, object2.length) : type3 == "string" && index4 in object2) {
    return eq_1(object2[index4], value2);
  }
  return false;
}
var _isIterateeCall = isIterateeCall;
var symbolTag = "[object Symbol]";
function isSymbol(value2) {
  return typeof value2 == "symbol" || isObjectLike_1(value2) && _baseGetTag(value2) == symbolTag;
}
var isSymbol_1 = isSymbol;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value2, object2) {
  if (isArray_1(value2)) {
    return false;
  }
  var type3 = typeof value2;
  if (type3 == "number" || type3 == "symbol" || type3 == "boolean" || value2 == null || isSymbol_1(value2)) {
    return true;
  }
  return reIsPlainProp.test(value2) || !reIsDeepProp.test(value2) || object2 != null && value2 in Object(object2);
}
var _isKey = isKey;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize_1(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped;
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = _memoizeCapped(function(string2) {
  var result = [];
  if (string2.charCodeAt(0) === 46) {
    result.push("");
  }
  string2.replace(rePropName, function(match2, number6, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number6 || match2);
  });
  return result;
});
var _stringToPath = stringToPath;
function arrayMap(array5, iteratee) {
  var index4 = -1, length = array5 == null ? 0 : array5.length, result = Array(length);
  while (++index4 < length) {
    result[index4] = iteratee(array5[index4], index4, array5);
  }
  return result;
}
var _arrayMap = arrayMap;
var INFINITY = 1 / 0;
var symbolProto = _Symbol ? _Symbol.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value2) {
  if (typeof value2 == "string") {
    return value2;
  }
  if (isArray_1(value2)) {
    return _arrayMap(value2, baseToString) + "";
  }
  if (isSymbol_1(value2)) {
    return symbolToString ? symbolToString.call(value2) : "";
  }
  var result = value2 + "";
  return result == "0" && 1 / value2 == -INFINITY ? "-0" : result;
}
var _baseToString = baseToString;
function toString2(value2) {
  return value2 == null ? "" : _baseToString(value2);
}
var toString_1 = toString2;
function castPath(value2, object2) {
  if (isArray_1(value2)) {
    return value2;
  }
  return _isKey(value2, object2) ? [value2] : _stringToPath(toString_1(value2));
}
var _castPath = castPath;
var INFINITY$1 = 1 / 0;
function toKey(value2) {
  if (typeof value2 == "string" || isSymbol_1(value2)) {
    return value2;
  }
  var result = value2 + "";
  return result == "0" && 1 / value2 == -INFINITY$1 ? "-0" : result;
}
var _toKey = toKey;
function baseGet(object2, path3) {
  path3 = _castPath(path3, object2);
  var index4 = 0, length = path3.length;
  while (object2 != null && index4 < length) {
    object2 = object2[_toKey(path3[index4++])];
  }
  return index4 && index4 == length ? object2 : void 0;
}
var _baseGet = baseGet;
function get2(object2, path3, defaultValue) {
  var result = object2 == null ? void 0 : _baseGet(object2, path3);
  return result === void 0 ? defaultValue : result;
}
var get_1 = get2;
var stringTag$1 = "[object String]";
function isString(value2) {
  return typeof value2 == "string" || !isArray_1(value2) && isObjectLike_1(value2) && _baseGetTag(value2) == stringTag$1;
}
var isString_1 = isString;
function last(array5) {
  var length = array5 == null ? 0 : array5.length;
  return length ? array5[length - 1] : void 0;
}
var last_1 = last;
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function setCacheAdd(value2) {
  this.__data__.set(value2, HASH_UNDEFINED2);
  return this;
}
var _setCacheAdd = setCacheAdd;
function setCacheHas(value2) {
  return this.__data__.has(value2);
}
var _setCacheHas = setCacheHas;
function SetCache(values2) {
  var index4 = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new _MapCache();
  while (++index4 < length) {
    this.add(values2[index4]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;
var _SetCache = SetCache;
function baseFindIndex(array5, predicate, fromIndex, fromRight) {
  var length = array5.length, index4 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index4-- : ++index4 < length) {
    if (predicate(array5[index4], index4, array5)) {
      return index4;
    }
  }
  return -1;
}
var _baseFindIndex = baseFindIndex;
function baseIsNaN(value2) {
  return value2 !== value2;
}
var _baseIsNaN = baseIsNaN;
function strictIndexOf(array5, value2, fromIndex) {
  var index4 = fromIndex - 1, length = array5.length;
  while (++index4 < length) {
    if (array5[index4] === value2) {
      return index4;
    }
  }
  return -1;
}
var _strictIndexOf = strictIndexOf;
function baseIndexOf(array5, value2, fromIndex) {
  return value2 === value2 ? _strictIndexOf(array5, value2, fromIndex) : _baseFindIndex(array5, _baseIsNaN, fromIndex);
}
var _baseIndexOf = baseIndexOf;
function arrayIncludes(array5, value2) {
  var length = array5 == null ? 0 : array5.length;
  return !!length && _baseIndexOf(array5, value2, 0) > -1;
}
var _arrayIncludes = arrayIncludes;
function arrayIncludesWith(array5, value2, comparator) {
  var index4 = -1, length = array5 == null ? 0 : array5.length;
  while (++index4 < length) {
    if (comparator(value2, array5[index4])) {
      return true;
    }
  }
  return false;
}
var _arrayIncludesWith = arrayIncludesWith;
function cacheHas(cache, key) {
  return cache.has(key);
}
var _cacheHas = cacheHas;
function arraySome(array5, predicate) {
  var index4 = -1, length = array5 == null ? 0 : array5.length;
  while (++index4 < length) {
    if (predicate(array5[index4], index4, array5)) {
      return true;
    }
  }
  return false;
}
var _arraySome = arraySome;
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array5, other, bitmask, customizer, equalFunc, stack3) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array5.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack3.get(array5);
  var othStacked = stack3.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array5;
  }
  var index4 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new _SetCache() : void 0;
  stack3.set(array5, other);
  stack3.set(other, array5);
  while (++index4 < arrLength) {
    var arrValue = array5[index4], othValue = other[index4];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index4, other, array5, stack3) : customizer(arrValue, othValue, index4, array5, other, stack3);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!_arraySome(other, function(othValue2, othIndex) {
        if (!_cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack3))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack3))) {
      result = false;
      break;
    }
  }
  stack3["delete"](array5);
  stack3["delete"](other);
  return result;
}
var _equalArrays = equalArrays;
function mapToArray(map7) {
  var index4 = -1, result = Array(map7.size);
  map7.forEach(function(value2, key) {
    result[++index4] = [key, value2];
  });
  return result;
}
var _mapToArray = mapToArray;
function setToArray(set4) {
  var index4 = -1, result = Array(set4.size);
  set4.forEach(function(value2) {
    result[++index4] = value2;
  });
  return result;
}
var _setToArray = setToArray;
var COMPARE_PARTIAL_FLAG$1 = 1;
var COMPARE_UNORDERED_FLAG$1 = 2;
var boolTag$1 = "[object Boolean]";
var dateTag$1 = "[object Date]";
var errorTag$1 = "[object Error]";
var mapTag$1 = "[object Map]";
var numberTag$1 = "[object Number]";
var regexpTag$1 = "[object RegExp]";
var setTag$1 = "[object Set]";
var stringTag$2 = "[object String]";
var symbolTag$1 = "[object Symbol]";
var arrayBufferTag$1 = "[object ArrayBuffer]";
var dataViewTag$1 = "[object DataView]";
var symbolProto$1 = _Symbol ? _Symbol.prototype : void 0;
var symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : void 0;
function equalByTag(object2, other, tag, bitmask, customizer, equalFunc, stack3) {
  switch (tag) {
    case dataViewTag$1:
      if (object2.byteLength != other.byteLength || object2.byteOffset != other.byteOffset) {
        return false;
      }
      object2 = object2.buffer;
      other = other.buffer;
    case arrayBufferTag$1:
      if (object2.byteLength != other.byteLength || !equalFunc(new _Uint8Array(object2), new _Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      return eq_1(+object2, +other);
    case errorTag$1:
      return object2.name == other.name && object2.message == other.message;
    case regexpTag$1:
    case stringTag$2:
      return object2 == other + "";
    case mapTag$1:
      var convert2 = _mapToArray;
    case setTag$1:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1;
      convert2 || (convert2 = _setToArray);
      if (object2.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack3.get(object2);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$1;
      stack3.set(object2, other);
      var result = _equalArrays(convert2(object2), convert2(other), bitmask, customizer, equalFunc, stack3);
      stack3["delete"](object2);
      return result;
    case symbolTag$1:
      if (symbolValueOf) {
        return symbolValueOf.call(object2) == symbolValueOf.call(other);
      }
  }
  return false;
}
var _equalByTag = equalByTag;
function arrayPush(array5, values2) {
  var index4 = -1, length = values2.length, offset = array5.length;
  while (++index4 < length) {
    array5[offset + index4] = values2[index4];
  }
  return array5;
}
var _arrayPush = arrayPush;
var DataView2 = _getNative(_root, "DataView");
var _DataView = DataView2;
var Promise2 = _getNative(_root, "Promise");
var _Promise = Promise2;
var Set2 = _getNative(_root, "Set");
var _Set = Set2;
var WeakMap2 = _getNative(_root, "WeakMap");
var _WeakMap = WeakMap2;
var mapTag$2 = "[object Map]";
var objectTag$1 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag$2 = "[object Set]";
var weakMapTag$1 = "[object WeakMap]";
var dataViewTag$2 = "[object DataView]";
var dataViewCtorString = _toSource(_DataView);
var mapCtorString = _toSource(_Map);
var promiseCtorString = _toSource(_Promise);
var setCtorString = _toSource(_Set);
var weakMapCtorString = _toSource(_WeakMap);
var getTag = _baseGetTag;
if (_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag$2 || _Map && getTag(new _Map()) != mapTag$2 || _Promise && getTag(_Promise.resolve()) != promiseTag || _Set && getTag(new _Set()) != setTag$2 || _WeakMap && getTag(new _WeakMap()) != weakMapTag$1) {
  getTag = function(value2) {
    var result = _baseGetTag(value2), Ctor = result == objectTag$1 ? value2.constructor : void 0, ctorString = Ctor ? _toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag$2;
        case mapCtorString:
          return mapTag$2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag$2;
        case weakMapCtorString:
          return weakMapTag$1;
      }
    }
    return result;
  };
}
var _getTag = getTag;
function baseHasIn(object2, key) {
  return object2 != null && key in Object(object2);
}
var _baseHasIn = baseHasIn;
function hasPath(object2, path3, hasFunc) {
  path3 = _castPath(path3, object2);
  var index4 = -1, length = path3.length, result = false;
  while (++index4 < length) {
    var key = _toKey(path3[index4]);
    if (!(result = object2 != null && hasFunc(object2, key))) {
      break;
    }
    object2 = object2[key];
  }
  if (result || ++index4 != length) {
    return result;
  }
  length = object2 == null ? 0 : object2.length;
  return !!length && isLength_1(length) && _isIndex(key, length) && (isArray_1(object2) || isArguments_1(object2));
}
var _hasPath = hasPath;
function hasIn(object2, path3) {
  return object2 != null && _hasPath(object2, path3, _baseHasIn);
}
var hasIn_1 = hasIn;
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : void 0;
function isFlattenable(value2) {
  return isArray_1(value2) || isArguments_1(value2) || !!(spreadableSymbol && value2 && value2[spreadableSymbol]);
}
var _isFlattenable = isFlattenable;
function baseFlatten(array5, depth, predicate, isStrict, result) {
  var index4 = -1, length = array5.length;
  predicate || (predicate = _isFlattenable);
  result || (result = []);
  while (++index4 < length) {
    var value2 = array5[index4];
    if (depth > 0 && predicate(value2)) {
      if (depth > 1) {
        baseFlatten(value2, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value2);
      }
    } else if (!isStrict) {
      result[result.length] = value2;
    }
  }
  return result;
}
var _baseFlatten = baseFlatten;
function flatten2(array5) {
  var length = array5 == null ? 0 : array5.length;
  return length ? _baseFlatten(array5, 1) : [];
}
var flatten_1 = flatten2;

// snowpack/pkg/common/pick-a9479e35.js
var getPrototype = _overArg(Object.getPrototypeOf, Object);
var _getPrototype = getPrototype;
var objectTag2 = "[object Object]";
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty4 = objectProto3.hasOwnProperty;
var objectCtorString = funcToString2.call(Object);
function isPlainObject(value2) {
  if (!isObjectLike_1(value2) || _baseGetTag(value2) != objectTag2) {
    return false;
  }
  var proto2 = _getPrototype(value2);
  if (proto2 === null) {
    return true;
  }
  var Ctor = hasOwnProperty4.call(proto2, "constructor") && proto2.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString2.call(Ctor) == objectCtorString;
}
var isPlainObject_1 = isPlainObject;
var objectProto$13 = Object.prototype;
var hasOwnProperty$13 = objectProto$13.hasOwnProperty;
function assignValue(object2, key, value2) {
  var objValue = object2[key];
  if (!(hasOwnProperty$13.call(object2, key) && eq_1(objValue, value2)) || value2 === void 0 && !(key in object2)) {
    _baseAssignValue(object2, key, value2);
  }
}
var _assignValue = assignValue;
function copyObject(source, props, object2, customizer) {
  var isNew = !object2;
  object2 || (object2 = {});
  var index4 = -1, length = props.length;
  while (++index4 < length) {
    var key = props[index4];
    var newValue = customizer ? customizer(object2[key], source[key], key, object2, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object2, key, newValue);
    } else {
      _assignValue(object2, key, newValue);
    }
  }
  return object2;
}
var _copyObject = copyObject;
function nativeKeysIn(object2) {
  var result = [];
  if (object2 != null) {
    for (var key in Object(object2)) {
      result.push(key);
    }
  }
  return result;
}
var _nativeKeysIn = nativeKeysIn;
var objectProto$23 = Object.prototype;
var hasOwnProperty$22 = objectProto$23.hasOwnProperty;
function baseKeysIn(object2) {
  if (!isObject_1(object2)) {
    return _nativeKeysIn(object2);
  }
  var isProto = _isPrototype(object2), result = [];
  for (var key in object2) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty$22.call(object2, key)))) {
      result.push(key);
    }
  }
  return result;
}
var _baseKeysIn = baseKeysIn;
function keysIn(object2) {
  return isArrayLike_1(object2) ? _arrayLikeKeys(object2, true) : _baseKeysIn(object2);
}
var keysIn_1 = keysIn;
function createAssigner(assigner) {
  return _baseRest(function(object2, sources) {
    var index4 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object2 = Object(object2);
    while (++index4 < length) {
      var source = sources[index4];
      if (source) {
        assigner(object2, source, index4, customizer);
      }
    }
    return object2;
  });
}
var _createAssigner = createAssigner;
function baseSet(object2, path3, value2, customizer) {
  if (!isObject_1(object2)) {
    return object2;
  }
  path3 = _castPath(path3, object2);
  var index4 = -1, length = path3.length, lastIndex = length - 1, nested = object2;
  while (nested != null && ++index4 < length) {
    var key = _toKey(path3[index4]), newValue = value2;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object2;
    }
    if (index4 != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_1(objValue) ? objValue : _isIndex(path3[index4 + 1]) ? [] : {};
      }
    }
    _assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object2;
}
var _baseSet = baseSet;
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array5, values2, iteratee, comparator) {
  var index4 = -1, includes2 = _arrayIncludes, isCommon = true, length = array5.length, result = [], valuesLength = values2.length;
  if (!length) {
    return result;
  }
  if (iteratee) {
    values2 = _arrayMap(values2, _baseUnary(iteratee));
  }
  if (comparator) {
    includes2 = _arrayIncludesWith;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = _cacheHas;
    isCommon = false;
    values2 = new _SetCache(values2);
  }
  outer:
    while (++index4 < length) {
      var value2 = array5[index4], computed = iteratee == null ? value2 : iteratee(value2);
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value2);
      } else if (!includes2(values2, computed, comparator)) {
        result.push(value2);
      }
    }
  return result;
}
var _baseDifference = baseDifference;
var without = _baseRest(function(array5, values2) {
  return isArrayLikeObject_1(array5) ? _baseDifference(array5, values2) : [];
});
var without_1 = without;
function basePickBy(object2, paths, predicate) {
  var index4 = -1, length = paths.length, result = {};
  while (++index4 < length) {
    var path3 = paths[index4], value2 = _baseGet(object2, path3);
    if (predicate(value2, path3)) {
      _baseSet(result, _castPath(path3, object2), value2);
    }
  }
  return result;
}
var _basePickBy = basePickBy;
function basePick(object2, paths) {
  return _basePickBy(object2, paths, function(value2, path3) {
    return hasIn_1(object2, path3);
  });
}
var _basePick = basePick;
function flatRest(func) {
  return _setToString(_overRest(func, void 0, flatten_1), func + "");
}
var _flatRest = flatRest;
var pick = _flatRest(function(object2, paths) {
  return object2 == null ? {} : _basePick(object2, paths);
});
var pick_1 = pick;

// snowpack/pkg/common/find-3a1334b2.js
function baseGetAllKeys(object2, keysFunc, symbolsFunc) {
  var result = keysFunc(object2);
  return isArray_1(object2) ? result : _arrayPush(result, symbolsFunc(object2));
}
var _baseGetAllKeys = baseGetAllKeys;
function arrayFilter(array5, predicate) {
  var index4 = -1, length = array5 == null ? 0 : array5.length, resIndex = 0, result = [];
  while (++index4 < length) {
    var value2 = array5[index4];
    if (predicate(value2, index4, array5)) {
      result[resIndex++] = value2;
    }
  }
  return result;
}
var _arrayFilter = arrayFilter;
function stubArray() {
  return [];
}
var stubArray_1 = stubArray;
var objectProto4 = Object.prototype;
var propertyIsEnumerable2 = objectProto4.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_1 : function(object2) {
  if (object2 == null) {
    return [];
  }
  object2 = Object(object2);
  return _arrayFilter(nativeGetSymbols(object2), function(symbol2) {
    return propertyIsEnumerable2.call(object2, symbol2);
  });
};
var _getSymbols = getSymbols;
var nativeKeys = _overArg(Object.keys, Object);
var _nativeKeys = nativeKeys;
var objectProto$14 = Object.prototype;
var hasOwnProperty5 = objectProto$14.hasOwnProperty;
function baseKeys(object2) {
  if (!_isPrototype(object2)) {
    return _nativeKeys(object2);
  }
  var result = [];
  for (var key in Object(object2)) {
    if (hasOwnProperty5.call(object2, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var _baseKeys = baseKeys;
function keys2(object2) {
  return isArrayLike_1(object2) ? _arrayLikeKeys(object2) : _baseKeys(object2);
}
var keys_1 = keys2;
function getAllKeys(object2) {
  return _baseGetAllKeys(object2, keys_1, _getSymbols);
}
var _getAllKeys = getAllKeys;
var COMPARE_PARTIAL_FLAG2 = 1;
var objectProto$24 = Object.prototype;
var hasOwnProperty$14 = objectProto$24.hasOwnProperty;
function equalObjects(object2, other, bitmask, customizer, equalFunc, stack3) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG2, objProps = _getAllKeys(object2), objLength = objProps.length, othProps = _getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index4 = objLength;
  while (index4--) {
    var key = objProps[index4];
    if (!(isPartial ? key in other : hasOwnProperty$14.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack3.get(object2);
  var othStacked = stack3.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object2;
  }
  var result = true;
  stack3.set(object2, other);
  stack3.set(other, object2);
  var skipCtor = isPartial;
  while (++index4 < objLength) {
    key = objProps[index4];
    var objValue = object2[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object2, stack3) : customizer(objValue, othValue, key, object2, other, stack3);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack3) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object2.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object2 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack3["delete"](object2);
  stack3["delete"](other);
  return result;
}
var _equalObjects = equalObjects;
var COMPARE_PARTIAL_FLAG$12 = 1;
var argsTag2 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var objectTag3 = "[object Object]";
var objectProto$32 = Object.prototype;
var hasOwnProperty$23 = objectProto$32.hasOwnProperty;
function baseIsEqualDeep(object2, other, bitmask, customizer, equalFunc, stack3) {
  var objIsArr = isArray_1(object2), othIsArr = isArray_1(other), objTag = objIsArr ? arrayTag2 : _getTag(object2), othTag = othIsArr ? arrayTag2 : _getTag(other);
  objTag = objTag == argsTag2 ? objectTag3 : objTag;
  othTag = othTag == argsTag2 ? objectTag3 : othTag;
  var objIsObj = objTag == objectTag3, othIsObj = othTag == objectTag3, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_1(object2)) {
    if (!isBuffer_1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack3 || (stack3 = new _Stack());
    return objIsArr || isTypedArray_1(object2) ? _equalArrays(object2, other, bitmask, customizer, equalFunc, stack3) : _equalByTag(object2, other, objTag, bitmask, customizer, equalFunc, stack3);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$12)) {
    var objIsWrapped = objIsObj && hasOwnProperty$23.call(object2, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$23.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object2.value() : object2, othUnwrapped = othIsWrapped ? other.value() : other;
      stack3 || (stack3 = new _Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack3);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack3 || (stack3 = new _Stack());
  return _equalObjects(object2, other, bitmask, customizer, equalFunc, stack3);
}
var _baseIsEqualDeep = baseIsEqualDeep;
function baseIsEqual(value2, other, bitmask, customizer, stack3) {
  if (value2 === other) {
    return true;
  }
  if (value2 == null || other == null || !isObjectLike_1(value2) && !isObjectLike_1(other)) {
    return value2 !== value2 && other !== other;
  }
  return _baseIsEqualDeep(value2, other, bitmask, customizer, baseIsEqual, stack3);
}
var _baseIsEqual = baseIsEqual;
function isEqual(value2, other) {
  return _baseIsEqual(value2, other);
}
var isEqual_1 = isEqual;
var COMPARE_PARTIAL_FLAG$2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
function baseIsMatch(object2, source, matchData, customizer) {
  var index4 = matchData.length, length = index4, noCustomizer = !customizer;
  if (object2 == null) {
    return !length;
  }
  object2 = Object(object2);
  while (index4--) {
    var data3 = matchData[index4];
    if (noCustomizer && data3[2] ? data3[1] !== object2[data3[0]] : !(data3[0] in object2)) {
      return false;
    }
  }
  while (++index4 < length) {
    data3 = matchData[index4];
    var key = data3[0], objValue = object2[key], srcValue = data3[1];
    if (noCustomizer && data3[2]) {
      if (objValue === void 0 && !(key in object2)) {
        return false;
      }
    } else {
      var stack3 = new _Stack();
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object2, source, stack3);
      }
      if (!(result === void 0 ? _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$2 | COMPARE_UNORDERED_FLAG2, customizer, stack3) : result)) {
        return false;
      }
    }
  }
  return true;
}
var _baseIsMatch = baseIsMatch;
function isStrictComparable(value2) {
  return value2 === value2 && !isObject_1(value2);
}
var _isStrictComparable = isStrictComparable;
function getMatchData(object2) {
  var result = keys_1(object2), length = result.length;
  while (length--) {
    var key = result[length], value2 = object2[key];
    result[length] = [key, value2, _isStrictComparable(value2)];
  }
  return result;
}
var _getMatchData = getMatchData;
function matchesStrictComparable(key, srcValue) {
  return function(object2) {
    if (object2 == null) {
      return false;
    }
    return object2[key] === srcValue && (srcValue !== void 0 || key in Object(object2));
  };
}
var _matchesStrictComparable = matchesStrictComparable;
function baseMatches(source) {
  var matchData = _getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object2) {
    return object2 === source || _baseIsMatch(object2, source, matchData);
  };
}
var _baseMatches = baseMatches;
var COMPARE_PARTIAL_FLAG$3 = 1;
var COMPARE_UNORDERED_FLAG$12 = 2;
function baseMatchesProperty(path3, srcValue) {
  if (_isKey(path3) && _isStrictComparable(srcValue)) {
    return _matchesStrictComparable(_toKey(path3), srcValue);
  }
  return function(object2) {
    var objValue = get_1(object2, path3);
    return objValue === void 0 && objValue === srcValue ? hasIn_1(object2, path3) : _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$3 | COMPARE_UNORDERED_FLAG$12);
  };
}
var _baseMatchesProperty = baseMatchesProperty;
function baseProperty(key) {
  return function(object2) {
    return object2 == null ? void 0 : object2[key];
  };
}
var _baseProperty = baseProperty;
function basePropertyDeep(path3) {
  return function(object2) {
    return _baseGet(object2, path3);
  };
}
var _basePropertyDeep = basePropertyDeep;
function property(path3) {
  return _isKey(path3) ? _baseProperty(_toKey(path3)) : _basePropertyDeep(path3);
}
var property_1 = property;
function baseIteratee(value2) {
  if (typeof value2 == "function") {
    return value2;
  }
  if (value2 == null) {
    return identity_1;
  }
  if (typeof value2 == "object") {
    return isArray_1(value2) ? _baseMatchesProperty(value2[0], value2[1]) : _baseMatches(value2);
  }
  return property_1(value2);
}
var _baseIteratee = baseIteratee;
function noop3() {
}
var noop_1 = noop3;
var INFINITY2 = 1 / 0;
var createSet = !(_Set && 1 / _setToArray(new _Set([, -0]))[1] == INFINITY2) ? noop_1 : function(values2) {
  return new _Set(values2);
};
var _createSet = createSet;
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array5, iteratee, comparator) {
  var index4 = -1, includes2 = _arrayIncludes, length = array5.length, isCommon = true, result = [], seen = result;
  if (comparator) {
    isCommon = false;
    includes2 = _arrayIncludesWith;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set4 = iteratee ? null : _createSet(array5);
    if (set4) {
      return _setToArray(set4);
    }
    isCommon = false;
    includes2 = _cacheHas;
    seen = new _SetCache();
  } else {
    seen = iteratee ? [] : result;
  }
  outer:
    while (++index4 < length) {
      var value2 = array5[index4], computed = iteratee ? iteratee(value2) : value2;
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value2);
      } else if (!includes2(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value2);
      }
    }
  return result;
}
var _baseUniq = baseUniq;
function uniqBy(array5, iteratee) {
  return array5 && array5.length ? _baseUniq(array5, _baseIteratee(iteratee)) : [];
}
var uniqBy_1 = uniqBy;
function isNil(value2) {
  return value2 == null;
}
var isNil_1 = isNil;
function baseForOwn(object2, iteratee) {
  return object2 && _baseFor(object2, iteratee, keys_1);
}
var _baseForOwn = baseForOwn;
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_1(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length, index4 = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index4-- : ++index4 < length) {
      if (iteratee(iterable[index4], index4, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var _createBaseEach = createBaseEach;
var baseEach = _createBaseEach(_baseForOwn);
var _baseEach = baseEach;
function baseMap(collection, iteratee) {
  var index4 = -1, result = isArrayLike_1(collection) ? Array(collection.length) : [];
  _baseEach(collection, function(value2, key, collection2) {
    result[++index4] = iteratee(value2, key, collection2);
  });
  return result;
}
var _baseMap = baseMap;
function baseSortBy(array5, comparer) {
  var length = array5.length;
  array5.sort(comparer);
  while (length--) {
    array5[length] = array5[length].value;
  }
  return array5;
}
var _baseSortBy = baseSortBy;
function compareAscending(value2, other) {
  if (value2 !== other) {
    var valIsDefined = value2 !== void 0, valIsNull = value2 === null, valIsReflexive = value2 === value2, valIsSymbol = isSymbol_1(value2);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_1(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value2 > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value2 < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var _compareAscending = compareAscending;
function compareMultiple(object2, other, orders) {
  var index4 = -1, objCriteria = object2.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index4 < length) {
    var result = _compareAscending(objCriteria[index4], othCriteria[index4]);
    if (result) {
      if (index4 >= ordersLength) {
        return result;
      }
      var order = orders[index4];
      return result * (order == "desc" ? -1 : 1);
    }
  }
  return object2.index - other.index;
}
var _compareMultiple = compareMultiple;
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = _arrayMap(iteratees, function(iteratee) {
      if (isArray_1(iteratee)) {
        return function(value2) {
          return _baseGet(value2, iteratee.length === 1 ? iteratee[0] : iteratee);
        };
      }
      return iteratee;
    });
  } else {
    iteratees = [identity_1];
  }
  var index4 = -1;
  iteratees = _arrayMap(iteratees, _baseUnary(_baseIteratee));
  var result = _baseMap(collection, function(value2, key, collection2) {
    var criteria = _arrayMap(iteratees, function(iteratee) {
      return iteratee(value2);
    });
    return {criteria, index: ++index4, value: value2};
  });
  return _baseSortBy(result, function(object2, other) {
    return _compareMultiple(object2, other, orders);
  });
}
var _baseOrderBy = baseOrderBy;
var now3 = function() {
  return _root.Date.now();
};
var now_1 = now3;
var NAN = 0 / 0;
var reTrim = /^\s+|\s+$/g;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value2) {
  if (typeof value2 == "number") {
    return value2;
  }
  if (isSymbol_1(value2)) {
    return NAN;
  }
  if (isObject_1(value2)) {
    var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
    value2 = isObject_1(other) ? other + "" : other;
  }
  if (typeof value2 != "string") {
    return value2 === 0 ? value2 : +value2;
  }
  value2 = value2.replace(reTrim, "");
  var isBinary = reIsBinary.test(value2);
  return isBinary || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value2) ? NAN : +value2;
}
var toNumber_1 = toNumber;
var FUNC_ERROR_TEXT2 = "Expected a function";
var nativeMax2 = Math.max;
var nativeMin = Math.min;
function debounce(func, wait, options2) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  wait = toNumber_1(wait) || 0;
  if (isObject_1(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? nativeMax2(toNumber_1(options2.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time3) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time3;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time3) {
    lastInvokeTime = time3;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time3) : result;
  }
  function remainingWait(time3) {
    var timeSinceLastCall = time3 - lastCallTime, timeSinceLastInvoke = time3 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time3) {
    var timeSinceLastCall = time3 - lastCallTime, timeSinceLastInvoke = time3 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time3 = now_1();
    if (shouldInvoke(time3)) {
      return trailingEdge(time3);
    }
    timerId = setTimeout(timerExpired, remainingWait(time3));
  }
  function trailingEdge(time3) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time3);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel2() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush2() {
    return timerId === void 0 ? result : trailingEdge(now_1());
  }
  function debounced() {
    var time3 = now_1(), isInvoking = shouldInvoke(time3);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time3;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel2;
  debounced.flush = flush2;
  return debounced;
}
var debounce_1 = debounce;
var FUNC_ERROR_TEXT$1 = "Expected a function";
function throttle(func, wait, options2) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  if (isObject_1(options2)) {
    leading = "leading" in options2 ? !!options2.leading : leading;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  return debounce_1(func, wait, {
    leading,
    maxWait: wait,
    trailing
  });
}
var throttle_1 = throttle;
var nativeCeil = Math.ceil;
var nativeMax$1 = Math.max;
function baseRange(start2, end, step, fromRight) {
  var index4 = -1, length = nativeMax$1(nativeCeil((end - start2) / (step || 1)), 0), result = Array(length);
  while (length--) {
    result[fromRight ? length : ++index4] = start2;
    start2 += step;
  }
  return result;
}
var _baseRange = baseRange;
var INFINITY$12 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value2) {
  if (!value2) {
    return value2 === 0 ? value2 : 0;
  }
  value2 = toNumber_1(value2);
  if (value2 === INFINITY$12 || value2 === -INFINITY$12) {
    var sign5 = value2 < 0 ? -1 : 1;
    return sign5 * MAX_INTEGER;
  }
  return value2 === value2 ? value2 : 0;
}
var toFinite_1 = toFinite;
function createRange(fromRight) {
  return function(start2, end, step) {
    if (step && typeof step != "number" && _isIterateeCall(start2, end, step)) {
      end = step = void 0;
    }
    start2 = toFinite_1(start2);
    if (end === void 0) {
      end = start2;
      start2 = 0;
    } else {
      end = toFinite_1(end);
    }
    step = step === void 0 ? start2 < end ? 1 : -1 : toFinite_1(step);
    return _baseRange(start2, end, step, fromRight);
  };
}
var _createRange = createRange;
var range3 = _createRange();
var range_1 = range3;
function baseSome(collection, predicate) {
  var result;
  _baseEach(collection, function(value2, index4, collection2) {
    result = predicate(value2, index4, collection2);
    return !result;
  });
  return !!result;
}
var _baseSome = baseSome;
function some(collection, predicate, guard) {
  var func = isArray_1(collection) ? _arraySome : _baseSome;
  if (guard && _isIterateeCall(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, _baseIteratee(predicate));
}
var some_1 = some;
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_1(collection)) {
      var iteratee = _baseIteratee(predicate);
      collection = keys_1(collection);
      predicate = function(key) {
        return iteratee(iterable[key], key, iterable);
      };
    }
    var index4 = findIndexFunc(collection, predicate, fromIndex);
    return index4 > -1 ? iterable[iteratee ? collection[index4] : index4] : void 0;
  };
}
var _createFind = createFind;
function toInteger(value2) {
  var result = toFinite_1(value2), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
var toInteger_1 = toInteger;
var nativeMax$2 = Math.max;
function findIndex(array5, predicate, fromIndex) {
  var length = array5 == null ? 0 : array5.length;
  if (!length) {
    return -1;
  }
  var index4 = fromIndex == null ? 0 : toInteger_1(fromIndex);
  if (index4 < 0) {
    index4 = nativeMax$2(length + index4, 0);
  }
  return _baseFindIndex(array5, _baseIteratee(predicate), index4);
}
var findIndex_1 = findIndex;
var find2 = _createFind(findIndex_1);
var find_1 = find2;

// snowpack/pkg/common/step-ee54e010.js
var abs3 = Math.abs;
var atan23 = Math.atan2;
var cos2 = Math.cos;
var max3 = Math.max;
var min3 = Math.min;
var sin2 = Math.sin;
var sqrt5 = Math.sqrt;
var epsilon4 = 1e-12;
var pi5 = Math.PI;
var halfPi3 = pi5 / 2;
var tau4 = 2 * pi5;
function acos3(x5) {
  return x5 > 1 ? 0 : x5 < -1 ? pi5 : Math.acos(x5);
}
function asin3(x5) {
  return x5 >= 1 ? halfPi3 : x5 <= -1 ? -halfPi3 : Math.asin(x5);
}
function noop4() {
}
function point3(that, x5, y7) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x5) / 6, (that._y0 + 4 * that._y1 + y7) / 6);
}
function Basis2(context) {
  this._context = context;
}
Basis2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point3(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point3(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasis(context) {
  return new Basis2(context);
}
function BasisClosed2(context) {
  this._context = context;
}
BasisClosed2.prototype = {
  areaStart: noop4,
  areaEnd: noop4,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x5, this._y2 = y7;
        break;
      case 1:
        this._point = 2;
        this._x3 = x5, this._y3 = y7;
        break;
      case 2:
        this._point = 3;
        this._x4 = x5, this._y4 = y7;
        this._context.moveTo((this._x0 + 4 * this._x1 + x5) / 6, (this._y0 + 4 * this._y1 + y7) / 6);
        break;
      default:
        point3(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasisClosed(context) {
  return new BasisClosed2(context);
}
function BasisOpen2(context) {
  this._context = context;
}
BasisOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x03 = (this._x0 + 4 * this._x1 + x5) / 6, y03 = (this._y0 + 4 * this._y1 + y7) / 6;
        this._line ? this._context.lineTo(x03, y03) : this._context.moveTo(x03, y03);
        break;
      case 3:
        this._point = 4;
      default:
        point3(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasisOpen(context) {
  return new BasisOpen2(context);
}
function Bundle2(context, beta2) {
  this._basis = new Basis2(context);
  this._beta = beta2;
}
Bundle2.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x5 = this._x, y7 = this._y, j2 = x5.length - 1;
    if (j2 > 0) {
      var x03 = x5[0], y03 = y7[0], dx = x5[j2] - x03, dy = y7[j2] - y03, i = -1, t4;
      while (++i <= j2) {
        t4 = i / j2;
        this._basis.point(this._beta * x5[i] + (1 - this._beta) * (x03 + t4 * dx), this._beta * y7[i] + (1 - this._beta) * (y03 + t4 * dy));
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x5, y7) {
    this._x.push(+x5);
    this._y.push(+y7);
  }
};
var curveBundle = function custom19(beta2) {
  function bundle2(context) {
    return beta2 === 1 ? new Basis2(context) : new Bundle2(context, beta2);
  }
  bundle2.beta = function(beta3) {
    return custom19(+beta3);
  };
  return bundle2;
}(0.85);
function point$12(that, x5, y7) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x5), that._y2 + that._k * (that._y1 - y7), that._x2, that._y2);
}
function Cardinal2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point$12(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        this._x1 = x5, this._y1 = y7;
        break;
      case 2:
        this._point = 3;
      default:
        point$12(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCardinal = function custom20(tension) {
  function cardinal2(context) {
    return new Cardinal2(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom20(+tension2);
  };
  return cardinal2;
}(0);
function CardinalClosed2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed2.prototype = {
  areaStart: noop4,
  areaEnd: noop4,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x5, this._y3 = y7;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x5, this._y4 = y7);
        break;
      case 2:
        this._point = 3;
        this._x5 = x5, this._y5 = y7;
        break;
      default:
        point$12(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCardinalClosed = function custom21(tension) {
  function cardinal2(context) {
    return new CardinalClosed2(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom21(+tension2);
  };
  return cardinal2;
}(0);
function CardinalOpen2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$12(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCardinalOpen = function custom22(tension) {
  function cardinal2(context) {
    return new CardinalOpen2(context, tension);
  }
  cardinal2.tension = function(tension2) {
    return custom22(+tension2);
  };
  return cardinal2;
}(0);
function point$22(that, x5, y7) {
  var x14 = that._x1, y14 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon4) {
    var a3 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n3 = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x14 = (x14 * a3 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n3;
    y14 = (y14 * a3 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n3;
  }
  if (that._l23_a > epsilon4) {
    var b10 = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m3 = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b10 + that._x1 * that._l23_2a - x5 * that._l12_2a) / m3;
    y22 = (y22 * b10 + that._y1 * that._l23_2a - y7 * that._l12_2a) / m3;
  }
  that._context.bezierCurveTo(x14, y14, x22, y22, that._x2, that._y2);
}
function CatmullRom2(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRom2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point$22(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCatmullRom = function custom23(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRom2(context, alpha3) : new Cardinal2(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom23(+alpha4);
  };
  return catmullRom2;
}(0.5);
function CatmullRomClosed2(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRomClosed2.prototype = {
  areaStart: noop4,
  areaEnd: noop4,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x5, this._y3 = y7;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x5, this._y4 = y7);
        break;
      case 2:
        this._point = 3;
        this._x5 = x5, this._y5 = y7;
        break;
      default:
        point$22(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCatmullRomClosed = function custom24(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRomClosed2(context, alpha3) : new CardinalClosed2(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom24(+alpha4);
  };
  return catmullRom2;
}(0.5);
function CatmullRomOpen2(context, alpha3) {
  this._context = context;
  this._alpha = alpha3;
}
CatmullRomOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point) {
      var x23 = this._x2 - x5, y23 = this._y2 - y7;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$22(this, x5, y7);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x5;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y7;
  }
};
var curveCatmullRomOpen = function custom25(alpha3) {
  function catmullRom2(context) {
    return alpha3 ? new CatmullRomOpen2(context, alpha3) : new CardinalOpen2(context, 0);
  }
  catmullRom2.alpha = function(alpha4) {
    return custom25(+alpha4);
  };
  return catmullRom2;
}(0.5);
function LinearClosed2(context) {
  this._context = context;
}
LinearClosed2.prototype = {
  areaStart: noop4,
  areaEnd: noop4,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point)
      this._context.lineTo(x5, y7);
    else
      this._point = 1, this._context.moveTo(x5, y7);
  }
};
function curveLinearClosed(context) {
  return new LinearClosed2(context);
}
function Natural2(context) {
  this._context = context;
}
Natural2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x5 = this._x, y7 = this._y, n3 = x5.length;
    if (n3) {
      this._line ? this._context.lineTo(x5[0], y7[0]) : this._context.moveTo(x5[0], y7[0]);
      if (n3 === 2) {
        this._context.lineTo(x5[1], y7[1]);
      } else {
        var px = controlPoints2(x5), py = controlPoints2(y7);
        for (var i0 = 0, i1 = 1; i1 < n3; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x5[i1], y7[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n3 === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x5, y7) {
    this._x.push(+x5);
    this._y.push(+y7);
  }
};
function controlPoints2(x5) {
  var i, n3 = x5.length - 1, m3, a3 = new Array(n3), b10 = new Array(n3), r3 = new Array(n3);
  a3[0] = 0, b10[0] = 2, r3[0] = x5[0] + 2 * x5[1];
  for (i = 1; i < n3 - 1; ++i)
    a3[i] = 1, b10[i] = 4, r3[i] = 4 * x5[i] + 2 * x5[i + 1];
  a3[n3 - 1] = 2, b10[n3 - 1] = 7, r3[n3 - 1] = 8 * x5[n3 - 1] + x5[n3];
  for (i = 1; i < n3; ++i)
    m3 = a3[i] / b10[i - 1], b10[i] -= m3, r3[i] -= m3 * r3[i - 1];
  a3[n3 - 1] = r3[n3 - 1] / b10[n3 - 1];
  for (i = n3 - 2; i >= 0; --i)
    a3[i] = (r3[i] - a3[i + 1]) / b10[i];
  b10[n3 - 1] = (x5[n3] + a3[n3 - 1]) / 2;
  for (i = 0; i < n3 - 1; ++i)
    b10[i] = 2 * x5[i + 1] - a3[i + 1];
  return [a3, b10];
}
function curveNatural(context) {
  return new Natural2(context);
}
function Step2(context, t4) {
  this._context = context;
  this._t = t4;
}
Step2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y7);
          this._context.lineTo(x5, y7);
        } else {
          var x14 = this._x * (1 - this._t) + x5 * this._t;
          this._context.lineTo(x14, this._y);
          this._context.lineTo(x14, y7);
        }
        break;
      }
    }
    this._x = x5, this._y = y7;
  }
};
function curveStep(context) {
  return new Step2(context, 0.5);
}
function stepBefore(context) {
  return new Step2(context, 0);
}
function stepAfter(context) {
  return new Step2(context, 1);
}

// snowpack/pkg/common/monotone-5230af58.js
function sign3(x5) {
  return x5 < 0 ? -1 : 1;
}
function slope32(that, x22, y22) {
  var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p3 = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign3(s0) + sign3(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p3)) || 0;
}
function slope22(that, t4) {
  var h2 = that._x1 - that._x0;
  return h2 ? (3 * (that._y1 - that._y0) / h2 - t4) / 2 : t4;
}
function point4(that, t04, t14) {
  var x03 = that._x0, y03 = that._y0, x14 = that._x1, y14 = that._y1, dx = (x14 - x03) / 3;
  that._context.bezierCurveTo(x03 + dx, y03 + dx * t04, x14 - dx, y14 - dx * t14, x14, y14);
}
function MonotoneX2(context) {
  this._context = context;
}
MonotoneX2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point4(this, this._t0, slope22(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    var t14 = NaN;
    x5 = +x5, y7 = +y7;
    if (x5 === this._x1 && y7 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point4(this, slope22(this, t14 = slope32(this, x5, y7)), t14);
        break;
      default:
        point4(this, this._t0, t14 = slope32(this, x5, y7));
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
    this._t0 = t14;
  }
};
function MonotoneY2(context) {
  this._context = new ReflectContext2(context);
}
(MonotoneY2.prototype = Object.create(MonotoneX2.prototype)).point = function(x5, y7) {
  MonotoneX2.prototype.point.call(this, y7, x5);
};
function ReflectContext2(context) {
  this._context = context;
}
ReflectContext2.prototype = {
  moveTo: function(x5, y7) {
    this._context.moveTo(y7, x5);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x5, y7) {
    this._context.lineTo(y7, x5);
  },
  bezierCurveTo: function(x14, y14, x22, y22, x5, y7) {
    this._context.bezierCurveTo(y14, x14, y22, x22, y7, x5);
  }
};
function monotoneX(context) {
  return new MonotoneX2(context);
}
function monotoneY(context) {
  return new MonotoneY2(context);
}

// snowpack/pkg/common/set-17856b97.js
function arcInnerRadius(d2) {
  return d2.innerRadius;
}
function arcOuterRadius(d2) {
  return d2.outerRadius;
}
function arcStartAngle(d2) {
  return d2.startAngle;
}
function arcEndAngle(d2) {
  return d2.endAngle;
}
function arcPadAngle(d2) {
  return d2 && d2.padAngle;
}
function intersect(x03, y03, x14, y14, x22, y22, x32, y32) {
  var x10 = x14 - x03, y10 = y14 - y03, x322 = x32 - x22, y322 = y32 - y22, t4 = y322 * x10 - x322 * y10;
  if (t4 * t4 < epsilon4)
    return;
  t4 = (x322 * (y03 - y22) - y322 * (x03 - x22)) / t4;
  return [x03 + t4 * x10, y03 + t4 * y10];
}
function cornerTangents(x03, y03, x14, y14, r1, rc2, cw) {
  var x01 = x03 - x14, y01 = y03 - y14, lo = (cw ? rc2 : -rc2) / sqrt5(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x03 + ox, y11 = y03 + oy, x10 = x14 + ox, y10 = y14 + oy, x004 = (x11 + x10) / 2, y004 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r3 = r1 - rc2, D6 = x11 * y10 - x10 * y11, d4 = (dy < 0 ? -1 : 1) * sqrt5(max3(0, r3 * r3 * d2 - D6 * D6)), cx0 = (D6 * dy - dx * d4) / d2, cy0 = (-D6 * dx - dy * d4) / d2, cx1 = (D6 * dy + dx * d4) / d2, cy1 = (-D6 * dx + dy * d4) / d2, dx0 = cx0 - x004, dy0 = cy0 - y004, dx1 = cx1 - x004, dy1 = cy1 - y004;
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
    cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r3 - 1),
    y11: cy0 * (r1 / r3 - 1)
  };
}
function arcBuilder() {
  var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
  function arc() {
    var buffer, r3, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi3, a1 = endAngle.apply(this, arguments) - halfPi3, da2 = abs3(a1 - a0), cw = a1 > a0;
    if (!context)
      context = buffer = path();
    if (r1 < r0)
      r3 = r1, r1 = r0, r0 = r3;
    if (!(r1 > epsilon4))
      context.moveTo(0, 0);
    else if (da2 > tau4 - epsilon4) {
      context.moveTo(r1 * cos2(a0), r1 * sin2(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon4) {
        context.moveTo(r0 * cos2(a1), r0 * sin2(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    } else {
      var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da2, da1 = da2, ap = padAngle.apply(this, arguments) / 2, rp = ap > epsilon4 && (padRadius ? +padRadius.apply(this, arguments) : sqrt5(r0 * r0 + r1 * r1)), rc2 = min3(abs3(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc2, rc1 = rc2, t04, t14;
      if (rp > epsilon4) {
        var p0 = asin3(rp / r0 * sin2(ap)), p1 = asin3(rp / r1 * sin2(ap));
        if ((da0 -= p0 * 2) > epsilon4)
          p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
        else
          da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon4)
          p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
        else
          da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }
      var x01 = r1 * cos2(a01), y01 = r1 * sin2(a01), x10 = r0 * cos2(a10), y10 = r0 * sin2(a10);
      if (rc2 > epsilon4) {
        var x11 = r1 * cos2(a11), y11 = r1 * sin2(a11), x004 = r0 * cos2(a00), y004 = r0 * sin2(a00), oc2;
        if (da2 < pi5 && (oc2 = intersect(x01, y01, x004, y004, x11, y11, x10, y10))) {
          var ax = x01 - oc2[0], ay = y01 - oc2[1], bx = x11 - oc2[0], by = y11 - oc2[1], kc2 = 1 / sin2(acos3((ax * bx + ay * by) / (sqrt5(ax * ax + ay * ay) * sqrt5(bx * bx + by * by))) / 2), lc2 = sqrt5(oc2[0] * oc2[0] + oc2[1] * oc2[1]);
          rc0 = min3(rc2, (r0 - lc2) / (kc2 - 1));
          rc1 = min3(rc2, (r1 - lc2) / (kc2 + 1));
        }
      }
      if (!(da1 > epsilon4))
        context.moveTo(x01, y01);
      else if (rc1 > epsilon4) {
        t04 = cornerTangents(x004, y004, x01, y01, r1, rc1, cw);
        t14 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
        context.moveTo(t04.cx + t04.x01, t04.cy + t04.y01);
        if (rc1 < rc2)
          context.arc(t04.cx, t04.cy, rc1, atan23(t04.y01, t04.x01), atan23(t14.y01, t14.x01), !cw);
        else {
          context.arc(t04.cx, t04.cy, rc1, atan23(t04.y01, t04.x01), atan23(t04.y11, t04.x11), !cw);
          context.arc(0, 0, r1, atan23(t04.cy + t04.y11, t04.cx + t04.x11), atan23(t14.cy + t14.y11, t14.cx + t14.x11), !cw);
          context.arc(t14.cx, t14.cy, rc1, atan23(t14.y11, t14.x11), atan23(t14.y01, t14.x01), !cw);
        }
      } else
        context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
      if (!(r0 > epsilon4) || !(da0 > epsilon4))
        context.lineTo(x10, y10);
      else if (rc0 > epsilon4) {
        t04 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t14 = cornerTangents(x01, y01, x004, y004, r0, -rc0, cw);
        context.lineTo(t04.cx + t04.x01, t04.cy + t04.y01);
        if (rc0 < rc2)
          context.arc(t04.cx, t04.cy, rc0, atan23(t04.y01, t04.x01), atan23(t14.y01, t14.x01), !cw);
        else {
          context.arc(t04.cx, t04.cy, rc0, atan23(t04.y01, t04.x01), atan23(t04.y11, t04.x11), !cw);
          context.arc(0, 0, r0, atan23(t04.cy + t04.y11, t04.cx + t04.x11), atan23(t14.cy + t14.y11, t14.cx + t14.x11), cw);
          context.arc(t14.cx, t14.cy, rc0, atan23(t14.y11, t14.x11), atan23(t14.y01, t14.x01), !cw);
        }
      } else
        context.arc(0, 0, r0, a10, a00, cw);
    }
    context.closePath();
    if (buffer)
      return context = null, buffer + "" || null;
  }
  arc.centroid = function() {
    var r3 = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a3 = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi5 / 2;
    return [cos2(a3) * r3, sin2(a3) * r3];
  };
  arc.innerRadius = function(_2) {
    return arguments.length ? (innerRadius = typeof _2 === "function" ? _2 : constant(+_2), arc) : innerRadius;
  };
  arc.outerRadius = function(_2) {
    return arguments.length ? (outerRadius = typeof _2 === "function" ? _2 : constant(+_2), arc) : outerRadius;
  };
  arc.cornerRadius = function(_2) {
    return arguments.length ? (cornerRadius = typeof _2 === "function" ? _2 : constant(+_2), arc) : cornerRadius;
  };
  arc.padRadius = function(_2) {
    return arguments.length ? (padRadius = _2 == null ? null : typeof _2 === "function" ? _2 : constant(+_2), arc) : padRadius;
  };
  arc.startAngle = function(_2) {
    return arguments.length ? (startAngle = typeof _2 === "function" ? _2 : constant(+_2), arc) : startAngle;
  };
  arc.endAngle = function(_2) {
    return arguments.length ? (endAngle = typeof _2 === "function" ? _2 : constant(+_2), arc) : endAngle;
  };
  arc.padAngle = function(_2) {
    return arguments.length ? (padAngle = typeof _2 === "function" ? _2 : constant(+_2), arc) : padAngle;
  };
  arc.context = function(_2) {
    return arguments.length ? (context = _2 == null ? null : _2, arc) : context;
  };
  return arc;
}
function descending(a3, b10) {
  return b10 < a3 ? -1 : b10 > a3 ? 1 : b10 >= a3 ? 0 : NaN;
}
function identity5(d2) {
  return d2;
}
function pieBuilder() {
  var value2 = identity5, sortValues = descending, sort = null, startAngle = constant(0), endAngle = constant(tau4), padAngle = constant(0);
  function pie(data3) {
    var i, n3 = data3.length, j2, k6, sum2 = 0, index4 = new Array(n3), arcs = new Array(n3), a0 = +startAngle.apply(this, arguments), da2 = Math.min(tau4, Math.max(-tau4, endAngle.apply(this, arguments) - a0)), a1, p3 = Math.min(Math.abs(da2) / n3, padAngle.apply(this, arguments)), pa2 = p3 * (da2 < 0 ? -1 : 1), v3;
    for (i = 0; i < n3; ++i) {
      if ((v3 = arcs[index4[i] = i] = +value2(data3[i], i, data3)) > 0) {
        sum2 += v3;
      }
    }
    if (sortValues != null)
      index4.sort(function(i2, j3) {
        return sortValues(arcs[i2], arcs[j3]);
      });
    else if (sort != null)
      index4.sort(function(i2, j3) {
        return sort(data3[i2], data3[j3]);
      });
    for (i = 0, k6 = sum2 ? (da2 - n3 * pa2) / sum2 : 0; i < n3; ++i, a0 = a1) {
      j2 = index4[i], v3 = arcs[j2], a1 = a0 + (v3 > 0 ? v3 * k6 : 0) + pa2, arcs[j2] = {
        data: data3[j2],
        index: i,
        value: v3,
        startAngle: a0,
        endAngle: a1,
        padAngle: p3
      };
    }
    return arcs;
  }
  pie.value = function(_2) {
    return arguments.length ? (value2 = typeof _2 === "function" ? _2 : constant(+_2), pie) : value2;
  };
  pie.sortValues = function(_2) {
    return arguments.length ? (sortValues = _2, sort = null, pie) : sortValues;
  };
  pie.sort = function(_2) {
    return arguments.length ? (sort = _2, sortValues = null, pie) : sort;
  };
  pie.startAngle = function(_2) {
    return arguments.length ? (startAngle = typeof _2 === "function" ? _2 : constant(+_2), pie) : startAngle;
  };
  pie.endAngle = function(_2) {
    return arguments.length ? (endAngle = typeof _2 === "function" ? _2 : constant(+_2), pie) : endAngle;
  };
  pie.padAngle = function(_2) {
    return arguments.length ? (padAngle = typeof _2 === "function" ? _2 : constant(+_2), pie) : padAngle;
  };
  return pie;
}
var curveRadialLinear2 = curveRadial2(curveLinear);
function Radial2(curve) {
  this._curve = curve;
}
Radial2.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a3, r3) {
    this._curve.point(r3 * Math.sin(a3), r3 * -Math.cos(a3));
  }
};
function curveRadial2(curve) {
  function radial2(context) {
    return new Radial2(curve(context));
  }
  radial2._curve = curve;
  return radial2;
}
function lineRadial(l3) {
  var c5 = l3.curve;
  l3.angle = l3.x, delete l3.x;
  l3.radius = l3.y, delete l3.y;
  l3.curve = function(_2) {
    return arguments.length ? c5(curveRadial2(_2)) : c5()._curve;
  };
  return l3;
}
function d3RadialLine() {
  return lineRadial(d3Line().curve(curveRadialLinear2));
}
function areaRadial() {
  var a3 = d3Area().curve(curveRadialLinear2), c5 = a3.curve, x03 = a3.lineX0, x14 = a3.lineX1, y03 = a3.lineY0, y14 = a3.lineY1;
  a3.angle = a3.x, delete a3.x;
  a3.startAngle = a3.x0, delete a3.x0;
  a3.endAngle = a3.x1, delete a3.x1;
  a3.radius = a3.y, delete a3.y;
  a3.innerRadius = a3.y0, delete a3.y0;
  a3.outerRadius = a3.y1, delete a3.y1;
  a3.lineStartAngle = function() {
    return lineRadial(x03());
  }, delete a3.lineX0;
  a3.lineEndAngle = function() {
    return lineRadial(x14());
  }, delete a3.lineX1;
  a3.lineInnerRadius = function() {
    return lineRadial(y03());
  }, delete a3.lineY0;
  a3.lineOuterRadius = function() {
    return lineRadial(y14());
  }, delete a3.lineY1;
  a3.curve = function(_2) {
    return arguments.length ? c5(curveRadial2(_2)) : c5()._curve;
  };
  return a3;
}
function pointRadial(x5, y7) {
  return [(y7 = +y7) * Math.cos(x5 -= Math.PI / 2), y7 * Math.sin(x5)];
}
function linkSource(d2) {
  return d2.source;
}
function linkTarget(d2) {
  return d2.target;
}
function link2(curve) {
  var source = linkSource, target = linkTarget, x$13 = x2, y$13 = y3, context = null;
  function link3() {
    var buffer, argv2 = slice.call(arguments), s4 = source.apply(this, argv2), t4 = target.apply(this, argv2);
    if (!context)
      context = buffer = path();
    curve(context, +x$13.apply(this, (argv2[0] = s4, argv2)), +y$13.apply(this, argv2), +x$13.apply(this, (argv2[0] = t4, argv2)), +y$13.apply(this, argv2));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  link3.source = function(_2) {
    return arguments.length ? (source = _2, link3) : source;
  };
  link3.target = function(_2) {
    return arguments.length ? (target = _2, link3) : target;
  };
  link3.x = function(_2) {
    return arguments.length ? (x$13 = typeof _2 === "function" ? _2 : constant(+_2), link3) : x$13;
  };
  link3.y = function(_2) {
    return arguments.length ? (y$13 = typeof _2 === "function" ? _2 : constant(+_2), link3) : y$13;
  };
  link3.context = function(_2) {
    return arguments.length ? (context = _2 == null ? null : _2, link3) : context;
  };
  return link3;
}
function curveHorizontal(context, x03, y03, x14, y14) {
  context.moveTo(x03, y03);
  context.bezierCurveTo(x03 = (x03 + x14) / 2, y03, x03, y14, x14, y14);
}
function curveVertical(context, x03, y03, x14, y14) {
  context.moveTo(x03, y03);
  context.bezierCurveTo(x03, y03 = (y03 + y14) / 2, x14, y03, x14, y14);
}
function curveRadial$1(context, x03, y03, x14, y14) {
  var p0 = pointRadial(x03, y03), p1 = pointRadial(x03, y03 = (y03 + y14) / 2), p22 = pointRadial(x14, y03), p3 = pointRadial(x14, y14);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p22[0], p22[1], p3[0], p3[1]);
}
function linkHorizontal() {
  return link2(curveHorizontal);
}
function linkVertical() {
  return link2(curveVertical);
}
function linkRadial() {
  var l3 = link2(curveRadial$1);
  l3.angle = l3.x, delete l3.x;
  l3.radius = l3.y, delete l3.y;
  return l3;
}
var circle2 = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / pi5);
    context.moveTo(r3, 0);
    context.arc(0, 0, r3, 0, tau4);
  }
};
var cross = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r3, -r3);
    context.lineTo(-r3, -r3);
    context.lineTo(-r3, -3 * r3);
    context.lineTo(r3, -3 * r3);
    context.lineTo(r3, -r3);
    context.lineTo(3 * r3, -r3);
    context.lineTo(3 * r3, r3);
    context.lineTo(r3, r3);
    context.lineTo(r3, 3 * r3);
    context.lineTo(-r3, 3 * r3);
    context.lineTo(-r3, r3);
    context.lineTo(-3 * r3, r3);
    context.closePath();
  }
};
var tan302 = Math.sqrt(1 / 3);
var tan30_22 = tan302 * 2;
var diamond = {
  draw: function(context, size) {
    var y7 = Math.sqrt(size / tan30_22), x5 = y7 * tan302;
    context.moveTo(0, -y7);
    context.lineTo(x5, 0);
    context.lineTo(0, y7);
    context.lineTo(-x5, 0);
    context.closePath();
  }
};
var ka2 = 0.8908130915292852;
var kr2 = Math.sin(pi5 / 10) / Math.sin(7 * pi5 / 10);
var kx2 = Math.sin(tau4 / 10) * kr2;
var ky2 = -Math.cos(tau4 / 10) * kr2;
var star = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size * ka2), x5 = kx2 * r3, y7 = ky2 * r3;
    context.moveTo(0, -r3);
    context.lineTo(x5, y7);
    for (var i = 1; i < 5; ++i) {
      var a3 = tau4 * i / 5, c5 = Math.cos(a3), s4 = Math.sin(a3);
      context.lineTo(s4 * r3, -c5 * r3);
      context.lineTo(c5 * x5 - s4 * y7, s4 * x5 + c5 * y7);
    }
    context.closePath();
  }
};
var square2 = {
  draw: function(context, size) {
    var w3 = Math.sqrt(size), x5 = -w3 / 2;
    context.rect(x5, x5, w3, w3);
  }
};
var sqrt32 = Math.sqrt(3);
var triangle = {
  draw: function(context, size) {
    var y7 = -Math.sqrt(size / (sqrt32 * 3));
    context.moveTo(0, y7 * 2);
    context.lineTo(-sqrt32 * y7, -y7);
    context.lineTo(sqrt32 * y7, -y7);
    context.closePath();
  }
};
var c2 = -0.5;
var s2 = Math.sqrt(3) / 2;
var k3 = 1 / Math.sqrt(12);
var a = (k3 / 2 + 1) * 3;
var wye = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / a), x03 = r3 / 2, y03 = r3 * k3, x14 = x03, y14 = r3 * k3 + r3, x22 = -x14, y22 = y14;
    context.moveTo(x03, y03);
    context.lineTo(x14, y14);
    context.lineTo(x22, y22);
    context.lineTo(c2 * x03 - s2 * y03, s2 * x03 + c2 * y03);
    context.lineTo(c2 * x14 - s2 * y14, s2 * x14 + c2 * y14);
    context.lineTo(c2 * x22 - s2 * y22, s2 * x22 + c2 * y22);
    context.lineTo(c2 * x03 + s2 * y03, c2 * y03 - s2 * x03);
    context.lineTo(c2 * x14 + s2 * y14, c2 * y14 - s2 * x14);
    context.lineTo(c2 * x22 + s2 * y22, c2 * y22 - s2 * x22);
    context.closePath();
  }
};
var symbols = [
  circle2,
  cross,
  diamond,
  square2,
  star,
  triangle,
  wye
];
function symbol() {
  var type3 = constant(circle2), size = constant(64), context = null;
  function symbol2() {
    var buffer;
    if (!context)
      context = buffer = path();
    type3.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  symbol2.type = function(_2) {
    return arguments.length ? (type3 = typeof _2 === "function" ? _2 : constant(_2), symbol2) : type3;
  };
  symbol2.size = function(_2) {
    return arguments.length ? (size = typeof _2 === "function" ? _2 : constant(+_2), symbol2) : size;
  };
  symbol2.context = function(_2) {
    return arguments.length ? (context = _2 == null ? null : _2, symbol2) : context;
  };
  return symbol2;
}
var d3Shape = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  arc: arcBuilder,
  area: d3Area,
  line: d3Line,
  pie: pieBuilder,
  areaRadial,
  radialArea: areaRadial,
  lineRadial: d3RadialLine,
  radialLine: d3RadialLine,
  pointRadial,
  linkHorizontal,
  linkVertical,
  linkRadial,
  symbol,
  symbols,
  symbolCircle: circle2,
  symbolCross: cross,
  symbolDiamond: diamond,
  symbolSquare: square2,
  symbolStar: star,
  symbolTriangle: triangle,
  symbolWye: wye,
  curveBasisClosed,
  curveBasisOpen,
  curveBasis,
  curveBundle,
  curveCardinalClosed,
  curveCardinalOpen,
  curveCardinal,
  curveCatmullRomClosed,
  curveCatmullRomOpen,
  curveCatmullRom,
  curveLinearClosed,
  curveLinear,
  curveMonotoneX: monotoneX,
  curveMonotoneY: monotoneY,
  curveNatural,
  curveStep,
  curveStepAfter: stepAfter,
  curveStepBefore: stepBefore,
  stack: d3stack,
  stackOffsetExpand,
  stackOffsetDiverging,
  stackOffsetNone,
  stackOffsetSilhouette,
  stackOffsetWiggle,
  stackOrderAppearance: appearance,
  stackOrderAscending,
  stackOrderDescending,
  stackOrderInsideOut,
  stackOrderNone,
  stackOrderReverse
});
var prefix = "$";
function Map3() {
}
Map3.prototype = map2.prototype = {
  constructor: Map3,
  has: function(key) {
    return prefix + key in this;
  },
  get: function(key) {
    return this[prefix + key];
  },
  set: function(key, value2) {
    this[prefix + key] = value2;
    return this;
  },
  remove: function(key) {
    var property2 = prefix + key;
    return property2 in this && delete this[property2];
  },
  clear: function() {
    for (var property2 in this)
      if (property2[0] === prefix)
        delete this[property2];
  },
  keys: function() {
    var keys4 = [];
    for (var property2 in this)
      if (property2[0] === prefix)
        keys4.push(property2.slice(1));
    return keys4;
  },
  values: function() {
    var values2 = [];
    for (var property2 in this)
      if (property2[0] === prefix)
        values2.push(this[property2]);
    return values2;
  },
  entries: function() {
    var entries = [];
    for (var property2 in this)
      if (property2[0] === prefix)
        entries.push({key: property2.slice(1), value: this[property2]});
    return entries;
  },
  size: function() {
    var size = 0;
    for (var property2 in this)
      if (property2[0] === prefix)
        ++size;
    return size;
  },
  empty: function() {
    for (var property2 in this)
      if (property2[0] === prefix)
        return false;
    return true;
  },
  each: function(f3) {
    for (var property2 in this)
      if (property2[0] === prefix)
        f3(this[property2], property2.slice(1), this);
  }
};
function map2(object2, f3) {
  var map7 = new Map3();
  if (object2 instanceof Map3)
    object2.each(function(value2, key2) {
      map7.set(key2, value2);
    });
  else if (Array.isArray(object2)) {
    var i = -1, n3 = object2.length, o;
    if (f3 == null)
      while (++i < n3)
        map7.set(i, object2[i]);
    else
      while (++i < n3)
        map7.set(f3(o = object2[i], i, object2), o);
  } else if (object2)
    for (var key in object2)
      map7.set(key, object2[key]);
  return map7;
}
function Set3() {
}
var proto = map2.prototype;
Set3.prototype = set.prototype = {
  constructor: Set3,
  has: proto.has,
  add: function(value2) {
    value2 += "";
    this[prefix + value2] = value2;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};
function set(object2, f3) {
  var set4 = new Set3();
  if (object2 instanceof Set3)
    object2.each(function(value2) {
      set4.add(value2);
    });
  else if (object2) {
    var i = -1, n3 = object2.length;
    if (f3 == null)
      while (++i < n3)
        set4.add(object2[i]);
    else
      while (++i < n3)
        set4.add(f3(object2[i], i, object2));
  }
  return set4;
}

// snowpack/pkg/victory.js
function linear3(t4) {
  return +t4;
}
function quadIn(t4) {
  return t4 * t4;
}
function quadOut(t4) {
  return t4 * (2 - t4);
}
function quadInOut(t4) {
  return ((t4 *= 2) <= 1 ? t4 * t4 : --t4 * (2 - t4) + 1) / 2;
}
var exponent3 = 3;
var polyIn2 = function custom26(e3) {
  e3 = +e3;
  function polyIn3(t4) {
    return Math.pow(t4, e3);
  }
  polyIn3.exponent = custom26;
  return polyIn3;
}(exponent3);
var polyOut2 = function custom27(e3) {
  e3 = +e3;
  function polyOut3(t4) {
    return 1 - Math.pow(1 - t4, e3);
  }
  polyOut3.exponent = custom27;
  return polyOut3;
}(exponent3);
var polyInOut2 = function custom28(e3) {
  e3 = +e3;
  function polyInOut3(t4) {
    return ((t4 *= 2) <= 1 ? Math.pow(t4, e3) : 2 - Math.pow(2 - t4, e3)) / 2;
  }
  polyInOut3.exponent = custom28;
  return polyInOut3;
}(exponent3);
var pi6 = Math.PI;
var halfPi4 = pi6 / 2;
function sinIn(t4) {
  return +t4 === 1 ? 1 : 1 - Math.cos(t4 * halfPi4);
}
function sinOut(t4) {
  return Math.sin(t4 * halfPi4);
}
function sinInOut(t4) {
  return (1 - Math.cos(pi6 * t4)) / 2;
}
function tpmt2(x5) {
  return (Math.pow(2, -10 * x5) - 9765625e-10) * 1.0009775171065494;
}
function expIn(t4) {
  return tpmt2(1 - +t4);
}
function expOut(t4) {
  return 1 - tpmt2(t4);
}
function expInOut(t4) {
  return ((t4 *= 2) <= 1 ? tpmt2(1 - t4) : 2 - tpmt2(t4 - 1)) / 2;
}
function circleIn(t4) {
  return 1 - Math.sqrt(1 - t4 * t4);
}
function circleOut(t4) {
  return Math.sqrt(1 - --t4 * t4);
}
function circleInOut(t4) {
  return ((t4 *= 2) <= 1 ? 1 - Math.sqrt(1 - t4 * t4) : Math.sqrt(1 - (t4 -= 2) * t4) + 1) / 2;
}
var b12 = 4 / 11;
var b22 = 6 / 11;
var b32 = 8 / 11;
var b42 = 3 / 4;
var b52 = 9 / 11;
var b62 = 10 / 11;
var b72 = 15 / 16;
var b82 = 21 / 22;
var b92 = 63 / 64;
var b02 = 1 / b12 / b12;
function bounceIn(t4) {
  return 1 - bounceOut(1 - t4);
}
function bounceOut(t4) {
  return (t4 = +t4) < b12 ? b02 * t4 * t4 : t4 < b32 ? b02 * (t4 -= b22) * t4 + b42 : t4 < b62 ? b02 * (t4 -= b52) * t4 + b72 : b02 * (t4 -= b82) * t4 + b92;
}
function bounceInOut(t4) {
  return ((t4 *= 2) <= 1 ? 1 - bounceOut(1 - t4) : bounceOut(t4 - 1) + 1) / 2;
}
var overshoot2 = 1.70158;
var backIn2 = function custom29(s4) {
  s4 = +s4;
  function backIn3(t4) {
    return (t4 = +t4) * t4 * (s4 * (t4 - 1) + t4);
  }
  backIn3.overshoot = custom29;
  return backIn3;
}(overshoot2);
var backOut2 = function custom30(s4) {
  s4 = +s4;
  function backOut3(t4) {
    return --t4 * t4 * ((t4 + 1) * s4 + t4) + 1;
  }
  backOut3.overshoot = custom30;
  return backOut3;
}(overshoot2);
var backInOut2 = function custom31(s4) {
  s4 = +s4;
  function backInOut3(t4) {
    return ((t4 *= 2) < 1 ? t4 * t4 * ((s4 + 1) * t4 - s4) : (t4 -= 2) * t4 * ((s4 + 1) * t4 + s4) + 2) / 2;
  }
  backInOut3.overshoot = custom31;
  return backInOut3;
}(overshoot2);
var tau5 = 2 * Math.PI;
var amplitude2 = 1;
var period2 = 0.3;
var elasticIn2 = function custom32(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau5);
  function elasticIn3(t4) {
    return a3 * tpmt2(- --t4) * Math.sin((s4 - t4) / p3);
  }
  elasticIn3.amplitude = function(a4) {
    return custom32(a4, p3 * tau5);
  };
  elasticIn3.period = function(p4) {
    return custom32(a3, p4);
  };
  return elasticIn3;
}(amplitude2, period2);
var elasticOut2 = function custom33(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau5);
  function elasticOut3(t4) {
    return 1 - a3 * tpmt2(t4 = +t4) * Math.sin((t4 + s4) / p3);
  }
  elasticOut3.amplitude = function(a4) {
    return custom33(a4, p3 * tau5);
  };
  elasticOut3.period = function(p4) {
    return custom33(a3, p4);
  };
  return elasticOut3;
}(amplitude2, period2);
var elasticInOut2 = function custom34(a3, p3) {
  var s4 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p3 /= tau5);
  function elasticInOut3(t4) {
    return ((t4 = t4 * 2 - 1) < 0 ? a3 * tpmt2(-t4) * Math.sin((s4 - t4) / p3) : 2 - a3 * tpmt2(t4) * Math.sin((s4 + t4) / p3)) / 2;
  }
  elasticInOut3.amplitude = function(a4) {
    return custom34(a4, p3 * tau5);
  };
  elasticInOut3.period = function(p4) {
    return custom34(a3, p4);
  };
  return elasticInOut3;
}(amplitude2, period2);
var d3Ease = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  easeLinear: linear3,
  easeQuad: quadInOut,
  easeQuadIn: quadIn,
  easeQuadOut: quadOut,
  easeQuadInOut: quadInOut,
  easeCubic: cubicInOut,
  easeCubicIn: cubicIn,
  easeCubicOut: cubicOut,
  easeCubicInOut: cubicInOut,
  easePoly: polyInOut2,
  easePolyIn: polyIn2,
  easePolyOut: polyOut2,
  easePolyInOut: polyInOut2,
  easeSin: sinInOut,
  easeSinIn: sinIn,
  easeSinOut: sinOut,
  easeSinInOut: sinInOut,
  easeExp: expInOut,
  easeExpIn: expIn,
  easeExpOut: expOut,
  easeExpInOut: expInOut,
  easeCircle: circleInOut,
  easeCircleIn: circleIn,
  easeCircleOut: circleOut,
  easeCircleInOut: circleInOut,
  easeBounce: bounceOut,
  easeBounceIn: bounceIn,
  easeBounceOut: bounceOut,
  easeBounceInOut: bounceInOut,
  easeBack: backInOut2,
  easeBackIn: backIn2,
  easeBackOut: backOut2,
  easeBackInOut: backInOut2,
  easeElastic: elasticOut2,
  easeElasticIn: elasticIn2,
  easeElasticOut: elasticOut2,
  easeElasticInOut: elasticInOut2
});
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_1 : function(object2) {
  var result = [];
  while (object2) {
    _arrayPush(result, _getSymbols(object2));
    object2 = _getPrototype(object2);
  }
  return result;
};
var _getSymbolsIn = getSymbolsIn;
function getAllKeysIn(object2) {
  return _baseGetAllKeys(object2, keysIn_1, _getSymbolsIn);
}
var _getAllKeysIn = getAllKeysIn;
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_1(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_1(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return _baseOrderBy(collection, iteratees, orders);
}
var orderBy_1 = orderBy;
var isInterpolatable = function(obj) {
  if (obj !== null) {
    switch (typeof obj) {
      case "undefined":
        return false;
      case "number":
        return !isNaN(obj) && obj !== Number.POSITIVE_INFINITY && obj !== Number.NEGATIVE_INFINITY;
      case "string":
        return true;
      case "boolean":
        return false;
      case "object":
        return obj instanceof Date || Array.isArray(obj) || isPlainObject_1(obj);
      case "function":
        return true;
    }
  }
  return false;
};
var interpolateImmediate = function(a3, b10) {
  var when = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  return function(t4) {
    return t4 < when ? a3 : b10;
  };
};
var interpolateFunction = function(a3, b10) {
  return function(t4) {
    if (t4 >= 1) {
      return b10;
    }
    return function() {
      var aval = typeof a3 === "function" ? a3.apply(this, arguments) : a3;
      var bval = typeof b10 === "function" ? b10.apply(this, arguments) : b10;
      return interpolateValue(aval, bval)(t4);
    };
  };
};
var interpolateObject = function(a3, b10) {
  var interpolateTypes = function(x5, y7) {
    if (x5 === y7 || !isInterpolatable(x5) || !isInterpolatable(y7)) {
      return interpolateImmediate(x5, y7);
    }
    if (typeof x5 === "function" || typeof y7 === "function") {
      return interpolateFunction(x5, y7);
    }
    if (typeof x5 === "object" && isPlainObject_1(x5) || typeof y7 === "object" && isPlainObject_1(y7)) {
      return interpolateObject(x5, y7);
    }
    return interpolateValue(x5, y7);
  };
  var keyData = function(val) {
    return Array.isArray(val) ? orderBy_1(val, "key") : val;
  };
  var i = {};
  var c5 = {};
  var k6;
  if (a3 === null || typeof a3 !== "object") {
    a3 = {};
  }
  if (b10 === null || typeof b10 !== "object") {
    b10 = {};
  }
  for (k6 in b10) {
    if (k6 in a3) {
      i[k6] = interpolateTypes(keyData(a3[k6]), keyData(b10[k6]));
    } else {
      c5[k6] = b10[k6];
    }
  }
  return function(t4) {
    for (k6 in i) {
      c5[k6] = i[k6](t4);
    }
    return c5;
  };
};
var interpolateString2 = function(a3, b10) {
  var format6 = function(val) {
    return typeof val === "string" ? val.replace(/,/g, "") : val;
  };
  return interpolateValue(format6(a3), format6(b10));
};
var victoryInterpolator = function(a3, b10) {
  if (a3 === b10 || !isInterpolatable(a3) || !isInterpolatable(b10)) {
    return interpolateImmediate(a3, b10);
  }
  if (typeof a3 === "function" || typeof b10 === "function") {
    return interpolateFunction(a3, b10);
  }
  if (isPlainObject_1(a3) || isPlainObject_1(b10)) {
    return interpolateObject(a3, b10);
  }
  if (typeof a3 === "string" || typeof b10 === "string") {
    return interpolateString2(a3, b10);
  }
  return interpolateValue(a3, b10);
};
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
var Timer3 = /* @__PURE__ */ function() {
  function Timer4() {
    _classCallCheck(this, Timer4);
    this.shouldAnimate = true;
    this.subscribers = [];
    this.loop = this.loop.bind(this);
    this.timer = null;
    this.activeSubscriptions = 0;
  }
  _createClass(Timer4, [{
    key: "bypassAnimation",
    value: function bypassAnimation() {
      this.shouldAnimate = false;
    }
  }, {
    key: "resumeAnimation",
    value: function resumeAnimation() {
      this.shouldAnimate = true;
    }
  }, {
    key: "loop",
    value: function loop() {
      this.subscribers.forEach(function(s4) {
        s4.callback(now() - s4.startTime, s4.duration);
      });
    }
  }, {
    key: "start",
    value: function start2() {
      if (!this.timer) {
        this.timer = timer(this.loop);
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      if (this.timer) {
        this.timer.stop();
        this.timer = null;
      }
    }
  }, {
    key: "subscribe",
    value: function subscribe(callback, duration) {
      duration = this.shouldAnimate ? duration : 0;
      var subscriptionID = this.subscribers.push({
        startTime: now(),
        callback,
        duration
      });
      this.activeSubscriptions++;
      this.start();
      return subscriptionID;
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe(id3) {
      if (id3 !== null && this.subscribers[id3 - 1]) {
        delete this.subscribers[id3 - 1];
        this.activeSubscriptions--;
      }
      if (this.activeSubscriptions === 0) {
        this.stop();
      }
    }
  }]);
  return Timer4;
}();
var TimerContext = react.createContext({
  transitionTimer: new Timer3(),
  animationTimer: new Timer3()
});
TimerContext.displayName = "TimerContext";
var isArray2 = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;
var hasElementType = typeof Element !== "undefined";
function equal(a3, b10) {
  if (a3 === b10)
    return true;
  if (a3 && b10 && typeof a3 == "object" && typeof b10 == "object") {
    var arrA = isArray2(a3), arrB = isArray2(b10), i, length, key;
    if (arrA && arrB) {
      length = a3.length;
      if (length != b10.length)
        return false;
      for (i = length; i-- !== 0; )
        if (!equal(a3[i], b10[i]))
          return false;
      return true;
    }
    if (arrA != arrB)
      return false;
    var dateA = a3 instanceof Date, dateB = b10 instanceof Date;
    if (dateA != dateB)
      return false;
    if (dateA && dateB)
      return a3.getTime() == b10.getTime();
    var regexpA = a3 instanceof RegExp, regexpB = b10 instanceof RegExp;
    if (regexpA != regexpB)
      return false;
    if (regexpA && regexpB)
      return a3.toString() == b10.toString();
    var keys4 = keyList(a3);
    length = keys4.length;
    if (length !== keyList(b10).length)
      return false;
    for (i = length; i-- !== 0; )
      if (!hasProp.call(b10, keys4[i]))
        return false;
    if (hasElementType && a3 instanceof Element && b10 instanceof Element)
      return a3 === b10;
    for (i = length; i-- !== 0; ) {
      key = keys4[i];
      if (key === "_owner" && a3.$$typeof) {
        continue;
      } else {
        if (!equal(a3[key], b10[key]))
          return false;
      }
    }
    return true;
  }
  return a3 !== a3 && b10 !== b10;
}
var reactFastCompare = function exportedEqual(a3, b10) {
  try {
    return equal(a3, b10);
  } catch (error) {
    if (error.message && error.message.match(/stack|recursion/i) || error.number === -2146828260) {
      console.warn("Warning: react-fast-compare does not handle circular references.", error.name, error.message);
      return false;
    }
    throw error;
  }
};
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$1(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$1(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized(self2);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var VictoryAnimation = /* @__PURE__ */ function(_React$Component) {
  _inherits(VictoryAnimation2, _React$Component);
  function VictoryAnimation2(props, context) {
    var _this;
    _classCallCheck$1(this, VictoryAnimation2);
    _this = _possibleConstructorReturn(this, (VictoryAnimation2.__proto__ || Object.getPrototypeOf(VictoryAnimation2)).call(this, props, context));
    _this.state = {
      data: Array.isArray(_this.props.data) ? _this.props.data[0] : _this.props.data,
      animationInfo: {
        progress: 0,
        animating: false
      }
    };
    _this.interpolator = null;
    _this.queue = Array.isArray(_this.props.data) ? _this.props.data.slice(1) : [];
    _this.ease = d3Ease[_this.toNewName(_this.props.easing)];
    _this.functionToBeRunEachFrame = _this.functionToBeRunEachFrame.bind(_assertThisInitialized(_this));
    _this.timer = _this.context.animationTimer;
    return _this;
  }
  _createClass$1(VictoryAnimation2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.queue.length) {
        this.traverseQueue();
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      var equalProps = reactFastCompare(this.props, nextProps);
      if (!equalProps) {
        this.timer.unsubscribe(this.loopID);
        if (!Array.isArray(nextProps.data)) {
          this.queue.length = 0;
          this.queue.push(nextProps.data);
        } else {
          var _queue;
          (_queue = this.queue).push.apply(_queue, _toConsumableArray(nextProps.data));
        }
        this.traverseQueue();
      }
      return nextState.animationInfo.animating || nextState.animationInfo.terminating || !equalProps;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.loopID) {
        this.timer.unsubscribe(this.loopID);
      } else {
        this.timer.stop();
      }
    }
  }, {
    key: "toNewName",
    value: function toNewName2(ease) {
      var capitalize = function(s4) {
        return s4 && s4[0].toUpperCase() + s4.slice(1);
      };
      return "ease".concat(capitalize(ease));
    }
  }, {
    key: "traverseQueue",
    value: function traverseQueue() {
      var _this2 = this;
      if (this.queue.length) {
        var data3 = this.queue[0];
        this.interpolator = victoryInterpolator(this.state.data, data3);
        if (this.props.delay) {
          setTimeout(function() {
            _this2.loopID = _this2.timer.subscribe(_this2.functionToBeRunEachFrame, _this2.props.duration);
          }, this.props.delay);
        } else {
          this.loopID = this.timer.subscribe(this.functionToBeRunEachFrame, this.props.duration);
        }
      } else if (this.props.onEnd) {
        this.props.onEnd();
      }
    }
  }, {
    key: "functionToBeRunEachFrame",
    value: function functionToBeRunEachFrame(elapsed, duration) {
      duration = duration !== void 0 ? duration : this.props.duration;
      var step = duration ? elapsed / duration : 1;
      if (step >= 1) {
        this.setState({
          data: this.interpolator(1),
          animationInfo: {
            progress: 1,
            animating: false,
            terminating: true
          }
        });
        if (this.loopID) {
          this.timer.unsubscribe(this.loopID);
        }
        this.queue.shift();
        this.traverseQueue();
        return;
      }
      this.setState({
        data: this.interpolator(this.ease(step)),
        animationInfo: {
          progress: step,
          animating: step < 1
        }
      });
    }
  }, {
    key: "render",
    value: function render2() {
      return this.props.children(this.state.data, this.state.animationInfo);
    }
  }]);
  return VictoryAnimation2;
}(react.Component);
Object.defineProperty(VictoryAnimation, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryAnimation"
});
Object.defineProperty(VictoryAnimation, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: propTypes.func,
    data: propTypes.oneOfType([propTypes.object, propTypes.array]),
    delay: propTypes.number,
    duration: propTypes.number,
    easing: propTypes.oneOf(["back", "backIn", "backOut", "backInOut", "bounce", "bounceIn", "bounceOut", "bounceInOut", "circle", "circleIn", "circleOut", "circleInOut", "linear", "linearIn", "linearOut", "linearInOut", "cubic", "cubicIn", "cubicOut", "cubicInOut", "elastic", "elasticIn", "elasticOut", "elasticInOut", "exp", "expIn", "expOut", "expInOut", "poly", "polyIn", "polyOut", "polyInOut", "quad", "quadIn", "quadOut", "quadInOut", "sin", "sinIn", "sinOut", "sinInOut"]),
    onEnd: propTypes.func
  }
});
Object.defineProperty(VictoryAnimation, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    data: {},
    delay: 0,
    duration: 1e3,
    easing: "quadInOut"
  }
});
Object.defineProperty(VictoryAnimation, "contextType", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: TimerContext
});
var idCounter = 0;
function uniqueId(prefix3) {
  var id3 = ++idCounter;
  return toString_1(prefix3) + id3;
}
var uniqueId_1 = uniqueId;
var objectProto5 = Object.prototype;
var hasOwnProperty6 = objectProto5.hasOwnProperty;
var defaults = _baseRest(function(object2, sources) {
  object2 = Object(object2);
  var index4 = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index4 < length) {
    var source = sources[index4];
    var props = keysIn_1(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value2 = object2[key];
      if (value2 === void 0 || eq_1(value2, objectProto5[key]) && !hasOwnProperty6.call(object2, key)) {
        object2[key] = source[key];
      }
    }
  }
  return object2;
});
var defaults_1 = defaults;
var objectProto$15 = Object.prototype;
var hasOwnProperty$15 = objectProto$15.hasOwnProperty;
var assign = _createAssigner(function(object2, source) {
  if (_isPrototype(source) || isArrayLike_1(source)) {
    _copyObject(source, keys_1(source), object2);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty$15.call(source, key)) {
      _assignValue(object2, key, source[key]);
    }
  }
});
var assign_1 = assign;
var regexpTag2 = "[object RegExp]";
function baseIsRegExp(value2) {
  return isObjectLike_1(value2) && _baseGetTag(value2) == regexpTag2;
}
var _baseIsRegExp = baseIsRegExp;
var nodeIsRegExp = _nodeUtil && _nodeUtil.isRegExp;
var isRegExp = nodeIsRegExp ? _baseUnary(nodeIsRegExp) : _baseIsRegExp;
var isRegExp_1 = isRegExp;
var Log = {
  warn: function(message) {
  }
};
function _defineProperty3(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var makeChainable = function(validator) {
  var _chainable = function(isRequired, props, propName, componentName) {
    var value2 = props[propName];
    if (value2 === void 0 || value2 === null) {
      if (isRequired) {
        return new Error("Required `".concat(propName, "` was not specified in `").concat(componentName, "`."));
      }
      return null;
    }
    for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }
    return validator.apply(void 0, [props, propName, componentName].concat(rest));
  };
  var chainable = _chainable.bind(null, false);
  chainable.isRequired = _chainable.bind(null, true);
  return chainable;
};
var nullConstructor = function() {
  return null;
};
var undefinedConstructor = function() {
  return void 0;
};
var getConstructor = function(value2) {
  if (value2 === void 0) {
    return undefinedConstructor;
  } else if (value2 === null) {
    return nullConstructor;
  } else {
    return value2.constructor;
  }
};
var getConstructorName = function(value2) {
  if (value2 === void 0) {
    return "undefined";
  } else if (value2 === null) {
    return "null";
  }
  return Object.prototype.toString.call(value2).slice(8, -1);
};
var CustomPropTypes = {
  deprecated: function(propType, explanation) {
    return function(props, propName, componentName) {
      var value2 = props[propName];
      if (value2 !== null && value2 !== void 0) {
        Log.warn('"'.concat(propName, '" property of "').concat(componentName, '" has been deprecated ').concat(explanation));
      }
      return propTypes.checkPropTypes(_defineProperty3({}, propName, propType), props, propName, componentName);
    };
  },
  allOfType: function(validators) {
    return makeChainable(function(props, propName, componentName) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }
      return validators.reduce(function(result, validator) {
        return result || validator.apply(void 0, [props, propName, componentName].concat(rest));
      }, void 0);
    });
  },
  nonNegative: makeChainable(function(props, propName, componentName) {
    var value2 = props[propName];
    if (typeof value2 !== "number" || value2 < 0) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be a non-negative number."));
    }
    return void 0;
  }),
  integer: makeChainable(function(props, propName, componentName) {
    var value2 = props[propName];
    if (typeof value2 !== "number" || value2 % 1 !== 0) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be an integer."));
    }
    return void 0;
  }),
  greaterThanZero: makeChainable(function(props, propName, componentName) {
    var value2 = props[propName];
    if (typeof value2 !== "number" || value2 <= 0) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be a number greater than zero."));
    }
    return void 0;
  }),
  domain: makeChainable(function(props, propName, componentName) {
    var value2 = props[propName];
    if (!Array.isArray(value2) || value2.length !== 2 || value2[1] === value2[0]) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be an array of two unique numeric values."));
    }
    return void 0;
  }),
  scale: makeChainable(function(props, propName, componentName) {
    var supportedScaleStrings2 = ["linear", "time", "log", "sqrt"];
    var validScale2 = function(scl) {
      if (isFunction_1(scl)) {
        return isFunction_1(scl.copy) && isFunction_1(scl.domain) && isFunction_1(scl.range);
      } else if (typeof scl === "string") {
        return supportedScaleStrings2.indexOf(scl) !== -1;
      }
      return false;
    };
    var value2 = props[propName];
    if (!validScale2(value2)) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be a d3 scale."));
    }
    return void 0;
  }),
  homogeneousArray: makeChainable(function(props, propName, componentName) {
    var values2 = props[propName];
    if (!Array.isArray(values2)) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be an array."));
    }
    if (values2.length < 2) {
      return void 0;
    }
    var comparisonConstructor = getConstructor(values2[0]);
    var typeMismatchedValue = find_1(values2, function(value2) {
      return comparisonConstructor !== getConstructor(value2);
    });
    if (typeMismatchedValue) {
      var constructorName = getConstructorName(values2[0]);
      var otherConstructorName = getConstructorName(typeMismatchedValue);
      return new Error("Expected `".concat(propName, "` in `").concat(componentName, "` to be a ") + "homogeneous array, but found types `".concat(constructorName, "` and ") + "`".concat(otherConstructorName, "`."));
    }
    return void 0;
  }),
  matchDataLength: makeChainable(function(props, propName) {
    if (props[propName] && Array.isArray(props[propName]) && props[propName].length !== props.data.length) {
      return new Error("Length of data and ".concat(propName, " arrays must match."));
    }
    return void 0;
  }),
  regExp: makeChainable(function(props, propName, componentName) {
    if (props[propName] && !isRegExp_1(props[propName])) {
      return new Error("`".concat(propName, "` in `").concat(componentName, "` must be a regular expression."));
    }
    return void 0;
  })
};
function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$2(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$1(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$1(self2);
}
function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$1(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var Portal = /* @__PURE__ */ function(_React$Component) {
  _inherits$1(Portal3, _React$Component);
  function Portal3(props) {
    var _this;
    _classCallCheck$2(this, Portal3);
    _this = _possibleConstructorReturn$1(this, (Portal3.__proto__ || Object.getPrototypeOf(Portal3)).call(this, props));
    _this.map = {};
    _this.index = 1;
    _this.portalUpdate = _this.portalUpdate.bind(_assertThisInitialized$1(_this));
    _this.portalRegister = _this.portalRegister.bind(_assertThisInitialized$1(_this));
    _this.portalDeregister = _this.portalDeregister.bind(_assertThisInitialized$1(_this));
    return _this;
  }
  _createClass$2(Portal3, [{
    key: "portalRegister",
    value: function portalRegister() {
      return ++this.index;
    }
  }, {
    key: "portalUpdate",
    value: function portalUpdate(key, element) {
      this.map[key] = element;
      this.forceUpdate();
    }
  }, {
    key: "portalDeregister",
    value: function portalDeregister(key) {
      delete this.map[key];
      this.forceUpdate();
    }
  }, {
    key: "getChildren",
    value: function getChildren2() {
      var _this2 = this;
      return keys_1(this.map).map(function(key) {
        var el = _this2.map[key];
        return el ? react.cloneElement(el, {
          key
        }) : el;
      });
    }
  }, {
    key: "render",
    value: function render2() {
      return react.createElement("svg", this.props, this.getChildren());
    }
  }]);
  return Portal3;
}(react.Component);
Object.defineProperty(Portal, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "Portal"
});
Object.defineProperty(Portal, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: propTypes.string,
    height: CustomPropTypes.nonNegative,
    style: propTypes.object,
    viewBox: propTypes.string,
    width: CustomPropTypes.nonNegative
  }
});
var PortalContext = react.createContext({});
PortalContext.displayName = "PortalContext";
function getCartesianRange(props, axis2) {
  var vertical = axis2 !== "x";
  var padding2 = getPadding(props);
  if (vertical) {
    return [props.height - padding2.bottom, padding2.top];
  }
  return [padding2.left, props.width - padding2.right];
}
function getPolarRange(props, axis2) {
  if (axis2 === "x") {
    var startAngle = degreesToRadians(props.startAngle || 0);
    var endAngle = degreesToRadians(props.endAngle || 360);
    return [startAngle, endAngle];
  }
  return [props.innerRadius || 0, getRadius(props)];
}
function omit(originalObject) {
  var ks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var newObject = {};
  for (var key in originalObject) {
    if (ks.indexOf(key) >= 0) {
      continue;
    }
    if (!Object.prototype.hasOwnProperty.call(originalObject, key)) {
      continue;
    }
    newObject[key] = originalObject[key];
  }
  return newObject;
}
function getPoint(datum2) {
  var exists = function(val) {
    return val !== void 0;
  };
  var _x = datum2._x, _x1 = datum2._x1, _x0 = datum2._x0, _voronoiX = datum2._voronoiX, _y = datum2._y, _y1 = datum2._y1, _y0 = datum2._y0, _voronoiY = datum2._voronoiY;
  var defaultX2 = exists(_x1) ? _x1 : _x;
  var defaultY2 = exists(_y1) ? _y1 : _y;
  var point8 = {
    x: exists(_voronoiX) ? _voronoiX : defaultX2,
    x0: exists(_x0) ? _x0 : _x,
    y: exists(_voronoiY) ? _voronoiY : defaultY2,
    y0: exists(_y0) ? _y0 : _y
  };
  return defaults_1({}, point8, datum2);
}
function scalePoint(props, datum2) {
  var scale = props.scale, polar = props.polar, horizontal = props.horizontal;
  var d2 = getPoint(datum2);
  var origin = props.origin || {
    x: 0,
    y: 0
  };
  var x5 = horizontal ? scale.y(d2.y) : scale.x(d2.x);
  var x03 = horizontal ? scale.y(d2.y0) : scale.x(d2.x0);
  var y7 = horizontal ? scale.x(d2.x) : scale.y(d2.y);
  var y03 = horizontal ? scale.x(d2.x0) : scale.y(d2.y0);
  return {
    x: polar ? y7 * Math.cos(x5) + origin.x : x5,
    x0: polar ? y03 * Math.cos(x03) + origin.x : x03,
    y: polar ? -y7 * Math.sin(x5) + origin.y : y7,
    y0: polar ? -y03 * Math.sin(x03) + origin.x : y03
  };
}
function getPadding(props) {
  var name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "padding";
  var padding2 = props[name];
  var paddingVal = typeof padding2 === "number" ? padding2 : 0;
  var paddingObj = typeof padding2 === "object" ? padding2 : {};
  return {
    top: paddingObj.top || paddingVal,
    bottom: paddingObj.bottom || paddingVal,
    left: paddingObj.left || paddingVal,
    right: paddingObj.right || paddingVal
  };
}
function isTooltip(component) {
  var labelRole = component && component.type && component.type.role;
  return labelRole === "tooltip";
}
function getDefaultStyles(props, role) {
  var _props$theme = props.theme, theme = _props$theme === void 0 ? {} : _props$theme, labelComponent = props.labelComponent;
  var defaultStyles3 = theme[role] && theme[role].style || {};
  if (!isTooltip(labelComponent)) {
    return defaultStyles3;
  }
  var tooltipStyle2 = theme.tooltip && theme.tooltip.style || {};
  var labelStyle = defaults_1({}, tooltipStyle2, defaultStyles3.labels);
  return defaults_1({}, {
    labels: labelStyle
  }, defaultStyles3);
}
function getStyles(style, defaultStyles3) {
  var width = "100%";
  var height = "100%";
  if (!style) {
    return defaults_1({
      parent: {
        height,
        width
      }
    }, defaultStyles3);
  }
  var data3 = style.data, labels = style.labels, parent = style.parent;
  var defaultParent = defaultStyles3 && defaultStyles3.parent || {};
  var defaultLabels = defaultStyles3 && defaultStyles3.labels || {};
  var defaultData = defaultStyles3 && defaultStyles3.data || {};
  return {
    parent: defaults_1({}, parent, defaultParent, {
      width,
      height
    }),
    labels: defaults_1({}, labels, defaultLabels),
    data: defaults_1({}, data3, defaultData)
  };
}
function evaluateProp(prop, props) {
  return isFunction_1(prop) ? prop(props) : prop;
}
function evaluateStyle(style, props) {
  if (!style || !keys_1(style).some(function(value2) {
    return isFunction_1(style[value2]);
  })) {
    return style;
  }
  return keys_1(style).reduce(function(prev, curr) {
    prev[curr] = evaluateProp(style[curr], props);
    return prev;
  }, {});
}
function degreesToRadians(degrees3) {
  return typeof degrees3 === "number" ? degrees3 * (Math.PI / 180) : degrees3;
}
function radiansToDegrees(radians3) {
  return typeof radians3 === "number" ? radians3 / (Math.PI / 180) : radians3;
}
function getRadius(props) {
  var _getPadding = getPadding(props), left2 = _getPadding.left, right2 = _getPadding.right, top2 = _getPadding.top, bottom2 = _getPadding.bottom;
  var width = props.width, height = props.height;
  return Math.min(width - left2 - right2, height - top2 - bottom2) / 2;
}
function getPolarOrigin(props) {
  var width = props.width, height = props.height;
  var _getPadding2 = getPadding(props), top2 = _getPadding2.top, bottom2 = _getPadding2.bottom, left2 = _getPadding2.left, right2 = _getPadding2.right;
  var radius = Math.min(width - left2 - right2, height - top2 - bottom2) / 2;
  var offsetWidth = width / 2 + left2 - right2;
  var offsetHeight = height / 2 + top2 - bottom2;
  return {
    x: offsetWidth + radius > width ? radius + left2 - right2 : offsetWidth,
    y: offsetHeight + radius > height ? radius + top2 - bottom2 : offsetHeight
  };
}
function getRange(props, axis2) {
  if (props.range && props.range[axis2]) {
    return props.range[axis2];
  } else if (props.range && Array.isArray(props.range)) {
    return props.range;
  }
  return props.polar ? getPolarRange(props, axis2) : getCartesianRange(props, axis2);
}
function createAccessor(key) {
  if (isFunction_1(key)) {
    return key;
  } else if (key === null || key === void 0) {
    return function(x5) {
      return x5;
    };
  }
  return property_1(key);
}
function modifyProps(props, fallbackProps2, role) {
  var theme = props.theme && props.theme[role] ? props.theme[role] : {};
  var themeProps = omit(theme, ["style"]);
  var horizontal = isHorizontal(props);
  var defaultObject = horizontal === void 0 ? {} : {
    horizontal
  };
  return defaults_1(defaultObject, props, themeProps, fallbackProps2);
}
function getCurrentAxis(axis2, horizontal) {
  var otherAxis = axis2 === "x" ? "y" : "x";
  return horizontal ? otherAxis : axis2;
}
function reduceChildren(children2, iteratee) {
  var parentProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var initialMemo = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
  var combine = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : function(memo, item) {
    return memo.concat(item);
  };
  var sharedProps = ["data", "domain", "categories", "polar", "startAngle", "endAngle", "minDomain", "maxDomain", "horizontal"];
  var traverseChildren = function(childArray, names, parent) {
    return childArray.reduce(function(memo, child, index4) {
      var childRole = child.type && child.type.role;
      var childName = child.props.name || "".concat(childRole, "-").concat(names[index4]);
      if (child.props && child.props.children) {
        var childProps = assign_1({}, child.props, pick_1(parentProps, sharedProps));
        var nestedChildren = child.type && child.type.role === "stack" && isFunction_1(child.type.getChildren) ? child.type.getChildren(childProps) : react.Children.toArray(child.props.children).map(function(c5) {
          var nestedChildProps = assign_1({}, c5.props, pick_1(childProps, sharedProps));
          return react.cloneElement(c5, nestedChildProps);
        });
        var _childNames = nestedChildren.map(function(c5, i) {
          return "".concat(childName, "-").concat(i);
        });
        var nestedResults = traverseChildren(nestedChildren, _childNames, child);
        memo = combine(memo, nestedResults);
      } else {
        var result = iteratee(child, childName, parent);
        if (result) {
          memo = combine(memo, result);
        }
      }
      return memo;
    }, initialMemo);
  };
  var childNames = children2.map(function(c5, i) {
    return i;
  });
  return traverseChildren(children2, childNames);
}
function isHorizontal(props) {
  if (props.horizontal !== void 0 || !props.children) {
    return props.horizontal;
  }
  var traverseChildren = function(childArray) {
    return childArray.reduce(function(memo, child) {
      var childProps = child.props || {};
      if (memo || childProps.horizontal || !childProps.children) {
        memo = memo || childProps.horizontal;
        return memo;
      }
      return traverseChildren(react.Children.toArray(childProps.children));
    }, false);
  };
  return traverseChildren(react.Children.toArray(props.children));
}
var Helpers = {
  omit,
  getPoint,
  scalePoint,
  getPadding,
  getDefaultStyles,
  getStyles,
  evaluateProp,
  evaluateStyle,
  degreesToRadians,
  radiansToDegrees,
  getRadius,
  getPolarOrigin,
  getRange,
  createAccessor,
  modifyProps,
  getCurrentAxis,
  reduceChildren,
  isHorizontal,
  isTooltip
};
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$1(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$1(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$3(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$2(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$2(self2);
}
function _assertThisInitialized$2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VictoryContainer = /* @__PURE__ */ function(_React$Component) {
  _inherits$2(VictoryContainer2, _React$Component);
  function VictoryContainer2(props) {
    var _this;
    _classCallCheck$3(this, VictoryContainer2);
    _this = _possibleConstructorReturn$2(this, (VictoryContainer2.__proto__ || Object.getPrototypeOf(VictoryContainer2)).call(this, props));
    _this.containerId = !isObject_1(props) || props.containerId === void 0 ? uniqueId_1("victory-container-") : props.containerId;
    _this.savePortalRef = function(portal) {
      _this.portalRef = portal;
      return portal;
    };
    _this.portalUpdate = function(key, el) {
      return _this.portalRef.portalUpdate(key, el);
    };
    _this.portalRegister = function() {
      return _this.portalRef.portalRegister();
    };
    _this.portalDeregister = function(key) {
      return _this.portalRef.portalDeregister(key);
    };
    _this.saveContainerRef = props && isFunction_1(props.containerRef) ? props.containerRef : function(container) {
      _this.containerRef = container;
      return container;
    };
    _this.shouldHandleWheel = props && props.events && props.events.onWheel;
    if (_this.shouldHandleWheel) {
      _this.handleWheel = function(e3) {
        return e3.preventDefault();
      };
    }
    return _this;
  }
  _createClass$3(VictoryContainer2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.shouldHandleWheel && this.containerRef) {
        this.containerRef.addEventListener("wheel", this.handleWheel);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.shouldHandleWheel && this.containerRef) {
        this.containerRef.removeEventListener("wheel", this.handleWheel);
      }
    }
  }, {
    key: "getIdForElement",
    value: function getIdForElement(elementName) {
      return "".concat(this.containerId, "-").concat(elementName);
    }
  }, {
    key: "getChildren",
    value: function getChildren2(props) {
      return props.children;
    }
  }, {
    key: "getOUIAProps",
    value: function getOUIAProps(props) {
      var ouiaId = props.ouiaId, ouiaSafe = props.ouiaSafe, ouiaType = props.ouiaType;
      return _objectSpread({}, ouiaId && {
        "data-ouia-component-id": ouiaId
      }, ouiaType && {
        "data-ouia-component-type": ouiaType
      }, ouiaSafe !== void 0 && {
        "data-ouia-safe": ouiaSafe
      });
    }
  }, {
    key: "renderContainer",
    value: function renderContainer(props, svgProps, style) {
      var title2 = props.title, desc = props.desc, portalComponent = props.portalComponent, className = props.className, width = props.width, height = props.height, portalZIndex = props.portalZIndex, responsive = props.responsive;
      var children2 = this.getChildren(props);
      var dimensions = responsive ? {
        width: "100%",
        height: "100%"
      } : {
        width,
        height
      };
      var divStyle = assign_1({
        pointerEvents: "none",
        touchAction: "none",
        position: "relative"
      }, dimensions);
      var portalDivStyle = assign_1({
        zIndex: portalZIndex,
        position: "absolute",
        top: 0,
        left: 0
      }, dimensions);
      var svgStyle = assign_1({
        pointerEvents: "all"
      }, dimensions);
      var portalSvgStyle = assign_1({
        overflow: "visible"
      }, dimensions);
      var portalProps = {
        width,
        height,
        viewBox: svgProps.viewBox,
        preserveAspectRatio: svgProps.preserveAspectRatio,
        style: portalSvgStyle
      };
      return react.createElement(PortalContext.Provider, {
        value: {
          portalUpdate: this.portalUpdate,
          portalRegister: this.portalRegister,
          portalDeregister: this.portalDeregister
        }
      }, react.createElement("div", _extends7({
        style: defaults_1({}, style, divStyle),
        className,
        ref: this.saveContainerRef
      }, this.getOUIAProps(props)), react.createElement("svg", _extends7({}, svgProps, {
        style: svgStyle
      }), title2 ? react.createElement("title", {
        id: this.getIdForElement("title")
      }, title2) : null, desc ? react.createElement("desc", {
        id: this.getIdForElement("desc")
      }, desc) : null, children2), react.createElement("div", {
        style: portalDivStyle
      }, react.cloneElement(portalComponent, _objectSpread({}, portalProps, {
        ref: this.savePortalRef
      })))));
    }
  }, {
    key: "render",
    value: function render2() {
      var _props = this.props, width = _props.width, height = _props.height, responsive = _props.responsive, events = _props.events, title2 = _props.title, desc = _props.desc, tabIndex = _props.tabIndex, preserveAspectRatio = _props.preserveAspectRatio, role = _props.role;
      var style = responsive ? this.props.style : Helpers.omit(this.props.style, ["height", "width"]);
      var svgProps = assign_1({
        width,
        height,
        tabIndex,
        role,
        "aria-labelledby": [title2 && this.getIdForElement("title"), this.props["aria-labelledby"]].filter(Boolean).join(" ") || void 0,
        "aria-describedby": [desc && this.getIdForElement("desc"), this.props["aria-describedby"]].filter(Boolean).join(" ") || void 0,
        viewBox: responsive ? "0 0 ".concat(width, " ").concat(height) : void 0,
        preserveAspectRatio: responsive ? preserveAspectRatio : void 0
      }, events);
      return this.renderContainer(this.props, svgProps, style);
    }
  }]);
  return VictoryContainer2;
}(react.Component);
Object.defineProperty(VictoryContainer, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryContainer"
});
Object.defineProperty(VictoryContainer, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "container"
});
Object.defineProperty(VictoryContainer, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    "aria-describedby": propTypes.string,
    "aria-labelledby": propTypes.string,
    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
    className: propTypes.string,
    containerId: propTypes.oneOfType([propTypes.number, propTypes.string]),
    containerRef: propTypes.func,
    desc: propTypes.string,
    events: propTypes.object,
    height: CustomPropTypes.nonNegative,
    name: propTypes.string,
    origin: propTypes.shape({
      x: CustomPropTypes.nonNegative,
      y: CustomPropTypes.nonNegative
    }),
    ouiaId: propTypes.oneOfType([propTypes.number, propTypes.string]),
    ouiaSafe: propTypes.bool,
    ouiaType: propTypes.string,
    polar: propTypes.bool,
    portalComponent: propTypes.element,
    portalZIndex: CustomPropTypes.integer,
    preserveAspectRatio: propTypes.string,
    responsive: propTypes.bool,
    role: propTypes.string,
    style: propTypes.object,
    tabIndex: propTypes.number,
    theme: propTypes.object,
    title: propTypes.string,
    width: CustomPropTypes.nonNegative
  }
});
Object.defineProperty(VictoryContainer, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: "VictoryContainer",
    portalComponent: react.createElement(Portal, null),
    portalZIndex: 99,
    responsive: true,
    role: "img"
  }
});
Object.defineProperty(VictoryContainer, "contextType", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: TimerContext
});
var mapTag2 = "[object Map]";
var setTag2 = "[object Set]";
var objectProto$25 = Object.prototype;
var hasOwnProperty$24 = objectProto$25.hasOwnProperty;
function isEmpty(value2) {
  if (value2 == null) {
    return true;
  }
  if (isArrayLike_1(value2) && (isArray_1(value2) || typeof value2 == "string" || typeof value2.splice == "function" || isBuffer_1(value2) || isTypedArray_1(value2) || isArguments_1(value2))) {
    return !value2.length;
  }
  var tag = _getTag(value2);
  if (tag == mapTag2 || tag == setTag2) {
    return !value2.size;
  }
  if (_isPrototype(value2)) {
    return !_baseKeys(value2).length;
  }
  for (var key in value2) {
    if (hasOwnProperty$24.call(value2, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_1 = isEmpty;
function _classCallCheck$4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$4(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$3(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$3(self2);
}
function _assertThisInitialized$3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VictoryPortal = /* @__PURE__ */ function(_React$Component) {
  _inherits$3(VictoryPortal2, _React$Component);
  function VictoryPortal2() {
    _classCallCheck$4(this, VictoryPortal2);
    return _possibleConstructorReturn$3(this, (VictoryPortal2.__proto__ || Object.getPrototypeOf(VictoryPortal2)).apply(this, arguments));
  }
  _createClass$4(VictoryPortal2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.checkedContext) {
        if (typeof this.context.portalUpdate !== "function") {
          var msg = "`renderInPortal` is not supported outside of `VictoryContainer`. Component will be rendered in place";
          Log.warn(msg);
          this.renderInPlace = true;
        }
        this.checkedContext = true;
      }
      this.forceUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.renderInPlace) {
        this.portalKey = this.portalKey || this.context.portalRegister();
        this.context.portalUpdate(this.portalKey, this.element);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.context && this.context.portalDeregister) {
        this.context.portalDeregister(this.portalKey);
      }
    }
  }, {
    key: "renderPortal",
    value: function renderPortal(child) {
      if (this.renderInPlace) {
        return child;
      }
      this.element = child;
      return null;
    }
  }, {
    key: "render",
    value: function render2() {
      var children2 = Array.isArray(this.props.children) ? this.props.children[0] : this.props.children;
      var groupComponent = this.props.groupComponent;
      var childProps = children2 && children2.props || {};
      var standardProps = childProps.groupComponent ? {
        groupComponent,
        standalone: false
      } : {};
      var newProps = defaults_1(standardProps, childProps, Helpers.omit(this.props, ["children", "groupComponent"]));
      var child = children2 && react.cloneElement(children2, newProps);
      return this.renderPortal(child);
    }
  }]);
  return VictoryPortal2;
}(react.Component);
Object.defineProperty(VictoryPortal, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryPortal"
});
Object.defineProperty(VictoryPortal, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "portal"
});
Object.defineProperty(VictoryPortal, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: propTypes.node,
    groupComponent: propTypes.element
  }
});
Object.defineProperty(VictoryPortal, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    groupComponent: react.createElement("g", null)
  }
});
Object.defineProperty(VictoryPortal, "contextType", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: PortalContext
});
function _extends$15() {
  _extends$15 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$15.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var Rect = function(props) {
  var desc = props.desc, rest = _objectWithoutProperties(props, ["desc"]);
  return desc ? react.createElement("rect", _extends$15({
    vectorEffect: "non-scaling-stroke"
  }, rest), react.createElement("desc", null, desc)) : react.createElement("rect", _extends$15({
    vectorEffect: "non-scaling-stroke"
  }, rest));
};
function getVerticalAnchor(props, datum2) {
  datum2 = datum2 || {};
  var sign5 = datum2._y >= 0 ? 1 : -1;
  var labelStyle = props.style && props.style.labels || {};
  if (datum2.verticalAnchor || labelStyle.verticalAnchor) {
    return datum2.verticalAnchor || labelStyle.verticalAnchor;
  } else if (!props.horizontal) {
    return sign5 >= 0 ? "end" : "start";
  } else {
    return "middle";
  }
}
function getTextAnchor(props, datum2) {
  datum2 = datum2 || {};
  var style = props.style, horizontal = props.horizontal;
  var sign5 = datum2._y >= 0 ? 1 : -1;
  var labelStyle = style && style.labels || {};
  if (datum2.verticalAnchor || labelStyle.verticalAnchor) {
    return datum2.verticalAnchor || labelStyle.verticalAnchor;
  } else if (!horizontal) {
    return "middle";
  } else {
    return sign5 >= 0 ? "start" : "end";
  }
}
function getAngle(props, datum2) {
  datum2 = datum2 || {};
  var labelStyle = props.style && props.style.labels || {};
  return datum2.angle === void 0 ? labelStyle.angle : datum2.angle;
}
function getPadding$1(props, datum2) {
  datum2 = datum2 || {};
  var horizontal = props.horizontal, style = props.style;
  var labelStyle = style.labels || {};
  var defaultPadding = Helpers.evaluateProp(labelStyle.padding, props) || 0;
  var sign5 = datum2._y < 0 ? -1 : 1;
  return {
    x: horizontal ? sign5 * defaultPadding : 0,
    y: horizontal ? 0 : -1 * sign5 * defaultPadding
  };
}
function getOffset(props, datum2) {
  if (props.polar) {
    return {};
  }
  var padding2 = getPadding$1(props, datum2);
  return {
    dx: padding2.x,
    dy: padding2.y
  };
}
function getPosition(props, datum2) {
  var polar = props.polar;
  var _Helpers$scalePoint = Helpers.scalePoint(props, datum2), x5 = _Helpers$scalePoint.x, y7 = _Helpers$scalePoint.y;
  if (!polar) {
    return {
      x: x5,
      y: y7
    };
  } else {
    var polarPadding = getPolarPadding(props, datum2);
    return {
      x: x5 + polarPadding.x,
      y: y7 + polarPadding.y
    };
  }
}
function getPolarPadding(props, datum2) {
  var style = props.style;
  var degrees3 = getDegrees(props, datum2);
  var labelStyle = style.labels || {};
  var padding2 = Helpers.evaluateProp(labelStyle.padding, props) || 0;
  var angle = Helpers.degreesToRadians(degrees3);
  return {
    x: padding2 * Math.cos(angle),
    y: -padding2 * Math.sin(angle)
  };
}
function getLabelPlacement(props) {
  var labelComponent = props.labelComponent, labelPlacement = props.labelPlacement, polar = props.polar;
  var defaultLabelPlacement = polar ? "perpendicular" : "vertical";
  return labelPlacement ? labelPlacement : labelComponent.props && labelComponent.props.labelPlacement || defaultLabelPlacement;
}
function getPolarOrientation(degrees3) {
  if (degrees3 < 45 || degrees3 > 315) {
    return "right";
  } else if (degrees3 >= 45 && degrees3 <= 135) {
    return "top";
  } else if (degrees3 > 135 && degrees3 < 225) {
    return "left";
  } else {
    return "bottom";
  }
}
function getText(props, datum2, index4) {
  datum2 = datum2 || {};
  if (datum2.label !== void 0) {
    return datum2.label;
  }
  return Array.isArray(props.labels) ? props.labels[index4] : props.labels;
}
function getPolarTextAnchor(props, degrees3) {
  var labelPlacement = getLabelPlacement(props);
  if (labelPlacement === "perpendicular" || labelPlacement === "vertical" && (degrees3 === 90 || degrees3 === 270)) {
    return "middle";
  }
  return degrees3 <= 90 || degrees3 > 270 ? "start" : "end";
}
function getPolarVerticalAnchor(props, degrees3) {
  var labelPlacement = getLabelPlacement(props);
  var orientation = getPolarOrientation(degrees3);
  if (labelPlacement === "parallel" || orientation === "left" || orientation === "right") {
    return "middle";
  }
  return orientation === "top" ? "end" : "start";
}
function getPolarAngle(props, baseAngle) {
  var labelPlacement = props.labelPlacement, datum2 = props.datum;
  if (!labelPlacement || labelPlacement === "vertical") {
    return 0;
  }
  var degrees3 = baseAngle !== void 0 ? baseAngle % 360 : getDegrees(props, datum2);
  var sign5 = degrees3 > 90 && degrees3 < 180 || degrees3 > 270 ? 1 : -1;
  var angle = 0;
  if (degrees3 === 0 || degrees3 === 180) {
    angle = 90;
  } else if (degrees3 > 0 && degrees3 < 180) {
    angle = 90 - degrees3;
  } else if (degrees3 > 180 && degrees3 < 360) {
    angle = 270 - degrees3;
  }
  var labelRotation = labelPlacement === "perpendicular" ? 0 : 90;
  return angle + sign5 * labelRotation;
}
function getDegrees(props, datum2) {
  var _Helpers$getPoint = Helpers.getPoint(datum2), x5 = _Helpers$getPoint.x;
  return Helpers.radiansToDegrees(props.scale.x(x5)) % 360;
}
function getProps(props, index4) {
  var scale = props.scale, data3 = props.data, style = props.style, horizontal = props.horizontal, polar = props.polar, width = props.width, height = props.height, theme = props.theme, labelComponent = props.labelComponent;
  var datum2 = data3[index4];
  var degrees3 = getDegrees(props, datum2);
  var textAnchor = polar ? getPolarTextAnchor(props, degrees3) : getTextAnchor(props, datum2);
  var verticalAnchor = polar ? getPolarVerticalAnchor(props, degrees3) : getVerticalAnchor(props, datum2);
  var angle = getAngle(props, datum2);
  var text2 = getText(props, datum2, index4);
  var labelPlacement = getLabelPlacement(props);
  var _getPosition = getPosition(props, datum2), x5 = _getPosition.x, y7 = _getPosition.y;
  var _getOffset = getOffset(props, datum2), dx = _getOffset.dx, dy = _getOffset.dy;
  var labelProps = {
    angle,
    data: data3,
    datum: datum2,
    horizontal,
    index: index4,
    polar,
    scale,
    labelPlacement,
    text: text2,
    textAnchor,
    verticalAnchor,
    x: x5,
    y: y7,
    dx,
    dy,
    width,
    height,
    style: style.labels
  };
  if (!Helpers.isTooltip(labelComponent)) {
    return labelProps;
  }
  var tooltipTheme = theme && theme.tooltip || {};
  return defaults_1({}, labelProps, Helpers.omit(tooltipTheme, ["style"]));
}
var LabelHelpers = {
  getText,
  getPolarTextAnchor,
  getPolarVerticalAnchor,
  getPolarAngle,
  getDegrees,
  getProps
};
var toTransformString = function(obj) {
  for (var _len = arguments.length, more = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    more[_key - 1] = arguments[_key];
  }
  if (more.length > 0) {
    return more.reduce(function(memo, currentObj) {
      return [memo, toTransformString(currentObj)].join(" ");
    }, toTransformString(obj)).trim();
  } else {
    if (obj === void 0 || obj === null || typeof obj === "string") {
      return obj;
    }
    var transforms = [];
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        var value2 = obj[key];
        transforms.push("".concat(key, "(").concat(value2, ")"));
      }
    }
    return transforms.join(" ").trim();
  }
};
var Style = {
  toTransformString,
  getColorScale: function(name) {
    var scales = {
      grayscale: ["#cccccc", "#969696", "#636363", "#252525"],
      qualitative: ["#334D5C", "#45B29D", "#EFC94C", "#E27A3F", "#DF5A49", "#4F7DA1", "#55DBC1", "#EFDA97", "#E2A37F", "#DF948A"],
      heatmap: ["#428517", "#77D200", "#D6D305", "#EC8E19", "#C92B05"],
      warm: ["#940031", "#C43343", "#DC5429", "#FF821D", "#FFAF55"],
      cool: ["#2746B9", "#0B69D4", "#2794DB", "#31BB76", "#60E83B"],
      red: ["#FCAE91", "#FB6A4A", "#DE2D26", "#A50F15", "#750B0E"],
      blue: ["#002C61", "#004B8F", "#006BC9", "#3795E5", "#65B4F4"],
      green: ["#354722", "#466631", "#649146", "#8AB25C", "#A9C97E"]
    };
    return name ? scales[name] : scales.grayscale;
  }
};
function _toConsumableArray$1(arr) {
  return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _nonIterableSpread$1();
}
function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$1(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$1(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var fonts = {
  "American Typewriter": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.4203125, 0.3296875, 0.6, 0.6375, 0.8015625, 0.8203125, 0.1875, 0.45625, 0.45625, 0.6375, 0.5, 0.2734375, 0.309375, 0.2734375, 0.4390625, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.6375, 0.2734375, 0.2734375, 0.5, 0.5, 0.5, 0.6, 0.6921875, 0.7640625, 0.6921875, 0.6375, 0.728125, 0.6734375, 0.6203125, 0.7109375, 0.784375, 0.3828125, 0.6421875, 0.7859375, 0.6375, 0.9484375, 0.7640625, 0.65625, 0.6375, 0.65625, 0.7296875, 0.6203125, 0.6375, 0.7109375, 0.740625, 0.940625, 0.784375, 0.7578125, 0.6203125, 0.4375, 0.5, 0.4375, 0.5, 0.5, 0.4921875, 0.5734375, 0.5890625, 0.5109375, 0.6, 0.528125, 0.43125, 0.5578125, 0.6375, 0.3109375, 0.40625, 0.6234375, 0.309375, 0.928125, 0.6375, 0.546875, 0.6, 0.58125, 0.4921875, 0.4921875, 0.4, 0.6203125, 0.625, 0.825, 0.6375, 0.640625, 0.528125, 0.5, 0.5, 0.5, 0.6671875],
    avg: 0.5793421052631578
  },
  Arial: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.278125, 0.278125, 0.35625, 0.55625, 0.55625, 0.890625, 0.6671875, 0.1921875, 0.334375, 0.334375, 0.390625, 0.584375, 0.278125, 0.334375, 0.278125, 0.278125, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.278125, 0.278125, 0.584375, 0.584375, 0.584375, 0.55625, 1.015625, 0.6703125, 0.6671875, 0.7234375, 0.7234375, 0.6671875, 0.6109375, 0.778125, 0.7234375, 0.278125, 0.5, 0.6671875, 0.55625, 0.834375, 0.7234375, 0.778125, 0.6671875, 0.778125, 0.7234375, 0.6671875, 0.6109375, 0.7234375, 0.6671875, 0.9453125, 0.6671875, 0.6671875, 0.6109375, 0.278125, 0.278125, 0.278125, 0.4703125, 0.584375, 0.334375, 0.55625, 0.55625, 0.5, 0.55625, 0.55625, 0.3125, 0.55625, 0.55625, 0.2234375, 0.2703125, 0.5, 0.2234375, 0.834375, 0.55625, 0.55625, 0.55625, 0.55625, 0.346875, 0.5, 0.278125, 0.55625, 0.5, 0.7234375, 0.5, 0.5, 0.5, 0.334375, 0.2609375, 0.334375, 0.584375],
    avg: 0.528733552631579
  },
  "Arial Black": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.33125, 0.334375, 0.5, 0.6609375, 0.6671875, 1, 0.890625, 0.278125, 0.390625, 0.390625, 0.55625, 0.6609375, 0.334375, 0.334375, 0.334375, 0.28125, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.334375, 0.334375, 0.6609375, 0.6609375, 0.6609375, 0.6109375, 0.7453125, 0.78125, 0.778125, 0.778125, 0.778125, 0.7234375, 0.6671875, 0.834375, 0.834375, 0.390625, 0.6671875, 0.834375, 0.6671875, 0.9453125, 0.834375, 0.834375, 0.7234375, 0.834375, 0.78125, 0.7234375, 0.7234375, 0.834375, 0.7796875, 1.003125, 0.78125, 0.78125, 0.7234375, 0.390625, 0.28125, 0.390625, 0.6609375, 0.5125, 0.334375, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.41875, 0.6671875, 0.6671875, 0.334375, 0.384375, 0.6671875, 0.334375, 1, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.4703125, 0.6109375, 0.4453125, 0.6671875, 0.6140625, 0.946875, 0.6671875, 0.615625, 0.55625, 0.390625, 0.278125, 0.390625, 0.6609375],
    avg: 0.6213157894736842
  },
  Baskerville: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.40625, 0.6671875, 0.490625, 0.875, 0.7015625, 0.178125, 0.2453125, 0.246875, 0.4171875, 0.6671875, 0.25, 0.3125, 0.25, 0.521875, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.6671875, 0.6671875, 0.6671875, 0.396875, 0.9171875, 0.684375, 0.615625, 0.71875, 0.7609375, 0.625, 0.553125, 0.771875, 0.803125, 0.3546875, 0.515625, 0.78125, 0.6046875, 0.928125, 0.75, 0.8234375, 0.5625, 0.96875, 0.7296875, 0.5421875, 0.6984375, 0.771875, 0.7296875, 0.9484375, 0.771875, 0.678125, 0.6359375, 0.3640625, 0.521875, 0.3640625, 0.46875, 0.5125, 0.334375, 0.46875, 0.521875, 0.428125, 0.521875, 0.4375, 0.3890625, 0.4765625, 0.53125, 0.25, 0.359375, 0.4640625, 0.240625, 0.803125, 0.53125, 0.5, 0.521875, 0.521875, 0.365625, 0.334375, 0.2921875, 0.521875, 0.4640625, 0.678125, 0.4796875, 0.465625, 0.428125, 0.4796875, 0.5109375, 0.4796875, 0.6671875],
    avg: 0.5323519736842108
  },
  Courier: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5984375, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6078125, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.61875, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.615625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6140625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625],
    avg: 0.6020559210526316
  },
  "Courier New": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5984375, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625],
    avg: 0.6015296052631579
  },
  cursive: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1921875, 0.24375, 0.40625, 0.5671875, 0.3984375, 0.721875, 0.909375, 0.2328125, 0.434375, 0.365625, 0.4734375, 0.5578125, 0.19375, 0.3484375, 0.19375, 0.7734375, 0.503125, 0.4171875, 0.5453125, 0.45, 0.6046875, 0.4703125, 0.5984375, 0.55625, 0.503125, 0.5546875, 0.20625, 0.2, 0.5625, 0.5546875, 0.546875, 0.403125, 0.70625, 0.734375, 0.7078125, 0.64375, 0.85, 0.753125, 0.75, 0.6484375, 1.0765625, 0.44375, 0.5359375, 0.8359375, 0.653125, 1.0109375, 1.1515625, 0.6796875, 0.6984375, 1.0625, 0.8234375, 0.5125, 0.9234375, 0.8546875, 0.70625, 0.9109375, 0.7421875, 0.715625, 0.6015625, 0.4640625, 0.3359375, 0.4109375, 0.5421875, 0.5421875, 0.4328125, 0.5125, 0.5, 0.3859375, 0.7375, 0.359375, 0.75625, 0.540625, 0.5328125, 0.3203125, 0.5296875, 0.5015625, 0.484375, 0.7890625, 0.5640625, 0.4203125, 0.703125, 0.471875, 0.4734375, 0.35, 0.4125, 0.5640625, 0.471875, 0.6484375, 0.5296875, 0.575, 0.4140625, 0.415625, 0.20625, 0.3796875, 0.5421875],
    avg: 0.5604440789473684
  },
  fantasy: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.215625, 0.2625, 0.3265625, 0.6109375, 0.534375, 0.7625, 0.7828125, 0.2, 0.4359375, 0.4359375, 0.3765625, 0.5109375, 0.2796875, 0.4609375, 0.2796875, 0.5296875, 0.6640625, 0.253125, 0.521875, 0.4765625, 0.6640625, 0.490625, 0.528125, 0.5546875, 0.496875, 0.5421875, 0.2796875, 0.2796875, 0.5625, 0.4609375, 0.5625, 0.4828125, 0.609375, 0.740625, 0.7234375, 0.740625, 0.8265625, 0.7234375, 0.6171875, 0.7359375, 0.765625, 0.240625, 0.5453125, 0.715625, 0.6078125, 0.8640625, 0.653125, 0.9125, 0.6484375, 0.946875, 0.6921875, 0.653125, 0.6953125, 0.8015625, 0.58125, 0.784375, 0.671875, 0.6265625, 0.690625, 0.4359375, 0.5296875, 0.4359375, 0.53125, 0.5, 0.2875, 0.5375, 0.603125, 0.4984375, 0.60625, 0.53125, 0.434375, 0.6421875, 0.56875, 0.209375, 0.4671875, 0.5484375, 0.2203125, 0.709375, 0.55, 0.5984375, 0.6140625, 0.5765625, 0.40625, 0.4734375, 0.3734375, 0.559375, 0.4421875, 0.6421875, 0.4890625, 0.578125, 0.4484375, 0.2546875, 0.2203125, 0.2546875, 0.55],
    avg: 0.536496710526316
  },
  Geneva: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3328125, 0.3046875, 0.5, 0.6671875, 0.6671875, 0.90625, 0.728125, 0.3046875, 0.446875, 0.446875, 0.5078125, 0.6671875, 0.3046875, 0.3796875, 0.3046875, 0.5390625, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.6671875, 0.3046875, 0.3046875, 0.6671875, 0.6671875, 0.6671875, 0.56875, 0.871875, 0.728125, 0.6375, 0.6515625, 0.7015625, 0.5765625, 0.5546875, 0.675, 0.690625, 0.2421875, 0.4921875, 0.6640625, 0.584375, 0.7890625, 0.709375, 0.7359375, 0.584375, 0.78125, 0.60625, 0.60625, 0.640625, 0.6671875, 0.728125, 0.946875, 0.6109375, 0.6109375, 0.5765625, 0.446875, 0.5390625, 0.446875, 0.6671875, 0.6671875, 0.5921875, 0.5546875, 0.6109375, 0.546875, 0.603125, 0.5765625, 0.390625, 0.6109375, 0.584375, 0.2359375, 0.334375, 0.5390625, 0.2359375, 0.8953125, 0.584375, 0.60625, 0.603125, 0.603125, 0.3875, 0.509375, 0.44375, 0.584375, 0.565625, 0.78125, 0.53125, 0.571875, 0.5546875, 0.4515625, 0.246875, 0.4515625, 0.6671875],
    avg: 0.5762664473684211
  },
  Georgia: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2421875, 0.33125, 0.4125, 0.64375, 0.6109375, 0.81875, 0.7109375, 0.215625, 0.375, 0.375, 0.4734375, 0.64375, 0.2703125, 0.375, 0.2703125, 0.46875, 0.6140625, 0.4296875, 0.559375, 0.553125, 0.565625, 0.5296875, 0.5671875, 0.503125, 0.596875, 0.5671875, 0.3125, 0.3125, 0.64375, 0.64375, 0.64375, 0.4796875, 0.9296875, 0.715625, 0.6546875, 0.6421875, 0.75, 0.6546875, 0.6, 0.7265625, 0.815625, 0.390625, 0.51875, 0.7203125, 0.6046875, 0.928125, 0.7671875, 0.7453125, 0.6109375, 0.7453125, 0.7234375, 0.5625, 0.61875, 0.7578125, 0.70625, 0.99375, 0.7125, 0.6640625, 0.6015625, 0.375, 0.46875, 0.375, 0.64375, 0.65, 0.5, 0.5046875, 0.56875, 0.4546875, 0.575, 0.484375, 0.39375, 0.509375, 0.5828125, 0.29375, 0.3671875, 0.546875, 0.2875, 0.88125, 0.5921875, 0.5390625, 0.571875, 0.5640625, 0.4109375, 0.4328125, 0.3453125, 0.5765625, 0.5203125, 0.75625, 0.50625, 0.5171875, 0.4453125, 0.43125, 0.375, 0.43125, 0.64375],
    avg: 0.5551809210526316
  },
  "Gill Sans": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2765625, 0.271875, 0.3546875, 0.584375, 0.5421875, 0.6765625, 0.625, 0.1890625, 0.3234375, 0.3234375, 0.4171875, 0.584375, 0.2203125, 0.3234375, 0.2203125, 0.28125, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.2203125, 0.2296875, 0.584375, 0.584375, 0.584375, 0.334375, 1.0109375, 0.6671875, 0.5640625, 0.709375, 0.75, 0.5, 0.4703125, 0.740625, 0.7296875, 0.25, 0.3125, 0.65625, 0.490625, 0.78125, 0.78125, 0.8234375, 0.5109375, 0.8234375, 0.6046875, 0.459375, 0.6046875, 0.709375, 0.6046875, 1.0421875, 0.709375, 0.6046875, 0.646875, 0.334375, 0.28125, 0.334375, 0.4703125, 0.5828125, 0.334375, 0.428125, 0.5, 0.4390625, 0.5109375, 0.4796875, 0.296875, 0.428125, 0.5, 0.2203125, 0.2265625, 0.5, 0.2203125, 0.771875, 0.5, 0.553125, 0.5, 0.5, 0.3984375, 0.3859375, 0.334375, 0.5, 0.4390625, 0.7203125, 0.5, 0.4390625, 0.4171875, 0.334375, 0.2609375, 0.334375, 0.584375],
    avg: 0.4933717105263159
  },
  Helvetica: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2796875, 0.2765625, 0.3546875, 0.5546875, 0.5546875, 0.8890625, 0.665625, 0.190625, 0.3328125, 0.3328125, 0.3890625, 0.5828125, 0.2765625, 0.3328125, 0.2765625, 0.3015625, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.2765625, 0.2765625, 0.584375, 0.5828125, 0.584375, 0.5546875, 1.0140625, 0.665625, 0.665625, 0.721875, 0.721875, 0.665625, 0.609375, 0.7765625, 0.721875, 0.2765625, 0.5, 0.665625, 0.5546875, 0.8328125, 0.721875, 0.7765625, 0.665625, 0.7765625, 0.721875, 0.665625, 0.609375, 0.721875, 0.665625, 0.94375, 0.665625, 0.665625, 0.609375, 0.2765625, 0.3546875, 0.2765625, 0.4765625, 0.5546875, 0.3328125, 0.5546875, 0.5546875, 0.5, 0.5546875, 0.5546875, 0.2765625, 0.5546875, 0.5546875, 0.221875, 0.240625, 0.5, 0.221875, 0.8328125, 0.5546875, 0.5546875, 0.5546875, 0.5546875, 0.3328125, 0.5, 0.2765625, 0.5546875, 0.5, 0.721875, 0.5, 0.5, 0.5, 0.3546875, 0.259375, 0.353125, 0.5890625],
    avg: 0.5279276315789471
  },
  "Helvetica Neue": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.278125, 0.259375, 0.4265625, 0.55625, 0.55625, 1, 0.6453125, 0.278125, 0.2703125, 0.26875, 0.353125, 0.6, 0.278125, 0.3890625, 0.278125, 0.36875, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.278125, 0.278125, 0.6, 0.6, 0.6, 0.55625, 0.8, 0.6625, 0.6859375, 0.7234375, 0.7046875, 0.6125, 0.575, 0.759375, 0.7234375, 0.259375, 0.5203125, 0.6703125, 0.55625, 0.871875, 0.7234375, 0.7609375, 0.6484375, 0.7609375, 0.6859375, 0.6484375, 0.575, 0.7234375, 0.6140625, 0.9265625, 0.6125, 0.6484375, 0.6125, 0.259375, 0.36875, 0.259375, 0.6, 0.5, 0.25625, 0.5375, 0.59375, 0.5375, 0.59375, 0.5375, 0.2984375, 0.575, 0.55625, 0.2234375, 0.2375, 0.5203125, 0.2234375, 0.853125, 0.55625, 0.575, 0.59375, 0.59375, 0.334375, 0.5, 0.315625, 0.55625, 0.5, 0.759375, 0.51875, 0.5, 0.48125, 0.334375, 0.2234375, 0.334375, 0.6],
    avg: 0.5279440789473684
  },
  "Hoefler Text": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2359375, 0.2234375, 0.3921875, 0.7125, 0.49375, 0.8859375, 0.771875, 0.2125, 0.3078125, 0.309375, 0.375, 0.4234375, 0.234375, 0.3125, 0.234375, 0.3, 0.5828125, 0.365625, 0.434375, 0.3921875, 0.5234375, 0.3984375, 0.5125, 0.4328125, 0.46875, 0.5125, 0.234375, 0.234375, 0.515625, 0.4234375, 0.515625, 0.340625, 0.7609375, 0.7359375, 0.6359375, 0.721875, 0.8125, 0.6375, 0.5875, 0.8078125, 0.853125, 0.4296875, 0.503125, 0.78125, 0.609375, 0.9609375, 0.8515625, 0.8140625, 0.6125, 0.8140625, 0.71875, 0.49375, 0.7125, 0.76875, 0.771875, 1.125, 0.7765625, 0.7734375, 0.65625, 0.321875, 0.3078125, 0.321875, 0.3546875, 0.5, 0.3375, 0.446875, 0.5359375, 0.45, 0.5296875, 0.4546875, 0.425, 0.4921875, 0.54375, 0.2671875, 0.240625, 0.5390625, 0.25, 0.815625, 0.5375, 0.5234375, 0.5390625, 0.5421875, 0.365625, 0.36875, 0.35625, 0.5171875, 0.5015625, 0.75, 0.5, 0.509375, 0.44375, 0.2421875, 0.14375, 0.2421875, 0.35],
    avg: 0.5116447368421051
  },
  monospace: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5984375, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6078125, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.61875, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.615625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6140625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625, 0.6015625],
    avg: 0.6020559210526316
  },
  Overpass: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2296875, 0.2765625, 0.4203125, 0.68125, 0.584375, 0.8515625, 0.7015625, 0.2203125, 0.3453125, 0.3453125, 0.53125, 0.63125, 0.2234375, 0.3953125, 0.2234375, 0.509375, 0.65, 0.4046875, 0.6171875, 0.60625, 0.6484375, 0.60625, 0.6015625, 0.5375, 0.615625, 0.6015625, 0.2234375, 0.2234375, 0.63125, 0.63125, 0.63125, 0.5015625, 0.8203125, 0.696875, 0.6671875, 0.65, 0.6859375, 0.6015625, 0.559375, 0.690625, 0.7078125, 0.2953125, 0.565625, 0.678125, 0.58125, 0.8046875, 0.7109375, 0.740625, 0.6421875, 0.740625, 0.6765625, 0.6046875, 0.590625, 0.696875, 0.6640625, 0.853125, 0.65, 0.6671875, 0.6625, 0.3734375, 0.509375, 0.3734375, 0.63125, 0.5125, 0.4, 0.5328125, 0.5625, 0.51875, 0.5625, 0.546875, 0.3359375, 0.5625, 0.565625, 0.25625, 0.3203125, 0.55, 0.265625, 0.85, 0.565625, 0.5671875, 0.5625, 0.5625, 0.4046875, 0.4765625, 0.3796875, 0.565625, 0.521875, 0.7265625, 0.53125, 0.5390625, 0.5125, 0.3671875, 0.275, 0.3671875, 0.63125],
    avg: 0.5430756578947369
  },
  Palatino: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.278125, 0.371875, 0.60625, 0.5, 0.840625, 0.778125, 0.209375, 0.334375, 0.334375, 0.390625, 0.60625, 0.2578125, 0.334375, 0.25, 0.60625, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.60625, 0.60625, 0.60625, 0.4453125, 0.7484375, 0.778125, 0.6109375, 0.709375, 0.775, 0.6109375, 0.55625, 0.7640625, 0.8328125, 0.3375, 0.346875, 0.7265625, 0.6109375, 0.946875, 0.83125, 0.7875, 0.6046875, 0.7875, 0.66875, 0.525, 0.6140625, 0.778125, 0.7234375, 1, 0.6671875, 0.6671875, 0.6671875, 0.334375, 0.60625, 0.334375, 0.60625, 0.5, 0.334375, 0.5, 0.565625, 0.4453125, 0.6109375, 0.4796875, 0.340625, 0.55625, 0.5828125, 0.2921875, 0.2671875, 0.5640625, 0.2921875, 0.8828125, 0.5828125, 0.546875, 0.6015625, 0.5609375, 0.3953125, 0.425, 0.3265625, 0.603125, 0.565625, 0.834375, 0.5171875, 0.55625, 0.5, 0.334375, 0.60625, 0.334375, 0.60625],
    avg: 0.5408552631578947
  },
  RedHatText: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2328125, 0.2203125, 0.35625, 0.6890625, 0.55, 0.7390625, 0.6703125, 0.2140625, 0.4015625, 0.4015625, 0.4546875, 0.53125, 0.2203125, 0.45625, 0.2203125, 0.515625, 0.6609375, 0.3078125, 0.5484375, 0.5875, 0.61875, 0.5703125, 0.6203125, 0.559375, 0.6140625, 0.6203125, 0.2203125, 0.2234375, 0.465625, 0.534375, 0.465625, 0.5125, 0.7671875, 0.6609375, 0.6703125, 0.7265625, 0.728125, 0.6203125, 0.6109375, 0.8, 0.73125, 0.253125, 0.6, 0.6125, 0.6078125, 0.8625, 0.7390625, 0.8109375, 0.6546875, 0.809375, 0.6484375, 0.6234375, 0.6171875, 0.7125, 0.6609375, 0.8984375, 0.6546875, 0.646875, 0.60625, 0.3625, 0.5203125, 0.3625, 0.540625, 0.4609375, 0.5234375, 0.5265625, 0.584375, 0.509375, 0.5828125, 0.5578125, 0.3703125, 0.5828125, 0.553125, 0.2234375, 0.24375, 0.4890625, 0.2234375, 0.8453125, 0.553125, 0.58125, 0.584375, 0.5828125, 0.353125, 0.453125, 0.378125, 0.553125, 0.5015625, 0.6984375, 0.4875, 0.4984375, 0.459375, 0.3953125, 0.2921875, 0.3953125, 0.58125],
    avg: 0.5341940789473685
  },
  "sans-serif": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.278125, 0.278125, 0.35625, 0.55625, 0.55625, 0.890625, 0.6671875, 0.1921875, 0.334375, 0.334375, 0.390625, 0.584375, 0.278125, 0.334375, 0.278125, 0.303125, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.55625, 0.278125, 0.278125, 0.5859375, 0.584375, 0.5859375, 0.55625, 1.015625, 0.6671875, 0.6671875, 0.7234375, 0.7234375, 0.6671875, 0.6109375, 0.778125, 0.7234375, 0.278125, 0.5, 0.6671875, 0.55625, 0.834375, 0.7234375, 0.778125, 0.6671875, 0.778125, 0.7234375, 0.6671875, 0.6109375, 0.7234375, 0.6671875, 0.9453125, 0.6671875, 0.6671875, 0.6109375, 0.278125, 0.35625, 0.278125, 0.478125, 0.55625, 0.334375, 0.55625, 0.55625, 0.5, 0.55625, 0.55625, 0.278125, 0.55625, 0.55625, 0.2234375, 0.2421875, 0.5, 0.2234375, 0.834375, 0.55625, 0.55625, 0.55625, 0.55625, 0.334375, 0.5, 0.278125, 0.55625, 0.5, 0.7234375, 0.5, 0.5, 0.5, 0.35625, 0.2609375, 0.3546875, 0.590625],
    avg: 0.5293256578947368
  },
  Seravek: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.215625, 0.296875, 0.4171875, 0.6734375, 0.4953125, 0.9125, 0.740625, 0.2421875, 0.3375, 0.3375, 0.409375, 0.60625, 0.2609375, 0.35625, 0.25625, 0.41875, 0.5921875, 0.3515625, 0.475, 0.4875, 0.5375, 0.509375, 0.5484375, 0.4546875, 0.5421875, 0.5484375, 0.25625, 0.2546875, 0.5875, 0.6171875, 0.5875, 0.4578125, 0.8140625, 0.6765625, 0.5703125, 0.6109375, 0.684375, 0.5109375, 0.4953125, 0.678125, 0.6859375, 0.2625, 0.2625, 0.5859375, 0.4734375, 0.846875, 0.709375, 0.740625, 0.509375, 0.740625, 0.584375, 0.5015625, 0.528125, 0.675, 0.5953125, 0.9453125, 0.596875, 0.540625, 0.540625, 0.359375, 0.4203125, 0.359375, 0.5109375, 0.421875, 0.4046875, 0.5015625, 0.5421875, 0.446875, 0.5453125, 0.484375, 0.38125, 0.5140625, 0.5546875, 0.240625, 0.2640625, 0.490625, 0.2765625, 0.8625, 0.5546875, 0.546875, 0.5453125, 0.5453125, 0.3625, 0.41875, 0.3890625, 0.5453125, 0.4703125, 0.7546875, 0.4921875, 0.4609375, 0.453125, 0.4015625, 0.2640625, 0.4015625, 0.58125],
    avg: 0.5044078947368421
  },
  serif: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2484375, 0.334375, 0.409375, 0.5, 0.5, 0.834375, 0.778125, 0.18125, 0.334375, 0.334375, 0.5, 0.5640625, 0.25, 0.334375, 0.25, 0.278125, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.278125, 0.278125, 0.5640625, 0.5640625, 0.5640625, 0.4453125, 0.921875, 0.7234375, 0.6671875, 0.6671875, 0.7234375, 0.6109375, 0.55625, 0.7234375, 0.7234375, 0.334375, 0.390625, 0.7234375, 0.6109375, 0.890625, 0.7234375, 0.7234375, 0.55625, 0.7234375, 0.6671875, 0.55625, 0.6109375, 0.7234375, 0.7234375, 0.9453125, 0.7234375, 0.7234375, 0.6109375, 0.334375, 0.340625, 0.334375, 0.4703125, 0.5, 0.3453125, 0.4453125, 0.5, 0.4453125, 0.5, 0.4453125, 0.3828125, 0.5, 0.5, 0.278125, 0.3359375, 0.5, 0.278125, 0.778125, 0.5, 0.5, 0.5, 0.5, 0.3375, 0.390625, 0.2796875, 0.5, 0.5, 0.7234375, 0.5, 0.5, 0.4453125, 0.48125, 0.2015625, 0.48125, 0.5421875],
    avg: 0.5126315789473684
  },
  Tahoma: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3109375, 0.3328125, 0.4015625, 0.728125, 0.546875, 0.9765625, 0.70625, 0.2109375, 0.3828125, 0.3828125, 0.546875, 0.728125, 0.303125, 0.3640625, 0.303125, 0.3953125, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.546875, 0.3546875, 0.3546875, 0.728125, 0.728125, 0.728125, 0.475, 0.909375, 0.6109375, 0.590625, 0.6015625, 0.6796875, 0.5625, 0.521875, 0.66875, 0.6765625, 0.3734375, 0.4171875, 0.6046875, 0.4984375, 0.771875, 0.66875, 0.7078125, 0.5515625, 0.7078125, 0.6375, 0.5578125, 0.5875, 0.65625, 0.60625, 0.903125, 0.58125, 0.5890625, 0.559375, 0.3828125, 0.39375, 0.3828125, 0.728125, 0.5625, 0.546875, 0.525, 0.553125, 0.4625, 0.553125, 0.5265625, 0.3546875, 0.553125, 0.5578125, 0.2296875, 0.328125, 0.51875, 0.2296875, 0.840625, 0.5578125, 0.54375, 0.553125, 0.553125, 0.3609375, 0.446875, 0.3359375, 0.5578125, 0.4984375, 0.7421875, 0.4953125, 0.4984375, 0.4453125, 0.48125, 0.3828125, 0.48125, 0.728125],
    avg: 0.5384374999999998
  },
  "Times New Roman": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2484375, 0.334375, 0.409375, 0.5, 0.5, 0.834375, 0.778125, 0.18125, 0.334375, 0.334375, 0.5, 0.5640625, 0.25, 0.334375, 0.25, 0.28125, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.278125, 0.278125, 0.5640625, 0.5640625, 0.5640625, 0.4453125, 0.921875, 0.7234375, 0.6671875, 0.6671875, 0.7234375, 0.6109375, 0.55625, 0.7234375, 0.7234375, 0.334375, 0.390625, 0.73125, 0.6109375, 0.890625, 0.7375, 0.7234375, 0.55625, 0.7234375, 0.6765625, 0.55625, 0.6109375, 0.7234375, 0.7234375, 0.9453125, 0.7234375, 0.7234375, 0.6109375, 0.334375, 0.28125, 0.334375, 0.4703125, 0.51875, 0.334375, 0.4453125, 0.503125, 0.4453125, 0.503125, 0.4453125, 0.4359375, 0.5, 0.5, 0.278125, 0.35625, 0.50625, 0.278125, 0.778125, 0.5, 0.5, 0.5046875, 0.5, 0.340625, 0.390625, 0.2796875, 0.5, 0.5, 0.7234375, 0.5, 0.5, 0.4453125, 0.48125, 0.2015625, 0.48125, 0.5421875],
    avg: 0.5134375
  },
  "Trebuchet MS": {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3015625, 0.3671875, 0.325, 0.53125, 0.525, 0.6015625, 0.70625, 0.1609375, 0.3671875, 0.3671875, 0.3671875, 0.525, 0.3671875, 0.3671875, 0.3671875, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.3671875, 0.3671875, 0.525, 0.525, 0.525, 0.3671875, 0.771875, 0.590625, 0.5671875, 0.5984375, 0.6140625, 0.5359375, 0.525, 0.6765625, 0.6546875, 0.2796875, 0.4765625, 0.5765625, 0.5078125, 0.7109375, 0.6390625, 0.675, 0.5578125, 0.7421875, 0.5828125, 0.48125, 0.58125, 0.6484375, 0.5875, 0.853125, 0.5578125, 0.5703125, 0.5515625, 0.3671875, 0.3578125, 0.3671875, 0.525, 0.53125, 0.525, 0.5265625, 0.5578125, 0.4953125, 0.5578125, 0.546875, 0.375, 0.503125, 0.546875, 0.2859375, 0.3671875, 0.5046875, 0.2953125, 0.83125, 0.546875, 0.5375, 0.5578125, 0.5578125, 0.3890625, 0.40625, 0.396875, 0.546875, 0.490625, 0.7453125, 0.5015625, 0.49375, 0.475, 0.3671875, 0.525, 0.3671875, 0.525],
    avg: 0.5085197368421052
  },
  Verdana: {
    widths: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.35, 0.39375, 0.459375, 0.81875, 0.6359375, 1.0765625, 0.759375, 0.26875, 0.4546875, 0.4546875, 0.6359375, 0.81875, 0.3640625, 0.4546875, 0.3640625, 0.4703125, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.6359375, 0.4546875, 0.4546875, 0.81875, 0.81875, 0.81875, 0.546875, 1, 0.684375, 0.6859375, 0.6984375, 0.771875, 0.6328125, 0.575, 0.7765625, 0.7515625, 0.421875, 0.4546875, 0.69375, 0.5578125, 0.84375, 0.7484375, 0.7875, 0.603125, 0.7875, 0.7, 0.684375, 0.6171875, 0.7328125, 0.684375, 0.9890625, 0.6859375, 0.615625, 0.6859375, 0.4546875, 0.46875, 0.4546875, 0.81875, 0.6421875, 0.6359375, 0.6015625, 0.6234375, 0.521875, 0.6234375, 0.596875, 0.384375, 0.6234375, 0.6328125, 0.275, 0.3765625, 0.5921875, 0.275, 0.9734375, 0.6328125, 0.6078125, 0.6234375, 0.6234375, 0.43125, 0.521875, 0.3953125, 0.6328125, 0.5921875, 0.81875, 0.5921875, 0.5921875, 0.5265625, 0.6359375, 0.4546875, 0.6359375, 0.81875],
    avg: 0.6171875000000003
  }
};
var absoluteMeasurementUnitsToPixels = {
  mm: 3.8,
  sm: 38,
  pt: 1.33,
  pc: 16,
  in: 96,
  px: 1
};
var relativeMeasurementUnitsCoef = {
  em: 1,
  ex: 0.5
};
var coefficients = {
  heightOverlapCoef: 1.05,
  lineCapitalCoef: 1.15
};
var defaultStyle2 = {
  lineHeight: 1,
  letterSpacing: "0px",
  fontSize: 0,
  angle: 0,
  fontFamily: ""
};
var _degreeToRadian = function(angle) {
  return angle * Math.PI / 180;
};
var _getFontData = function(fontFamily) {
  var possibleFonts = fontFamily.split(",").map(function(f3) {
    return f3.replace(/'|"/g, "");
  });
  var fontMatch = possibleFonts.find(function(f3) {
    return fonts[f3];
  }) || "Helvetica";
  return fonts[fontMatch];
};
var _splitToLines = function(text2) {
  return Array.isArray(text2) ? text2 : text2.toString().split(/\r\n|\r|\n/g);
};
var _getSizeWithRotate = function(axisSize, dependentSize, angle) {
  var angleInRadian = _degreeToRadian(angle);
  return Math.abs(Math.cos(angleInRadian) * axisSize) + Math.abs(Math.sin(angleInRadian) * dependentSize);
};
var convertLengthToPixels = function(length, fontSize2) {
  var attribute = length.match(/[a-zA-Z%]+/) && length.match(/[a-zA-Z%]+/)[0];
  var value2 = length.match(/[0-9.,]+/);
  var result;
  if (!attribute) {
    result = value2 || 0;
  } else if (absoluteMeasurementUnitsToPixels.hasOwnProperty(attribute)) {
    result = value2 * absoluteMeasurementUnitsToPixels[attribute];
  } else if (relativeMeasurementUnitsCoef.hasOwnProperty(attribute)) {
    result = (fontSize2 ? value2 * fontSize2 : value2 * defaultStyle2.fontSize) * relativeMeasurementUnitsCoef[attribute];
  } else {
    result = value2;
  }
  return result;
};
var _prepareParams = function(inputStyle, index4) {
  var lineStyle = Array.isArray(inputStyle) ? inputStyle[index4] : inputStyle;
  var style = defaults_1({}, lineStyle, defaultStyle2);
  return assign_1({}, style, {
    fontFamily: style.fontFamily,
    letterSpacing: typeof style.letterSpacing === "number" ? style.letterSpacing : convertLengthToPixels(String(style.letterSpacing), style.fontSize),
    fontSize: typeof style.fontSize === "number" ? style.fontSize : convertLengthToPixels(String(style.fontSize))
  });
};
var _approximateTextWidthInternal = function(text2, style) {
  if (text2 === void 0 || text2 === "" || text2 === null) {
    return 0;
  }
  var widths = _splitToLines(text2).map(function(line2, index4) {
    var len = line2.toString().length;
    var _prepareParams2 = _prepareParams(style, index4), fontSize2 = _prepareParams2.fontSize, letterSpacing2 = _prepareParams2.letterSpacing, fontFamily = _prepareParams2.fontFamily;
    var fontData = _getFontData(fontFamily);
    var width = line2.toString().split("").map(function(c5) {
      return c5.charCodeAt(0) < fontData.widths.length ? fontData.widths[c5.charCodeAt(0)] : fontData.avg;
    }).reduce(function(cur, acc) {
      return acc + cur;
    }, 0) * fontSize2;
    return width + letterSpacing2 * Math.max(len - 1, 0);
  });
  return Math.max.apply(Math, _toConsumableArray$1(widths));
};
var _approximateTextHeightInternal = function(text2, style) {
  if (text2 === void 0 || text2 === "" || text2 === null) {
    return 0;
  }
  return _splitToLines(text2).reduce(function(total, line2, index4) {
    var lineStyle = _prepareParams(style, index4);
    var containsCaps = line2.toString().match(/[(A-Z)(0-9)]/);
    var height = containsCaps ? lineStyle.fontSize * coefficients.lineCapitalCoef : lineStyle.fontSize;
    return total + lineStyle.lineHeight * height;
  }, 0);
};
var approximateTextSize = function(text2, style) {
  var angle = Array.isArray(style) ? style[0] && style[0].angle : style && style.angle;
  var height = _approximateTextHeightInternal(text2, style);
  var width = _approximateTextWidthInternal(text2, style);
  var widthWithRotate = angle ? _getSizeWithRotate(width, height, angle) : width;
  var heightWithRotate = angle ? _getSizeWithRotate(height, width, angle) : height;
  return {
    width: widthWithRotate,
    height: heightWithRotate * coefficients.heightOverlapCoef
  };
};
var TextSize = {
  approximateTextSize,
  convertLengthToPixels
};
var TSpan = function(props) {
  return react.createElement("tspan", props);
};
function _objectWithoutProperties$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var Text2 = function(props) {
  var children2 = props.children, title2 = props.title, desc = props.desc, rest = _objectWithoutProperties$1(props, ["children", "title", "desc"]);
  return react.createElement("text", rest, title2 && react.createElement("title", null, title2), desc && react.createElement("desc", null, desc), children2);
};
Text2.propTypes = {
  children: propTypes.node,
  desc: propTypes.string,
  title: propTypes.string
};
function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$2(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$2(arr) {
  return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _nonIterableSpread$2();
}
function _nonIterableSpread$2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$2(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$2(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var defaultStyles2 = {
  fill: "#252525",
  fontSize: 14,
  fontFamily: "'Gill Sans', 'Gill Sans MT', 'Ser\xADavek', 'Trebuchet MS', sans-serif",
  stroke: "transparent"
};
var getPosition$1 = function(props, dimension) {
  if (!props.datum) {
    return 0;
  }
  var scaledPoint = Helpers.scalePoint(props, props.datum);
  return scaledPoint[dimension];
};
var getFontSize = function(style) {
  var baseSize = style && style.fontSize;
  if (typeof baseSize === "number") {
    return baseSize;
  } else if (baseSize === void 0 || baseSize === null) {
    return defaultStyles2.fontSize;
  } else if (typeof baseSize === "string") {
    var fontSize2 = +baseSize.replace("px", "");
    if (!isNaN(fontSize2)) {
      return fontSize2;
    } else {
      Log.warn("fontSize should be expressed as a number of pixels");
      return defaultStyles2.fontSize;
    }
  }
  return defaultStyles2.fontSize;
};
var getSingleValue = function(prop) {
  var index4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  return Array.isArray(prop) ? prop[index4] || prop[0] : prop;
};
var useMultiLineBackgrounds = function(props) {
  var backgroundStyle = props.backgroundStyle, backgroundPadding = props.backgroundPadding;
  return Array.isArray(backgroundStyle) && !isEmpty_1(backgroundStyle) || Array.isArray(backgroundPadding) && !isEmpty_1(backgroundPadding);
};
var getStyles$1 = function(style, props) {
  var getSingleStyle = function(s4) {
    s4 = s4 ? defaults_1({}, s4, defaultStyles2) : defaultStyles2;
    var baseStyles = Helpers.evaluateStyle(s4, props);
    return assign_1({}, baseStyles, {
      fontSize: getFontSize(baseStyles)
    });
  };
  return Array.isArray(style) && !isEmpty_1(style) ? style.map(function(s4) {
    return getSingleStyle(s4);
  }) : getSingleStyle(style);
};
var getBackgroundStyles = function(style, props) {
  if (!style) {
    return void 0;
  }
  return Array.isArray(style) && !isEmpty_1(style) ? style.map(function(s4) {
    return Helpers.evaluateStyle(s4, props);
  }) : Helpers.evaluateStyle(style, props);
};
var getBackgroundPadding = function(props) {
  if (props.backgroundPadding && Array.isArray(props.backgroundPadding)) {
    return props.backgroundPadding.map(function(backgroundPadding) {
      var padding3 = Helpers.evaluateProp(backgroundPadding, props);
      return Helpers.getPadding({
        padding: padding3
      });
    });
  } else {
    var padding2 = Helpers.evaluateProp(props.backgroundPadding, props);
    return Helpers.getPadding({
      padding: padding2
    });
  }
};
var getLineHeight = function(props) {
  var lineHeight = Helpers.evaluateProp(props.lineHeight, props);
  if (Array.isArray(lineHeight)) {
    return isEmpty_1(lineHeight) ? [1] : lineHeight;
  } else {
    return lineHeight;
  }
};
var getContent = function(text2, props) {
  if (text2 === void 0 || text2 === null) {
    return void 0;
  }
  if (Array.isArray(text2)) {
    return text2.map(function(line2) {
      return Helpers.evaluateProp(line2, props);
    });
  }
  var child = Helpers.evaluateProp(text2, props);
  if (child === void 0 || child === null) {
    return void 0;
  }
  return Array.isArray(child) ? child : "".concat(child).split("\n");
};
var getDy = function(props, verticalAnchor, lineHeight) {
  var dy = props.dy ? Helpers.evaluateProp(props.dy, props) : 0;
  var length = props.inline ? 1 : props.text.length;
  var capHeight = Helpers.evaluateProp(props.capHeight, props);
  var anchor = verticalAnchor ? Helpers.evaluateProp(verticalAnchor, props) : "middle";
  var fontSizes = _toConsumableArray$2(Array(length).keys()).map(function(i) {
    return getSingleValue(props.style, i).fontSize;
  });
  var lineHeights = _toConsumableArray$2(Array(length).keys()).map(function(i) {
    return getSingleValue(lineHeight, i);
  });
  if (anchor === "start") {
    return dy + (capHeight / 2 + lineHeights[0] / 2) * fontSizes[0];
  } else if (props.inline) {
    return anchor === "end" ? dy + (capHeight / 2 - lineHeights[0] / 2) * fontSizes[0] : dy + capHeight / 2 * fontSizes[0];
  } else if (length === 1) {
    return anchor === "end" ? dy + (capHeight / 2 + (0.5 - length) * lineHeights[0]) * fontSizes[0] : dy + (capHeight / 2 + (0.5 - length / 2) * lineHeights[0]) * fontSizes[0];
  } else {
    var allHeights = _toConsumableArray$2(Array(length).keys()).reduce(function(memo, i) {
      return memo + (capHeight / 2 + (0.5 - length) * lineHeights[i]) * fontSizes[i] / length;
    }, 0);
    return anchor === "end" ? dy + allHeights : dy + allHeights / 2 + capHeight / 2 * lineHeights[length - 1] * fontSizes[length - 1];
  }
};
var getTransform = function(props, x5, y7) {
  var polar = props.polar;
  var style = getSingleValue(props.style);
  var defaultAngle = polar ? LabelHelpers.getPolarAngle(props) : 0;
  var baseAngle = style.angle === void 0 ? Helpers.evaluateProp(props.angle, props) : style.angle;
  var angle = baseAngle === void 0 ? defaultAngle : baseAngle;
  var transform = props.transform || style.transform;
  var transformPart = transform && Helpers.evaluateProp(transform, props);
  var rotatePart = angle && {
    rotate: [angle, x5, y7]
  };
  return transformPart || angle ? Style.toTransformString(transformPart, rotatePart) : void 0;
};
var getXCoordinate = function(calculatedProps, labelSizeWidth) {
  var direction = calculatedProps.direction, textAnchor = calculatedProps.textAnchor, x5 = calculatedProps.x, dx = calculatedProps.dx;
  if (direction === "rtl") {
    return x5 - labelSizeWidth;
  }
  switch (textAnchor) {
    case "middle":
      return Math.round(x5 - labelSizeWidth / 2);
    case "end":
      return Math.round(x5 - labelSizeWidth);
    default:
      return x5 + (dx || 0);
  }
};
var getYCoordinate = function(calculatedProps, textHeight) {
  var verticalAnchor = calculatedProps.verticalAnchor, y7 = calculatedProps.y, _calculatedProps$orig = calculatedProps.originalDy, originalDy = _calculatedProps$orig === void 0 ? 0 : _calculatedProps$orig;
  var offset = y7 + originalDy;
  switch (verticalAnchor) {
    case "start":
      return Math.floor(offset);
    case "end":
      return Math.ceil(offset - textHeight);
    default:
      return Math.floor(offset - textHeight / 2);
  }
};
var getFullBackground = function(calculatedProps, tspanValues) {
  var _calculatedProps$dx = calculatedProps.dx, dx = _calculatedProps$dx === void 0 ? 0 : _calculatedProps$dx, transform = calculatedProps.transform, backgroundComponent = calculatedProps.backgroundComponent, backgroundStyle = calculatedProps.backgroundStyle, inline = calculatedProps.inline, backgroundPadding = calculatedProps.backgroundPadding, capHeight = calculatedProps.capHeight;
  var textSizes = tspanValues.map(function(tspan) {
    return tspan.textSize;
  });
  var height = inline ? Math.max.apply(Math, _toConsumableArray$2(textSizes.map(function(size) {
    return size.height;
  }))) : textSizes.reduce(function(memo, size, i) {
    var capHeightAdjustment = i ? 0 : capHeight / 2;
    return memo + size.height * (tspanValues[i].lineHeight - capHeightAdjustment);
  }, 0);
  var width = inline ? textSizes.reduce(function(memo, size, index4) {
    var offset = index4 ? dx : 0;
    return memo + size.width + offset;
  }, 0) : Math.max.apply(Math, _toConsumableArray$2(textSizes.map(function(size) {
    return size.width;
  })));
  var xCoordinate = getXCoordinate(calculatedProps, width);
  var yCoordinate = getYCoordinate(calculatedProps, height);
  var backgroundProps = {
    key: "background",
    height: height + backgroundPadding.top + backgroundPadding.bottom,
    style: backgroundStyle,
    transform,
    width: width + backgroundPadding.left + backgroundPadding.right,
    x: inline ? xCoordinate - backgroundPadding.left : xCoordinate + dx - backgroundPadding.left,
    y: yCoordinate
  };
  return react.cloneElement(backgroundComponent, defaults_1({}, backgroundComponent.props, backgroundProps));
};
var getInlineXOffset = function(calculatedProps, textElements, index4) {
  var textAnchor = calculatedProps.textAnchor;
  var widths = textElements.map(function(t4) {
    return t4.widthWithPadding;
  });
  var totalWidth = widths.reduce(function(memo, width) {
    return memo + width;
  }, 0);
  var centerOffset = -totalWidth / 2;
  switch (textAnchor) {
    case "start":
      return widths.reduce(function(memo, width, i) {
        memo = i < index4 ? memo + width : memo;
        return memo;
      }, 0);
    case "end":
      return widths.reduce(function(memo, width, i) {
        memo = i > index4 ? memo - width : memo;
        return memo;
      }, 0);
    default:
      return widths.reduce(function(memo, width, i) {
        var offsetWidth = i < index4 ? width : 0;
        memo = i === index4 ? memo + width / 2 : memo + offsetWidth;
        return memo;
      }, centerOffset);
  }
};
var getChildBackgrounds = function(calculatedProps, tspanValues) {
  var dy = calculatedProps.dy, dx = calculatedProps.dx, transform = calculatedProps.transform, backgroundStyle = calculatedProps.backgroundStyle, backgroundPadding = calculatedProps.backgroundPadding, backgroundComponent = calculatedProps.backgroundComponent, inline = calculatedProps.inline, y7 = calculatedProps.y;
  var textElements = tspanValues.map(function(current, i) {
    var previous = getSingleValue(tspanValues, i - 1);
    var labelSize = current.textSize;
    var totalLineHeight = current.fontSize * current.lineHeight;
    var textHeight = Math.ceil(totalLineHeight);
    var padding2 = getSingleValue(backgroundPadding, i);
    var prevPadding = getSingleValue(backgroundPadding, i - 1);
    var xOffset = inline ? dx || 0 : 0;
    var childDy = i && !inline ? previous.fontSize * previous.lineHeight + prevPadding.top + prevPadding.bottom : dy - totalLineHeight * 0.5 - (current.fontSize - current.capHeight);
    return {
      textHeight,
      labelSize,
      heightWithPadding: textHeight + padding2.top + padding2.bottom,
      widthWithPadding: labelSize.width + padding2.left + padding2.right + xOffset,
      y: y7,
      fontSize: current.fontSize,
      dy: childDy
    };
  });
  return textElements.map(function(textElement, i) {
    var xCoordinate = getXCoordinate(calculatedProps, textElement.labelSize.width);
    var yCoordinate = textElements.slice(0, i + 1).reduce(function(prev, curr) {
      return prev + curr.dy;
    }, y7);
    var padding2 = getSingleValue(backgroundPadding, i);
    var height = textElement.heightWithPadding;
    var xCoord = inline ? getInlineXOffset(calculatedProps, textElements, i) + xCoordinate - padding2.left : xCoordinate;
    var yCoord = inline ? getYCoordinate(calculatedProps, height) - padding2.top : yCoordinate;
    var backgroundProps = {
      key: "tspan-background-".concat(i),
      height,
      style: getSingleValue(backgroundStyle, i),
      width: textElement.widthWithPadding,
      transform,
      x: xCoord - padding2.left,
      y: yCoord
    };
    return react.cloneElement(backgroundComponent, defaults_1({}, backgroundComponent.props, backgroundProps));
  });
};
var getBackgroundElement = function(calculatedProps, tspanValues) {
  return useMultiLineBackgrounds(calculatedProps) ? getChildBackgrounds(calculatedProps, tspanValues) : getFullBackground(calculatedProps, tspanValues);
};
var calculateSpanDy = function(tspanValues, i, calculatedProps) {
  var current = getSingleValue(tspanValues, i);
  var previous = getSingleValue(tspanValues, i - 1);
  var previousHeight = previous.fontSize * previous.lineHeight;
  var currentHeight = current.fontSize * current.lineHeight;
  var previousCaps = previous.fontSize - previous.capHeight;
  var currentCaps = current.fontSize - current.capHeight;
  var textHeight = previousHeight - previous.fontSize / 2 + current.fontSize / 2 - previousHeight / 2 + currentHeight / 2 - currentCaps / 2 + previousCaps / 2;
  return useMultiLineBackgrounds(calculatedProps) ? textHeight + current.backgroundPadding.top + previous.backgroundPadding.bottom : textHeight;
};
var getTSpanDy = function(tspanValues, calculatedProps, i) {
  var inline = calculatedProps.inline;
  var current = getSingleValue(tspanValues, i);
  if (i && !inline) {
    return calculateSpanDy(tspanValues, i, calculatedProps);
  } else if (inline) {
    return i === 0 ? current.backgroundPadding.top : void 0;
  } else {
    return current.backgroundPadding.top;
  }
};
var evaluateProps = function(props) {
  var text2 = getContent(props.text, props);
  var style = getStyles$1(props.style, assign_1({}, props, {
    text: text2
  }));
  var backgroundStyle = getBackgroundStyles(props.backgroundStyle, assign_1({}, props, {
    text: text2,
    style
  }));
  var backgroundPadding = getBackgroundPadding(assign_1({}, props, {
    text: text2,
    style,
    backgroundStyle
  }));
  var id3 = Helpers.evaluateProp(props.id, props);
  return assign_1({}, props, {
    backgroundStyle,
    backgroundPadding,
    style,
    text: text2,
    id: id3
  });
};
var getCalculatedProps = function(props) {
  var ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);
  var style = getSingleValue(props.style);
  var lineHeight = getLineHeight(props);
  var direction = props.direction ? Helpers.evaluateProp(props.direction, props) : "inherit";
  var textAnchor = props.textAnchor ? Helpers.evaluateProp(props.textAnchor, props) : style.textAnchor || "start";
  var verticalAnchor = props.verticalAnchor ? Helpers.evaluateProp(props.verticalAnchor, props) : style.verticalAnchor || "middle";
  var dx = props.dx ? Helpers.evaluateProp(props.dx, props) : 0;
  var dy = getDy(props, verticalAnchor, lineHeight);
  var x5 = props.x !== void 0 ? props.x : getPosition$1(props, "x");
  var y7 = props.y !== void 0 ? props.y : getPosition$1(props, "y");
  var transform = getTransform(props, x5, y7);
  return assign_1({}, props, {
    ariaLabel,
    lineHeight,
    direction,
    textAnchor,
    verticalAnchor,
    dx,
    dy,
    originalDy: props.dy,
    transform,
    x: x5,
    y: y7
  });
};
var renderLabel = function(calculatedProps, tspanValues) {
  var ariaLabel = calculatedProps.ariaLabel, inline = calculatedProps.inline, className = calculatedProps.className, title2 = calculatedProps.title, events = calculatedProps.events, direction = calculatedProps.direction, text2 = calculatedProps.text, textAnchor = calculatedProps.textAnchor, dx = calculatedProps.dx, dy = calculatedProps.dy, transform = calculatedProps.transform, x5 = calculatedProps.x, y7 = calculatedProps.y, desc = calculatedProps.desc, id3 = calculatedProps.id, tabIndex = calculatedProps.tabIndex, tspanComponent = calculatedProps.tspanComponent, textComponent = calculatedProps.textComponent;
  var textProps2 = _objectSpread$1({
    "aria-label": ariaLabel,
    key: "text"
  }, events, {
    direction,
    dx,
    x: x5,
    y: y7 + dy,
    transform,
    className,
    title: title2,
    desc: Helpers.evaluateProp(desc, calculatedProps),
    tabIndex: Helpers.evaluateProp(tabIndex, calculatedProps),
    id: id3
  });
  var tspans = text2.map(function(line2, i) {
    var currentStyle = tspanValues[i].style;
    var tspanProps = {
      key: "".concat(id3, "-key-").concat(i),
      x: !inline ? x5 : void 0,
      dx: inline ? dx + tspanValues[i].backgroundPadding.left : dx,
      dy: getTSpanDy(tspanValues, calculatedProps, i),
      textAnchor: currentStyle.textAnchor || textAnchor,
      style: currentStyle,
      children: line2
    };
    return react.cloneElement(tspanComponent, tspanProps);
  });
  return react.cloneElement(textComponent, textProps2, tspans);
};
var VictoryLabel = function(props) {
  props = evaluateProps(props);
  if (props.text === null || props.text === void 0) {
    return null;
  }
  var calculatedProps = getCalculatedProps(props);
  var text2 = calculatedProps.text, style = calculatedProps.style, capHeight = calculatedProps.capHeight, backgroundPadding = calculatedProps.backgroundPadding, lineHeight = calculatedProps.lineHeight;
  var tspanValues = text2.map(function(line2, i) {
    var currentStyle = getSingleValue(style, i);
    var capHeightPx = TextSize.convertLengthToPixels("".concat(capHeight, "em"), currentStyle.fontSize);
    var currentLineHeight = getSingleValue(lineHeight, i);
    return {
      style: currentStyle,
      fontSize: currentStyle.fontSize || defaultStyles2.fontSize,
      capHeight: capHeightPx,
      text: line2,
      textSize: TextSize.approximateTextSize(line2, currentStyle),
      lineHeight: currentLineHeight,
      backgroundPadding: getSingleValue(backgroundPadding, i)
    };
  });
  var label = renderLabel(calculatedProps, tspanValues);
  if (props.backgroundStyle) {
    var backgroundElement = getBackgroundElement(calculatedProps, tspanValues);
    var children2 = [backgroundElement, label];
    var backgroundWithLabel = react.cloneElement(props.groupComponent, {}, children2);
    return props.renderInPortal ? react.createElement(VictoryPortal, null, backgroundWithLabel) : backgroundWithLabel;
  }
  return props.renderInPortal ? react.createElement(VictoryPortal, null, label) : label;
};
VictoryLabel.displayName = "VictoryLabel";
VictoryLabel.role = "label";
VictoryLabel.defaultStyles = defaultStyles2;
VictoryLabel.propTypes = {
  active: propTypes.bool,
  angle: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.func]),
  ariaLabel: propTypes.oneOfType([propTypes.string, propTypes.func]),
  backgroundComponent: propTypes.element,
  backgroundPadding: propTypes.oneOfType([propTypes.number, propTypes.object, propTypes.array]),
  backgroundStyle: propTypes.oneOfType([propTypes.object, propTypes.array]),
  capHeight: propTypes.oneOfType([propTypes.string, CustomPropTypes.nonNegative, propTypes.func]),
  className: propTypes.string,
  data: propTypes.array,
  datum: propTypes.any,
  desc: propTypes.oneOfType([propTypes.string, propTypes.func]),
  direction: propTypes.oneOf(["rtl", "ltr", "inherit"]),
  dx: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.func]),
  dy: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.func]),
  events: propTypes.object,
  groupComponent: propTypes.element,
  id: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.func]),
  index: propTypes.oneOfType([propTypes.number, propTypes.string]),
  inline: propTypes.bool,
  labelPlacement: propTypes.oneOf(["parallel", "perpendicular", "vertical"]),
  lineHeight: propTypes.oneOfType([propTypes.string, CustomPropTypes.nonNegative, propTypes.func, propTypes.array]),
  origin: propTypes.shape({
    x: CustomPropTypes.nonNegative,
    y: CustomPropTypes.nonNegative
  }),
  polar: propTypes.bool,
  renderInPortal: propTypes.bool,
  scale: propTypes.shape({
    x: CustomPropTypes.scale,
    y: CustomPropTypes.scale
  }),
  style: propTypes.oneOfType([propTypes.object, propTypes.array]),
  tabIndex: propTypes.oneOfType([propTypes.number, propTypes.func]),
  text: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.func, propTypes.array]),
  textAnchor: propTypes.oneOfType([propTypes.oneOf(["start", "middle", "end", "inherit"]), propTypes.func]),
  textComponent: propTypes.element,
  title: propTypes.string,
  transform: propTypes.oneOfType([propTypes.string, propTypes.object, propTypes.func]),
  tspanComponent: propTypes.element,
  verticalAnchor: propTypes.oneOfType([propTypes.oneOf(["start", "middle", "end"]), propTypes.func]),
  x: propTypes.oneOfType([propTypes.number, propTypes.string]),
  y: propTypes.oneOfType([propTypes.number, propTypes.string])
};
VictoryLabel.defaultProps = {
  backgroundComponent: react.createElement(Rect, null),
  groupComponent: react.createElement("g", null),
  direction: "inherit",
  textComponent: react.createElement(Text2, null),
  tspanComponent: react.createElement(TSpan, null),
  capHeight: 0.71,
  lineHeight: 1
};
function _toConsumableArray$3(arr) {
  return _arrayWithoutHoles$3(arr) || _iterableToArray$3(arr) || _nonIterableSpread$3();
}
function _nonIterableSpread$3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$3(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$3(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function isNonEmptyArray(collection) {
  return Array.isArray(collection) && collection.length > 0;
}
function containsStrings(collection) {
  return Array.isArray(collection) && collection.some(function(value2) {
    return typeof value2 === "string";
  });
}
function containsDates(collection) {
  return Array.isArray(collection) && collection.some(function(value2) {
    return value2 instanceof Date;
  });
}
function containsNumbers(collection) {
  return Array.isArray(collection) && collection.some(function(value2) {
    return typeof value2 === "number";
  });
}
function containsOnlyStrings(collection) {
  return isNonEmptyArray(collection) && collection.every(function(value2) {
    return typeof value2 === "string";
  });
}
function isArrayOfArrays(collection) {
  return isNonEmptyArray(collection) && collection.every(Array.isArray);
}
function removeUndefined(arr) {
  return arr.filter(function(el) {
    return el !== void 0;
  });
}
function getMaxValue(arr) {
  for (var _len = arguments.length, values2 = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    values2[_key - 1] = arguments[_key];
  }
  var array5 = arr.concat(values2);
  return containsDates(array5) ? new Date(Math.max.apply(Math, _toConsumableArray$3(array5))) : Math.max.apply(Math, _toConsumableArray$3(array5));
}
function getMinValue(arr) {
  for (var _len2 = arguments.length, values2 = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    values2[_key2 - 1] = arguments[_key2];
  }
  var array5 = arr.concat(values2);
  return containsDates(array5) ? new Date(Math.min.apply(Math, _toConsumableArray$3(array5))) : Math.min.apply(Math, _toConsumableArray$3(array5));
}
var Collection = {
  containsDates,
  containsNumbers,
  containsOnlyStrings,
  containsStrings,
  getMaxValue,
  getMinValue,
  isArrayOfArrays,
  removeUndefined
};
function getDatumKey(datum2, idx) {
  return (datum2.key || idx).toString();
}
function getKeyedData(data3) {
  return data3.reduce(function(keyedData, datum2, idx) {
    var key = getDatumKey(datum2, idx);
    keyedData[key] = datum2;
    return keyedData;
  }, {});
}
function getKeyedDataDifference(a3, b10) {
  var hasDifference = false;
  var difference2 = keys_1(a3).reduce(function(_difference, key) {
    if (!(key in b10)) {
      hasDifference = true;
      _difference[key] = true;
    }
    return _difference;
  }, {});
  return hasDifference && difference2;
}
function getNodeTransitions(oldData, nextData) {
  var oldDataKeyed = oldData && getKeyedData(oldData);
  var nextDataKeyed = nextData && getKeyedData(nextData);
  return {
    entering: oldDataKeyed && getKeyedDataDifference(nextDataKeyed, oldDataKeyed),
    exiting: nextDataKeyed && getKeyedDataDifference(oldDataKeyed, nextDataKeyed)
  };
}
function getChildData(child) {
  if (child.type && child.type.getData) {
    return child.type.getData(child.props);
  }
  return child.props && child.props.data || false;
}
function getInitialTransitionState(oldChildren, nextChildren) {
  var nodesWillExit = false;
  var nodesWillEnter = false;
  var getTransition = function(oldChild, newChild) {
    if (!newChild || oldChild.type !== newChild.type) {
      return {};
    }
    var _ref = getNodeTransitions(getChildData(oldChild), getChildData(newChild)) || {}, entering2 = _ref.entering, exiting = _ref.exiting;
    nodesWillExit = nodesWillExit || !!exiting;
    nodesWillEnter = nodesWillEnter || !!entering2;
    return {
      entering: entering2 || false,
      exiting: exiting || false
    };
  };
  var getTransitionsFromChildren = function(old, next) {
    return old.map(function(child, idx) {
      if (child && child.props && child.props.children && next[idx]) {
        return getTransitionsFromChildren(react.Children.toArray(old[idx].props.children), react.Children.toArray(next[idx].props.children));
      }
      return getTransition(child, next[idx]);
    });
  };
  var childrenTransitions = getTransitionsFromChildren(react.Children.toArray(oldChildren), react.Children.toArray(nextChildren));
  return {
    nodesWillExit,
    nodesWillEnter,
    childrenTransitions,
    nodesShouldEnter: false
  };
}
function getInitialChildProps(animate, data3) {
  var after = animate.onEnter && animate.onEnter.after ? animate.onEnter.after : identity_1;
  return {
    data: data3.map(function(datum2, idx) {
      return assign_1({}, datum2, after(datum2, idx, data3));
    })
  };
}
function getChildBeforeLoad(animate, child, data3, cb2) {
  animate = assign_1({}, animate, {
    onEnd: cb2
  });
  if (animate && animate.onLoad && !animate.onLoad.duration) {
    return {
      animate,
      data: data3
    };
  }
  var before = animate.onLoad && animate.onLoad.before ? animate.onLoad.before : identity_1;
  data3 = data3.map(function(datum2, idx) {
    return assign_1({}, datum2, before(datum2, idx, data3));
  });
  return {
    animate,
    data: data3,
    clipWidth: 0
  };
}
function getChildOnLoad(animate, data3, cb2) {
  animate = assign_1({}, animate, {
    onEnd: cb2
  });
  if (animate && animate.onLoad && !animate.onLoad.duration) {
    return {
      animate,
      data: data3
    };
  }
  var after = animate.onLoad && animate.onLoad.after ? animate.onLoad.after : identity_1;
  data3 = data3.map(function(datum2, idx) {
    return assign_1({}, datum2, after(datum2, idx, data3));
  });
  return {
    animate,
    data: data3
  };
}
function getChildPropsOnExit(animate, child, data3, exitingNodes, cb2) {
  var onExit = animate && animate.onExit;
  animate = assign_1({}, animate, onExit);
  if (exitingNodes) {
    animate.onEnd = cb2;
    var before = animate.onExit && animate.onExit.before ? animate.onExit.before : identity_1;
    data3 = data3.map(function(datum2, idx) {
      var key = (datum2.key || idx).toString();
      return exitingNodes[key] ? assign_1({}, datum2, before(datum2, idx, data3)) : datum2;
    });
  }
  return {
    animate,
    data: data3
  };
}
function getChildPropsBeforeEnter(animate, child, data3, enteringNodes, cb2) {
  if (enteringNodes) {
    animate = assign_1({}, animate, {
      onEnd: cb2
    });
    var before = animate.onEnter && animate.onEnter.before ? animate.onEnter.before : identity_1;
    data3 = data3.map(function(datum2, idx) {
      var key = (datum2.key || idx).toString();
      return enteringNodes[key] ? assign_1({}, datum2, before(datum2, idx, data3)) : datum2;
    });
  }
  return {
    animate,
    data: data3
  };
}
function getChildPropsOnEnter(animate, data3, enteringNodes, cb2) {
  var onEnter = animate && animate.onEnter;
  animate = assign_1({}, animate, onEnter);
  if (enteringNodes) {
    animate.onEnd = cb2;
    var after = animate.onEnter && animate.onEnter.after ? animate.onEnter.after : identity_1;
    data3 = data3.map(function(datum2, idx) {
      var key = getDatumKey(datum2, idx);
      return enteringNodes[key] ? assign_1({}, datum2, after(datum2, idx, data3)) : datum2;
    });
  }
  return {
    animate,
    data: data3
  };
}
function getTransitionPropsFactory(props, state, setState) {
  var nodesWillExit = state && state.nodesWillExit;
  var nodesWillEnter = state && state.nodesWillEnter;
  var nodesShouldEnter = state && state.nodesShouldEnter;
  var nodesShouldLoad = state && state.nodesShouldLoad;
  var nodesDoneLoad = state && state.nodesDoneLoad;
  var childrenTransitions = state && state.childrenTransitions || [];
  var transitionDurations = {
    enter: props.animate && props.animate.onEnter && props.animate.onEnter.duration,
    exit: props.animate && props.animate.onExit && props.animate.onExit.duration,
    load: props.animate && props.animate.onLoad && props.animate.onLoad.duration,
    move: props.animate && props.animate.duration
  };
  var onLoad = function(child, data3, animate) {
    if (nodesShouldLoad) {
      return getChildOnLoad(animate, data3, function() {
        setState({
          nodesShouldLoad: false,
          nodesDoneLoad: true
        });
      });
    }
    return getChildBeforeLoad(animate, child, data3, function() {
      setState({
        nodesDoneLoad: true
      });
    });
  };
  var onExit = function(nodes, child, data3, animate) {
    return getChildPropsOnExit(animate, child, data3, nodes, function() {
      setState({
        nodesWillExit: false
      });
    });
  };
  var onEnter = function(nodes, child, data3, animate) {
    if (nodesShouldEnter) {
      return getChildPropsOnEnter(animate, data3, nodes, function() {
        setState({
          nodesWillEnter: false
        });
      });
    }
    return getChildPropsBeforeEnter(animate, child, data3, nodes, function() {
      setState({
        nodesShouldEnter: true
      });
    });
  };
  var getChildTransitionDuration = function(child, type3) {
    var animate = child.props.animate;
    if (!child.type) {
      return {};
    }
    var defaultTransitions = child.props && child.props.polar ? child.type.defaultPolarTransitions || child.type.defaultTransitions : child.type.defaultTransitions;
    if (defaultTransitions) {
      var animationDuration = animate[type3] && animate[type3].duration;
      return animationDuration !== void 0 ? animationDuration : defaultTransitions[type3] && defaultTransitions[type3].duration;
    } else {
      return {};
    }
  };
  return function getTransitionProps(child, index4) {
    var data3 = getChildData(child) || [];
    var animate = defaults_1({}, props.animate, child.props.animate);
    var defaultTransitions = child.props.polar ? child.type.defaultPolarTransitions || child.type.defaultTransitions : child.type.defaultTransitions;
    animate.onExit = defaults_1({}, animate.onExit, defaultTransitions && defaultTransitions.onExit);
    animate.onEnter = defaults_1({}, animate.onEnter, defaultTransitions && defaultTransitions.onEnter);
    animate.onLoad = defaults_1({}, animate.onLoad, defaultTransitions && defaultTransitions.onLoad);
    var childTransitions = childrenTransitions[index4] || childrenTransitions[0];
    if (!nodesDoneLoad) {
      var load = transitionDurations.load !== void 0 ? transitionDurations.load : getChildTransitionDuration(child, "onLoad");
      var animation = {
        duration: load
      };
      return onLoad(child, data3, assign_1({}, animate, animation));
    } else if (nodesWillExit) {
      var exitingNodes = childTransitions && childTransitions.exiting;
      var exit = transitionDurations.exit !== void 0 ? transitionDurations.exit : getChildTransitionDuration(child, "onExit");
      var _animation = exitingNodes ? {
        duration: exit
      } : {
        delay: exit
      };
      return onExit(exitingNodes, child, data3, assign_1({}, animate, _animation));
    } else if (nodesWillEnter) {
      var enteringNodes = childTransitions && childTransitions.entering;
      var enter = transitionDurations.enter !== void 0 ? transitionDurations.enter : getChildTransitionDuration(child, "onEnter");
      var move = transitionDurations.move !== void 0 ? transitionDurations.move : child.props.animate && child.props.animate.duration;
      var _animation2 = {
        duration: nodesShouldEnter && enteringNodes ? enter : move
      };
      return onEnter(enteringNodes, child, data3, assign_1({}, animate, _animation2));
    } else if (!state && animate && animate.onExit) {
      return getInitialChildProps(animate, data3);
    }
    return {
      animate,
      data: data3
    };
  };
}
var Transitions = {
  getInitialTransitionState,
  getTransitionPropsFactory
};
function _extends$25() {
  _extends$25 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$25.apply(this, arguments);
}
function _classCallCheck$5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$5(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$4(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$4(self2);
}
function _inherits$4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var VictoryTransition = /* @__PURE__ */ function(_React$Component) {
  _inherits$4(VictoryTransition2, _React$Component);
  function VictoryTransition2(props, context) {
    var _this;
    _classCallCheck$5(this, VictoryTransition2);
    _this = _possibleConstructorReturn$4(this, (VictoryTransition2.__proto__ || Object.getPrototypeOf(VictoryTransition2)).call(this, props, context));
    _this.state = {
      nodesShouldLoad: false,
      nodesDoneLoad: false
    };
    var child = _this.props.children;
    var polar = child.props.polar;
    _this.continuous = !polar && child.type && child.type.continuous === true;
    _this.getTransitionState = _this.getTransitionState.bind(_assertThisInitialized$4(_this));
    _this.timer = _this.context.transitionTimer;
    return _this;
  }
  _createClass$5(VictoryTransition2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        nodesShouldLoad: true
      });
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var _this2 = this;
      if (!reactFastCompare(this.props, nextProps)) {
        this.timer.bypassAnimation();
        this.setState(this.getTransitionState(this.props, nextProps), function() {
          return _this2.timer.resumeAnimation();
        });
      }
      return true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.timer.stop();
    }
  }, {
    key: "getTransitionState",
    value: function getTransitionState(props, nextProps) {
      var animate = props.animate;
      if (!animate) {
        return {};
      } else if (animate.parentState) {
        var state = animate.parentState;
        var oldProps = state.nodesWillExit ? props : null;
        return {
          oldProps,
          nextProps
        };
      } else {
        var oldChildren = react.Children.toArray(props.children);
        var nextChildren = react.Children.toArray(nextProps.children);
        var _Transitions$getIniti = Transitions.getInitialTransitionState(oldChildren, nextChildren), nodesWillExit = _Transitions$getIniti.nodesWillExit, nodesWillEnter = _Transitions$getIniti.nodesWillEnter, childrenTransitions = _Transitions$getIniti.childrenTransitions, nodesShouldEnter = _Transitions$getIniti.nodesShouldEnter;
        return {
          nodesWillExit,
          nodesWillEnter,
          childrenTransitions,
          nodesShouldEnter,
          oldProps: nodesWillExit ? props : null,
          nextProps
        };
      }
    }
  }, {
    key: "getDomainFromChildren",
    value: function getDomainFromChildren(props, axis2) {
      var getChildDomains = function(children2) {
        return children2.reduce(function(memo, child2) {
          if (child2.type && isFunction_1(child2.type.getDomain)) {
            var childDomain = child2.props && child2.type.getDomain(child2.props, axis2);
            return childDomain ? memo.concat(childDomain) : memo;
          } else if (child2.props && child2.props.children) {
            return memo.concat(getChildDomains(react.Children.toArray(child2.props.children)));
          }
          return memo;
        }, []);
      };
      var child = react.Children.toArray(props.children)[0];
      var childProps = child.props || {};
      var domain = Array.isArray(childProps.domain) ? childProps.domain : childProps.domain && childProps.domain[axis2];
      if (!childProps.children && domain) {
        return domain;
      } else {
        var childDomains = getChildDomains([child]);
        return childDomains.length === 0 ? [0, 1] : [Collection.getMinValue(childDomains), Collection.getMaxValue(childDomains)];
      }
    }
  }, {
    key: "pickProps",
    value: function pickProps() {
      if (!this.state) {
        return this.props;
      }
      return this.state.nodesWillExit ? this.state.oldProps || this.props : this.props;
    }
  }, {
    key: "pickDomainProps",
    value: function pickDomainProps(props) {
      var parentState = isObject_1(props.animate) && props.animate.parentState;
      if (parentState && parentState.nodesWillExit) {
        return this.continous || parentState.continuous ? parentState.nextProps || this.state.nextProps || props : props;
      }
      return this.continuous && this.state.nodesWillExit ? this.state.nextProps || props : props;
    }
  }, {
    key: "getClipWidth",
    value: function getClipWidth(props, child) {
      var getDefaultClipWidth = function() {
        var range7 = Helpers.getRange(child.props, "x");
        return range7 ? Math.abs(range7[1] - range7[0]) : props.width;
      };
      var clipWidth = this.transitionProps ? this.transitionProps.clipWidth : void 0;
      return clipWidth !== void 0 ? clipWidth : getDefaultClipWidth();
    }
  }, {
    key: "render",
    value: function render2() {
      var _this3 = this;
      var props = this.pickProps();
      var getTransitionProps = isObject_1(this.props.animate) && this.props.animate.getTransitions ? this.props.animate.getTransitions : Transitions.getTransitionPropsFactory(props, this.state, function(newState) {
        return _this3.setState(newState);
      });
      var child = react.Children.toArray(props.children)[0];
      var transitionProps = getTransitionProps(child);
      this.transitionProps = transitionProps;
      var domain = {
        x: this.getDomainFromChildren(this.pickDomainProps(props), "x"),
        y: this.getDomainFromChildren(props, "y")
      };
      var clipWidth = this.getClipWidth(props, child);
      var combinedProps = defaults_1({
        domain,
        clipWidth
      }, transitionProps, child.props);
      var animationWhitelist = props.animationWhitelist || [];
      var whitelist = animationWhitelist.concat(["clipWidth"]);
      var propsToAnimate = whitelist.length ? pick_1(combinedProps, whitelist) : combinedProps;
      return react.createElement(VictoryAnimation, _extends$25({}, combinedProps.animate, {
        data: propsToAnimate
      }), function(newProps) {
        if (child.props.groupComponent) {
          var groupComponent = _this3.continuous ? react.cloneElement(child.props.groupComponent, {
            clipWidth: newProps.clipWidth || 0
          }) : child.props.groupComponent;
          return react.cloneElement(child, defaults_1({
            animate: null,
            animating: true,
            groupComponent
          }, newProps, combinedProps));
        }
        return react.cloneElement(child, defaults_1({
          animate: null,
          animating: true
        }, newProps, combinedProps));
      });
    }
  }]);
  return VictoryTransition2;
}(react.Component);
Object.defineProperty(VictoryTransition, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryTransition"
});
Object.defineProperty(VictoryTransition, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    animate: propTypes.oneOfType([propTypes.bool, propTypes.object]),
    animationWhitelist: propTypes.array,
    children: propTypes.node
  }
});
Object.defineProperty(VictoryTransition, "contextType", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: TimerContext
});
var ClipPath = function(props) {
  return react.createElement("defs", null, react.createElement("clipPath", {
    id: props.clipId
  }, props.children));
};
ClipPath.propTypes = {
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
  clipId: propTypes.oneOfType([propTypes.number, propTypes.string])
};
function _extends$33() {
  _extends$33 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$33.apply(this, arguments);
}
function _objectWithoutProperties$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var Circle = function(props) {
  var desc = props.desc, rest = _objectWithoutProperties$2(props, ["desc"]);
  return desc ? react.createElement("circle", _extends$33({
    vectorEffect: "non-scaling-stroke"
  }, rest), react.createElement("desc", null, desc)) : react.createElement("circle", _extends$33({
    vectorEffect: "non-scaling-stroke"
  }, rest));
};
function _toConsumableArray$4(arr) {
  return _arrayWithoutHoles$4(arr) || _iterableToArray$4(arr) || _nonIterableSpread$4();
}
function _nonIterableSpread$4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$4(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$4(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _objectSpread$2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$3(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$3(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$6(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$5(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$5(self2);
}
function _assertThisInitialized$5(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VictoryClipContainer = /* @__PURE__ */ function(_React$Component) {
  _inherits$5(VictoryClipContainer2, _React$Component);
  function VictoryClipContainer2(props) {
    var _this;
    _classCallCheck$6(this, VictoryClipContainer2);
    _this = _possibleConstructorReturn$5(this, (VictoryClipContainer2.__proto__ || Object.getPrototypeOf(VictoryClipContainer2)).call(this, props));
    _this.clipId = !isObject_1(props) || props.clipId === void 0 ? uniqueId_1("victory-clip-") : props.clipId;
    return _this;
  }
  _createClass$6(VictoryClipContainer2, [{
    key: "calculateAttributes",
    value: function calculateAttributes(props) {
      var polar = props.polar, origin = props.origin, _props$clipWidth = props.clipWidth, clipWidth = _props$clipWidth === void 0 ? 0 : _props$clipWidth, _props$clipHeight = props.clipHeight, clipHeight = _props$clipHeight === void 0 ? 0 : _props$clipHeight, _props$translateX = props.translateX, translateX2 = _props$translateX === void 0 ? 0 : _props$translateX, _props$translateY = props.translateY, translateY2 = _props$translateY === void 0 ? 0 : _props$translateY;
      var clipPadding = Helpers.getPadding({
        padding: props.clipPadding
      });
      var radius = props.radius || Helpers.getRadius(props);
      return {
        x: (polar ? origin.x : translateX2) - clipPadding.left,
        y: (polar ? origin.y : translateY2) - clipPadding.top,
        width: Math.max((polar ? radius : clipWidth) + clipPadding.left + clipPadding.right, 0),
        height: Math.max((polar ? radius : clipHeight) + clipPadding.top + clipPadding.bottom, 0)
      };
    }
  }, {
    key: "renderClippedGroup",
    value: function renderClippedGroup(props, clipId) {
      var style = props.style, events = props.events, transform = props.transform, children2 = props.children, className = props.className, groupComponent = props.groupComponent, tabIndex = props.tabIndex;
      var clipComponent = this.renderClipComponent(props, clipId);
      var groupProps = assign_1({
        className,
        style,
        transform,
        key: "clipped-group-".concat(clipId),
        clipPath: "url(#".concat(clipId, ")")
      }, events);
      return react.cloneElement(groupComponent, _objectSpread$2({}, groupProps, {
        "aria-label": props["aria-label"],
        tabIndex
      }), [clipComponent].concat(_toConsumableArray$4(react.Children.toArray(children2))));
    }
  }, {
    key: "renderGroup",
    value: function renderGroup(props) {
      var style = props.style, events = props.events, transform = props.transform, children2 = props.children, className = props.className, groupComponent = props.groupComponent, tabIndex = props.tabIndex;
      return react.cloneElement(groupComponent, assign_1({
        className,
        style,
        transform,
        "aria-label": props["aria-label"],
        tabIndex
      }, events), children2);
    }
  }, {
    key: "renderClipComponent",
    value: function renderClipComponent(props, clipId) {
      var polar = props.polar, origin = props.origin, _props$clipWidth2 = props.clipWidth, clipWidth = _props$clipWidth2 === void 0 ? 0 : _props$clipWidth2, _props$clipHeight2 = props.clipHeight, clipHeight = _props$clipHeight2 === void 0 ? 0 : _props$clipHeight2, _props$translateX2 = props.translateX, translateX2 = _props$translateX2 === void 0 ? 0 : _props$translateX2, _props$translateY2 = props.translateY, translateY2 = _props$translateY2 === void 0 ? 0 : _props$translateY2, circleComponent = props.circleComponent, rectComponent = props.rectComponent, clipPathComponent = props.clipPathComponent;
      var _Helpers$getPadding = Helpers.getPadding({
        padding: props.clipPadding
      }), top2 = _Helpers$getPadding.top, bottom2 = _Helpers$getPadding.bottom, left2 = _Helpers$getPadding.left, right2 = _Helpers$getPadding.right;
      var child;
      if (polar) {
        var radius = props.radius || Helpers.getRadius(props);
        var circleProps = {
          r: Math.max(radius + left2 + right2, radius + top2 + bottom2, 0),
          cx: origin.x - left2,
          cy: origin.y - top2
        };
        child = react.cloneElement(circleComponent, circleProps);
      } else {
        var rectProps = {
          x: translateX2 - left2,
          y: translateY2 - top2,
          width: Math.max(clipWidth + left2 + right2, 0),
          height: Math.max(clipHeight + top2 + bottom2, 0)
        };
        child = react.cloneElement(rectComponent, rectProps);
      }
      return react.cloneElement(clipPathComponent, assign_1({
        key: "clip-path-".concat(clipId)
      }, props, {
        clipId
      }), child);
    }
  }, {
    key: "getClipValue",
    value: function getClipValue(props, axis2) {
      var clipValues = {
        x: props.clipWidth,
        y: props.clipHeight
      };
      if (clipValues[axis2] !== void 0) {
        return clipValues[axis2];
      }
      var range7 = Helpers.getRange(props, axis2);
      return range7 ? Math.abs(range7[0] - range7[1]) || void 0 : void 0;
    }
  }, {
    key: "getTranslateValue",
    value: function getTranslateValue(props, axis2) {
      var translateValues = {
        x: props.translateX,
        y: props.translateY
      };
      if (translateValues[axis2] !== void 0) {
        return translateValues[axis2];
      }
      var range7 = Helpers.getRange(props, axis2);
      return range7 ? Math.min.apply(Math, _toConsumableArray$4(range7)) : void 0;
    }
  }, {
    key: "render",
    value: function render2() {
      var clipHeight = this.getClipValue(this.props, "y");
      var clipWidth = this.getClipValue(this.props, "x");
      if (clipWidth === void 0 || clipHeight === void 0) {
        return this.renderGroup(this.props);
      }
      var translateX2 = this.getTranslateValue(this.props, "x");
      var translateY2 = this.getTranslateValue(this.props, "y");
      var clipProps = defaults_1({}, this.props, {
        clipHeight,
        clipWidth,
        translateX: translateX2,
        translateY: translateY2
      });
      return this.renderClippedGroup(clipProps, this.clipId);
    }
  }]);
  return VictoryClipContainer2;
}(react.Component);
Object.defineProperty(VictoryClipContainer, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryClipContainer"
});
Object.defineProperty(VictoryClipContainer, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "container"
});
Object.defineProperty(VictoryClipContainer, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    "aria-label": propTypes.string,
    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
    circleComponent: propTypes.element,
    className: propTypes.string,
    clipHeight: CustomPropTypes.nonNegative,
    clipId: propTypes.oneOfType([propTypes.number, propTypes.string]),
    clipPadding: propTypes.shape({
      top: propTypes.number,
      bottom: propTypes.number,
      left: propTypes.number,
      right: propTypes.number
    }),
    clipPathComponent: propTypes.element,
    clipWidth: CustomPropTypes.nonNegative,
    events: propTypes.object,
    groupComponent: propTypes.element,
    origin: propTypes.shape({
      x: CustomPropTypes.nonNegative,
      y: CustomPropTypes.nonNegative
    }),
    polar: propTypes.bool,
    radius: CustomPropTypes.nonNegative,
    style: propTypes.object,
    tabIndex: propTypes.number,
    transform: propTypes.string,
    translateX: propTypes.number,
    translateY: propTypes.number
  }
});
Object.defineProperty(VictoryClipContainer, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    circleComponent: react.createElement(Circle, null),
    rectComponent: react.createElement(Rect, null),
    clipPathComponent: react.createElement(ClipPath, null),
    groupComponent: react.createElement("g", null)
  }
});
var yellow200 = "#FFF59D";
var deepOrange600 = "#F4511E";
var lime300 = "#DCE775";
var lightGreen500 = "#8BC34A";
var teal700 = "#00796B";
var cyan900 = "#006064";
var colors2 = [deepOrange600, yellow200, lime300, lightGreen500, teal700, cyan900];
var blueGrey50 = "#ECEFF1";
var blueGrey300 = "#90A4AE";
var blueGrey700 = "#455A64";
var grey900 = "#212121";
var sansSerif = "'Helvetica Neue', 'Helvetica', sans-serif";
var letterSpacing = "normal";
var fontSize = 12;
var padding = 8;
var baseProps = {
  width: 350,
  height: 350,
  padding: 50
};
var baseLabelStyles = {
  fontFamily: sansSerif,
  fontSize,
  letterSpacing,
  padding,
  fill: blueGrey700,
  stroke: "transparent",
  strokeWidth: 0
};
var centeredLabelStyles = assign_1({
  textAnchor: "middle"
}, baseLabelStyles);
var strokeDasharray = "10, 5";
var strokeLinecap = "round";
var strokeLinejoin = "round";
var materialTheme = {
  area: assign_1({
    style: {
      data: {
        fill: grey900
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  axis: assign_1({
    style: {
      axis: {
        fill: "transparent",
        stroke: blueGrey300,
        strokeWidth: 2,
        strokeLinecap,
        strokeLinejoin
      },
      axisLabel: assign_1({}, centeredLabelStyles, {
        padding,
        stroke: "transparent"
      }),
      grid: {
        fill: "none",
        stroke: blueGrey50,
        strokeDasharray,
        strokeLinecap,
        strokeLinejoin,
        pointerEvents: "painted"
      },
      ticks: {
        fill: "transparent",
        size: 5,
        stroke: blueGrey300,
        strokeWidth: 1,
        strokeLinecap,
        strokeLinejoin
      },
      tickLabels: assign_1({}, baseLabelStyles, {
        fill: blueGrey700
      })
    }
  }, baseProps),
  polarDependentAxis: assign_1({
    style: {
      ticks: {
        fill: "transparent",
        size: 1,
        stroke: "transparent"
      }
    }
  }),
  bar: assign_1({
    style: {
      data: {
        fill: blueGrey700,
        padding,
        strokeWidth: 0
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  boxplot: assign_1({
    style: {
      max: {
        padding,
        stroke: blueGrey700,
        strokeWidth: 1
      },
      maxLabels: assign_1({}, baseLabelStyles, {
        padding: 3
      }),
      median: {
        padding,
        stroke: blueGrey700,
        strokeWidth: 1
      },
      medianLabels: assign_1({}, baseLabelStyles, {
        padding: 3
      }),
      min: {
        padding,
        stroke: blueGrey700,
        strokeWidth: 1
      },
      minLabels: assign_1({}, baseLabelStyles, {
        padding: 3
      }),
      q1: {
        padding,
        fill: blueGrey700
      },
      q1Labels: assign_1({}, baseLabelStyles, {
        padding: 3
      }),
      q3: {
        padding,
        fill: blueGrey700
      },
      q3Labels: assign_1({}, baseLabelStyles, {
        padding: 3
      })
    },
    boxWidth: 20
  }, baseProps),
  candlestick: assign_1({
    style: {
      data: {
        stroke: blueGrey700
      },
      labels: assign_1({}, baseLabelStyles, {
        padding: 5
      })
    },
    candleColors: {
      positive: "#ffffff",
      negative: blueGrey700
    }
  }, baseProps),
  chart: baseProps,
  errorbar: assign_1({
    borderWidth: 8,
    style: {
      data: {
        fill: "transparent",
        opacity: 1,
        stroke: blueGrey700,
        strokeWidth: 2
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  group: assign_1({
    colorScale: colors2
  }, baseProps),
  histogram: assign_1({
    style: {
      data: {
        fill: blueGrey700,
        stroke: grey900,
        strokeWidth: 2
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  legend: {
    colorScale: colors2,
    gutter: 10,
    orientation: "vertical",
    titleOrientation: "top",
    style: {
      data: {
        type: "circle"
      },
      labels: baseLabelStyles,
      title: assign_1({}, baseLabelStyles, {
        padding: 5
      })
    }
  },
  line: assign_1({
    style: {
      data: {
        fill: "transparent",
        opacity: 1,
        stroke: blueGrey700,
        strokeWidth: 2
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  pie: assign_1({
    colorScale: colors2,
    style: {
      data: {
        padding,
        stroke: blueGrey50,
        strokeWidth: 1
      },
      labels: assign_1({}, baseLabelStyles, {
        padding: 20
      })
    }
  }, baseProps),
  scatter: assign_1({
    style: {
      data: {
        fill: blueGrey700,
        opacity: 1,
        stroke: "transparent",
        strokeWidth: 0
      },
      labels: baseLabelStyles
    }
  }, baseProps),
  stack: assign_1({
    colorScale: colors2
  }, baseProps),
  tooltip: {
    style: assign_1({}, baseLabelStyles, {
      padding: 0,
      pointerEvents: "none"
    }),
    flyoutStyle: {
      stroke: grey900,
      strokeWidth: 1,
      fill: "#f0f0f0",
      pointerEvents: "none"
    },
    flyoutPadding: 5,
    cornerRadius: 5,
    pointerLength: 10
  },
  voronoi: assign_1({
    style: {
      data: {
        fill: "transparent",
        stroke: "transparent",
        strokeWidth: 0
      },
      labels: assign_1({}, baseLabelStyles, {
        padding: 5,
        pointerEvents: "none"
      }),
      flyout: {
        stroke: grey900,
        strokeWidth: 1,
        fill: "#f0f0f0",
        pointerEvents: "none"
      }
    }
  }, baseProps)
};
var colors$1 = ["#252525", "#525252", "#737373", "#969696", "#bdbdbd", "#d9d9d9", "#f0f0f0"];
var charcoal = "#252525";
var grey = "#969696";
var sansSerif$1 = "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif";
var letterSpacing$1 = "normal";
var fontSize$1 = 14;
var baseProps$1 = {
  width: 450,
  height: 300,
  padding: 50,
  colorScale: colors$1
};
var baseLabelStyles$1 = {
  fontFamily: sansSerif$1,
  fontSize: fontSize$1,
  letterSpacing: letterSpacing$1,
  padding: 10,
  fill: charcoal,
  stroke: "transparent"
};
var centeredLabelStyles$1 = assign_1({
  textAnchor: "middle"
}, baseLabelStyles$1);
var strokeLinecap$1 = "round";
var strokeLinejoin$1 = "round";
var grayscaleTheme = {
  area: assign_1({
    style: {
      data: {
        fill: charcoal
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  axis: assign_1({
    style: {
      axis: {
        fill: "transparent",
        stroke: charcoal,
        strokeWidth: 1,
        strokeLinecap: strokeLinecap$1,
        strokeLinejoin: strokeLinejoin$1
      },
      axisLabel: assign_1({}, centeredLabelStyles$1, {
        padding: 25
      }),
      grid: {
        fill: "none",
        stroke: "none",
        pointerEvents: "painted"
      },
      ticks: {
        fill: "transparent",
        size: 1,
        stroke: "transparent"
      },
      tickLabels: baseLabelStyles$1
    }
  }, baseProps$1),
  bar: assign_1({
    style: {
      data: {
        fill: charcoal,
        padding: 8,
        strokeWidth: 0
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  boxplot: assign_1({
    style: {
      max: {
        padding: 8,
        stroke: charcoal,
        strokeWidth: 1
      },
      maxLabels: assign_1({}, baseLabelStyles$1, {
        padding: 3
      }),
      median: {
        padding: 8,
        stroke: charcoal,
        strokeWidth: 1
      },
      medianLabels: assign_1({}, baseLabelStyles$1, {
        padding: 3
      }),
      min: {
        padding: 8,
        stroke: charcoal,
        strokeWidth: 1
      },
      minLabels: assign_1({}, baseLabelStyles$1, {
        padding: 3
      }),
      q1: {
        padding: 8,
        fill: grey
      },
      q1Labels: assign_1({}, baseLabelStyles$1, {
        padding: 3
      }),
      q3: {
        padding: 8,
        fill: grey
      },
      q3Labels: assign_1({}, baseLabelStyles$1, {
        padding: 3
      })
    },
    boxWidth: 20
  }, baseProps$1),
  candlestick: assign_1({
    style: {
      data: {
        stroke: charcoal,
        strokeWidth: 1
      },
      labels: assign_1({}, baseLabelStyles$1, {
        padding: 5
      })
    },
    candleColors: {
      positive: "#ffffff",
      negative: charcoal
    }
  }, baseProps$1),
  chart: baseProps$1,
  errorbar: assign_1({
    borderWidth: 8,
    style: {
      data: {
        fill: "transparent",
        stroke: charcoal,
        strokeWidth: 2
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  group: assign_1({
    colorScale: colors$1
  }, baseProps$1),
  histogram: assign_1({
    style: {
      data: {
        fill: grey,
        stroke: charcoal,
        strokeWidth: 2
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  legend: {
    colorScale: colors$1,
    gutter: 10,
    orientation: "vertical",
    titleOrientation: "top",
    style: {
      data: {
        type: "circle"
      },
      labels: baseLabelStyles$1,
      title: assign_1({}, baseLabelStyles$1, {
        padding: 5
      })
    }
  },
  line: assign_1({
    style: {
      data: {
        fill: "transparent",
        stroke: charcoal,
        strokeWidth: 2
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  pie: {
    style: {
      data: {
        padding: 10,
        stroke: "transparent",
        strokeWidth: 1
      },
      labels: assign_1({}, baseLabelStyles$1, {
        padding: 20
      })
    },
    colorScale: colors$1,
    width: 400,
    height: 400,
    padding: 50
  },
  scatter: assign_1({
    style: {
      data: {
        fill: charcoal,
        stroke: "transparent",
        strokeWidth: 0
      },
      labels: baseLabelStyles$1
    }
  }, baseProps$1),
  stack: assign_1({
    colorScale: colors$1
  }, baseProps$1),
  tooltip: {
    style: assign_1({}, baseLabelStyles$1, {
      padding: 0,
      pointerEvents: "none"
    }),
    flyoutStyle: {
      stroke: charcoal,
      strokeWidth: 1,
      fill: "#f0f0f0",
      pointerEvents: "none"
    },
    flyoutPadding: 5,
    cornerRadius: 5,
    pointerLength: 10
  },
  voronoi: assign_1({
    style: {
      data: {
        fill: "transparent",
        stroke: "transparent",
        strokeWidth: 0
      },
      labels: assign_1({}, baseLabelStyles$1, {
        padding: 5,
        pointerEvents: "none"
      }),
      flyout: {
        stroke: charcoal,
        strokeWidth: 1,
        fill: "#f0f0f0",
        pointerEvents: "none"
      }
    }
  }, baseProps$1)
};
var VictoryTheme = {
  material: materialTheme,
  grayscale: grayscaleTheme
};
var dataProps = {
  categories: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.shape({
    x: propTypes.arrayOf(propTypes.string),
    y: propTypes.arrayOf(propTypes.string)
  })]),
  data: propTypes.oneOfType([propTypes.array, propTypes.object]),
  dataComponent: propTypes.element,
  labelComponent: propTypes.element,
  labels: propTypes.oneOfType([propTypes.func, propTypes.array]),
  samples: CustomPropTypes.nonNegative,
  sortKey: propTypes.oneOfType([propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string, propTypes.arrayOf(propTypes.string)]),
  sortOrder: propTypes.oneOf(["ascending", "descending"]),
  style: propTypes.shape({
    parent: propTypes.object,
    data: propTypes.object,
    labels: propTypes.object
  }),
  x: propTypes.oneOfType([propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string, propTypes.arrayOf(propTypes.string)]),
  y: propTypes.oneOfType([propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string, propTypes.arrayOf(propTypes.string)]),
  y0: propTypes.oneOfType([propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string, propTypes.arrayOf(propTypes.string)])
};
var baseProps$2 = {
  animate: propTypes.oneOfType([propTypes.bool, propTypes.object]),
  containerComponent: propTypes.element,
  domain: propTypes.oneOfType([CustomPropTypes.domain, propTypes.shape({
    x: CustomPropTypes.domain,
    y: CustomPropTypes.domain
  })]),
  maxDomain: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date), propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date)]),
    y: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date)])
  })]),
  minDomain: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date), propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date)]),
    y: propTypes.oneOfType([propTypes.number, propTypes.instanceOf(Date)])
  })]),
  domainPadding: propTypes.oneOfType([propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.number)]),
    y: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.number)])
  }), propTypes.number, propTypes.arrayOf(propTypes.number)]),
  eventKey: propTypes.oneOfType([propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
  events: propTypes.arrayOf(propTypes.shape({
    target: propTypes.oneOf(["data", "labels", "parent"]),
    eventKey: propTypes.oneOfType([propTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
    eventHandlers: propTypes.object
  })),
  externalEventMutations: propTypes.arrayOf(propTypes.shape({
    callback: propTypes.function,
    childName: propTypes.oneOfType([propTypes.string, propTypes.array]),
    eventKey: propTypes.oneOfType([propTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
    mutation: propTypes.function,
    target: propTypes.oneOfType([propTypes.string, propTypes.array])
  })),
  groupComponent: propTypes.element,
  height: CustomPropTypes.nonNegative,
  name: propTypes.string,
  origin: propTypes.shape({
    x: propTypes.number,
    y: propTypes.number
  }),
  padding: propTypes.oneOfType([propTypes.number, propTypes.shape({
    top: propTypes.number,
    bottom: propTypes.number,
    left: propTypes.number,
    right: propTypes.number
  })]),
  polar: propTypes.bool,
  range: propTypes.oneOfType([CustomPropTypes.domain, propTypes.shape({
    x: CustomPropTypes.domain,
    y: CustomPropTypes.domain
  })]),
  scale: propTypes.oneOfType([CustomPropTypes.scale, propTypes.shape({
    x: CustomPropTypes.scale,
    y: CustomPropTypes.scale
  })]),
  sharedEvents: propTypes.shape({
    events: propTypes.array,
    getEventState: propTypes.func
  }),
  singleQuadrantDomainPadding: propTypes.oneOfType([propTypes.bool, propTypes.shape({
    x: propTypes.oneOfType([propTypes.bool]),
    y: propTypes.oneOfType([propTypes.bool])
  })]),
  standalone: propTypes.bool,
  theme: propTypes.object,
  width: CustomPropTypes.nonNegative
};
var primitiveProps = {
  active: propTypes.bool,
  ariaLabel: propTypes.oneOfType([propTypes.string, propTypes.func]),
  className: propTypes.string,
  clipPath: propTypes.string,
  data: propTypes.oneOfType([propTypes.array, propTypes.object]),
  desc: propTypes.oneOfType([propTypes.string, propTypes.func]),
  events: propTypes.object,
  id: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.func]),
  index: propTypes.oneOfType([propTypes.number, propTypes.string]),
  origin: propTypes.shape({
    x: propTypes.number,
    y: propTypes.number
  }),
  polar: propTypes.bool,
  role: propTypes.string,
  scale: propTypes.oneOfType([CustomPropTypes.scale, propTypes.shape({
    x: CustomPropTypes.scale,
    y: CustomPropTypes.scale
  })]),
  shapeRendering: propTypes.string,
  style: propTypes.object,
  tabIndex: propTypes.oneOfType([propTypes.number, propTypes.func]),
  transform: propTypes.string
};
var CommonProps = {
  baseProps: baseProps$2,
  dataProps,
  primitiveProps
};
function _objectWithoutProperties$3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var Path2 = function(props) {
  var desc = props.desc, rest = _objectWithoutProperties$3(props, ["desc"]);
  return desc ? react.createElement("path", rest, react.createElement("desc", null, desc)) : react.createElement("path", rest);
};
function _objectSpread$3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$4(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$4(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var getArcPath = function(props) {
  var cx = props.cx, cy = props.cy, r3 = props.r, startAngle = props.startAngle, endAngle = props.endAngle, closedPath = props.closedPath;
  var halfAngle = Math.abs(endAngle - startAngle) / 2 + startAngle;
  var x14 = cx + r3 * Math.cos(Helpers.degreesToRadians(startAngle));
  var y14 = cy - r3 * Math.sin(Helpers.degreesToRadians(startAngle));
  var x22 = cx + r3 * Math.cos(Helpers.degreesToRadians(halfAngle));
  var y22 = cy - r3 * Math.sin(Helpers.degreesToRadians(halfAngle));
  var x32 = cx + r3 * Math.cos(Helpers.degreesToRadians(endAngle));
  var y32 = cy - r3 * Math.sin(Helpers.degreesToRadians(endAngle));
  var largerArcFlag1 = halfAngle - startAngle <= 180 ? 0 : 1;
  var largerArcFlag2 = endAngle - halfAngle <= 180 ? 0 : 1;
  var arcStart = closedPath ? " M ".concat(cx, ", ").concat(cy, " L ").concat(x14, ", ").concat(y14) : "M ".concat(x14, ", ").concat(y14);
  var arc1 = "A ".concat(r3, ", ").concat(r3, ", 0, ").concat(largerArcFlag1, ", 0, ").concat(x22, ", ").concat(y22);
  var arc2 = "A ".concat(r3, ", ").concat(r3, ", 0, ").concat(largerArcFlag2, ", 0, ").concat(x32, ", ").concat(y32);
  var arcEnd = closedPath ? "Z" : "";
  return "".concat(arcStart, " ").concat(arc1, " ").concat(arc2, " ").concat(arcEnd);
};
var evaluateProps$1 = function(props) {
  var ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);
  var desc = Helpers.evaluateProp(props.desc, props);
  var id3 = Helpers.evaluateProp(props.id, props);
  var style = Helpers.evaluateStyle(assign_1({
    stroke: "black",
    fill: "none"
  }, props.style), props);
  var tabIndex = Helpers.evaluateProp(props.tabIndex, props);
  return assign_1({}, props, {
    ariaLabel,
    desc,
    id: id3,
    style,
    tabIndex
  });
};
var Arc = function(props) {
  props = evaluateProps$1(props);
  return react.cloneElement(props.pathComponent, _objectSpread$3({}, props.events, {
    "aria-label": props.ariaLabel,
    d: getArcPath(props),
    style: props.style,
    desc: props.desc,
    tabIndex: props.tabIndex,
    className: props.className,
    role: props.role,
    shapeRendering: props.shapeRendering,
    transform: props.transform,
    clipPath: props.clipPath
  }));
};
Arc.propTypes = _objectSpread$3({}, CommonProps.primitiveProps, {
  closedPath: propTypes.bool,
  cx: propTypes.number,
  cy: propTypes.number,
  datum: propTypes.any,
  endAngle: propTypes.number,
  pathComponent: propTypes.element,
  r: propTypes.number,
  startAngle: propTypes.number
});
Arc.defaultProps = {
  pathComponent: react.createElement(Path2, null),
  role: "presentation",
  shapeRendering: "auto"
};
function _objectSpread$4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$5(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$5(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var evaluateProps$2 = function(props) {
  var id3 = Helpers.evaluateProp(props.id, props);
  return assign_1({}, props, {
    id: id3
  });
};
var Background = function(props) {
  props = evaluateProps$2(props);
  return props.polar ? react.cloneElement(props.circleComponent, _objectSpread$4({}, props.events, {
    style: props.style,
    role: props.role,
    shapeRendering: props.shapeRendering,
    cx: props.x,
    cy: props.y,
    r: props.height,
    className: props.className
  })) : react.cloneElement(props.rectComponent, _objectSpread$4({}, props.events, {
    style: props.style,
    role: props.role,
    shapeRendering: props.shapeRendering,
    x: props.x,
    y: props.y,
    rx: props.rx,
    ry: props.ry,
    width: props.width,
    height: props.height,
    className: props.className
  }));
};
Background.propTypes = _objectSpread$4({}, CommonProps.primitiveProps, {
  circleComponent: propTypes.element,
  height: propTypes.number,
  rectComponent: propTypes.element,
  rx: propTypes.number,
  ry: propTypes.number,
  width: propTypes.number,
  x: propTypes.number,
  y: propTypes.number
});
Background.defaultProps = {
  circleComponent: react.createElement(Circle, null),
  rectComponent: react.createElement(Rect, null),
  role: "presentation",
  shapeRendering: "auto"
};
function _extends$43() {
  _extends$43 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$43.apply(this, arguments);
}
function _objectWithoutProperties$4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var Line3 = function(props) {
  var desc = props.desc, rest = _objectWithoutProperties$4(props, ["desc"]);
  return desc ? react.createElement("line", _extends$43({
    vectorEffect: "non-scaling-stroke"
  }, rest), react.createElement("desc", null, desc)) : react.createElement("line", _extends$43({
    vectorEffect: "non-scaling-stroke"
  }, rest));
};
function _objectSpread$5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$6(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$6(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var evaluateProps$3 = function(props) {
  var ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);
  var desc = Helpers.evaluateProp(props.desc, props);
  var id3 = Helpers.evaluateProp(props.id, props);
  var style = Helpers.evaluateStyle(assign_1({
    stroke: "black"
  }, props.style), props);
  var tabIndex = Helpers.evaluateProp(props.tabIndex, props);
  return assign_1({}, props, {
    ariaLabel,
    desc,
    id: id3,
    style,
    tabIndex
  });
};
var LineSegment = function(props) {
  props = evaluateProps$3(props);
  return react.cloneElement(props.lineComponent, _objectSpread$5({}, props.events, {
    "aria-label": props.ariaLabel,
    style: props.style,
    desc: props.desc,
    tabIndex: props.tabIndex,
    className: props.className,
    role: props.role,
    shapeRendering: props.shapeRendering,
    x1: props.x1,
    x2: props.x2,
    y1: props.y1,
    y2: props.y2,
    transform: props.transform,
    clipPath: props.clipPath
  }));
};
LineSegment.propTypes = _objectSpread$5({}, CommonProps.primitiveProps, {
  datum: propTypes.any,
  lineComponent: propTypes.element,
  x1: propTypes.number,
  x2: propTypes.number,
  y1: propTypes.number,
  y2: propTypes.number
});
LineSegment.defaultProps = {
  lineComponent: react.createElement(Line3, null),
  role: "presentation",
  shapeRendering: "auto"
};
var difference = _baseRest(function(array5, values2) {
  return isArrayLikeObject_1(array5) ? _baseDifference(array5, _baseFlatten(values2, 1, isArrayLikeObject_1, true)) : [];
});
var difference_1 = difference;
function baseValues(object2, props) {
  return _arrayMap(props, function(key) {
    return object2[key];
  });
}
var _baseValues = baseValues;
function values(object2) {
  return object2 == null ? [] : _baseValues(object2, keys_1(object2));
}
var values_1 = values;
var nativeMax3 = Math.max;
function includes(collection, value2, fromIndex, guard) {
  collection = isArrayLike_1(collection) ? collection : values_1(collection);
  fromIndex = fromIndex && !guard ? toInteger_1(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax3(length + fromIndex, 0);
  }
  return isString_1(collection) ? fromIndex <= length && collection.indexOf(value2, fromIndex) > -1 : !!length && _baseIndexOf(collection, value2, fromIndex) > -1;
}
var includes_1 = includes;
function uniq(array5) {
  return array5 && array5.length ? _baseUniq(array5) : [];
}
var uniq_1 = uniq;
var FUNC_ERROR_TEXT3 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_1 = negate;
function pickBy(object2, predicate) {
  if (object2 == null) {
    return {};
  }
  var props = _arrayMap(_getAllKeysIn(object2), function(prop) {
    return [prop];
  });
  predicate = _baseIteratee(predicate);
  return _basePickBy(object2, props, function(value2, path3) {
    return predicate(value2, path3[0]);
  });
}
var pickBy_1 = pickBy;
function omitBy(object2, predicate) {
  return pickBy_1(object2, negate_1(_baseIteratee(predicate)));
}
var omitBy_1 = omitBy;
function _defineProperty$7(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$5(arr) {
  return _arrayWithoutHoles$5(arr) || _iterableToArray$5(arr) || _nonIterableSpread$5();
}
function _nonIterableSpread$5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$5(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$5(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var GLOBAL_EVENT_REGEX = /^onGlobal(.*)$/;
var Events = {
  getEvents: function(props, target, eventKey, getScopedEvents) {
    var _this = this;
    var getEventsByTarget = function(events) {
      var getSelectedEvents = function() {
        var targetEvents = events.reduce(function(memo, event) {
          if (event.target !== void 0) {
            var matchesTarget = Array.isArray(event.target) ? includes_1(event.target, target) : "".concat(event.target) === "".concat(target);
            return matchesTarget ? memo.concat(event) : memo;
          }
          return memo.concat(event);
        }, []);
        if (eventKey !== void 0 && target !== "parent") {
          return targetEvents.filter(function(obj) {
            var targetKeys = obj.eventKey;
            var useKey = function(key) {
              return key ? "".concat(key) === "".concat(eventKey) : true;
            };
            return Array.isArray(targetKeys) ? targetKeys.some(function(k6) {
              return useKey(k6);
            }) : useKey(targetKeys);
          });
        }
        return targetEvents;
      };
      var selectedEvents = getSelectedEvents();
      return Array.isArray(selectedEvents) && selectedEvents.reduce(function(memo, event) {
        return event ? assign_1(memo, event.eventHandlers) : memo;
      }, {});
    };
    var getAllEvents = function() {
      if (Array.isArray(_this.componentEvents)) {
        var _this$componentEvents;
        return Array.isArray(props.events) ? (_this$componentEvents = _this.componentEvents).concat.apply(_this$componentEvents, _toConsumableArray$5(props.events)) : _this.componentEvents;
      }
      return props.events;
    };
    var allEvents = getAllEvents();
    var ownEvents = allEvents && isFunction_1(getScopedEvents) ? getScopedEvents(getEventsByTarget(allEvents), target) : void 0;
    if (!props.sharedEvents) {
      return ownEvents;
    }
    var getSharedEvents = props.sharedEvents.getEvents;
    var sharedEvents = props.sharedEvents.events && getSharedEvents(getEventsByTarget(props.sharedEvents.events), target);
    return assign_1({}, sharedEvents, ownEvents);
  },
  getScopedEvents: function(events, namespace2, childType, baseProps2) {
    var _this2 = this;
    if (isEmpty_1(events)) {
      return {};
    }
    baseProps2 = baseProps2 || this.baseProps;
    var getTargetProps = function(identifier, type3) {
      var childName = identifier.childName, target = identifier.target, key = identifier.key;
      var baseType = type3 === "props" ? baseProps2 : _this2.state || {};
      var base = childName === void 0 || childName === null || !baseType[childName] ? baseType : baseType[childName];
      return key === "parent" ? base.parent : base[key] && base[key][target];
    };
    var parseEvent = function(eventReturn, eventKey) {
      var childNames = namespace2 === "parent" ? eventReturn.childName : eventReturn.childName || childType;
      var target = eventReturn.target || namespace2;
      var getKeys2 = function(childName) {
        if (target === "parent") {
          return "parent";
        }
        if (eventReturn.eventKey === "all") {
          return baseProps2[childName] ? without_1(keys_1(baseProps2[childName]), "parent") : without_1(keys_1(baseProps2), "parent");
        } else if (eventReturn.eventKey === void 0 && eventKey === "parent") {
          return baseProps2[childName] ? keys_1(baseProps2[childName]) : keys_1(baseProps2);
        }
        return eventReturn.eventKey !== void 0 ? eventReturn.eventKey : eventKey;
      };
      var getMutationObject = function(key, childName) {
        var baseState = _this2.state || {};
        if (!isFunction_1(eventReturn.mutation)) {
          return baseState;
        }
        var mutationTargetProps = getTargetProps({
          childName,
          key,
          target
        }, "props");
        var mutationTargetState = getTargetProps({
          childName,
          key,
          target
        }, "state");
        var mutatedProps = eventReturn.mutation(assign_1({}, mutationTargetProps, mutationTargetState), baseProps2);
        var childState = baseState[childName] || {};
        var filterState = function(state) {
          if (state[key] && state[key][target]) {
            delete state[key][target];
          }
          if (state[key] && !keys_1(state[key]).length) {
            delete state[key];
          }
          return state;
        };
        var extendState = function(state) {
          return target === "parent" ? assign_1(state, _defineProperty$7({}, key, assign_1(state[key], mutatedProps))) : assign_1(state, _defineProperty$7({}, key, assign_1(state[key], _defineProperty$7({}, target, mutatedProps))));
        };
        var updateState = function(state) {
          return mutatedProps ? extendState(state) : filterState(state);
        };
        return childName !== void 0 && childName !== null ? assign_1(baseState, _defineProperty$7({}, childName, updateState(childState))) : updateState(baseState);
      };
      var getReturnByChild = function(childName) {
        var mutationKeys = getKeys2(childName);
        return Array.isArray(mutationKeys) ? mutationKeys.reduce(function(memo, key) {
          return assign_1(memo, getMutationObject(key, childName));
        }, {}) : getMutationObject(mutationKeys, childName);
      };
      var allChildNames = childNames === "all" ? without_1(keys_1(baseProps2), "parent") : childNames;
      return Array.isArray(allChildNames) ? allChildNames.reduce(function(memo, childName) {
        return assign_1(memo, getReturnByChild(childName));
      }, {}) : getReturnByChild(allChildNames);
    };
    var parseEventReturn = function(eventReturn, eventKey) {
      return Array.isArray(eventReturn) ? eventReturn.reduce(function(memo, props) {
        memo = assign_1({}, memo, parseEvent(props, eventKey));
        return memo;
      }, {}) : parseEvent(eventReturn, eventKey);
    };
    var compileCallbacks = function(eventReturn) {
      var getCallback = function(obj) {
        return isFunction_1(obj.callback) && obj.callback;
      };
      var callbacks = Array.isArray(eventReturn) ? eventReturn.map(function(evtObj) {
        return getCallback(evtObj);
      }) : [getCallback(eventReturn)];
      var callbackArray = callbacks.filter(function(callback) {
        return callback !== false;
      });
      return callbackArray.length ? function() {
        return callbackArray.forEach(function(callback) {
          return callback();
        });
      } : void 0;
    };
    var onEvent = function(evt, childProps, eventKey, eventName) {
      var eventReturn = events[eventName](evt, childProps, eventKey, _this2);
      if (!isEmpty_1(eventReturn)) {
        var callbacks = compileCallbacks(eventReturn);
        _this2.setState(parseEventReturn(eventReturn, eventKey), callbacks);
      }
    };
    return keys_1(events).reduce(function(memo, event) {
      memo[event] = onEvent;
      return memo;
    }, {});
  },
  getPartialEvents: function(events, eventKey, childProps) {
    return events ? keys_1(events).reduce(function(memo, eventName) {
      var appliedEvent = function(evt) {
        return events[eventName](evt, childProps, eventKey, eventName);
      };
      memo[eventName] = appliedEvent;
      return memo;
    }, {}) : {};
  },
  getEventState: function(eventKey, namespace2, childType) {
    var state = this.state || {};
    if (!childType) {
      return eventKey === "parent" ? state[eventKey] && state[eventKey][namespace2] || state[eventKey] : state[eventKey] && state[eventKey][namespace2];
    }
    return state[childType] && state[childType][eventKey] && state[childType][eventKey][namespace2];
  },
  getExternalMutationsWithChildren: function(mutations, baseProps2, baseState, childNames) {
    var _this3 = this;
    baseProps2 = baseProps2 || {};
    baseState = baseState || {};
    return childNames.reduce(function(memo, childName) {
      var childState = baseState[childName];
      var mutation = _this3.getExternalMutations(mutations, baseProps2[childName], baseState[childName], childName);
      memo[childName] = mutation ? mutation : childState;
      return pickBy_1(memo, function(v3) {
        return !isEmpty_1(v3);
      });
    }, {});
  },
  getExternalMutations: function(mutations, baseProps2, baseState, childName) {
    var _this4 = this;
    baseProps2 = baseProps2 || {};
    baseState = baseState || {};
    var eventKeys = keys_1(baseProps2);
    return eventKeys.reduce(function(memo, eventKey) {
      var keyState = baseState[eventKey] || {};
      var keyProps = baseProps2[eventKey] || {};
      if (eventKey === "parent") {
        var identifier = {
          eventKey,
          target: "parent"
        };
        var mutation = _this4.getExternalMutation(mutations, keyProps, keyState, identifier);
        memo[eventKey] = mutation !== void 0 ? assign_1({}, keyState, mutation) : keyState;
      } else {
        var targets = uniq_1(keys_1(keyProps).concat(keys_1(keyState)));
        memo[eventKey] = targets.reduce(function(m3, target) {
          var identifier2 = {
            eventKey,
            target,
            childName
          };
          var mutation2 = _this4.getExternalMutation(mutations, keyProps[target], keyState[target], identifier2);
          m3[target] = mutation2 !== void 0 ? assign_1({}, keyState[target], mutation2) : keyState[target];
          return pickBy_1(m3, function(v3) {
            return !isEmpty_1(v3);
          });
        }, {});
      }
      return pickBy_1(memo, function(v3) {
        return !isEmpty_1(v3);
      });
    }, {});
  },
  getExternalMutation: function(mutations, baseProps2, baseState, identifier) {
    var filterMutations = function(mutation, type3) {
      if (typeof mutation[type3] === "string") {
        return mutation[type3] === "all" || mutation[type3] === identifier[type3];
      } else if (Array.isArray(mutation[type3])) {
        var stringArray = mutation[type3].map(function(m3) {
          return "".concat(m3);
        });
        return includes_1(stringArray, identifier[type3]);
      } else {
        return false;
      }
    };
    mutations = Array.isArray(mutations) ? mutations : [mutations];
    var scopedMutations = mutations;
    if (identifier.childName) {
      scopedMutations = mutations.filter(function(m3) {
        return filterMutations(m3, "childName");
      });
    }
    var targetMutations = scopedMutations.filter(function(m3) {
      return filterMutations(m3, "target");
    });
    if (isEmpty_1(targetMutations)) {
      return void 0;
    }
    var keyMutations = targetMutations.filter(function(m3) {
      return filterMutations(m3, "eventKey");
    });
    if (isEmpty_1(keyMutations)) {
      return void 0;
    }
    return keyMutations.reduce(function(memo, curr) {
      var mutationFunction = curr && isFunction_1(curr.mutation) ? curr.mutation : function() {
        return void 0;
      };
      var currentMutation = mutationFunction(assign_1({}, baseProps2, baseState));
      return assign_1({}, memo, currentMutation);
    }, {});
  },
  getComponentEvents: function(props, components) {
    var events = Array.isArray(components) && components.reduce(function(memo, componentName) {
      var _memo;
      var component = props[componentName];
      var defaultEvents = component && component.type && component.type.defaultEvents;
      var componentEvents = isFunction_1(defaultEvents) ? defaultEvents(component.props) : defaultEvents;
      memo = Array.isArray(componentEvents) ? (_memo = memo).concat.apply(_memo, _toConsumableArray$5(componentEvents)) : memo;
      return memo;
    }, []);
    return events && events.length ? events : void 0;
  },
  getGlobalEventNameFromKey: function(key) {
    var match2 = key.match(GLOBAL_EVENT_REGEX);
    return match2 && match2[1] && match2[1].toLowerCase();
  },
  getGlobalEvents: function(events) {
    return pickBy_1(events, function(_2, key) {
      return GLOBAL_EVENT_REGEX.test(key);
    });
  },
  omitGlobalEvents: function(events) {
    return omitBy_1(events, function(_2, key) {
      return GLOBAL_EVENT_REGEX.test(key);
    });
  },
  emulateReactEvent: function(event) {
    return assign_1(event, {
      nativeEvent: event
    });
  }
};
function _toConsumableArray$6(arr) {
  return _arrayWithoutHoles$6(arr) || _iterableToArray$6(arr) || _nonIterableSpread$6();
}
function _nonIterableSpread$6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$6(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$6(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$7(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$6(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$6(self2);
}
function _inherits$6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$6(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var datumHasXandY = function(datum2) {
  return !isNil_1(datum2._x) && !isNil_1(datum2._y);
};
var defaultComponents = [{
  name: "parent",
  index: "parent"
}, {
  name: "data"
}, {
  name: "labels"
}];
var addEvents = function(WrappedComponent, options2) {
  return /* @__PURE__ */ function(_WrappedComponent) {
    _inherits$6(addEvents2, _WrappedComponent);
    function addEvents2(props) {
      var _this;
      _classCallCheck$7(this, addEvents2);
      _this = _possibleConstructorReturn$6(this, (addEvents2.__proto__ || Object.getPrototypeOf(addEvents2)).call(this, props));
      var getScopedEvents = Events.getScopedEvents.bind(_assertThisInitialized$6(_this));
      var boundGetEvents = Events.getEvents.bind(_assertThisInitialized$6(_this));
      _this.state = {};
      _this.getEvents = function(p3, target, eventKey) {
        return boundGetEvents(p3, target, eventKey, getScopedEvents);
      };
      _this.getEventState = Events.getEventState.bind(_assertThisInitialized$6(_this));
      var calculatedValues = _this.getCalculatedValues(props);
      _this.cacheValues(calculatedValues);
      _this.externalMutations = _this.getExternalMutations(props);
      _this.calculatedState = _this.getStateChanges(props);
      _this.globalEvents = {};
      _this.prevGlobalEventKeys = [];
      _this.boundGlobalEvents = {};
      return _this;
    }
    _createClass$7(addEvents2, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var externalMutations = this.getExternalMutations(nextProps);
        var animating = this.props.animating || this.props.animate;
        var newMutation = !reactFastCompare(externalMutations, this.externalMutations);
        if (animating || newMutation) {
          this.cacheValues(this.getCalculatedValues(nextProps));
          this.externalMutations = externalMutations;
          this.applyExternalMutations(nextProps, externalMutations);
          return true;
        }
        var calculatedState = this.getStateChanges(nextProps);
        if (!reactFastCompare(this.calculatedState, calculatedState)) {
          this.cacheValues(this.getCalculatedValues(nextProps));
          return true;
        }
        if (!reactFastCompare(this.props, nextProps)) {
          this.cacheValues(this.getCalculatedValues(nextProps));
          return true;
        }
        return false;
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;
        var globalEventKeys = keys_1(this.globalEvents);
        globalEventKeys.forEach(function(key) {
          return _this2.addGlobalListener(key);
        });
        this.prevGlobalEventKeys = globalEventKeys;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this3 = this;
        var calculatedState = this.getStateChanges(prevProps);
        this.calculatedState = calculatedState;
        var globalEventKeys = keys_1(this.globalEvents);
        var removedGlobalEventKeys = difference_1(this.prevGlobalEventKeys, globalEventKeys);
        removedGlobalEventKeys.forEach(function(key) {
          return _this3.removeGlobalListener(key);
        });
        var addedGlobalEventKeys = difference_1(globalEventKeys, this.prevGlobalEventKeys);
        addedGlobalEventKeys.forEach(function(key) {
          return _this3.addGlobalListener(key);
        });
        this.prevGlobalEventKeys = globalEventKeys;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var _this4 = this;
        this.prevGlobalEventKeys.forEach(function(key) {
          return _this4.removeGlobalListener(key);
        });
      }
    }, {
      key: "addGlobalListener",
      value: function addGlobalListener(key) {
        var _this5 = this;
        var boundListener = function(event) {
          var listener = _this5.globalEvents[key];
          return listener && listener(Events.emulateReactEvent(event));
        };
        this.boundGlobalEvents[key] = boundListener;
        window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);
      }
    }, {
      key: "removeGlobalListener",
      value: function removeGlobalListener(key) {
        window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);
      }
    }, {
      key: "getStateChanges",
      value: function getStateChanges(props) {
        var _this6 = this;
        if (!this.hasEvents) {
          return {};
        }
        var getState = function(key, type3) {
          var result = defaults_1({}, _this6.getEventState(key, type3), _this6.getSharedEventState(key, type3));
          return isEmpty_1(result) ? void 0 : result;
        };
        options2 = options2 || {};
        var components = options2.components || defaultComponents;
        var stateChanges = components.map(function(component) {
          if (!props.standalone && component.name === "parent") {
            return void 0;
          } else {
            return component.index !== void 0 ? getState(component.index, component.name) : _this6.dataKeys.map(function(key) {
              return getState(key, component.name);
            }).filter(Boolean);
          }
        }).filter(Boolean);
        return stateChanges;
      }
    }, {
      key: "applyExternalMutations",
      value: function applyExternalMutations(props, externalMutations) {
        if (!isEmpty_1(externalMutations)) {
          var callbacks = props.externalEventMutations.reduce(function(memo, mutation) {
            memo = isFunction_1(mutation.callback) ? memo.concat(mutation.callback) : memo;
            return memo;
          }, []);
          var compiledCallbacks = callbacks.length ? function() {
            callbacks.forEach(function(c5) {
              return c5();
            });
          } : void 0;
          this.setState(externalMutations, compiledCallbacks);
        }
      }
    }, {
      key: "getCalculatedValues",
      value: function getCalculatedValues2(props) {
        var sharedEvents = props.sharedEvents;
        var components = WrappedComponent.expectedComponents;
        var componentEvents = Events.getComponentEvents(props, components);
        var getSharedEventState = sharedEvents && isFunction_1(sharedEvents.getEventState) ? sharedEvents.getEventState : function() {
          return void 0;
        };
        var baseProps2 = this.getBaseProps(props, getSharedEventState);
        var dataKeys = keys_1(baseProps2).filter(function(key) {
          return key !== "parent";
        });
        var hasEvents = props.events || props.sharedEvents || componentEvents;
        var events = this.getAllEvents(props);
        return {
          componentEvents,
          getSharedEventState,
          baseProps: baseProps2,
          dataKeys,
          hasEvents,
          events
        };
      }
    }, {
      key: "getExternalMutations",
      value: function getExternalMutations(props) {
        var sharedEvents = props.sharedEvents, externalEventMutations = props.externalEventMutations;
        return isEmpty_1(externalEventMutations) || sharedEvents ? void 0 : Events.getExternalMutations(externalEventMutations, this.baseProps, this.state);
      }
    }, {
      key: "cacheValues",
      value: function cacheValues(obj) {
        var _this7 = this;
        keys_1(obj).forEach(function(key) {
          _this7[key] = obj[key];
        });
      }
    }, {
      key: "getBaseProps",
      value: function getBaseProps2(props, getSharedEventState) {
        getSharedEventState = getSharedEventState || this.getSharedEventState;
        var sharedParentState = getSharedEventState("parent", "parent");
        var parentState = this.getEventState("parent", "parent");
        var baseParentProps = defaults_1({}, parentState, sharedParentState);
        var parentPropsList = baseParentProps.parentControlledProps;
        var parentProps = parentPropsList ? pick_1(baseParentProps, parentPropsList) : {};
        var modifiedProps = defaults_1({}, parentProps, props);
        return isFunction_1(WrappedComponent.getBaseProps) ? WrappedComponent.getBaseProps(modifiedProps) : {};
      }
    }, {
      key: "getAllEvents",
      value: function getAllEvents(props) {
        if (Array.isArray(this.componentEvents)) {
          var _componentEvents;
          return Array.isArray(props.events) ? (_componentEvents = this.componentEvents).concat.apply(_componentEvents, _toConsumableArray$6(props.events)) : this.componentEvents;
        }
        return props.events;
      }
    }, {
      key: "getComponentProps",
      value: function getComponentProps(component, type3, index4) {
        var name = this.props.name || WrappedComponent.role;
        var key = this.dataKeys && this.dataKeys[index4] || index4;
        var id3 = "".concat(name, "-").concat(type3, "-").concat(key);
        var baseProps2 = this.baseProps[key] && this.baseProps[key][type3] || this.baseProps[key];
        if (!baseProps2 && !this.hasEvents) {
          return void 0;
        }
        if (this.hasEvents) {
          var baseEvents = this.getEvents(this.props, type3, key);
          var componentProps = defaults_1({
            index: index4,
            key: id3
          }, this.getEventState(key, type3), this.getSharedEventState(key, type3), component.props, baseProps2, {
            id: id3
          });
          var events = defaults_1({}, Events.getPartialEvents(baseEvents, key, componentProps), componentProps.events);
          return assign_1({}, componentProps, {
            events
          });
        }
        return defaults_1({
          index: index4,
          key: id3
        }, component.props, baseProps2, {
          id: id3
        });
      }
    }, {
      key: "renderContainer",
      value: function renderContainer(component, children2) {
        var isContainer = component.type && component.type.role === "container";
        var parentProps = isContainer ? this.getComponentProps(component, "parent", "parent") : {};
        if (parentProps.events) {
          this.globalEvents = Events.getGlobalEvents(parentProps.events);
          parentProps.events = Events.omitGlobalEvents(parentProps.events);
        }
        return react.cloneElement(component, parentProps, children2);
      }
    }, {
      key: "animateComponent",
      value: function animateComponent(props, defaultAnimationWhitelist) {
        var animationWhitelist = props.animate && props.animate.animationWhitelist ? props.animate.animationWhitelist : defaultAnimationWhitelist;
        return react.createElement(VictoryTransition, {
          animate: props.animate,
          animationWhitelist
        }, react.createElement(this.constructor, props));
      }
    }, {
      key: "renderContinuousData",
      value: function renderContinuousData(props) {
        var _this8 = this;
        var dataComponent = props.dataComponent, labelComponent = props.labelComponent, groupComponent = props.groupComponent;
        var dataKeys = without_1(this.dataKeys, "all");
        var labelComponents = dataKeys.reduce(function(memo, key) {
          var labelProps = _this8.getComponentProps(labelComponent, "labels", key);
          if (labelProps && labelProps.text !== void 0 && labelProps.text !== null) {
            memo = memo.concat(react.cloneElement(labelComponent, labelProps));
          }
          return memo;
        }, []);
        var dataProps2 = this.getComponentProps(dataComponent, "data", "all");
        var children2 = [react.cloneElement(dataComponent, dataProps2)].concat(_toConsumableArray$6(labelComponents));
        return this.renderContainer(groupComponent, children2);
      }
    }, {
      key: "renderData",
      value: function renderData(props) {
        var _this9 = this;
        var shouldRenderDatum = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : datumHasXandY;
        var dataComponent = props.dataComponent, labelComponent = props.labelComponent, groupComponent = props.groupComponent;
        var dataComponents = this.dataKeys.reduce(function(validDataComponents, _dataKey, index4) {
          var dataProps2 = _this9.getComponentProps(dataComponent, "data", index4);
          if (shouldRenderDatum(dataProps2.datum)) {
            validDataComponents.push(react.cloneElement(dataComponent, dataProps2));
          }
          return validDataComponents;
        }, []);
        var labelComponents = this.dataKeys.map(function(_dataKey, index4) {
          var labelProps = _this9.getComponentProps(labelComponent, "labels", index4);
          if (labelProps.text !== void 0 && labelProps.text !== null) {
            return react.cloneElement(labelComponent, labelProps);
          }
          return void 0;
        }).filter(Boolean);
        var children2 = _toConsumableArray$6(dataComponents).concat(_toConsumableArray$6(labelComponents));
        return this.renderContainer(groupComponent, children2);
      }
    }]);
    return addEvents2;
  }(WrappedComponent);
};
function ascending3(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function bisector2(compare) {
  if (compare.length === 1)
    compare = ascendingComparator2(compare);
  return {
    left: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      }
      return lo;
    },
    right: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) > 0)
          hi2 = mid;
        else
          lo = mid + 1;
      }
      return lo;
    }
  };
}
function ascendingComparator2(f3) {
  return function(d2, x5) {
    return ascending3(f3(d2), x5);
  };
}
var ascendingBisect2 = bisector2(ascending3);
var bisectRight2 = ascendingBisect2.right;
function number4(x5) {
  return x5 === null ? NaN : +x5;
}
function sequence(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n3 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n3 < 3 ? 1 : +step;
  var i = -1, n3 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range7 = new Array(n3);
  while (++i < n3) {
    range7[i] = start2 + i * step;
  }
  return range7;
}
var e102 = Math.sqrt(50);
var e52 = Math.sqrt(10);
var e22 = Math.sqrt(2);
function ticks2(start2, stop, count2) {
  var reverse3, i = -1, n3, ticks4, step;
  stop = +stop, start2 = +start2, count2 = +count2;
  if (start2 === stop && count2 > 0)
    return [start2];
  if (reverse3 = stop < start2)
    n3 = start2, start2 = stop, stop = n3;
  if ((step = tickIncrement2(start2, stop, count2)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    start2 = Math.ceil(start2 / step);
    stop = Math.floor(stop / step);
    ticks4 = new Array(n3 = Math.ceil(stop - start2 + 1));
    while (++i < n3)
      ticks4[i] = (start2 + i) * step;
  } else {
    start2 = Math.floor(start2 * step);
    stop = Math.ceil(stop * step);
    ticks4 = new Array(n3 = Math.ceil(start2 - stop + 1));
    while (++i < n3)
      ticks4[i] = (start2 - i) / step;
  }
  if (reverse3)
    ticks4.reverse();
  return ticks4;
}
function tickIncrement2(start2, stop, count2) {
  var step = (stop - start2) / Math.max(0, count2), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e102 ? 10 : error >= e52 ? 5 : error >= e22 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e102 ? 10 : error >= e52 ? 5 : error >= e22 ? 2 : 1);
}
function tickStep2(start2, stop, count2) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e102)
    step1 *= 10;
  else if (error >= e52)
    step1 *= 5;
  else if (error >= e22)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}
function threshold2(values2, p3, valueof) {
  if (valueof == null)
    valueof = number4;
  if (!(n3 = values2.length))
    return;
  if ((p3 = +p3) <= 0 || n3 < 2)
    return +valueof(values2[0], 0, values2);
  if (p3 >= 1)
    return +valueof(values2[n3 - 1], n3 - 1, values2);
  var n3, i = (n3 - 1) * p3, i0 = Math.floor(i), value0 = +valueof(values2[i0], i0, values2), value1 = +valueof(values2[i0 + 1], i0 + 1, values2);
  return value0 + (value1 - value0) * (i - i0);
}
var array2 = Array.prototype;
var map3 = array2.map;
var slice3 = array2.slice;
var implicit2 = {name: "implicit"};
function ordinal2(range7) {
  var index4 = map2(), domain = [], unknown = implicit2;
  range7 = range7 == null ? [] : slice3.call(range7);
  function scale(d2) {
    var key = d2 + "", i = index4.get(key);
    if (!i) {
      if (unknown !== implicit2)
        return unknown;
      index4.set(key, i = domain.push(d2));
    }
    return range7[(i - 1) % range7.length];
  }
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index4 = map2();
    var i = -1, n3 = _2.length, d2, key;
    while (++i < n3)
      if (!index4.has(key = (d2 = _2[i]) + ""))
        index4.set(key, domain.push(d2));
    return scale;
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice3.call(_2), scale) : range7.slice();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal2().domain(domain).range(range7).unknown(unknown);
  };
  return scale;
}
function band2() {
  var scale = ordinal2().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, range7 = [0, 1], step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n3 = domain().length, reverse3 = range7[1] < range7[0], start2 = range7[reverse3 - 0], stop = range7[1 - reverse3];
    step = (stop - start2) / Math.max(1, n3 - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start2 += (stop - start2 - step * (n3 - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
    var values2 = sequence(n3).map(function(i) {
      return start2 + step * i;
    });
    return ordinalRange(reverse3 ? values2.reverse() : values2);
  }
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = [+_2[0], +_2[1]], rescale()) : range7.slice();
  };
  scale.rangeRound = function(_2) {
    return range7 = [+_2[0], +_2[1]], round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_2) {
    return arguments.length ? (round2 = !!_2, rescale()) : round2;
  };
  scale.padding = function(_2) {
    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _2)), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_2) {
    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _2)), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_2) {
    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _2)), rescale()) : paddingOuter;
  };
  scale.align = function(_2) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _2)), rescale()) : align;
  };
  scale.copy = function() {
    return band2().domain(domain()).range(range7).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return rescale();
}
function pointish2(scale) {
  var copy5 = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;
  scale.copy = function() {
    return pointish2(copy5());
  };
  return scale;
}
function point5() {
  return pointish2(band2().paddingInner(1));
}
function constant4(x5) {
  return function() {
    return x5;
  };
}
function number$13(x5) {
  return +x5;
}
var unit2 = [0, 1];
function deinterpolateLinear(a3, b10) {
  return (b10 -= a3 = +a3) ? function(x5) {
    return (x5 - a3) / b10;
  } : constant4(b10);
}
function deinterpolateClamp(deinterpolate3) {
  return function(a3, b10) {
    var d2 = deinterpolate3(a3 = +a3, b10 = +b10);
    return function(x5) {
      return x5 <= a3 ? 0 : x5 >= b10 ? 1 : d2(x5);
    };
  };
}
function reinterpolateClamp(reinterpolate4) {
  return function(a3, b10) {
    var r3 = reinterpolate4(a3 = +a3, b10 = +b10);
    return function(t4) {
      return t4 <= 0 ? a3 : t4 >= 1 ? b10 : r3(t4);
    };
  };
}
function bimap2(domain, range7, deinterpolate3, reinterpolate4) {
  var d0 = domain[0], d1 = domain[1], r0 = range7[0], r1 = range7[1];
  if (d1 < d0)
    d0 = deinterpolate3(d1, d0), r0 = reinterpolate4(r1, r0);
  else
    d0 = deinterpolate3(d0, d1), r0 = reinterpolate4(r0, r1);
  return function(x5) {
    return r0(d0(x5));
  };
}
function polymap2(domain, range7, deinterpolate3, reinterpolate4) {
  var j2 = Math.min(domain.length, range7.length) - 1, d2 = new Array(j2), r3 = new Array(j2), i = -1;
  if (domain[j2] < domain[0]) {
    domain = domain.slice().reverse();
    range7 = range7.slice().reverse();
  }
  while (++i < j2) {
    d2[i] = deinterpolate3(domain[i], domain[i + 1]);
    r3[i] = reinterpolate4(range7[i], range7[i + 1]);
  }
  return function(x5) {
    var i2 = bisectRight2(domain, x5, 1, j2) - 1;
    return r3[i2](d2[i2](x5));
  };
}
function copy3(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());
}
function continuous2(deinterpolate3, reinterpolate4) {
  var domain = unit2, range7 = unit2, interpolate3 = interpolateValue, clamp = false, piecewise3, output, input;
  function rescale() {
    piecewise3 = Math.min(domain.length, range7.length) > 2 ? polymap2 : bimap2;
    output = input = null;
    return scale;
  }
  function scale(x5) {
    return (output || (output = piecewise3(domain, range7, clamp ? deinterpolateClamp(deinterpolate3) : deinterpolate3, interpolate3)))(+x5);
  }
  scale.invert = function(y7) {
    return (input || (input = piecewise3(range7, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate4) : reinterpolate4)))(+y7);
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain = map3.call(_2, number$13), rescale()) : domain.slice();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice3.call(_2), rescale()) : range7.slice();
  };
  scale.rangeRound = function(_2) {
    return range7 = slice3.call(_2), interpolate3 = interpolateRound, rescale();
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = !!_2, rescale()) : clamp;
  };
  scale.interpolate = function(_2) {
    return arguments.length ? (interpolate3 = _2, rescale()) : interpolate3;
  };
  return rescale();
}
function formatDecimal2(x5) {
  return Math.abs(x5 = Math.round(x5)) >= 1e21 ? x5.toLocaleString("en").replace(/,/g, "") : x5.toString(10);
}
function formatDecimalParts2(x5, p3) {
  if ((i = (x5 = p3 ? x5.toExponential(p3 - 1) : x5.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x5.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x5.slice(i + 1)
  ];
}
function exponent$1(x5) {
  return x5 = formatDecimalParts2(Math.abs(x5)), x5 ? x5[1] : NaN;
}
function formatGroup2(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t4 = [], j2 = 0, g2 = grouping[0], length = 0;
    while (i > 0 && g2 > 0) {
      if (length + g2 + 1 > width)
        g2 = Math.max(1, width - length);
      t4.push(value2.substring(i -= g2, i + g2));
      if ((length += g2 + 1) > width)
        break;
      g2 = grouping[j2 = (j2 + 1) % grouping.length];
    }
    return t4.reverse().join(thousands);
  };
}
function formatNumerals2(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re3 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier2(specifier) {
  if (!(match2 = re3.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier2({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier2.prototype = FormatSpecifier2.prototype;
function FormatSpecifier2(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier2.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim2(s4) {
  out:
    for (var n3 = s4.length, i = 1, i0 = -1, i1; i < n3; ++i) {
      switch (s4[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s4[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
}
var prefixExponent2;
function formatPrefixAuto2(x5, p3) {
  var d2 = formatDecimalParts2(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1], i = exponent6 - (prefixExponent2 = Math.max(-8, Math.min(8, Math.floor(exponent6 / 3))) * 3) + 1, n3 = coefficient.length;
  return i === n3 ? coefficient : i > n3 ? coefficient + new Array(i - n3 + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts2(x5, Math.max(0, p3 + i - 1))[0];
}
function formatRounded2(x5, p3) {
  var d2 = formatDecimalParts2(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1];
  return exponent6 < 0 ? "0." + new Array(-exponent6).join("0") + coefficient : coefficient.length > exponent6 + 1 ? coefficient.slice(0, exponent6 + 1) + "." + coefficient.slice(exponent6 + 1) : coefficient + new Array(exponent6 - coefficient.length + 2).join("0");
}
var formatTypes2 = {
  "%": function(x5, p3) {
    return (x5 * 100).toFixed(p3);
  },
  b: function(x5) {
    return Math.round(x5).toString(2);
  },
  c: function(x5) {
    return x5 + "";
  },
  d: formatDecimal2,
  e: function(x5, p3) {
    return x5.toExponential(p3);
  },
  f: function(x5, p3) {
    return x5.toFixed(p3);
  },
  g: function(x5, p3) {
    return x5.toPrecision(p3);
  },
  o: function(x5) {
    return Math.round(x5).toString(8);
  },
  p: function(x5, p3) {
    return formatRounded2(x5 * 100, p3);
  },
  r: formatRounded2,
  s: formatPrefixAuto2,
  X: function(x5) {
    return Math.round(x5).toString(16).toUpperCase();
  },
  x: function(x5) {
    return Math.round(x5).toString(16);
  }
};
function identity6(x5) {
  return x5;
}
var map$1 = Array.prototype.map;
var prefixes2 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale3(locale6) {
  var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity6 : formatGroup2(map$1.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity6 : formatNumerals2(map$1.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus2 = locale6.minus === void 0 ? "-" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier2(specifier);
    var fill = specifier.fill, align = specifier.align, sign5 = specifier.sign, symbol2 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma2 = specifier.comma, precision = specifier.precision, trim = specifier.trim, type3 = specifier.type;
    if (type3 === "n")
      comma2 = true, type3 = "g";
    else if (!formatTypes2[type3])
      precision === void 0 && (precision = 12), trim = true, type3 = "g";
    if (zero3 || fill === "0" && align === "=")
      zero3 = true, fill = "0", align = "=";
    var prefix3 = symbol2 === "$" ? currencyPrefix : symbol2 === "#" && /[boxX]/.test(type3) ? "0" + type3.toLowerCase() : "", suffix2 = symbol2 === "$" ? currencySuffix : /[%p]/.test(type3) ? percent : "";
    var formatType = formatTypes2[type3], maybeSuffix = /[defgprs%]/.test(type3);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type3) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format6(value2) {
      var valuePrefix = prefix3, valueSuffix = suffix2, i, n3, c5;
      if (type3 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim)
          value2 = formatTrim2(value2);
        if (valueNegative && +value2 === 0 && sign5 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign5 === "(" ? sign5 : minus2 : sign5 === "-" || sign5 === "(" ? "" : sign5) + valuePrefix;
        valueSuffix = (type3 === "s" ? prefixes2[8 + prefixExponent2 / 3] : "") + valueSuffix + (valueNegative && sign5 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n3 = value2.length;
          while (++i < n3) {
            if (c5 = value2.charCodeAt(i), 48 > c5 || c5 > 57) {
              valueSuffix = (c5 === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma2 && !zero3)
        value2 = group(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding2 = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma2 && zero3)
        value2 = group(padding2 + value2, padding2.length ? width - valueSuffix.length : Infinity), padding2 = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding2;
          break;
        case "=":
          value2 = valuePrefix + padding2 + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding2.slice(0, length = padding2.length >> 1) + valuePrefix + value2 + valueSuffix + padding2.slice(length);
          break;
        default:
          value2 = padding2 + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format6.toString = function() {
      return specifier + "";
    };
    return format6;
  }
  function formatPrefix4(specifier, value2) {
    var f3 = newFormat((specifier = formatSpecifier2(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent$1(value2) / 3))) * 3, k6 = Math.pow(10, -e3), prefix3 = prefixes2[8 + e3 / 3];
    return function(value3) {
      return f3(k6 * value3) + prefix3;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix4
  };
}
var locale3;
var format3;
var formatPrefix2;
defaultLocale3({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});
function defaultLocale3(definition) {
  locale3 = formatLocale3(definition);
  format3 = locale3.format;
  formatPrefix2 = locale3.formatPrefix;
  return locale3;
}
function precisionFixed2(step) {
  return Math.max(0, -exponent$1(Math.abs(step)));
}
function precisionPrefix2(step, value2) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value2) / 3))) * 3 - exponent$1(Math.abs(step)));
}
function precisionRound2(step, max6) {
  step = Math.abs(step), max6 = Math.abs(max6) - step;
  return Math.max(0, exponent$1(max6) - exponent$1(step)) + 1;
}
function tickFormat2(domain, count2, specifier) {
  var start2 = domain[0], stop = domain[domain.length - 1], step = tickStep2(start2, stop, count2 == null ? 10 : count2), precision;
  specifier = formatSpecifier2(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value2 = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix2(step, value2)))
        specifier.precision = precision;
      return formatPrefix2(specifier, value2);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound2(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed2(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format3(specifier);
}
function linearish2(scale) {
  var domain = scale.domain;
  scale.ticks = function(count2) {
    var d2 = domain();
    return ticks2(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2);
  };
  scale.tickFormat = function(count2, specifier) {
    return tickFormat2(domain(), count2, specifier);
  };
  scale.nice = function(count2) {
    if (count2 == null)
      count2 = 10;
    var d2 = domain(), i0 = 0, i1 = d2.length - 1, start2 = d2[i0], stop = d2[i1], step;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    step = tickIncrement2(start2, stop, count2);
    if (step > 0) {
      start2 = Math.floor(start2 / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = tickIncrement2(start2, stop, count2);
    } else if (step < 0) {
      start2 = Math.ceil(start2 * step) / step;
      stop = Math.floor(stop * step) / step;
      step = tickIncrement2(start2, stop, count2);
    }
    if (step > 0) {
      d2[i0] = Math.floor(start2 / step) * step;
      d2[i1] = Math.ceil(stop / step) * step;
      domain(d2);
    } else if (step < 0) {
      d2[i0] = Math.ceil(start2 * step) / step;
      d2[i1] = Math.floor(stop * step) / step;
      domain(d2);
    }
    return scale;
  };
  return scale;
}
function linear$12() {
  var scale = continuous2(deinterpolateLinear, reinterpolate);
  scale.copy = function() {
    return copy3(scale, linear$12());
  };
  return linearish2(scale);
}
function identity$13() {
  var domain = [0, 1];
  function scale(x5) {
    return +x5;
  }
  scale.invert = scale;
  scale.domain = scale.range = function(_2) {
    return arguments.length ? (domain = map3.call(_2, number$13), scale) : domain.slice();
  };
  scale.copy = function() {
    return identity$13().domain(domain);
  };
  return linearish2(scale);
}
function nice2(domain, interval3) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x03 = domain[i0], x14 = domain[i1], t4;
  if (x14 < x03) {
    t4 = i0, i0 = i1, i1 = t4;
    t4 = x03, x03 = x14, x14 = t4;
  }
  domain[i0] = interval3.floor(x03);
  domain[i1] = interval3.ceil(x14);
  return domain;
}
function deinterpolate(a3, b10) {
  return (b10 = Math.log(b10 / a3)) ? function(x5) {
    return Math.log(x5 / a3) / b10;
  } : constant4(b10);
}
function reinterpolate2(a3, b10) {
  return a3 < 0 ? function(t4) {
    return -Math.pow(-b10, t4) * Math.pow(-a3, 1 - t4);
  } : function(t4) {
    return Math.pow(b10, t4) * Math.pow(a3, 1 - t4);
  };
}
function pow102(x5) {
  return isFinite(x5) ? +("1e" + x5) : x5 < 0 ? 0 : x5;
}
function powp2(base) {
  return base === 10 ? pow102 : base === Math.E ? Math.exp : function(x5) {
    return Math.pow(base, x5);
  };
}
function logp2(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function(x5) {
    return Math.log(x5) / base;
  });
}
function reflect2(f3) {
  return function(x5) {
    return -f3(-x5);
  };
}
function log4() {
  var scale = continuous2(deinterpolate, reinterpolate2).domain([1, 10]), domain = scale.domain, base = 10, logs = logp2(10), pows = powp2(10);
  function rescale() {
    logs = logp2(base), pows = powp2(base);
    if (domain()[0] < 0)
      logs = reflect2(logs), pows = reflect2(pows);
    return scale;
  }
  scale.base = function(_2) {
    return arguments.length ? (base = +_2, rescale()) : base;
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.ticks = function(count2) {
    var d2 = domain(), u2 = d2[0], v3 = d2[d2.length - 1], r3;
    if (r3 = v3 < u2)
      i = u2, u2 = v3, v3 = i;
    var i = logs(u2), j2 = logs(v3), p3, k6, t4, n3 = count2 == null ? 10 : +count2, z3 = [];
    if (!(base % 1) && j2 - i < n3) {
      i = Math.round(i) - 1, j2 = Math.round(j2) + 1;
      if (u2 > 0)
        for (; i < j2; ++i) {
          for (k6 = 1, p3 = pows(i); k6 < base; ++k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
      else
        for (; i < j2; ++i) {
          for (k6 = base - 1, p3 = pows(i); k6 >= 1; --k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
    } else {
      z3 = ticks2(i, j2, Math.min(j2 - i, n3)).map(pows);
    }
    return r3 ? z3.reverse() : z3;
  };
  scale.tickFormat = function(count2, specifier) {
    if (specifier == null)
      specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function")
      specifier = format3(specifier);
    if (count2 === Infinity)
      return specifier;
    if (count2 == null)
      count2 = 10;
    var k6 = Math.max(1, base * count2 / scale.ticks().length);
    return function(d2) {
      var i = d2 / pows(Math.round(logs(d2)));
      if (i * base < base - 0.5)
        i *= base;
      return i <= k6 ? specifier(d2) : "";
    };
  };
  scale.nice = function() {
    return domain(nice2(domain(), {
      floor: function(x5) {
        return pows(Math.floor(logs(x5)));
      },
      ceil: function(x5) {
        return pows(Math.ceil(logs(x5)));
      }
    }));
  };
  scale.copy = function() {
    return copy3(scale, log4().base(base));
  };
  return scale;
}
function raise2(x5, exponent6) {
  return x5 < 0 ? -Math.pow(-x5, exponent6) : Math.pow(x5, exponent6);
}
function pow2() {
  var exponent6 = 1, scale = continuous2(deinterpolate3, reinterpolate4), domain = scale.domain;
  function deinterpolate3(a3, b10) {
    return (b10 = raise2(b10, exponent6) - (a3 = raise2(a3, exponent6))) ? function(x5) {
      return (raise2(x5, exponent6) - a3) / b10;
    } : constant4(b10);
  }
  function reinterpolate4(a3, b10) {
    b10 = raise2(b10, exponent6) - (a3 = raise2(a3, exponent6));
    return function(t4) {
      return raise2(a3 + b10 * t4, 1 / exponent6);
    };
  }
  scale.exponent = function(_2) {
    return arguments.length ? (exponent6 = +_2, domain(domain())) : exponent6;
  };
  scale.copy = function() {
    return copy3(scale, pow2().exponent(exponent6));
  };
  return linearish2(scale);
}
function sqrt6() {
  return pow2().exponent(0.5);
}
function quantile2() {
  var domain = [], range7 = [], thresholds = [];
  function rescale() {
    var i = 0, n3 = Math.max(1, range7.length);
    thresholds = new Array(n3 - 1);
    while (++i < n3)
      thresholds[i - 1] = threshold2(domain, i / n3);
    return scale;
  }
  function scale(x5) {
    if (!isNaN(x5 = +x5))
      return range7[bisectRight2(thresholds, x5)];
  }
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [];
    for (var i = 0, n3 = _2.length, d2; i < n3; ++i)
      if (d2 = _2[i], d2 != null && !isNaN(d2 = +d2))
        domain.push(d2);
    domain.sort(ascending3);
    return rescale();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice3.call(_2), rescale()) : range7.slice();
  };
  scale.quantiles = function() {
    return thresholds.slice();
  };
  scale.copy = function() {
    return quantile2().domain(domain).range(range7);
  };
  return scale;
}
function quantize2() {
  var x03 = 0, x14 = 1, n3 = 1, domain = [0.5], range7 = [0, 1];
  function scale(x5) {
    if (x5 <= x5)
      return range7[bisectRight2(domain, x5, 0, n3)];
  }
  function rescale() {
    var i = -1;
    domain = new Array(n3);
    while (++i < n3)
      domain[i] = ((i + 1) * x14 - (i - n3) * x03) / (n3 + 1);
    return scale;
  }
  scale.domain = function(_2) {
    return arguments.length ? (x03 = +_2[0], x14 = +_2[1], rescale()) : [x03, x14];
  };
  scale.range = function(_2) {
    return arguments.length ? (n3 = (range7 = slice3.call(_2)).length - 1, rescale()) : range7.slice();
  };
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x03, domain[0]] : i >= n3 ? [domain[n3 - 1], x14] : [domain[i - 1], domain[i]];
  };
  scale.copy = function() {
    return quantize2().domain([x03, x14]).range(range7);
  };
  return linearish2(scale);
}
function threshold$1() {
  var domain = [0.5], range7 = [0, 1], n3 = 1;
  function scale(x5) {
    if (x5 <= x5)
      return range7[bisectRight2(domain, x5, 0, n3)];
  }
  scale.domain = function(_2) {
    return arguments.length ? (domain = slice3.call(_2), n3 = Math.min(domain.length, range7.length - 1), scale) : domain.slice();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice3.call(_2), n3 = Math.min(domain.length, range7.length - 1), scale) : range7.slice();
  };
  scale.invertExtent = function(y7) {
    var i = range7.indexOf(y7);
    return [domain[i - 1], domain[i]];
  };
  scale.copy = function() {
    return threshold$1().domain(domain).range(range7);
  };
  return scale;
}
function localDate2(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date6.setFullYear(d2.y);
    return date6;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate2(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date6.setUTCFullYear(d2.y);
    return date6;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate2(y7, m3, d2) {
  return {y: y7, m: m3, d: d2, H: 0, M: 0, S: 0, L: 0};
}
function formatLocale$1(locale6) {
  var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
  var periodRe = formatRe2(locale_periods), periodLookup = formatLookup2(locale_periods), weekdayRe = formatRe2(locale_weekdays), weekdayLookup = formatLookup2(locale_weekdays), shortWeekdayRe = formatRe2(locale_shortWeekdays), shortWeekdayLookup = formatLookup2(locale_shortWeekdays), monthRe = formatRe2(locale_months), monthLookup = formatLookup2(locale_months), shortMonthRe = formatRe2(locale_shortMonths), shortMonthLookup = formatLookup2(locale_shortMonths);
  var formats = {
    a: formatShortWeekday,
    A: formatWeekday,
    b: formatShortMonth,
    B: formatMonth,
    c: null,
    d: formatDayOfMonth2,
    e: formatDayOfMonth2,
    f: formatMicroseconds2,
    g: formatYearISO2,
    G: formatFullYearISO2,
    H: formatHour242,
    I: formatHour122,
    j: formatDayOfYear2,
    L: formatMilliseconds2,
    m: formatMonthNumber2,
    M: formatMinutes2,
    p: formatPeriod,
    q: formatQuarter,
    Q: formatUnixTimestamp2,
    s: formatUnixTimestampSeconds2,
    S: formatSeconds2,
    u: formatWeekdayNumberMonday2,
    U: formatWeekNumberSunday2,
    V: formatWeekNumberISO2,
    w: formatWeekdayNumberSunday2,
    W: formatWeekNumberMonday2,
    x: null,
    X: null,
    y: formatYear3,
    Y: formatFullYear2,
    Z: formatZone2,
    "%": formatLiteralPercent2
  };
  var utcFormats = {
    a: formatUTCShortWeekday,
    A: formatUTCWeekday,
    b: formatUTCShortMonth,
    B: formatUTCMonth,
    c: null,
    d: formatUTCDayOfMonth2,
    e: formatUTCDayOfMonth2,
    f: formatUTCMicroseconds2,
    g: formatUTCYearISO2,
    G: formatUTCFullYearISO2,
    H: formatUTCHour242,
    I: formatUTCHour122,
    j: formatUTCDayOfYear2,
    L: formatUTCMilliseconds2,
    m: formatUTCMonthNumber2,
    M: formatUTCMinutes2,
    p: formatUTCPeriod,
    q: formatUTCQuarter,
    Q: formatUnixTimestamp2,
    s: formatUnixTimestampSeconds2,
    S: formatUTCSeconds2,
    u: formatUTCWeekdayNumberMonday2,
    U: formatUTCWeekNumberSunday2,
    V: formatUTCWeekNumberISO2,
    w: formatUTCWeekdayNumberSunday2,
    W: formatUTCWeekNumberMonday2,
    x: null,
    X: null,
    y: formatUTCYear2,
    Y: formatUTCFullYear2,
    Z: formatUTCZone2,
    "%": formatLiteralPercent2
  };
  var parses = {
    a: parseShortWeekday,
    A: parseWeekday,
    b: parseShortMonth,
    B: parseMonth,
    c: parseLocaleDateTime,
    d: parseDayOfMonth2,
    e: parseDayOfMonth2,
    f: parseMicroseconds2,
    g: parseYear2,
    G: parseFullYear2,
    H: parseHour242,
    I: parseHour242,
    j: parseDayOfYear2,
    L: parseMilliseconds2,
    m: parseMonthNumber2,
    M: parseMinutes2,
    p: parsePeriod,
    q: parseQuarter2,
    Q: parseUnixTimestamp2,
    s: parseUnixTimestampSeconds2,
    S: parseSeconds2,
    u: parseWeekdayNumberMonday2,
    U: parseWeekNumberSunday2,
    V: parseWeekNumberISO2,
    w: parseWeekdayNumberSunday2,
    W: parseWeekNumberMonday2,
    x: parseLocaleDate,
    X: parseLocaleTime,
    y: parseYear2,
    Y: parseFullYear2,
    Z: parseZone2,
    "%": parseLiteralPercent2
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date6) {
      var string2 = [], i = -1, j2 = 0, n3 = specifier.length, c5, pad6, format6;
      if (!(date6 instanceof Date))
        date6 = new Date(+date6);
      while (++i < n3) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j2, i));
          if ((pad6 = pads2[c5 = specifier.charAt(++i)]) != null)
            c5 = specifier.charAt(++i);
          else
            pad6 = c5 === "e" ? " " : "0";
          if (format6 = formats2[c5])
            c5 = format6(date6, pad6);
          string2.push(c5);
          j2 = i + 1;
        }
      }
      string2.push(specifier.slice(j2, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z4) {
    return function(string2) {
      var d2 = newDate2(1900, void 0, 1), i = parseSpecifier(d2, specifier, string2 += "", 0), week, day$1;
      if (i != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z4 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate2(newDate2(d2.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate2(newDate2(d2.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
          week = day.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day$1 = "Z" in d2 ? utcDate2(newDate2(d2.y, 0, 1)).getUTCDay() : localDate2(newDate2(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day$1 + 5) % 7 : d2.w + d2.U * 7 - (day$1 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate2(d2);
      }
      return localDate2(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j2) {
    var i = 0, n3 = specifier.length, m3 = string2.length, c5, parse2;
    while (i < n3) {
      if (j2 >= m3)
        return -1;
      c5 = specifier.charCodeAt(i++);
      if (c5 === 37) {
        c5 = specifier.charAt(i++);
        parse2 = parses[c5 in pads2 ? specifier.charAt(i++) : c5];
        if (!parse2 || (j2 = parse2(d2, string2, j2)) < 0)
          return -1;
      } else if (c5 != string2.charCodeAt(j2++)) {
        return -1;
      }
    }
    return j2;
  }
  function parsePeriod(d2, string2, i) {
    var n3 = periodRe.exec(string2.slice(i));
    return n3 ? (d2.p = periodLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i) {
    var n3 = shortWeekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = shortWeekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseWeekday(d2, string2, i) {
    var n3 = weekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = weekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i) {
    var n3 = shortMonthRe.exec(string2.slice(i));
    return n3 ? (d2.m = shortMonthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseMonth(d2, string2, i) {
    var n3 = monthRe.exec(string2.slice(i));
    return n3 ? (d2.m = monthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i) {
    return parseSpecifier(d2, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d2, string2, i) {
    return parseSpecifier(d2, locale_date, string2, i);
  }
  function parseLocaleTime(d2, string2, i) {
    return parseSpecifier(d2, locale_time, string2, i);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f3 = newFormat(specifier += "", formats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    parse: function(specifier) {
      var p3 = newParse(specifier += "", false);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    },
    utcFormat: function(specifier) {
      var f3 = newFormat(specifier += "", utcFormats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    utcParse: function(specifier) {
      var p3 = newParse(specifier += "", true);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    }
  };
}
var pads2 = {"-": "", _: " ", "0": "0"};
var numberRe2 = /^\s*\d+/;
var percentRe2 = /^%/;
var requoteRe2 = /[\\^$*+?|[\]().{}]/g;
function pad3(value2, fill, width) {
  var sign5 = value2 < 0 ? "-" : "", string2 = (sign5 ? -value2 : value2) + "", length = string2.length;
  return sign5 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote2(s4) {
  return s4.replace(requoteRe2, "\\$&");
}
function formatRe2(names) {
  return new RegExp("^(?:" + names.map(requote2).join("|") + ")", "i");
}
function formatLookup2(names) {
  var map7 = {}, i = -1, n3 = names.length;
  while (++i < n3)
    map7[names[i].toLowerCase()] = i;
  return map7;
}
function parseWeekdayNumberSunday2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 1));
  return n3 ? (d2.w = +n3[0], i + n3[0].length) : -1;
}
function parseWeekdayNumberMonday2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 1));
  return n3 ? (d2.u = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberSunday2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.U = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberISO2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.V = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberMonday2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.W = +n3[0], i + n3[0].length) : -1;
}
function parseFullYear2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 4));
  return n3 ? (d2.y = +n3[0], i + n3[0].length) : -1;
}
function parseYear2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.y = +n3[0] + (+n3[0] > 68 ? 1900 : 2e3), i + n3[0].length) : -1;
}
function parseZone2(d2, string2, i) {
  var n3 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n3 ? (d2.Z = n3[1] ? 0 : -(n3[2] + (n3[3] || "00")), i + n3[0].length) : -1;
}
function parseQuarter2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 1));
  return n3 ? (d2.q = n3[0] * 3 - 3, i + n3[0].length) : -1;
}
function parseMonthNumber2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.m = n3[0] - 1, i + n3[0].length) : -1;
}
function parseDayOfMonth2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseDayOfYear2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 3));
  return n3 ? (d2.m = 0, d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseHour242(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.H = +n3[0], i + n3[0].length) : -1;
}
function parseMinutes2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.M = +n3[0], i + n3[0].length) : -1;
}
function parseSeconds2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 2));
  return n3 ? (d2.S = +n3[0], i + n3[0].length) : -1;
}
function parseMilliseconds2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 3));
  return n3 ? (d2.L = +n3[0], i + n3[0].length) : -1;
}
function parseMicroseconds2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i, i + 6));
  return n3 ? (d2.L = Math.floor(n3[0] / 1e3), i + n3[0].length) : -1;
}
function parseLiteralPercent2(d2, string2, i) {
  var n3 = percentRe2.exec(string2.slice(i, i + 1));
  return n3 ? i + n3[0].length : -1;
}
function parseUnixTimestamp2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i));
  return n3 ? (d2.Q = +n3[0], i + n3[0].length) : -1;
}
function parseUnixTimestampSeconds2(d2, string2, i) {
  var n3 = numberRe2.exec(string2.slice(i));
  return n3 ? (d2.s = +n3[0], i + n3[0].length) : -1;
}
function formatDayOfMonth2(d2, p3) {
  return pad3(d2.getDate(), p3, 2);
}
function formatHour242(d2, p3) {
  return pad3(d2.getHours(), p3, 2);
}
function formatHour122(d2, p3) {
  return pad3(d2.getHours() % 12 || 12, p3, 2);
}
function formatDayOfYear2(d2, p3) {
  return pad3(1 + day.count(year(d2), d2), p3, 3);
}
function formatMilliseconds2(d2, p3) {
  return pad3(d2.getMilliseconds(), p3, 3);
}
function formatMicroseconds2(d2, p3) {
  return formatMilliseconds2(d2, p3) + "000";
}
function formatMonthNumber2(d2, p3) {
  return pad3(d2.getMonth() + 1, p3, 2);
}
function formatMinutes2(d2, p3) {
  return pad3(d2.getMinutes(), p3, 2);
}
function formatSeconds2(d2, p3) {
  return pad3(d2.getSeconds(), p3, 2);
}
function formatWeekdayNumberMonday2(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday2(d2, p3) {
  return pad3(sunday.count(year(d2) - 1, d2), p3, 2);
}
function dISO2(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO2(d2, p3) {
  d2 = dISO2(d2);
  return pad3(thursday.count(year(d2), d2) + (year(d2).getDay() === 4), p3, 2);
}
function formatWeekdayNumberSunday2(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday2(d2, p3) {
  return pad3(monday.count(year(d2) - 1, d2), p3, 2);
}
function formatYear3(d2, p3) {
  return pad3(d2.getFullYear() % 100, p3, 2);
}
function formatYearISO2(d2, p3) {
  d2 = dISO2(d2);
  return pad3(d2.getFullYear() % 100, p3, 2);
}
function formatFullYear2(d2, p3) {
  return pad3(d2.getFullYear() % 1e4, p3, 4);
}
function formatFullYearISO2(d2, p3) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad3(d2.getFullYear() % 1e4, p3, 4);
}
function formatZone2(d2) {
  var z3 = d2.getTimezoneOffset();
  return (z3 > 0 ? "-" : (z3 *= -1, "+")) + pad3(z3 / 60 | 0, "0", 2) + pad3(z3 % 60, "0", 2);
}
function formatUTCDayOfMonth2(d2, p3) {
  return pad3(d2.getUTCDate(), p3, 2);
}
function formatUTCHour242(d2, p3) {
  return pad3(d2.getUTCHours(), p3, 2);
}
function formatUTCHour122(d2, p3) {
  return pad3(d2.getUTCHours() % 12 || 12, p3, 2);
}
function formatUTCDayOfYear2(d2, p3) {
  return pad3(1 + utcDay.count(utcYear(d2), d2), p3, 3);
}
function formatUTCMilliseconds2(d2, p3) {
  return pad3(d2.getUTCMilliseconds(), p3, 3);
}
function formatUTCMicroseconds2(d2, p3) {
  return formatUTCMilliseconds2(d2, p3) + "000";
}
function formatUTCMonthNumber2(d2, p3) {
  return pad3(d2.getUTCMonth() + 1, p3, 2);
}
function formatUTCMinutes2(d2, p3) {
  return pad3(d2.getUTCMinutes(), p3, 2);
}
function formatUTCSeconds2(d2, p3) {
  return pad3(d2.getUTCSeconds(), p3, 2);
}
function formatUTCWeekdayNumberMonday2(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday2(d2, p3) {
  return pad3(utcSunday.count(utcYear(d2) - 1, d2), p3, 2);
}
function UTCdISO2(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO2(d2, p3) {
  d2 = UTCdISO2(d2);
  return pad3(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p3, 2);
}
function formatUTCWeekdayNumberSunday2(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday2(d2, p3) {
  return pad3(utcMonday.count(utcYear(d2) - 1, d2), p3, 2);
}
function formatUTCYear2(d2, p3) {
  return pad3(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCYearISO2(d2, p3) {
  d2 = UTCdISO2(d2);
  return pad3(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCFullYear2(d2, p3) {
  return pad3(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCFullYearISO2(d2, p3) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad3(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCZone2() {
  return "+0000";
}
function formatLiteralPercent2() {
  return "%";
}
function formatUnixTimestamp2(d2) {
  return +d2;
}
function formatUnixTimestampSeconds2(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale$1;
var timeFormat2;
var utcFormat2;
defaultLocale$1({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale$1(definition) {
  locale$1 = formatLocale$1(definition);
  timeFormat2 = locale$1.format;
  locale$1.parse;
  utcFormat2 = locale$1.utcFormat;
  locale$1.utcParse;
  return locale$1;
}
var durationSecond4 = 1e3;
var durationMinute4 = durationSecond4 * 60;
var durationHour4 = durationMinute4 * 60;
var durationDay4 = durationHour4 * 24;
var durationWeek4 = durationDay4 * 7;
var durationMonth2 = durationDay4 * 30;
var durationYear2 = durationDay4 * 365;
function date4(t4) {
  return new Date(t4);
}
function number$2(t4) {
  return t4 instanceof Date ? +t4 : +new Date(+t4);
}
function calendar2(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6) {
  var scale = continuous2(deinterpolateLinear, reinterpolate), invert2 = scale.invert, domain = scale.domain;
  var formatMillisecond = format6(".%L"), formatSecond = format6(":%S"), formatMinute = format6("%I:%M"), formatHour = format6("%I %p"), formatDay = format6("%a %d"), formatWeek = format6("%b %d"), formatMonth = format6("%B"), formatYear6 = format6("%Y");
  var tickIntervals = [
    [second3, 1, durationSecond4],
    [second3, 5, 5 * durationSecond4],
    [second3, 15, 15 * durationSecond4],
    [second3, 30, 30 * durationSecond4],
    [minute3, 1, durationMinute4],
    [minute3, 5, 5 * durationMinute4],
    [minute3, 15, 15 * durationMinute4],
    [minute3, 30, 30 * durationMinute4],
    [hour3, 1, durationHour4],
    [hour3, 3, 3 * durationHour4],
    [hour3, 6, 6 * durationHour4],
    [hour3, 12, 12 * durationHour4],
    [day3, 1, durationDay4],
    [day3, 2, 2 * durationDay4],
    [week, 1, durationWeek4],
    [month3, 1, durationMonth2],
    [month3, 3, 3 * durationMonth2],
    [year3, 1, durationYear2]
  ];
  function tickFormat4(date6) {
    return (second3(date6) < date6 ? formatMillisecond : minute3(date6) < date6 ? formatSecond : hour3(date6) < date6 ? formatMinute : day3(date6) < date6 ? formatHour : month3(date6) < date6 ? week(date6) < date6 ? formatDay : formatWeek : year3(date6) < date6 ? formatMonth : formatYear6)(date6);
  }
  function tickInterval(interval3, start2, stop, step) {
    if (interval3 == null)
      interval3 = 10;
    if (typeof interval3 === "number") {
      var target = Math.abs(stop - start2) / interval3, i = bisector2(function(i2) {
        return i2[2];
      }).right(tickIntervals, target);
      if (i === tickIntervals.length) {
        step = tickStep2(start2 / durationYear2, stop / durationYear2, interval3);
        interval3 = year3;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval3 = i[0];
      } else {
        step = Math.max(tickStep2(start2, stop, interval3), 1);
        interval3 = millisecond3;
      }
    }
    return step == null ? interval3 : interval3.every(step);
  }
  scale.invert = function(y7) {
    return new Date(invert2(y7));
  };
  scale.domain = function(_2) {
    return arguments.length ? domain(map3.call(_2, number$2)) : domain().map(date4);
  };
  scale.ticks = function(interval3, step) {
    var d2 = domain(), t04 = d2[0], t14 = d2[d2.length - 1], r3 = t14 < t04, t4;
    if (r3)
      t4 = t04, t04 = t14, t14 = t4;
    t4 = tickInterval(interval3, t04, t14, step);
    t4 = t4 ? t4.range(t04, t14 + 1) : [];
    return r3 ? t4.reverse() : t4;
  };
  scale.tickFormat = function(count2, specifier) {
    return specifier == null ? tickFormat4 : format6(specifier);
  };
  scale.nice = function(interval3, step) {
    var d2 = domain();
    return (interval3 = tickInterval(interval3, d2[0], d2[d2.length - 1], step)) ? domain(nice2(d2, interval3)) : scale;
  };
  scale.copy = function() {
    return copy3(scale, calendar2(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6));
  };
  return scale;
}
function time2() {
  return calendar2(year, month, sunday, day, hour, minute, second, millisecond, timeFormat2).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]);
}
function utcTime2() {
  return calendar2(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, utcFormat2).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]);
}
function colors$2(s4) {
  return s4.match(/.{6}/g).map(function(x5) {
    return "#" + x5;
  });
}
var category10 = colors$2("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
var category20b = colors$2("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
var category20c = colors$2("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
var category20 = colors$2("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
var cubehelix3 = cubehelixLong(cubehelix(300, 0.5, 0), cubehelix(-240, 0.5, 1));
var warm2 = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
var cool2 = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
var rainbow = cubehelix();
function rainbow$1(t4) {
  if (t4 < 0 || t4 > 1)
    t4 -= Math.floor(t4);
  var ts = Math.abs(t4 - 0.5);
  rainbow.h = 360 * t4 - 100;
  rainbow.s = 1.5 - 1.5 * ts;
  rainbow.l = 0.8 - 0.9 * ts;
  return rainbow + "";
}
function ramp2(range7) {
  var n3 = range7.length;
  return function(t4) {
    return range7[Math.max(0, Math.min(n3 - 1, Math.floor(t4 * n3)))];
  };
}
var viridis = ramp2(colors$2("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
var magma2 = ramp2(colors$2("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
var inferno2 = ramp2(colors$2("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
var plasma2 = ramp2(colors$2("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
function sequential2(interpolator) {
  var x03 = 0, x14 = 1, clamp = false;
  function scale(x5) {
    var t4 = (x5 - x03) / (x14 - x03);
    return interpolator(clamp ? Math.max(0, Math.min(1, t4)) : t4);
  }
  scale.domain = function(_2) {
    return arguments.length ? (x03 = +_2[0], x14 = +_2[1], scale) : [x03, x14];
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = !!_2, scale) : clamp;
  };
  scale.interpolator = function(_2) {
    return arguments.length ? (interpolator = _2, scale) : interpolator;
  };
  scale.copy = function() {
    return sequential2(interpolator).domain([x03, x14]).clamp(clamp);
  };
  return linearish2(scale);
}
var d3Scale = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  scaleBand: band2,
  scalePoint: point5,
  scaleIdentity: identity$13,
  scaleLinear: linear$12,
  scaleLog: log4,
  scaleOrdinal: ordinal2,
  scaleImplicit: implicit2,
  scalePow: pow2,
  scaleSqrt: sqrt6,
  scaleQuantile: quantile2,
  scaleQuantize: quantize2,
  scaleThreshold: threshold$1,
  scaleTime: time2,
  scaleUtc: utcTime2,
  schemeCategory10: category10,
  schemeCategory20b: category20b,
  schemeCategory20c: category20c,
  schemeCategory20: category20,
  interpolateCubehelixDefault: cubehelix3,
  interpolateRainbow: rainbow$1,
  interpolateWarm: warm2,
  interpolateCool: cool2,
  interpolateViridis: viridis,
  interpolateMagma: magma2,
  interpolateInferno: inferno2,
  interpolatePlasma: plasma2,
  scaleSequential: sequential2
});
var supportedScaleStrings = ["linear", "time", "log", "sqrt"];
function toNewName(scale) {
  var capitalize = function(s4) {
    return s4 && s4[0].toUpperCase() + s4.slice(1);
  };
  return "scale".concat(capitalize(scale));
}
function validScale(scale) {
  if (typeof scale === "function") {
    return isFunction_1(scale.copy) && isFunction_1(scale.domain) && isFunction_1(scale.range);
  } else if (typeof scale === "string") {
    return includes_1(supportedScaleStrings, scale);
  }
  return false;
}
function isScaleDefined(props, axis2) {
  if (!props.scale) {
    return false;
  } else if (props.scale.x || props.scale.y) {
    return props.scale[axis2] ? true : false;
  }
  return true;
}
function getScaleTypeFromProps(props, axis2) {
  if (!isScaleDefined(props, axis2)) {
    return void 0;
  }
  var scale = props.scale[axis2] || props.scale;
  return typeof scale === "string" ? scale : getType(scale);
}
function getScaleFromDomain(props, axis2) {
  var domain;
  if (props.domain && props.domain[axis2]) {
    domain = props.domain[axis2];
  } else if (props.domain && Array.isArray(props.domain)) {
    domain = props.domain;
  }
  if (!domain) {
    return void 0;
  }
  return Collection.containsDates(domain) ? "time" : "linear";
}
function getScaleTypeFromData(props, axis2) {
  if (!props.data) {
    return "linear";
  }
  var accessor = Helpers.createAccessor(props[axis2]);
  var axisData = props.data.map(function(datum2) {
    var processedData = isPlainObject_1(accessor(datum2)) ? accessor(datum2)[axis2] : accessor(datum2);
    return processedData !== void 0 ? processedData : datum2[axis2];
  });
  return Collection.containsDates(axisData) ? "time" : "linear";
}
function getScaleFromName(name) {
  return validScale(name) ? d3Scale[toNewName(name)]() : linear$12();
}
function getBaseScale(props, axis2) {
  var scale = getScaleFromProps(props, axis2);
  if (scale) {
    return typeof scale === "string" ? getScaleFromName(scale) : scale;
  }
  var defaultScale = getScaleFromDomain(props, axis2) || getScaleTypeFromData(props, axis2);
  return d3Scale[toNewName(defaultScale)]();
}
function getDefaultScale() {
  return linear$12();
}
function getScaleFromProps(props, axis2) {
  if (!isScaleDefined(props, axis2)) {
    return void 0;
  }
  var scale = props.scale[axis2] || props.scale;
  if (validScale(scale)) {
    return isFunction_1(scale) ? scale : d3Scale[toNewName(scale)]();
  }
  return void 0;
}
function getScaleType(props, axis2) {
  return getScaleTypeFromProps(props, axis2) || getScaleTypeFromData(props, axis2);
}
function getType(scale) {
  if (typeof scale === "string") {
    return scale;
  }
  var duckTypes = [{
    name: "log",
    method: "base"
  }, {
    name: "ordinal",
    method: "unknown"
  }, {
    name: "pow-sqrt",
    method: "exponent"
  }, {
    name: "quantile",
    method: "quantiles"
  }, {
    name: "quantize-threshold",
    method: "invertExtent"
  }];
  var scaleType = duckTypes.filter(function(type3) {
    return scale[type3.method] !== void 0;
  })[0];
  return scaleType ? scaleType.name : void 0;
}
var Scale = {
  getBaseScale,
  getDefaultScale,
  getScaleFromProps,
  getScaleType,
  getType,
  getScaleFromName
};
var Immutable = {
  IMMUTABLE_ITERABLE: "@@__IMMUTABLE_ITERABLE__@@",
  IMMUTABLE_RECORD: "@@__IMMUTABLE_RECORD__@@",
  IMMUTABLE_LIST: "@@__IMMUTABLE_LIST__@@",
  IMMUTABLE_MAP: "@@__IMMUTABLE_MAP__@@",
  isImmutable: function(x5) {
    return this.isIterable(x5) || this.isRecord(x5);
  },
  isIterable: function(x5) {
    return !!(x5 && x5[this.IMMUTABLE_ITERABLE]);
  },
  isRecord: function(x5) {
    return !!(x5 && x5[this.IMMUTABLE_RECORD]);
  },
  isList: function(x5) {
    return !!(x5 && x5[this.IMMUTABLE_LIST]);
  },
  isMap: function(x5) {
    return !!(x5 && x5[this.IMMUTABLE_MAP]);
  },
  shallowToJS: function(x5, whitelist) {
    var _this = this;
    return this.isIterable(x5) ? x5.reduce(function(prev, curr, key) {
      if (whitelist && whitelist[key]) {
        curr = _this.shallowToJS(curr);
      }
      prev[key] = curr;
      return prev;
    }, this.isList(x5) ? [] : {}) : x5;
  }
};
function _toConsumableArray$7(arr) {
  return _arrayWithoutHoles$7(arr) || _iterableToArray$7(arr) || _nonIterableSpread$7();
}
function _nonIterableSpread$7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$7(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$7(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function parseDatum(datum2) {
  var immutableDatumWhitelist = {
    errorX: true,
    errorY: true
  };
  return Immutable.isImmutable(datum2) ? Immutable.shallowToJS(datum2, immutableDatumWhitelist) : datum2;
}
function getLength(data3) {
  return Immutable.isIterable(data3) ? data3.size : data3.length;
}
function generateDataArray(props, axis2) {
  var propsDomain = isPlainObject_1(props.domain) ? props.domain[axis2] : props.domain;
  var domain = propsDomain || Scale.getBaseScale(props, axis2).domain();
  var samples = props.samples || 1;
  var domainMax = Math.max.apply(Math, _toConsumableArray$7(domain));
  var domainMin = Math.min.apply(Math, _toConsumableArray$7(domain));
  var step = (domainMax - domainMin) / samples;
  var values2 = range_1(domainMin, domainMax, step);
  return last_1(values2) === domainMax ? values2 : values2.concat(domainMax);
}
function sortData(dataset, sortKey) {
  var sortOrder = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "ascending";
  if (!sortKey) {
    return dataset;
  }
  if (sortKey === "x" || sortKey === "y") {
    sortKey = "_".concat(sortKey);
  }
  var order = sortOrder === "ascending" ? "asc" : "desc";
  return orderBy_1(dataset, sortKey, order);
}
function cleanData(dataset, props) {
  var smallNumber = 1 / Number.MAX_SAFE_INTEGER;
  var scaleType = {
    x: Scale.getScaleType(props, "x"),
    y: Scale.getScaleType(props, "y")
  };
  if (scaleType.x !== "log" && scaleType.y !== "log") {
    return dataset;
  }
  var rules = function(datum2, axis2) {
    return scaleType[axis2] === "log" ? datum2["_".concat(axis2)] !== 0 : true;
  };
  var sanitize = function(datum2) {
    var _x = rules(datum2, "x") ? datum2._x : smallNumber;
    var _y = rules(datum2, "y") ? datum2._y : smallNumber;
    var _y0 = rules(datum2, "y0") ? datum2._y0 : smallNumber;
    return assign_1({}, datum2, {
      _x,
      _y,
      _y0
    });
  };
  return dataset.map(function(datum2) {
    if (rules(datum2, "x") && rules(datum2, "y") && rules(datum2, "y0")) {
      return datum2;
    }
    return sanitize(datum2);
  });
}
function getEventKey(key) {
  if (isFunction_1(key)) {
    return key;
  } else if (key === null || key === void 0) {
    return function() {
      return void 0;
    };
  }
  return property_1(key);
}
function addEventKeys(props, data3) {
  var hasEventKeyAccessor = !!props.eventKey;
  var eventKeyAccessor = getEventKey(props.eventKey);
  return data3.map(function(datum2, index4) {
    if (datum2.eventKey !== void 0) {
      return datum2;
    } else if (hasEventKeyAccessor) {
      var eventKey = eventKeyAccessor(datum2, index4);
      return eventKey !== void 0 ? assign_1({
        eventKey
      }, datum2) : datum2;
    } else {
      return datum2;
    }
  });
}
function createStringMap(props, axis2) {
  var stringsFromAxes = getStringsFromAxes(props, axis2);
  var stringsFromCategories = getStringsFromCategories(props, axis2);
  var stringsFromData = getStringsFromData(props, axis2);
  var allStrings = uniq_1(_toConsumableArray$7(stringsFromAxes).concat(_toConsumableArray$7(stringsFromCategories), _toConsumableArray$7(stringsFromData)));
  return allStrings.length === 0 ? null : allStrings.reduce(function(memo, string2, index4) {
    memo[string2] = index4 + 1;
    return memo;
  }, {});
}
function downsample(data3, maxPoints) {
  var startingIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  var dataLength = getLength(data3);
  if (dataLength > maxPoints) {
    var k6 = Math.pow(2, Math.ceil(Math.log2(dataLength / maxPoints)));
    return data3.filter(function(d2, i) {
      return (i + startingIndex) % k6 === 0;
    });
  }
  return data3;
}
function formatData(dataset, props, expectedKeys) {
  var isArrayOrIterable = Array.isArray(dataset) || Immutable.isIterable(dataset);
  if (!isArrayOrIterable || getLength(dataset) < 1) {
    return [];
  }
  var defaultKeys = ["x", "y", "y0"];
  expectedKeys = Array.isArray(expectedKeys) ? expectedKeys : defaultKeys;
  var createAccessor2 = function(name) {
    return Helpers.createAccessor(props[name] !== void 0 ? props[name] : name);
  };
  var accessor = expectedKeys.reduce(function(memo, type3) {
    memo[type3] = createAccessor2(type3);
    return memo;
  }, {});
  var preformattedData = isEqual_1(expectedKeys, defaultKeys) && props.x === "_x" && props.y === "_y" && props.y0 === "_y0";
  var stringMap;
  if (preformattedData === false) {
    stringMap = {
      x: expectedKeys.indexOf("x") !== -1 ? createStringMap(props, "x") : void 0,
      y: expectedKeys.indexOf("y") !== -1 ? createStringMap(props, "y") : void 0,
      y0: expectedKeys.indexOf("y0") !== -1 ? createStringMap(props, "y") : void 0
    };
  }
  var data3 = preformattedData ? dataset : dataset.reduce(function(dataArr, datum2, index4) {
    datum2 = parseDatum(datum2);
    var fallbackValues = {
      x: index4,
      y: datum2
    };
    var processedValues = expectedKeys.reduce(function(memo, type3) {
      var processedValue = accessor[type3](datum2);
      var value2 = processedValue !== void 0 ? processedValue : fallbackValues[type3];
      if (value2 !== void 0) {
        if (typeof value2 === "string" && stringMap[type3]) {
          memo["".concat(type3, "Name")] = value2;
          memo["_".concat(type3)] = stringMap[type3][value2];
        } else {
          memo["_".concat(type3)] = value2;
        }
      }
      return memo;
    }, {});
    var formattedDatum = assign_1({}, processedValues, datum2);
    if (!isEmpty_1(formattedDatum)) {
      dataArr.push(formattedDatum);
    }
    return dataArr;
  }, []);
  var sortedData = sortData(data3, props.sortKey, props.sortOrder);
  var cleanedData = cleanData(sortedData, props);
  return addEventKeys(props, cleanedData);
}
function generateData(props) {
  var xValues = generateDataArray(props, "x");
  var yValues = generateDataArray(props, "y");
  var values2 = xValues.map(function(x5, i) {
    return {
      x: x5,
      y: yValues[i]
    };
  });
  return values2;
}
function getCategories(props, axis2) {
  return props.categories && !Array.isArray(props.categories) ? props.categories[axis2] : props.categories;
}
function getData(props) {
  return props.data ? formatData(props.data, props) : formatData(generateData(props), props);
}
function getStringsFromAxes(props, axis2) {
  var tickValues = props.tickValues, tickFormat4 = props.tickFormat;
  var tickValueArray;
  if (!tickValues || !Array.isArray(tickValues) && !tickValues[axis2]) {
    tickValueArray = tickFormat4 && Array.isArray(tickFormat4) ? tickFormat4 : [];
  } else {
    tickValueArray = tickValues[axis2] || tickValues;
  }
  return tickValueArray.filter(function(val) {
    return typeof val === "string";
  });
}
function getStringsFromCategories(props, axis2) {
  if (!props.categories) {
    return [];
  }
  var categories = getCategories(props, axis2);
  var categoryStrings = categories && categories.filter(function(val) {
    return typeof val === "string";
  });
  return categoryStrings ? Collection.removeUndefined(categoryStrings) : [];
}
function getStringsFromData(props, axis2) {
  var isArrayOrIterable = Array.isArray(props.data) || Immutable.isIterable(props.data);
  if (!isArrayOrIterable) {
    return [];
  }
  var key = props[axis2] === void 0 ? axis2 : props[axis2];
  var accessor = Helpers.createAccessor(key);
  var data3 = props.data.reduce(function(memo, d2) {
    memo.push(parseDatum(d2));
    return memo;
  }, []);
  var sortedData = sortData(data3, props.sortKey, props.sortOrder);
  var dataStrings = sortedData.reduce(function(dataArr, datum2) {
    datum2 = parseDatum(datum2);
    dataArr.push(accessor(datum2));
    return dataArr;
  }, []).filter(function(datum2) {
    return typeof datum2 === "string";
  });
  return dataStrings.reduce(function(prev, curr) {
    if (curr !== void 0 && curr !== null && prev.indexOf(curr) === -1) {
      prev.push(curr);
    }
    return prev;
  }, []);
}
function isDataComponent(component) {
  var getRole = function(child) {
    return child && child.type ? child.type.role : "";
  };
  var role = getRole(component);
  if (role === "portal") {
    var children2 = react.Children.toArray(component.props.children);
    role = children2.length ? getRole(children2[0]) : "";
  }
  var whitelist = ["area", "bar", "boxplot", "candlestick", "errorbar", "group", "histogram", "line", "pie", "scatter", "stack", "voronoi"];
  return includes_1(whitelist, role);
}
var Data = {
  createStringMap,
  downsample,
  formatData,
  generateData,
  getCategories,
  getData,
  getStringsFromAxes,
  getStringsFromCategories,
  getStringsFromData,
  isDataComponent
};
var DefaultTransitions = {
  continuousTransitions: function() {
    return {
      onLoad: {
        duration: 2e3
      },
      onExit: {
        duration: 500
      },
      onEnter: {
        duration: 500
      }
    };
  },
  continuousPolarTransitions: function() {
    return {
      onLoad: {
        duration: 2e3,
        before: function() {
          return {
            _y: 0,
            _y1: 0,
            _y0: 0
          };
        },
        after: function(datum2) {
          return {
            _y: datum2._y,
            _y1: datum2._y1,
            _y0: datum2._y0
          };
        }
      },
      onExit: {
        duration: 500,
        before: function(datum2, index4, data3) {
          var adjacent = function(attr) {
            var adj = index4 === 0 ? data3[index4 + 1] : data3[index4 - 1];
            return adj[attr];
          };
          return {
            _x: adjacent("_x"),
            _y: adjacent("_y"),
            _y0: adjacent("_y0")
          };
        }
      },
      onEnter: {
        duration: 500,
        before: function(datum2, index4, data3) {
          var adjacent = function(attr) {
            var adj = index4 === 0 ? data3[index4 + 1] : data3[index4 - 1];
            return adj[attr];
          };
          return {
            _x: adjacent("_x"),
            _y: adjacent("_y"),
            _y0: adjacent("_y0")
          };
        },
        after: function(datum2) {
          return {
            _x: datum2._x,
            _y: datum2._y,
            _y1: datum2._y1,
            _y0: datum2._y0
          };
        }
      }
    };
  },
  discreteTransitions: function() {
    return {
      onLoad: {
        duration: 2e3,
        before: function() {
          return {
            opacity: 0
          };
        },
        after: function(datum2) {
          return datum2;
        }
      },
      onExit: {
        duration: 600,
        before: function() {
          return {
            opacity: 0
          };
        }
      },
      onEnter: {
        duration: 600,
        before: function() {
          return {
            opacity: 0
          };
        },
        after: function(datum2) {
          return datum2;
        }
      }
    };
  }
};
var dateTag2 = "[object Date]";
function baseIsDate(value2) {
  return isObjectLike_1(value2) && _baseGetTag(value2) == dateTag2;
}
var _baseIsDate = baseIsDate;
var nodeIsDate = _nodeUtil && _nodeUtil.isDate;
var isDate = nodeIsDate ? _baseUnary(nodeIsDate) : _baseIsDate;
var isDate_1 = isDate;
function baseSortedUniq(array5, iteratee) {
  var index4 = -1, length = array5.length, resIndex = 0, result = [];
  while (++index4 < length) {
    var value2 = array5[index4], computed = iteratee ? iteratee(value2) : value2;
    if (!index4 || !eq_1(computed, seen)) {
      var seen = computed;
      result[resIndex++] = value2 === 0 ? 0 : value2;
    }
  }
  return result;
}
var _baseSortedUniq = baseSortedUniq;
function sortedUniq(array5) {
  return array5 && array5.length ? _baseSortedUniq(array5) : [];
}
var sortedUniq_1 = sortedUniq;
function _toConsumableArray$8(arr) {
  return _arrayWithoutHoles$8(arr) || _iterableToArray$8(arr) || _nonIterableSpread$8();
}
function _nonIterableSpread$8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$8(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$8(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function cleanDomain(domain, props, axis2) {
  var scaleType = Scale.getScaleType(props, axis2);
  if (scaleType !== "log") {
    return domain;
  }
  var rules = function(dom) {
    var almostZero = dom[0] < 0 || dom[1] < 0 ? -1 / Number.MAX_SAFE_INTEGER : 1 / Number.MAX_SAFE_INTEGER;
    var domainOne = dom[0] === 0 ? almostZero : dom[0];
    var domainTwo = dom[1] === 0 ? almostZero : dom[1];
    return [domainOne, domainTwo];
  };
  return rules(domain);
}
function getDomainPadding(props, axis2) {
  var formatPadding = function(padding2) {
    return Array.isArray(padding2) ? {
      left: padding2[0],
      right: padding2[1]
    } : {
      left: padding2,
      right: padding2
    };
  };
  return isPlainObject_1(props.domainPadding) ? formatPadding(props.domainPadding[axis2]) : formatPadding(props.domainPadding);
}
function getFlatData(dataset, axis2) {
  return flatten_1(dataset).map(function(datum2) {
    return datum2["_".concat(axis2)] && datum2["_".concat(axis2)][1] !== void 0 ? datum2["_".concat(axis2)][1] : datum2["_".concat(axis2)];
  });
}
function getExtremeFromData(dataset, axis2) {
  var type3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "min";
  var getExtreme = function(arr) {
    return type3 === "max" ? Math.max.apply(Math, _toConsumableArray$8(arr)) : Math.min.apply(Math, _toConsumableArray$8(arr));
  };
  var initialValue = type3 === "max" ? -Infinity : Infinity;
  var containsDate = false;
  var result = flatten_1(dataset).reduce(function(memo, datum2) {
    var current0 = datum2["_".concat(axis2, "0")] !== void 0 ? datum2["_".concat(axis2, "0")] : datum2["_".concat(axis2)];
    var current1 = datum2["_".concat(axis2, "1")] !== void 0 ? datum2["_".concat(axis2, "1")] : datum2["_".concat(axis2)];
    var current = getExtreme([current0, current1]);
    containsDate = containsDate || current0 instanceof Date || current1 instanceof Date;
    return getExtreme([memo, current]);
  }, initialValue);
  return containsDate ? new Date(result) : result;
}
function padDomain(domain, props, axis2) {
  if (!props.domainPadding) {
    return domain;
  }
  var minDomain = getMinFromProps(props, axis2);
  var maxDomain = getMaxFromProps(props, axis2);
  var padding2 = getDomainPadding(props, axis2);
  if (!padding2.left && !padding2.right) {
    return domain;
  }
  var min5 = Collection.getMinValue(domain);
  var max6 = Collection.getMaxValue(domain);
  var currentAxis = Helpers.getCurrentAxis(axis2, props.horizontal);
  var range7 = Helpers.getRange(props, currentAxis);
  var rangeExtent = Math.abs(range7[0] - range7[1]);
  var initialPadding = {
    left: Math.abs(max6 - min5) * padding2.left / rangeExtent,
    right: Math.abs(max6 - min5) * padding2.right / rangeExtent
  };
  var singleQuadrantDomainPadding = isPlainObject_1(props.singleQuadrantDomainPadding) ? props.singleQuadrantDomainPadding[axis2] : props.singleQuadrantDomainPadding;
  var adjust2 = function(val, type3) {
    if (singleQuadrantDomainPadding === false) {
      return val;
    }
    var coerce = type3 === "min" && min5 >= 0 && val <= 0 || type3 === "max" && max6 <= 0 && val >= 0;
    return coerce ? 0 : val;
  };
  var adjustedDomain = {
    min: adjust2(min5.valueOf() - initialPadding.left, "min"),
    max: adjust2(max6.valueOf() + initialPadding.right, "max")
  };
  var finalPadding = {
    left: Math.abs(adjustedDomain.max - adjustedDomain.min) * padding2.left / rangeExtent,
    right: Math.abs(adjustedDomain.max - adjustedDomain.min) * padding2.right / rangeExtent
  };
  var paddedDomain = {
    min: adjust2(min5.valueOf() - finalPadding.left, "min"),
    max: adjust2(max6.valueOf() + finalPadding.right, "max")
  };
  var finalDomain = {
    min: minDomain !== void 0 ? minDomain : paddedDomain.min,
    max: maxDomain !== void 0 ? maxDomain : paddedDomain.max
  };
  return min5 instanceof Date || max6 instanceof Date ? getDomainFromMinMax(new Date(finalDomain.min), new Date(finalDomain.max)) : getDomainFromMinMax(finalDomain.min, finalDomain.max);
}
function createDomainFunction(getDomainFromDataFunction, formatDomainFunction) {
  getDomainFromDataFunction = isFunction_1(getDomainFromDataFunction) ? getDomainFromDataFunction : getDomainFromData;
  formatDomainFunction = isFunction_1(formatDomainFunction) ? formatDomainFunction : formatDomain;
  return function(props, axis2) {
    var propsDomain = getDomainFromProps(props, axis2);
    if (propsDomain) {
      return formatDomainFunction(propsDomain, props, axis2);
    }
    var categories = Data.getCategories(props, axis2);
    var domain = categories ? getDomainFromCategories(props, axis2, categories) : getDomainFromDataFunction(props, axis2);
    return domain ? formatDomainFunction(domain, props, axis2) : void 0;
  };
}
function formatDomain(domain, props, axis2) {
  return cleanDomain(padDomain(domain, props, axis2), props, axis2);
}
function getDomain(props, axis2) {
  return createDomainFunction()(props, axis2);
}
function getDomainFromCategories(props, axis2, categories) {
  categories = categories || Data.getCategories(props, axis2);
  var polar = props.polar, _props$startAngle = props.startAngle, startAngle = _props$startAngle === void 0 ? 0 : _props$startAngle, _props$endAngle = props.endAngle, endAngle = _props$endAngle === void 0 ? 360 : _props$endAngle;
  if (!categories) {
    return void 0;
  }
  var minDomain = getMinFromProps(props, axis2);
  var maxDomain = getMaxFromProps(props, axis2);
  var stringArray = Collection.containsStrings(categories) ? Data.getStringsFromCategories(props, axis2) : [];
  var stringMap = stringArray.length === 0 ? null : stringArray.reduce(function(memo, string2, index4) {
    memo[string2] = index4 + 1;
    return memo;
  }, {});
  var categoryValues = stringMap ? categories.map(function(value2) {
    return stringMap[value2];
  }) : categories;
  var min5 = minDomain !== void 0 ? minDomain : Collection.getMinValue(categoryValues);
  var max6 = maxDomain !== void 0 ? maxDomain : Collection.getMaxValue(categoryValues);
  var categoryDomain = getDomainFromMinMax(min5, max6);
  return polar && axis2 === "x" && Math.abs(startAngle - endAngle) === 360 ? getSymmetricDomain(categoryDomain, categoryValues) : categoryDomain;
}
function getDomainFromData(props, axis2, dataset) {
  dataset = dataset || Data.getData(props);
  var polar = props.polar, _props$startAngle2 = props.startAngle, startAngle = _props$startAngle2 === void 0 ? 0 : _props$startAngle2, _props$endAngle2 = props.endAngle, endAngle = _props$endAngle2 === void 0 ? 360 : _props$endAngle2;
  var minDomain = getMinFromProps(props, axis2);
  var maxDomain = getMaxFromProps(props, axis2);
  if (dataset.length < 1) {
    return minDomain !== void 0 && maxDomain !== void 0 ? getDomainFromMinMax(minDomain, maxDomain) : void 0;
  }
  var min5 = minDomain !== void 0 ? minDomain : getExtremeFromData(dataset, axis2, "min");
  var max6 = maxDomain !== void 0 ? maxDomain : getExtremeFromData(dataset, axis2, "max");
  var domain = getDomainFromMinMax(min5, max6);
  return polar && axis2 === "x" && Math.abs(startAngle - endAngle) === 360 ? getSymmetricDomain(domain, getFlatData(dataset, axis2)) : domain;
}
function getDomainFromMinMax(min5, max6) {
  var getSinglePointDomain = function(val) {
    var verySmallNumber = val === 0 ? 2 * Math.pow(10, -10) : Math.pow(10, -10);
    var verySmallDate = 1;
    var minVal = val instanceof Date ? new Date(+val - verySmallDate) : +val - verySmallNumber;
    var maxVal = val instanceof Date ? new Date(+val + verySmallDate) : +val + verySmallNumber;
    return val === 0 ? [0, maxVal] : [minVal, maxVal];
  };
  return +min5 === +max6 ? getSinglePointDomain(max6) : [min5, max6];
}
function getDomainFromProps(props, axis2) {
  var minDomain = getMinFromProps(props, axis2);
  var maxDomain = getMaxFromProps(props, axis2);
  if (isPlainObject_1(props.domain) && props.domain[axis2]) {
    return props.domain[axis2];
  } else if (Array.isArray(props.domain)) {
    return props.domain;
  } else if (minDomain !== void 0 && maxDomain !== void 0) {
    return getDomainFromMinMax(minDomain, maxDomain);
  }
  return void 0;
}
function getDomainWithZero(props, axis2) {
  var propsDomain = getDomainFromProps(props, axis2);
  if (propsDomain) {
    return propsDomain;
  }
  var dataset = Data.getData(props);
  var y0Min = dataset.reduce(function(min5, datum2) {
    return datum2._y0 < min5 ? datum2._y0 : min5;
  }, Infinity);
  var ensureZero = function(domain) {
    if (axis2 === "x") {
      return domain;
    }
    var defaultMin = y0Min !== Infinity ? y0Min : 0;
    var maxDomainProp = getMaxFromProps(props, axis2);
    var minDomainProp = getMinFromProps(props, axis2);
    var max6 = maxDomainProp !== void 0 ? maxDomainProp : Collection.getMaxValue(domain, defaultMin);
    var min5 = minDomainProp !== void 0 ? minDomainProp : Collection.getMinValue(domain, defaultMin);
    return getDomainFromMinMax(min5, max6);
  };
  var getDomainFunction = function() {
    return getDomainFromData(props, axis2, dataset);
  };
  var formatDomainFunction = function(domain) {
    return formatDomain(ensureZero(domain), props, axis2);
  };
  return createDomainFunction(getDomainFunction, formatDomainFunction)(props, axis2);
}
function getMaxFromProps(props, axis2) {
  if (isPlainObject_1(props.maxDomain) && props.maxDomain[axis2] !== void 0) {
    return props.maxDomain[axis2];
  }
  return typeof props.maxDomain === "number" || isDate_1(props.maxDomain) ? props.maxDomain : void 0;
}
function getMinFromProps(props, axis2) {
  if (isPlainObject_1(props.minDomain) && props.minDomain[axis2] !== void 0) {
    return props.minDomain[axis2];
  }
  return typeof props.minDomain === "number" || isDate_1(props.minDomain) ? props.minDomain : void 0;
}
function getSymmetricDomain(domain, values2) {
  var processedData = sortedUniq_1(values2.sort(function(a3, b10) {
    return a3 - b10;
  }));
  var step = processedData[1] - processedData[0];
  return [domain[0], domain[1] + step];
}
function isDomainComponent(component) {
  var getRole = function(child) {
    return child && child.type ? child.type.role : "";
  };
  var role = getRole(component);
  if (role === "portal") {
    var children2 = react.Children.toArray(component.props.children);
    role = children2.length ? getRole(children2[0]) : "";
  }
  var whitelist = ["area", "axis", "bar", "boxplot", "candlestick", "errorbar", "group", "histogram", "line", "pie", "scatter", "stack", "voronoi"];
  return includes_1(whitelist, role);
}
var Domain = {
  createDomainFunction,
  formatDomain,
  getDomain,
  getDomainFromCategories,
  getDomainFromData,
  getDomainFromMinMax,
  getDomainFromProps,
  getDomainWithZero,
  getMaxFromProps,
  getMinFromProps,
  getSymmetricDomain,
  isDomainComponent
};
function transformTarget(target, matrix, dimension) {
  var a3 = matrix.a, d2 = matrix.d, e3 = matrix.e, f3 = matrix.f;
  return dimension === "y" ? d2 * target + f3 : a3 * target + e3;
}
function getTransformationMatrix(svg2) {
  return svg2.getScreenCTM().inverse();
}
function getParentSVG(evt) {
  if (evt.nativeEvent && evt.nativeEvent.identifier !== void 0) {
    return void 0;
  }
  var getParent = function(target) {
    if (target.nodeName === "svg") {
      return target;
    } else {
      return target.parentNode ? getParent(target.parentNode) : target;
    }
  };
  return getParent(evt.target);
}
function getSVGEventCoordinates(evt, svg2) {
  if (evt.nativeEvent && evt.nativeEvent.identifier !== void 0) {
    return {
      x: evt.nativeEvent.locationX,
      y: evt.nativeEvent.locationY
    };
  }
  evt = evt.changedTouches && evt.changedTouches.length ? evt.changedTouches[0] : evt;
  svg2 = svg2 || getParentSVG(evt);
  var matrix = getTransformationMatrix(svg2);
  return {
    x: transformTarget(evt.clientX, matrix, "x"),
    y: transformTarget(evt.clientY, matrix, "y")
  };
}
function getDomainCoordinates(props, domain) {
  var scale = props.scale, horizontal = props.horizontal;
  domain = domain || {
    x: scale.x.domain(),
    y: scale.y.domain()
  };
  return {
    x: horizontal ? [scale.y(domain.y[0]), scale.y(domain.y[1])] : [scale.x(domain.x[0]), scale.x(domain.x[1])],
    y: horizontal ? [scale.x(domain.x[0]), scale.x(domain.x[1])] : [scale.y(domain.y[0]), scale.y(domain.y[1])]
  };
}
function getDataCoordinates(props, scale, x5, y7) {
  var polar = props.polar, horizontal = props.horizontal;
  if (!polar) {
    return {
      x: horizontal ? scale.x.invert(y7) : scale.x.invert(x5),
      y: horizontal ? scale.y.invert(x5) : scale.y.invert(y7)
    };
  } else {
    var origin = props.origin || {
      x: 0,
      y: 0
    };
    var baseX = x5 - origin.x;
    var baseY = y7 - origin.y;
    var radius = Math.abs(baseX * Math.sqrt(1 + Math.pow(-baseY / baseX, 2)));
    var angle = (-Math.atan2(baseY, baseX) + Math.PI * 2) % (Math.PI * 2);
    return {
      x: scale.x.invert(angle),
      y: scale.y.invert(radius)
    };
  }
}
function getBounds(props) {
  var x14 = props.x1, x22 = props.x2, y14 = props.y1, y22 = props.y2, scale = props.scale;
  var point1 = getDataCoordinates(props, scale, x14, y14);
  var point22 = getDataCoordinates(props, scale, x22, y22);
  var makeBound = function(a3, b10) {
    return [Collection.getMinValue([a3, b10]), Collection.getMaxValue([a3, b10])];
  };
  return {
    x: makeBound(point1.x, point22.x),
    y: makeBound(point1.y, point22.y)
  };
}
var Selection2 = {
  getParentSVG,
  getSVGEventCoordinates,
  getDomainCoordinates,
  getDataCoordinates,
  getBounds
};
function arrayAggregator(array5, setter, iteratee, accumulator) {
  var index4 = -1, length = array5 == null ? 0 : array5.length;
  while (++index4 < length) {
    var value2 = array5[index4];
    setter(accumulator, value2, iteratee(value2), array5);
  }
  return accumulator;
}
var _arrayAggregator = arrayAggregator;
function baseAggregator(collection, setter, iteratee, accumulator) {
  _baseEach(collection, function(value2, key, collection2) {
    setter(accumulator, value2, iteratee(value2), collection2);
  });
  return accumulator;
}
var _baseAggregator = baseAggregator;
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray_1(collection) ? _arrayAggregator : _baseAggregator, accumulator = initializer ? initializer() : {};
    return func(collection, setter, _baseIteratee(iteratee), accumulator);
  };
}
var _createAggregator = createAggregator;
var objectProto$33 = Object.prototype;
var hasOwnProperty$32 = objectProto$33.hasOwnProperty;
var groupBy = _createAggregator(function(result, value2, key) {
  if (hasOwnProperty$32.call(result, key)) {
    result[key].push(value2);
  } else {
    _baseAssignValue(result, key, [value2]);
  }
});
var groupBy_1 = groupBy;
function baseInverter(object2, setter, iteratee, accumulator) {
  _baseForOwn(object2, function(value2, key, object3) {
    setter(accumulator, iteratee(value2), key, object3);
  });
  return accumulator;
}
var _baseInverter = baseInverter;
function createInverter(setter, toIteratee) {
  return function(object2, iteratee) {
    return _baseInverter(object2, setter, toIteratee(iteratee), {});
  };
}
var _createInverter = createInverter;
var objectProto$42 = Object.prototype;
var nativeObjectToString2 = objectProto$42.toString;
var invert = _createInverter(function(result, value2, key) {
  if (value2 != null && typeof value2.toString != "function") {
    value2 = nativeObjectToString2.call(value2);
  }
  result[value2] = key;
}, constant_1(identity_1));
var invert_1 = invert;
function _toConsumableArray$9(arr) {
  return _arrayWithoutHoles$9(arr) || _iterableToArray$9(arr) || _nonIterableSpread$9();
}
function _nonIterableSpread$9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$9(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$9(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function getAxis(props) {
  var dependentAxis = props.dependentAxis;
  return dependentAxis ? "y" : "x";
}
function findAxisComponents(childComponents, predicate) {
  predicate = predicate || identity_1;
  var findAxes = function(children2) {
    return children2.reduce(function(memo, child) {
      if (child.type && child.type.role === "axis" && predicate(child)) {
        return memo.concat(child);
      } else if (child.props && child.props.children) {
        return memo.concat(findAxes(react.Children.toArray(child.props.children)));
      }
      return memo;
    }, []);
  };
  return findAxes(childComponents);
}
function getAxisComponent(childComponents, axis2) {
  var matchesAxis = function(component) {
    var type3 = component.type.getAxis(component.props);
    return type3 === axis2;
  };
  return findAxisComponents(childComponents, matchesAxis)[0];
}
function getAxisComponentsWithParent(childComponents, type3) {
  var matchesType = function(child) {
    return type3 === "dependent" ? child.props.dependentAxis : !child.props.dependentAxis;
  };
  var findComponents = function(children2) {
    return children2.reduce(function(memo, child) {
      if (child.type && child.type.role === "axis" && matchesType(child)) {
        return memo.concat(child);
      } else if (child.props && child.props.children) {
        var childAxis = findComponents(react.Children.toArray(child.props.children));
        return childAxis.length > 0 ? memo.concat(child) : memo;
      }
      return memo;
    }, []);
  };
  return findComponents(childComponents);
}
function getOrigin(domain) {
  var getSingleOrigin = function(d2) {
    var domainMin = Math.min.apply(Math, _toConsumableArray$9(d2));
    var domainMax = Math.max.apply(Math, _toConsumableArray$9(d2));
    return domainMax < 0 ? domainMax : Math.max(0, domainMin);
  };
  return {
    x: Collection.containsDates(domain.x) ? new Date(Math.min.apply(Math, _toConsumableArray$9(domain.x))) : getSingleOrigin(domain.x),
    y: Collection.containsDates(domain.y) ? new Date(Math.min.apply(Math, _toConsumableArray$9(domain.y))) : getSingleOrigin(domain.y)
  };
}
function getOriginSign(origin, domain) {
  var getSign = function() {
    return origin <= 0 && Math.max.apply(Math, _toConsumableArray$9(domain)) <= 0 ? "negative" : "positive";
  };
  return Collection.containsDates(domain) ? "positive" : getSign();
}
function isVertical(props) {
  var orientation = props.orientation || (props.dependentAxis ? "left" : "bottom");
  var vertical = {
    top: false,
    bottom: false,
    left: true,
    right: true
  };
  return vertical[orientation];
}
function stringTicks(props) {
  return props.tickValues !== void 0 && Collection.containsStrings(props.tickValues);
}
function getDefaultTickFormat(props) {
  var tickValues = props.tickValues;
  var axis2 = getAxis(props);
  var stringMap = props.stringMap && props.stringMap[axis2];
  var fallbackFormat = tickValues && !Collection.containsDates(tickValues) ? function(x5) {
    return x5;
  } : void 0;
  if (!stringMap) {
    return stringTicks(props) ? function(x5, index4) {
      return tickValues[index4];
    } : fallbackFormat;
  } else {
    var invertedStringMap = stringMap && invert_1(stringMap);
    var tickValueArray = orderBy_1(values_1(stringMap), function(n3) {
      return n3;
    });
    var dataNames = tickValueArray.map(function(tick) {
      return invertedStringMap[tick];
    });
    var dataTicks = [""].concat(_toConsumableArray$9(dataNames), [""]);
    return function(x5) {
      return dataTicks[x5];
    };
  }
}
function getTickFormat(props, scale) {
  var tickFormat4 = props.tickFormat;
  var axis2 = getAxis(props);
  var stringMap = props.stringMap && props.stringMap[axis2];
  if (!tickFormat4) {
    var defaultTickFormat = getDefaultTickFormat(props);
    var scaleTickFormat = scale.tickFormat && isFunction_1(scale.tickFormat) ? scale.tickFormat() : function(x5) {
      return x5;
    };
    return defaultTickFormat || scaleTickFormat;
  } else if (tickFormat4 && Array.isArray(tickFormat4)) {
    return function(x5, index4) {
      return tickFormat4[index4];
    };
  } else if (tickFormat4 && isFunction_1(tickFormat4)) {
    var applyStringTicks = function(tick, index4, ticks4) {
      var invertedStringMap = invert_1(stringMap);
      var stringTickArray = ticks4.map(function(t4) {
        return invertedStringMap[t4];
      });
      return props.tickFormat(invertedStringMap[tick], index4, stringTickArray);
    };
    return stringMap ? applyStringTicks : tickFormat4;
  } else {
    return function(x5) {
      return x5;
    };
  }
}
function getStringTicks(props) {
  var axis2 = getAxis(props);
  var stringMap = props.stringMap && props.stringMap[axis2];
  var categories = Array.isArray(props.categories) ? props.categories : props.categories && props.categories[axis2];
  var ticksFromCategories = categories && Collection.containsOnlyStrings(categories) ? categories.map(function(tick) {
    return stringMap[tick];
  }) : void 0;
  var ticksFromStringMap = stringMap && values_1(stringMap);
  return ticksFromCategories && ticksFromCategories.length !== 0 ? ticksFromCategories : ticksFromStringMap;
}
function getTickArray(props) {
  var tickValues = props.tickValues, tickFormat4 = props.tickFormat;
  var axis2 = getAxis(props);
  var stringMap = props.stringMap && props.stringMap[axis2];
  var getTicksFromFormat = function() {
    if (!tickFormat4 || !Array.isArray(tickFormat4)) {
      return void 0;
    }
    return Collection.containsStrings(tickFormat4) ? tickFormat4.map(function(t4, i) {
      return i;
    }) : tickFormat4;
  };
  var ticks4 = tickValues;
  if (stringMap) {
    ticks4 = getStringTicks(props);
  }
  if (tickValues && Collection.containsStrings(tickValues)) {
    ticks4 = stringMap ? tickValues.map(function(tick) {
      return stringMap[tick];
    }) : range_1(1, tickValues.length + 1);
  }
  var tickArray = ticks4 ? uniq_1(ticks4) : getTicksFromFormat();
  var filterArray = function(arr) {
    var domain = props.domain && props.domain[axis2] || props.domain;
    return Array.isArray(domain) ? arr.filter(function(t4) {
      return t4 >= Math.min.apply(Math, _toConsumableArray$9(domain)) && t4 <= Math.max.apply(Math, _toConsumableArray$9(domain));
    }) : arr;
  };
  return Array.isArray(tickArray) && tickArray.length ? filterArray(tickArray) : void 0;
}
function downsampleTicks(ticks4, tickCount) {
  if (!tickCount || !Array.isArray(ticks4) || ticks4.length <= tickCount) {
    return ticks4;
  }
  var k6 = Math.floor(ticks4.length / tickCount);
  return ticks4.filter(function(d2, i) {
    return i % k6 === 0;
  });
}
function getTicks2(props, scale, filterZero) {
  var tickCount = props.tickCount;
  var tickValues = getTickArray(props);
  if (tickValues) {
    return downsampleTicks(tickValues, tickCount);
  } else if (scale.ticks && isFunction_1(scale.ticks)) {
    var defaultTickCount = tickCount || 5;
    var scaleTicks = scale.ticks(defaultTickCount);
    var tickArray = Array.isArray(scaleTicks) && scaleTicks.length ? scaleTicks : scale.domain();
    var ticks4 = downsampleTicks(tickArray, tickCount);
    if (filterZero) {
      var filteredTicks = includes_1(ticks4, 0) ? without_1(ticks4, 0) : ticks4;
      return filteredTicks.length ? filteredTicks : ticks4;
    }
    return ticks4;
  }
  return scale.domain();
}
function getDomainFromData$1(props, axis2) {
  var polar = props.polar, _props$startAngle = props.startAngle, startAngle = _props$startAngle === void 0 ? 0 : _props$startAngle, _props$endAngle = props.endAngle, endAngle = _props$endAngle === void 0 ? 360 : _props$endAngle;
  var tickValues = getTickArray(props);
  if (!Array.isArray(tickValues)) {
    return void 0;
  }
  var minDomain = Domain.getMinFromProps(props, axis2);
  var maxDomain = Domain.getMaxFromProps(props, axis2);
  var tickStrings = stringTicks(props);
  var ticks4 = tickValues.map(function(value2) {
    return +value2;
  });
  var defaultMin = tickStrings ? 1 : Collection.getMinValue(ticks4);
  var defaultMax = tickStrings ? tickValues.length : Collection.getMaxValue(ticks4);
  var min5 = minDomain !== void 0 ? minDomain : defaultMin;
  var max6 = maxDomain !== void 0 ? maxDomain : defaultMax;
  var initialDomain = Domain.getDomainFromMinMax(min5, max6);
  var domain = polar && axis2 === "x" && Math.abs(startAngle - endAngle) === 360 ? Domain.getSymmetricDomain(initialDomain, ticks4) : initialDomain;
  if (isVertical(props) && !polar) {
    domain.reverse();
  }
  return domain;
}
function getDomain$1(props, axis2) {
  var inherentAxis = getAxis(props);
  if (axis2 && axis2 !== inherentAxis) {
    return void 0;
  }
  return Domain.createDomainFunction(getDomainFromData$1)(props, inherentAxis);
}
function getAxisValue(props, axis2) {
  if (!props.axisValue) {
    return void 0;
  }
  var scaleAxis = axis2 === "x" ? "y" : "x";
  var scale = isObject_1(props.scale) && isFunction_1(props.scale[scaleAxis]) ? props.scale[scaleAxis] : void 0;
  if (!scale) {
    return void 0;
  }
  var stringMapAxis = axis2 === "x" ? "y" : "x";
  var stringMap = isObject_1(props.stringMap) && props.stringMap[stringMapAxis];
  var axisValue = stringMap && typeof props.axisValue === "string" ? stringMap[props.axisValue] : props.axisValue;
  return scale(axisValue);
}
function modifyProps$1(props, fallbackProps2) {
  if (!isObject_1(props.theme)) {
    return Helpers.modifyProps(props, fallbackProps2, "axis");
  }
  var role = "axis";
  if (props.dependentAxis && props.theme.dependentAxis) {
    role = "dependentAxis";
  } else if (!props.dependentAxis && props.theme.independentAxis) {
    role = "independentAxis";
  }
  if (role === "axis") {
    return Helpers.modifyProps(props, fallbackProps2, "axis");
  }
  var axisTheme = defaults_1({}, props.theme[role], props.theme.axis);
  var theme = assign_1({}, props.theme, {
    axis: axisTheme
  });
  return Helpers.modifyProps(assign_1({}, props, {
    theme
  }), fallbackProps2, "axis");
}
var Axis2 = {
  getTicks: getTicks2,
  getTickFormat,
  getAxis,
  getAxisComponent,
  getAxisComponentsWithParent,
  getAxisValue,
  findAxisComponents,
  getOrigin,
  getOriginSign,
  getDomain: getDomain$1,
  isVertical,
  modifyProps: modifyProps$1,
  stringTicks
};
function _objectSpread$6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$8(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$8(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$a(arr) {
  return _arrayWithoutHoles$a(arr) || _iterableToArray$a(arr) || _nonIterableSpread$a();
}
function _nonIterableSpread$a() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$a(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$a(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var Wrapper = {
  getData: function(props, childComponents) {
    if (props.data) {
      return Data.getData(props);
    }
    childComponents = childComponents || react.Children.toArray(props.children);
    return this.getDataFromChildren(childComponents);
  },
  getDefaultDomainPadding: function(props, axis2, childComponents) {
    if (props.polar || axis2 !== "x") {
      return void 0;
    }
    var groupComponent = childComponents.filter(function(child) {
      return child.type && child.type.role && child.type.role === "group";
    });
    if (groupComponent.length < 1) {
      return void 0;
    }
    var _groupComponent$0$pro = groupComponent[0].props, offset = _groupComponent$0$pro.offset, children2 = _groupComponent$0$pro.children;
    return {
      x: offset * children2.length / 2
    };
  },
  getDomain: function(props, axis2, childComponents) {
    childComponents = childComponents || react.Children.toArray(props.children);
    var propsDomain = Domain.getDomainFromProps(props, axis2);
    var domainPadding = this.getDefaultDomainPadding(props, axis2, childComponents);
    var domain;
    if (propsDomain) {
      domain = propsDomain;
    } else {
      var minDomain = Domain.getMinFromProps(props, axis2);
      var maxDomain = Domain.getMaxFromProps(props, axis2);
      var dataset = (props.data || props.y) && Data.getData(props);
      var dataDomain = dataset ? Domain.getDomainFromData(props, axis2, dataset) : [];
      var childDomain = this.getDomainFromChildren(props, axis2, childComponents);
      var min5 = minDomain || Collection.getMinValue(_toConsumableArray$a(dataDomain).concat(_toConsumableArray$a(childDomain)));
      var max6 = maxDomain || Collection.getMaxValue(_toConsumableArray$a(dataDomain).concat(_toConsumableArray$a(childDomain)));
      domain = Domain.getDomainFromMinMax(min5, max6);
    }
    return Domain.formatDomain(domain, assign_1({
      domainPadding
    }, props), axis2);
  },
  getScale: function(props, axis2, childComponents) {
    if (props.data) {
      return Scale.getBaseScale(props, axis2);
    }
    var children2 = childComponents ? childComponents.slice(0) : react.Children.toArray(props.children);
    var iteratee = function(child) {
      var sharedProps = assign_1({}, child.props, {
        horizontal: props.horizontal
      });
      return Scale.getScaleType(sharedProps, axis2);
    };
    var childScale = uniq_1(Helpers.reduceChildren(children2, iteratee, props));
    return childScale.length > 1 ? Scale.getScaleFromName("linear") : Scale.getScaleFromName(childScale[0]);
  },
  setAnimationState: function(props, nextProps) {
    if (!props.animate) {
      return;
    }
    if (props.animate.parentState) {
      var nodesWillExit = props.animate.parentState.nodesWillExit;
      var oldProps = nodesWillExit ? props : null;
      this.setState(defaults_1({
        oldProps,
        nextProps
      }, props.animate.parentState));
    } else {
      var oldChildren = react.Children.toArray(props.children);
      var nextChildren = react.Children.toArray(nextProps.children);
      var isContinuous = function(child) {
        var check = function(c5) {
          return c5.type && c5.type.continuous;
        };
        return Array.isArray(child) ? some_1(child, check) : check(child);
      };
      var continuous4 = !props.polar && some_1(oldChildren, function(child) {
        return isContinuous(child) || child.props.children && isContinuous(child.props.children);
      });
      var _Transitions$getIniti = Transitions.getInitialTransitionState(oldChildren, nextChildren), _nodesWillExit = _Transitions$getIniti.nodesWillExit, nodesWillEnter = _Transitions$getIniti.nodesWillEnter, childrenTransitions = _Transitions$getIniti.childrenTransitions, nodesShouldEnter = _Transitions$getIniti.nodesShouldEnter;
      this.setState({
        nodesWillExit: _nodesWillExit,
        nodesWillEnter,
        nodesShouldEnter,
        childrenTransitions: Collection.isArrayOfArrays(childrenTransitions) ? childrenTransitions[0] : childrenTransitions,
        oldProps: _nodesWillExit ? props : null,
        nextProps,
        continuous: continuous4
      });
    }
  },
  getAllEvents: function(props) {
    var components = ["groupComponent", "containerComponent", "labelComponent"];
    this.componentEvents = Events.getComponentEvents(props, components);
    var events = props.events;
    if (Array.isArray(this.componentEvents)) {
      var _componentEvents;
      events = Array.isArray(props.events) ? (_componentEvents = this.componentEvents).concat.apply(_componentEvents, _toConsumableArray$a(props.events)) : this.componentEvents;
    }
    return events || [];
  },
  getAnimationProps: function(props, child, index4) {
    var _this = this;
    if (!props.animate) {
      return child.props.animate;
    }
    var getFilteredState = function() {
      var childrenTransitions = _this.state && _this.state.childrenTransitions;
      childrenTransitions = Collection.isArrayOfArrays(childrenTransitions) ? childrenTransitions[index4] : childrenTransitions;
      return defaults_1({
        childrenTransitions
      }, _this.state);
    };
    var getTransitions = props.animate && props.animate.getTransitions;
    var state = getFilteredState();
    var parentState = props.animate && props.animate.parentState || state;
    if (!getTransitions) {
      var getTransitionProps = Transitions.getTransitionPropsFactory(props, state, function(newState) {
        return _this.setState(newState);
      });
      getTransitions = function(childComponent) {
        return getTransitionProps(childComponent, index4);
      };
    }
    return defaults_1({
      getTransitions,
      parentState
    }, props.animate, child.props.animate);
  },
  getDomainFromChildren: function(props, axis2, childComponents) {
    var children2 = childComponents ? childComponents.slice(0) : react.Children.toArray(props.children);
    var parentData = props.data ? Data.getData(props, axis2) : void 0;
    var polar = props.polar, startAngle = props.startAngle, endAngle = props.endAngle, categories = props.categories, minDomain = props.minDomain, maxDomain = props.maxDomain, horizontal = props.horizontal;
    var baseParentProps = {
      horizontal,
      polar,
      startAngle,
      endAngle,
      minDomain,
      maxDomain,
      categories
    };
    var parentProps = parentData ? assign_1(baseParentProps, {
      data: parentData
    }) : baseParentProps;
    var iteratee = function(child) {
      var sharedProps = assign_1({}, child.props, parentProps);
      if (!Domain.isDomainComponent(child)) {
        return null;
      } else if (child.type && isFunction_1(child.type.getDomain)) {
        return child.props && child.type.getDomain(sharedProps, axis2);
      } else {
        return Domain.getDomain(sharedProps, axis2);
      }
    };
    var childDomains = Helpers.reduceChildren(children2, iteratee, props);
    var min5 = childDomains.length === 0 ? 0 : Collection.getMinValue(childDomains);
    var max6 = childDomains.length === 0 ? 1 : Collection.getMaxValue(childDomains);
    return [min5, max6];
  },
  addBinsToParentPropsIfHistogram: function(_ref) {
    var children2 = _ref.children, props = _ref.props, childComponents = _ref.childComponents, parentProps = _ref.parentProps;
    var someChildrenAreHistograms = children2.some(function(child) {
      return child.type && child.type.role === "histogram";
    });
    var allChildrenAreHistograms = someChildrenAreHistograms && children2.length && children2.every(function(child) {
      return child.type && child.type.role === "histogram";
    });
    if (someChildrenAreHistograms && !allChildrenAreHistograms) {
      Log.warn("VictoryHistogram only supports being stacked with other VictoryHistogram components. Check to make sure that you are only passing VictoryHistogram components to VictoryStack");
    }
    if (!allChildrenAreHistograms) {
      return parentProps;
    }
    var childBins = props.bins || childComponents[0].props.bins;
    if (!Array.isArray(childBins)) {
      var combinedData = children2.reduce(function(memo, child) {
        var xAccessor = Helpers.createAccessor(child.props.x || "x");
        return memo.concat(child.props.data.map(function(datum2) {
          return {
            x: xAccessor(datum2)
          };
        }));
      }, []);
      var getFormattedHistogramData = children2[0].type.getFormattedData;
      childBins = getFormattedHistogramData({
        data: combinedData,
        bins: childBins
      }).reduce(function(memo, _ref2, index4) {
        var x03 = _ref2.x0, x14 = _ref2.x1;
        return index4 === 0 ? memo.concat([x03, x14]) : memo.concat(x14);
      }, []);
    }
    return _objectSpread$6({}, parentProps, {
      bins: childBins
    });
  },
  getDataFromChildren: function(props, childComponents) {
    var polar = props.polar, startAngle = props.startAngle, endAngle = props.endAngle, categories = props.categories, minDomain = props.minDomain, maxDomain = props.maxDomain;
    var parentProps = {
      polar,
      startAngle,
      endAngle,
      categories,
      minDomain,
      maxDomain
    };
    var stack3 = 0;
    var children2 = childComponents ? childComponents.slice(0) : react.Children.toArray(props.children);
    parentProps = this.addBinsToParentPropsIfHistogram({
      children: children2,
      props,
      childComponents,
      parentProps
    });
    var iteratee = function(child, childName, parent) {
      var childProps = assign_1({}, child.props, parentProps);
      var childData;
      if (!Data.isDataComponent(child)) {
        return null;
      } else if (child.type && isFunction_1(child.type.getData)) {
        child = parent ? react.cloneElement(child, parent.props) : child;
        childData = child.type.getData(childProps);
      } else {
        childData = Data.getData(childProps);
      }
      stack3 += 1;
      return childData.map(function(datum2, index4) {
        return assign_1({
          _stack: stack3,
          _group: index4
        }, datum2);
      });
    };
    var stacked = children2.filter(function(c5) {
      return c5.type && c5.type.role === "stack";
    }).length;
    var combine = function(memo, val) {
      return memo.concat(uniqBy_1(val, "_group"));
    };
    var datasets = Helpers.reduceChildren(children2, iteratee, props, [], combine);
    var group = stacked ? "_group" : "_stack";
    return values_1(groupBy_1(datasets, group));
  },
  getColor: function(calculatedProps, child, index4) {
    var style = calculatedProps.style;
    var colorScale3 = calculatedProps.colorScale, color3 = calculatedProps.color;
    if (style && style.data && style.data.fill) {
      return style.data.fill;
    }
    colorScale3 = child.props && child.props.colorScale ? child.props.colorScale : colorScale3;
    color3 = child.props && child.props.color ? child.props.color : color3;
    if (!colorScale3 && !color3) {
      return void 0;
    }
    var colors5 = Array.isArray(colorScale3) ? colorScale3 : Style.getColorScale(colorScale3);
    return color3 || colors5[index4 % colors5.length];
  },
  getWidth: function(props) {
    var datasets = props.datasets, scale = props.scale, horizontal = props.horizontal;
    var range7 = horizontal ? scale.y.range() : scale.x.range();
    var extent3 = Math.abs(range7[1] - range7[0]);
    var seriesLength = Array.isArray(datasets[0]) ? datasets[0].length : 1;
    var bars = datasets.length * seriesLength + 2;
    var barRatio = 0.5;
    return {
      width: Math.round(barRatio * extent3 / bars)
    };
  },
  getStyle: function(theme, style, role) {
    var defaultStyle3 = theme && theme[role] && theme[role].style ? theme[role].style : {};
    return Helpers.getStyles(style, defaultStyle3);
  },
  getChildStyle: function(child, index4, calculatedProps) {
    var style = calculatedProps.style, role = calculatedProps.role;
    var childStyle = child.props.style || {};
    if (Array.isArray(childStyle)) {
      return childStyle;
    }
    var childRole = child.type && child.type.role;
    var defaultFill = childRole === "stack" ? void 0 : this.getColor(calculatedProps, child, index4);
    var defaultColor = childRole === "line" ? {
      fill: "none",
      stroke: defaultFill
    } : {
      fill: defaultFill
    };
    var dataWidth = role === "stack" ? {} : this.getWidth(calculatedProps);
    var dataStyle = defaults_1({}, childStyle.data, assign_1({}, dataWidth, style.data, defaultColor));
    var labelsStyle = defaults_1({}, childStyle.labels, style.labels);
    return {
      parent: style.parent,
      data: dataStyle,
      labels: labelsStyle
    };
  },
  getStringsFromCategories: function(childComponents, axis2) {
    var iteratee = function(child) {
      var childProps = child.props || {};
      if (!Domain.isDomainComponent(child) || !childProps.categories) {
        return null;
      } else {
        var categories = childProps.categories && !Array.isArray(childProps.categories) ? childProps.categories[axis2] : childProps.props.categories;
        var categoryStrings = categories && categories.filter(function(val) {
          return typeof val === "string";
        });
        return categoryStrings ? Collection.removeUndefined(categoryStrings) : [];
      }
    };
    return Helpers.reduceChildren(childComponents.slice(0), iteratee);
  },
  getStringsFromData: function(childComponents) {
    var iteratee = function(child) {
      var childProps = child.props || {};
      var data3;
      if (!Data.isDataComponent(child)) {
        return null;
      } else if (child.type && isFunction_1(child.type.getData)) {
        data3 = child.type.getData(childProps);
      } else {
        data3 = Data.getData(childProps);
      }
      return data3.map(function(d2) {
        return {
          x: d2.xName,
          y: d2.yName
        };
      });
    };
    var initialMemo = {
      x: [],
      y: []
    };
    var combine = function(memo, datum2) {
      var x5 = Array.isArray(datum2) ? datum2.map(function(d2) {
        return d2.x;
      }).filter(Boolean) : datum2.x;
      var y7 = Array.isArray(datum2) ? datum2.map(function(d2) {
        return d2.y;
      }).filter(Boolean) : datum2.y;
      return {
        x: x5 !== void 0 ? memo.x.concat(x5) : memo.x,
        y: y7 !== void 0 ? memo.y.concat(y7) : memo.y
      };
    };
    return Helpers.reduceChildren(childComponents.slice(0), iteratee, {}, initialMemo, combine);
  },
  getCategoryAndAxisStringsFromChildren: function(props, axis2, childComponents) {
    var categories = isPlainObject_1(props.categories) ? props.categories[axis2] : props.categories;
    var axisComponent = Axis2.getAxisComponent(childComponents, axis2);
    var axisStrings = axisComponent ? Data.getStringsFromAxes(axisComponent.props, axis2) : [];
    var categoryStrings = categories || this.getStringsFromCategories(childComponents, axis2);
    return uniq_1(flatten_1(_toConsumableArray$a(categoryStrings).concat(_toConsumableArray$a(axisStrings))));
  },
  getStringsFromChildren: function(props, childComponents) {
    childComponents = childComponents || react.Children.toArray(props.children);
    var xStrings = this.getCategoryAndAxisStringsFromChildren(props, "x", childComponents);
    var yStrings = this.getCategoryAndAxisStringsFromChildren(props, "y", childComponents);
    var dataStrings = this.getStringsFromData(childComponents);
    return {
      x: uniq_1(flatten_1(_toConsumableArray$a(xStrings).concat(_toConsumableArray$a(dataStrings.x)))),
      y: uniq_1(flatten_1(_toConsumableArray$a(yStrings).concat(_toConsumableArray$a(dataStrings.y))))
    };
  },
  getCategories: function(props, childComponents, allStrings) {
    var xPropCategories = props.categories && !Array.isArray(props.categories) ? props.categories.x : props.categories;
    var yPropCategories = props.categories && !Array.isArray(props.categories) ? props.categories.y : props.categories;
    var fallbackRequired = !xPropCategories || !yPropCategories;
    var fallbackProps2 = fallbackRequired ? allStrings || this.getStringsFromChildren(props, childComponents) : {};
    var xCategories = xPropCategories || fallbackProps2.x;
    var yCategories = yPropCategories || fallbackProps2.y;
    return {
      x: xCategories.length > 0 ? xCategories : void 0,
      y: yCategories.length > 0 ? yCategories : void 0
    };
  }
};
function fromPairs(pairs) {
  var index4 = -1, length = pairs == null ? 0 : pairs.length, result = {};
  while (++index4 < length) {
    var pair = pairs[index4];
    result[pair[0]] = pair[1];
  }
  return result;
}
var fromPairs_1 = fromPairs;
var stringify_1 = createCommonjsModule(function(module, exports) {
  exports = module.exports = stringify2;
  exports.getSerialize = serializer;
  function stringify2(obj, replacer, spaces, cycleReplacer) {
    return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
  }
  function serializer(replacer, cycleReplacer) {
    var stack3 = [], keys4 = [];
    if (cycleReplacer == null)
      cycleReplacer = function(key, value2) {
        if (stack3[0] === value2)
          return "[Circular ~]";
        return "[Circular ~." + keys4.slice(0, stack3.indexOf(value2)).join(".") + "]";
      };
    return function(key, value2) {
      if (stack3.length > 0) {
        var thisPos = stack3.indexOf(this);
        ~thisPos ? stack3.splice(thisPos + 1) : stack3.push(this);
        ~thisPos ? keys4.splice(thisPos, Infinity, key) : keys4.push(key);
        if (~stack3.indexOf(value2))
          value2 = cycleReplacer.call(this, key, value2);
      } else
        stack3.push(value2);
      return replacer == null ? value2 : replacer.call(this, key, value2);
    };
  }
});
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray$b(arr) {
  return _arrayWithoutHoles$b(arr) || _iterableToArray$b(arr) || _nonIterableSpread$b();
}
function _nonIterableSpread$b() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$b(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$b(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$8(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$7(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$7(self2);
}
function _inherits$7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$7(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var VictorySharedEvents = /* @__PURE__ */ function(_React$Component) {
  _inherits$7(VictorySharedEvents2, _React$Component);
  function VictorySharedEvents2(props) {
    var _this;
    _classCallCheck$8(this, VictorySharedEvents2);
    _this = _possibleConstructorReturn$7(this, (VictorySharedEvents2.__proto__ || Object.getPrototypeOf(VictorySharedEvents2)).call(this, props));
    _this.state = _this.state || {};
    _this.getScopedEvents = Events.getScopedEvents.bind(_assertThisInitialized$7(_this));
    _this.getEventState = Events.getEventState.bind(_assertThisInitialized$7(_this));
    _this.baseProps = _this.getBaseProps(props);
    _this.sharedEventsCache = {};
    _this.globalEvents = {};
    _this.prevGlobalEventKeys = [];
    _this.boundGlobalEvents = {};
    return _this;
  }
  _createClass$8(VictorySharedEvents2, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (!reactFastCompare(this.props, nextProps)) {
        this.baseProps = this.getBaseProps(nextProps);
        var externalMutations = this.getExternalMutations(nextProps, this.baseProps);
        this.applyExternalMutations(nextProps, externalMutations);
      }
      return true;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      var globalEventKeys = keys_1(this.globalEvents);
      globalEventKeys.forEach(function(key) {
        return _this2.addGlobalListener(key);
      });
      this.prevGlobalEventKeys = globalEventKeys;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this3 = this;
      var globalEventKeys = keys_1(this.globalEvents);
      var removedGlobalEventKeys = difference_1(this.prevGlobalEventKeys, globalEventKeys);
      removedGlobalEventKeys.forEach(function(key) {
        return _this3.removeGlobalListener(key);
      });
      var addedGlobalEventKeys = difference_1(globalEventKeys, this.prevGlobalEventKeys);
      addedGlobalEventKeys.forEach(function(key) {
        return _this3.addGlobalListener(key);
      });
      this.prevGlobalEventKeys = globalEventKeys;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this4 = this;
      this.prevGlobalEventKeys.forEach(function(key) {
        return _this4.removeGlobalListener(key);
      });
    }
  }, {
    key: "addGlobalListener",
    value: function addGlobalListener(key) {
      var _this5 = this;
      var boundListener = function(event) {
        var listener = _this5.globalEvents[key];
        return listener && listener(Events.emulateReactEvent(event));
      };
      this.boundGlobalEvents[key] = boundListener;
      window.addEventListener(Events.getGlobalEventNameFromKey(key), boundListener);
    }
  }, {
    key: "removeGlobalListener",
    value: function removeGlobalListener(key) {
      window.removeEventListener(Events.getGlobalEventNameFromKey(key), this.boundGlobalEvents[key]);
    }
  }, {
    key: "getAllEvents",
    value: function getAllEvents(props) {
      var components = ["container", "groupComponent"];
      var componentEvents = Events.getComponentEvents(props, components);
      if (Array.isArray(componentEvents)) {
        return Array.isArray(props.events) ? componentEvents.concat.apply(componentEvents, _toConsumableArray$b(props.events)) : componentEvents;
      }
      return props.events;
    }
  }, {
    key: "applyExternalMutations",
    value: function applyExternalMutations(props, externalMutations) {
      if (!isEmpty_1(externalMutations)) {
        var callbacks = props.externalEventMutations.reduce(function(memo, mutation) {
          memo = isFunction_1(mutation.callback) ? memo.concat(mutation.callback) : memo;
          return memo;
        }, []);
        var compiledCallbacks = callbacks.length ? function() {
          callbacks.forEach(function(c5) {
            return c5();
          });
        } : void 0;
        this.setState(externalMutations, compiledCallbacks);
      }
    }
  }, {
    key: "getExternalMutations",
    value: function getExternalMutations(props, baseProps2) {
      return !isEmpty_1(props.externalEventMutations) ? Events.getExternalMutationsWithChildren(props.externalEventMutations, baseProps2, this.state, keys_1(baseProps2)) : void 0;
    }
  }, {
    key: "cacheSharedEvents",
    value: function cacheSharedEvents(name, sharedEvents, cacheValues) {
      this.sharedEventsCache[name] = [sharedEvents, cacheValues];
    }
  }, {
    key: "getCachedSharedEvents",
    value: function getCachedSharedEvents(name, cacheValues) {
      var _ref = this.sharedEventsCache[name] || [], _ref2 = _slicedToArray(_ref, 2), sharedEvents = _ref2[0], prevCacheValues = _ref2[1];
      if (sharedEvents && reactFastCompare(cacheValues, prevCacheValues)) {
        return sharedEvents;
      }
      return void 0;
    }
  }, {
    key: "getBaseProps",
    value: function getBaseProps2(props) {
      var container = props.container;
      var children2 = react.Children.toArray(this.props.children);
      var childBaseProps = this.getBasePropsFromChildren(children2);
      var parentBaseProps = container ? container.props : {};
      return assign_1({}, childBaseProps, {
        parent: parentBaseProps
      });
    }
  }, {
    key: "getBasePropsFromChildren",
    value: function getBasePropsFromChildren(childComponents) {
      var iteratee = function(child, childName) {
        if (child.type && isFunction_1(child.type.getBaseProps)) {
          var _baseProps = child.props && child.type.getBaseProps(child.props);
          return _baseProps ? [[childName, _baseProps]] : null;
        } else {
          return null;
        }
      };
      var baseProps2 = Helpers.reduceChildren(childComponents, iteratee);
      return fromPairs_1(baseProps2);
    }
  }, {
    key: "getNewChildren",
    value: function getNewChildren(props, baseProps2) {
      var _this6 = this;
      var events = props.events, eventKey = props.eventKey;
      var alterChildren = function(children2, childNames2) {
        return children2.reduce(function(memo, child, index4) {
          if (child.props.children) {
            var newChildren = react.Children.toArray(child.props.children);
            var names = childNames2.slice(index4, index4 + newChildren.length);
            var results = react.cloneElement(child, child.props, alterChildren(newChildren, names));
            return memo.concat(results);
          } else if (child.type && isFunction_1(child.type.getBaseProps)) {
            var name = child.props.name || childNames2[index4];
            var childEvents = Array.isArray(events) && events.filter(function(event) {
              if (event.target === "parent") {
                return false;
              }
              return Array.isArray(event.childName) ? event.childName.indexOf(name) > -1 : event.childName === name || event.childName === "all";
            });
            var sharedEventsCacheValues = [name, baseProps2, childEvents, stringify_1(_this6.state[name])];
            var sharedEvents = _this6.getCachedSharedEvents(name, sharedEventsCacheValues) || {
              events: childEvents,
              getEvents: function(evts, target) {
                return _this6.getScopedEvents(evts, target, name, baseProps2);
              },
              getEventState: function(key, target) {
                return _this6.getEventState(key, target, name);
              }
            };
            _this6.cacheSharedEvents(name, sharedEvents, sharedEventsCacheValues);
            return memo.concat(react.cloneElement(child, assign_1({
              key: "events-".concat(name),
              sharedEvents,
              eventKey,
              name
            }, child.props)));
          } else {
            return memo.concat(child);
          }
        }, []);
      };
      var childNames = keys_1(baseProps2);
      var childComponents = react.Children.toArray(props.children);
      return alterChildren(childComponents, childNames);
    }
  }, {
    key: "getContainer",
    value: function getContainer(props, baseProps2, events) {
      var _this7 = this;
      var children2 = this.getNewChildren(props, baseProps2);
      var parents = Array.isArray(events) && events.filter(function(event) {
        return event.target === "parent";
      });
      var sharedEvents = parents.length > 0 ? {
        events: parents,
        getEvents: function(evts, target) {
          return _this7.getScopedEvents(evts, target, null, baseProps2);
        },
        getEventState: this.getEventState
      } : null;
      var container = props.container || props.groupComponent;
      var role = container.type && container.type.role;
      var containerProps = container.props || {};
      var boundGetEvents = Events.getEvents.bind(this);
      var parentEvents = sharedEvents && boundGetEvents({
        sharedEvents
      }, "parent");
      var parentProps = defaults_1({}, this.getEventState("parent", "parent"), containerProps, baseProps2.parent, {
        children: children2
      });
      var containerEvents = defaults_1({}, Events.getPartialEvents(parentEvents, "parent", parentProps), containerProps.events);
      this.globalEvents = Events.getGlobalEvents(containerEvents);
      var localEvents = Events.omitGlobalEvents(containerEvents);
      return role === "container" ? react.cloneElement(container, assign_1({}, parentProps, {
        events: localEvents
      })) : react.cloneElement(container, localEvents, children2);
    }
  }, {
    key: "render",
    value: function render2() {
      var events = this.getAllEvents(this.props);
      if (events) {
        return this.getContainer(this.props, this.baseProps, events);
      }
      return react.cloneElement(this.props.container, {
        children: this.props.children
      });
    }
  }]);
  return VictorySharedEvents2;
}(react.Component);
Object.defineProperty(VictorySharedEvents, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictorySharedEvents"
});
Object.defineProperty(VictorySharedEvents, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "shared-event-wrapper"
});
Object.defineProperty(VictorySharedEvents, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
    container: propTypes.node,
    eventKey: propTypes.oneOfType([propTypes.array, propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
    events: propTypes.arrayOf(propTypes.shape({
      childName: propTypes.oneOfType([propTypes.string, propTypes.array]),
      eventHandlers: propTypes.object,
      eventKey: propTypes.oneOfType([propTypes.array, propTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
      target: propTypes.string
    })),
    externalEventMutations: propTypes.arrayOf(propTypes.shape({
      callback: propTypes.function,
      childName: propTypes.oneOfType([propTypes.string, propTypes.array]),
      eventKey: propTypes.oneOfType([propTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
      mutation: propTypes.function,
      target: propTypes.oneOfType([propTypes.string, propTypes.array])
    })),
    groupComponent: propTypes.node
  }
});
Object.defineProperty(VictorySharedEvents, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    groupComponent: react.createElement("g", null)
  }
});
Object.defineProperty(VictorySharedEvents, "contextType", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: TimerContext
});
function _toConsumableArray$c(arr) {
  return _arrayWithoutHoles$c(arr) || _iterableToArray$c(arr) || _nonIterableSpread$c();
}
function _nonIterableSpread$c() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$c(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$c(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _defineProperty$9(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var orientationSign = {
  top: -1,
  left: -1,
  right: 1,
  bottom: 1
};
var getCurrentAxis$1 = function(props, axis2) {
  var orientation = props.orientation, horizontal = props.horizontal;
  if (orientation) {
    var dimensions = {
      top: "x",
      bottom: "x",
      left: "y",
      right: "y"
    };
    return dimensions[orientation];
  }
  var otherAxis = axis2 === "x" ? "y" : "x";
  return horizontal ? otherAxis : axis2;
};
var getScale = function(props) {
  var axis2 = Axis2.getAxis(props);
  var currentAxis = getCurrentAxis$1(props, axis2);
  var scale = Scale.getBaseScale(props, axis2);
  var propsDomain = props.domain && props.domain[axis2];
  var domain = propsDomain || Axis2.getDomain(props) || scale.domain();
  scale.range(Helpers.getRange(props, currentAxis));
  scale.domain(domain);
  return scale;
};
var getStyleObject = function(props) {
  var theme = props.theme, dependentAxis = props.dependentAxis;
  var generalAxisStyle = theme && theme.axis && theme.axis.style;
  var axisType = dependentAxis ? "dependentAxis" : "independentAxis";
  var specificAxisStyle = theme && theme[axisType] && theme[axisType].style;
  var mergeStyles = function() {
    var styleNamespaces = ["axis", "axisLabel", "grid", "parent", "tickLabels", "ticks"];
    return styleNamespaces.reduce(function(memo, curr) {
      memo[curr] = defaults_1({}, specificAxisStyle[curr], generalAxisStyle[curr]);
      return memo;
    }, {});
  };
  return generalAxisStyle && specificAxisStyle ? mergeStyles() : specificAxisStyle || generalAxisStyle;
};
var getStyles$2 = function(props, styleObject) {
  var style = props.style || {};
  styleObject = styleObject || {};
  var parentStyleProps = {
    height: "100%",
    width: "100%"
  };
  return {
    parent: defaults_1(style.parent, styleObject.parent, parentStyleProps),
    axis: defaults_1({}, style.axis, styleObject.axis),
    axisLabel: defaults_1({}, style.axisLabel, styleObject.axisLabel),
    grid: defaults_1({}, style.grid, styleObject.grid),
    ticks: defaults_1({}, style.ticks, styleObject.ticks),
    tickLabels: defaults_1({}, style.tickLabels, styleObject.tickLabels)
  };
};
var getTickProps = function(layout, style, datum2) {
  var position = layout.position, transform = layout.transform;
  return {
    x1: transform.x,
    y1: transform.y,
    x2: transform.x + position.x2,
    y2: transform.y + position.y2,
    style,
    datum: datum2
  };
};
var getTickLabelProps = function(layout, style, anchors, datum2, text2) {
  var position = layout.position, transform = layout.transform;
  return {
    style,
    x: transform.x + position.x,
    y: transform.y + position.y,
    verticalAnchor: anchors.verticalAnchor,
    textAnchor: anchors.textAnchor,
    angle: style.angle,
    text: text2,
    datum: datum2
  };
};
var getGridProps = function(layout, style, datum2) {
  var edge = layout.edge, transform = layout.transform;
  return {
    x1: transform.x,
    y1: transform.y,
    x2: edge.x + transform.x,
    y2: edge.y + transform.y,
    style,
    datum: datum2
  };
};
var getAxisProps = function(modifiedProps, calculatedValues, globalTransform) {
  var style = calculatedValues.style, padding2 = calculatedValues.padding, isVertical2 = calculatedValues.isVertical;
  var width = modifiedProps.width, height = modifiedProps.height;
  return {
    style: style.axis,
    x1: isVertical2 ? globalTransform.x : padding2.left + globalTransform.x,
    x2: isVertical2 ? globalTransform.x : width - padding2.right + globalTransform.x,
    y1: isVertical2 ? padding2.top + globalTransform.y : globalTransform.y,
    y2: isVertical2 ? height - padding2.bottom + globalTransform.y : globalTransform.y
  };
};
var getEvaluatedStyles = function(style, props) {
  return {
    tickStyle: Helpers.evaluateStyle(style.ticks, props),
    labelStyle: Helpers.evaluateStyle(style.tickLabels, props),
    gridStyle: Helpers.evaluateStyle(style.grid, props)
  };
};
var getAxisLabelProps = function(props, calculatedValues, globalTransform) {
  var style = calculatedValues.style, orientation = calculatedValues.orientation, padding2 = calculatedValues.padding, labelPadding = calculatedValues.labelPadding, isVertical2 = calculatedValues.isVertical;
  var sign5 = orientationSign[orientation];
  var hPadding = padding2.left + padding2.right;
  var vPadding = padding2.top + padding2.bottom;
  var verticalAnchor = sign5 < 0 ? "end" : "start";
  var labelStyle = style.axisLabel;
  var angle = isVertical2 ? -90 : 0;
  var x5 = isVertical2 ? globalTransform.x + sign5 * labelPadding : (props.width - hPadding) / 2 + padding2.left + globalTransform.x;
  var y7 = isVertical2 ? (props.height - vPadding) / 2 + padding2.top + globalTransform.y : sign5 * labelPadding + globalTransform.y;
  return {
    x: x5,
    y: y7,
    verticalAnchor: labelStyle.verticalAnchor || verticalAnchor,
    textAnchor: labelStyle.textAnchor || "middle",
    angle: labelStyle.angle === void 0 ? angle : labelStyle.angle,
    style: labelStyle,
    text: props.label
  };
};
var getAnchors = function(orientation, isVertical2) {
  var anchorOrientation = {
    top: "end",
    left: "end",
    right: "start",
    bottom: "start"
  };
  var anchor = anchorOrientation[orientation];
  return {
    textAnchor: isVertical2 ? anchor : "middle",
    verticalAnchor: isVertical2 ? "middle" : anchor
  };
};
var getLabelPadding = function(props, style) {
  var labelStyle = style.axisLabel || {};
  if (labelStyle.padding !== void 0 && labelStyle.padding !== null) {
    return labelStyle.padding;
  }
  var isVertical2 = Axis2.isVertical(props);
  var fontSize2 = labelStyle.fontSize || 14;
  return props.label ? fontSize2 * (isVertical2 ? 2.3 : 1.6) : 0;
};
var getOffset$1 = function(props, calculatedValues) {
  var style = calculatedValues.style, padding2 = calculatedValues.padding, isVertical2 = calculatedValues.isVertical, orientation = calculatedValues.orientation, labelPadding = calculatedValues.labelPadding, stringTicks2 = calculatedValues.stringTicks, ticks4 = calculatedValues.ticks, scale = calculatedValues.scale, axis2 = calculatedValues.axis;
  var polar = props.polar, horizontal = props.horizontal;
  var sharedProps = {
    scale: _defineProperty$9({}, axis2, scale),
    polar,
    horizontal,
    ticks: ticks4,
    stringTicks: stringTicks2
  };
  var xPadding = orientation === "right" ? padding2.right : padding2.left;
  var yPadding = orientation === "top" ? padding2.top : padding2.bottom;
  var fontSize2 = style.axisLabel.fontSize || 14;
  var offsetX = props.offsetX !== null && props.offsetX !== void 0 ? props.offsetX : xPadding;
  var offsetY = props.offsetY !== null && props.offsetY !== void 0 ? props.offsetY : yPadding;
  var tickSizes = ticks4.map(function(data3, index4) {
    var tick = stringTicks2 ? props.tickValues[data3 - 1] : data3;
    var tickStyle = Helpers.evaluateStyle(style.ticks, assign_1({}, sharedProps, {
      tick,
      index: index4
    }));
    return tickStyle.size || 0;
  });
  var totalPadding = fontSize2 + 2 * Math.max.apply(Math, _toConsumableArray$c(tickSizes)) + labelPadding;
  var minimumPadding = 1.2 * fontSize2;
  var x5 = isVertical2 ? totalPadding : minimumPadding;
  var y7 = isVertical2 ? minimumPadding : totalPadding;
  return {
    x: offsetX !== null && offsetX !== void 0 ? offsetX : x5,
    y: offsetY !== null && offsetY !== void 0 ? offsetY : y7
  };
};
var getTransform$1 = function(props, calculatedValues, offset) {
  var orientation = calculatedValues.orientation, axis2 = calculatedValues.axis;
  var axisValue = Axis2.getAxisValue(props, axis2);
  return {
    top: {
      x: 0,
      y: axisValue !== void 0 ? axisValue : offset.y
    },
    bottom: {
      x: 0,
      y: axisValue !== void 0 ? axisValue : props.height - offset.y
    },
    left: {
      x: axisValue !== void 0 ? axisValue : offset.x,
      y: 0
    },
    right: {
      x: axisValue !== void 0 ? axisValue : props.width - offset.x,
      y: 0
    }
  }[orientation];
};
var getTickPosition2 = function(style, orientation, isVertical2) {
  var tickStyle = style.tickStyle, labelStyle = style.labelStyle;
  var size = tickStyle.size || 0;
  var tickPadding = tickStyle.padding || 0;
  var labelPadding = labelStyle.padding || 0;
  var tickSpacing = size + tickPadding + labelPadding;
  var sign5 = orientationSign[orientation];
  return {
    x: isVertical2 ? sign5 * tickSpacing : 0,
    x2: isVertical2 ? sign5 * size : 0,
    y: isVertical2 ? 0 : sign5 * tickSpacing,
    y2: isVertical2 ? 0 : sign5 * size
  };
};
var getTickTransform = function(tick, globalTransform, isVertical2) {
  return {
    x: isVertical2 ? globalTransform.x : tick + globalTransform.x,
    y: isVertical2 ? tick + globalTransform.y : globalTransform.y
  };
};
var getGridEdge = function(props, calculatedValues) {
  var orientation = calculatedValues.orientation, padding2 = calculatedValues.padding, isVertical2 = calculatedValues.isVertical;
  var sign5 = -orientationSign[orientation];
  var x5 = isVertical2 ? sign5 * (props.width - (padding2.left + padding2.right)) : 0;
  var y7 = isVertical2 ? 0 : sign5 * (props.height - (padding2.top + padding2.bottom));
  return {
    x: x5,
    y: y7
  };
};
var getGridOffset = function(props, calculatedValues, offset) {
  var padding2 = calculatedValues.padding, orientation = calculatedValues.orientation;
  var xPadding = orientation === "right" ? padding2.right : padding2.left;
  var yPadding = orientation === "top" ? padding2.top : padding2.bottom;
  return {
    x: props.crossAxis ? offset.x - xPadding : 0,
    y: props.crossAxis ? offset.y - yPadding : 0
  };
};
var getLayoutProps = function(modifiedProps, calculatedValues) {
  var offset = getOffset$1(modifiedProps, calculatedValues);
  return {
    globalTransform: getTransform$1(modifiedProps, calculatedValues, offset),
    gridOffset: getGridOffset(modifiedProps, calculatedValues, offset),
    gridEdge: getGridEdge(modifiedProps, calculatedValues)
  };
};
var getOrientation = function(props) {
  if (props.orientation) {
    return props.orientation;
  }
  var defaultOrientations = {
    dependent: props.horizontal ? "bottom" : "left",
    independent: props.horizontal ? "left" : "bottom"
  };
  return props.dependentAxis ? defaultOrientations.dependent : defaultOrientations.independent;
};
var getCalculatedValues = function(props) {
  var defaultStyles3 = getStyleObject(props);
  var style = getStyles$2(props, defaultStyles3);
  var padding2 = Helpers.getPadding(props);
  var isVertical2 = Axis2.isVertical(props);
  var labelPadding = getLabelPadding(props, style);
  var stringTicks2 = Axis2.stringTicks(props) ? props.tickValues : void 0;
  var axis2 = Axis2.getAxis(props);
  var orientation = getOrientation(props);
  var scale = getScale(props);
  var domain = Axis2.getDomain(props);
  var ticks4 = Axis2.getTicks(props, scale, props.crossAxis);
  var tickFormat4 = Axis2.getTickFormat(props, scale);
  var anchors = getAnchors(orientation, isVertical2);
  return {
    axis: axis2,
    style,
    padding: padding2,
    orientation,
    isVertical: isVertical2,
    labelPadding,
    stringTicks: stringTicks2,
    anchors,
    scale,
    ticks: ticks4,
    tickFormat: tickFormat4,
    domain
  };
};
var getBaseProps = function(props, fallbackProps2) {
  props = Axis2.modifyProps(props, fallbackProps2);
  var calculatedValues = getCalculatedValues(props);
  var axis2 = calculatedValues.axis, style = calculatedValues.style, orientation = calculatedValues.orientation, isVertical2 = calculatedValues.isVertical, scale = calculatedValues.scale, ticks4 = calculatedValues.ticks, tickFormat4 = calculatedValues.tickFormat, anchors = calculatedValues.anchors, domain = calculatedValues.domain, stringTicks2 = calculatedValues.stringTicks, name = calculatedValues.name;
  var otherAxis = axis2 === "x" ? "y" : "x";
  var _props = props, width = _props.width, height = _props.height, standalone = _props.standalone, theme = _props.theme, polar = _props.polar, padding2 = _props.padding, horizontal = _props.horizontal;
  var _getLayoutProps = getLayoutProps(props, calculatedValues), globalTransform = _getLayoutProps.globalTransform, gridOffset = _getLayoutProps.gridOffset, gridEdge = _getLayoutProps.gridEdge;
  var sharedProps = {
    scale: _defineProperty$9({}, axis2, scale),
    polar,
    horizontal,
    ticks: ticks4,
    stringTicks: stringTicks2
  };
  var axisProps = getAxisProps(props, calculatedValues, globalTransform);
  var axisLabelProps = getAxisLabelProps(props, calculatedValues, globalTransform);
  var initialChildProps = {
    parent: assign_1({
      style: style.parent,
      ticks: ticks4,
      standalone,
      theme,
      width,
      height,
      padding: padding2,
      domain,
      name
    }, sharedProps)
  };
  var gridProps = {
    dimension: otherAxis,
    range: _defineProperty$9({}, otherAxis, Helpers.getRange(props, otherAxis)),
    scale: props.scale && props.scale[otherAxis] ? _defineProperty$9({}, otherAxis, props.scale[otherAxis]) : void 0
  };
  return ticks4.reduce(function(childProps, tickValue2, index4) {
    var tick = stringTicks2 ? stringTicks2[index4] : tickValue2;
    var text2 = tickFormat4(tickValue2, index4, ticks4);
    var styles2 = getEvaluatedStyles(style, assign_1({}, sharedProps, {
      tick,
      tickValue: tickValue2,
      index: index4,
      text: text2
    }));
    var tickLayout = {
      position: getTickPosition2(styles2, orientation, isVertical2),
      transform: getTickTransform(scale(tickValue2), globalTransform, isVertical2)
    };
    var gridLayout = {
      edge: gridEdge,
      transform: {
        x: isVertical2 ? -gridOffset.x + globalTransform.x : scale(tickValue2) + globalTransform.x,
        y: isVertical2 ? scale(tickValue2) + globalTransform.y : gridOffset.y + globalTransform.y
      }
    };
    childProps[index4] = {
      axis: assign_1({
        dimension: axis2
      }, sharedProps, axisProps),
      axisLabel: assign_1({}, sharedProps, axisLabelProps),
      ticks: assign_1({}, sharedProps, getTickProps(tickLayout, styles2.tickStyle, tickValue2)),
      tickLabels: assign_1({}, sharedProps, getTickLabelProps(tickLayout, styles2.labelStyle, anchors, tickValue2, text2)),
      grid: assign_1({}, sharedProps, gridProps, getGridProps(gridLayout, styles2.gridStyle, tickValue2))
    };
    return childProps;
  }, initialChildProps);
};
function _objectSpread$7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$a(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$a(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$d(arr) {
  return _arrayWithoutHoles$d(arr) || _iterableToArray$d(arr) || _nonIterableSpread$d();
}
function _nonIterableSpread$d() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$d(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$d(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$9(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$8(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$8(self2);
}
function _assertThisInitialized$8(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var fallbackProps = {
  width: 450,
  height: 300,
  padding: 50
};
var options = {
  components: [{
    name: "axis",
    index: 0
  }, {
    name: "axisLabel",
    index: 0
  }, {
    name: "grid"
  }, {
    name: "parent",
    index: "parent"
  }, {
    name: "ticks"
  }, {
    name: "tickLabels"
  }]
};
var VictoryAxis = /* @__PURE__ */ function(_React$Component) {
  _inherits$8(VictoryAxis2, _React$Component);
  function VictoryAxis2() {
    _classCallCheck$9(this, VictoryAxis2);
    return _possibleConstructorReturn$8(this, (VictoryAxis2.__proto__ || Object.getPrototypeOf(VictoryAxis2)).apply(this, arguments));
  }
  _createClass$9(VictoryAxis2, [{
    key: "renderLine",
    value: function renderLine3(props) {
      var axisComponent = props.axisComponent;
      var axisProps = this.getComponentProps(axisComponent, "axis", 0);
      return react.cloneElement(axisComponent, axisProps);
    }
  }, {
    key: "renderLabel",
    value: function renderLabel2(props) {
      var axisLabelComponent = props.axisLabelComponent, label = props.label;
      if (!label) {
        return null;
      }
      var axisLabelProps = this.getComponentProps(axisLabelComponent, "axisLabel", 0);
      return react.cloneElement(axisLabelComponent, axisLabelProps);
    }
  }, {
    key: "renderGridAndTicks",
    value: function renderGridAndTicks(props) {
      var _this = this;
      var tickComponent = props.tickComponent, tickLabelComponent = props.tickLabelComponent, gridComponent = props.gridComponent, name = props.name;
      var shouldRender = function(componentProps) {
        var _componentProps$style = componentProps.style, style = _componentProps$style === void 0 ? {} : _componentProps$style, _componentProps$event = componentProps.events, events = _componentProps$event === void 0 ? {} : _componentProps$event;
        var visible = style.stroke !== "transparent" && style.stroke !== "none" && style.strokeWidth !== 0;
        return visible || !isEmpty_1(events);
      };
      return this.dataKeys.map(function(key, index4) {
        var tickProps = _this.getComponentProps(tickComponent, "ticks", index4);
        var BaseTickComponent = react.cloneElement(tickComponent, tickProps);
        var TickComponent = shouldRender(BaseTickComponent.props) ? BaseTickComponent : void 0;
        var gridProps = _this.getComponentProps(gridComponent, "grid", index4);
        var BaseGridComponent = react.cloneElement(gridComponent, gridProps);
        var GridComponent = shouldRender(BaseGridComponent.props) ? BaseGridComponent : void 0;
        var tickLabelProps = _this.getComponentProps(tickLabelComponent, "tickLabels", index4);
        var TickLabel = react.cloneElement(tickLabelComponent, tickLabelProps);
        var children2 = [GridComponent, TickComponent, TickLabel].filter(Boolean);
        return react.cloneElement(props.groupComponent, {
          key: "".concat(name, "-tick-group-").concat(key)
        }, children2);
      });
    }
  }, {
    key: "fixLabelOverlap",
    value: function fixLabelOverlap(gridAndTicks, props) {
      var isVertical2 = Axis2.isVertical(props);
      var size = isVertical2 ? props.height : props.width;
      var isVictoryLabel = function(child) {
        return child.type && child.type.role === "label";
      };
      var labels = gridAndTicks.map(function(gridAndTick) {
        return gridAndTick.props.children;
      }).reduce(function(accumulator, childArr) {
        return accumulator.concat(childArr);
      }, []).filter(isVictoryLabel).map(function(child) {
        return child.props;
      });
      var paddingToObject = function(padding2) {
        return typeof padding2 === "object" ? assign_1({}, {
          top: 0,
          right: 0,
          bottom: 0,
          left: 0
        }, padding2) : {
          top: padding2,
          right: padding2,
          bottom: padding2,
          left: padding2
        };
      };
      var labelsSumSize = labels.reduce(function(sum2, label) {
        var padding2 = paddingToObject(label.style.padding);
        var labelSize = TextSize.approximateTextSize(label.text, {
          angle: label.angle,
          fontSize: label.style.fontSize,
          letterSpacing: label.style.letterSpacing,
          fontFamily: label.style.fontFamily
        });
        return sum2 + (isVertical2 ? labelSize.height + padding2.top + padding2.bottom : labelSize.width + padding2.right + padding2.left);
      }, 0);
      var availiableLabelCount = Math.floor(size * gridAndTicks.length / labelsSumSize);
      var divider = Math.ceil(gridAndTicks.length / availiableLabelCount) || 1;
      var getLabelCoord = function(gridAndTick) {
        return gridAndTick.props.children.filter(isVictoryLabel).reduce(function(prev, child) {
          return (isVertical2 ? child.props.y : child.props.x) || 0;
        }, 0);
      };
      var sorted = gridAndTicks.sort(function(a3, b10) {
        return isVertical2 ? getLabelCoord(b10) - getLabelCoord(a3) : getLabelCoord(a3) - getLabelCoord(b10);
      });
      return sorted.filter(function(gridAndTick, index4) {
        return index4 % divider === 0;
      });
    }
  }, {
    key: "shouldAnimate",
    value: function shouldAnimate() {
      return !!this.props.animate;
    }
  }, {
    key: "render",
    value: function render2() {
      var animationWhitelist = VictoryAxis2.animationWhitelist;
      var props = Axis2.modifyProps(this.props, fallbackProps);
      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }
      var gridAndTicks = this.renderGridAndTicks(props);
      var modifiedGridAndTicks = props.fixLabelOverlap ? this.fixLabelOverlap(gridAndTicks, props) : gridAndTicks;
      var children2 = [this.renderLine(props), this.renderLabel(props)].concat(_toConsumableArray$d(modifiedGridAndTicks));
      return props.standalone ? this.renderContainer(props.containerComponent, children2) : react.cloneElement(props.groupComponent, {}, children2);
    }
  }]);
  return VictoryAxis2;
}(react.Component);
Object.defineProperty(VictoryAxis, "animationWhitelist", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["style", "domain", "range", "tickCount", "tickValues", "offsetX", "offsetY", "padding", "width", "height"]
});
Object.defineProperty(VictoryAxis, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryAxis"
});
Object.defineProperty(VictoryAxis, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "axis"
});
Object.defineProperty(VictoryAxis, "defaultTransitions", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    onExit: {
      duration: 500
    },
    onEnter: {
      duration: 500
    }
  }
});
Object.defineProperty(VictoryAxis, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread$7({}, CommonProps.baseProps, {
    axisComponent: propTypes.element,
    axisLabelComponent: propTypes.element,
    axisValue: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.object]),
    categories: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.shape({
      x: propTypes.arrayOf(propTypes.string),
      y: propTypes.arrayOf(propTypes.string)
    })]),
    crossAxis: propTypes.bool,
    dependentAxis: propTypes.bool,
    events: propTypes.arrayOf(propTypes.shape({
      target: propTypes.oneOf(["axis", "axisLabel", "grid", "ticks", "tickLabels"]),
      eventKey: propTypes.oneOfType([propTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
      eventHandlers: propTypes.object
    })),
    fixLabelOverlap: propTypes.bool,
    gridComponent: propTypes.element,
    groupComponent: propTypes.element,
    invertAxis: propTypes.bool,
    label: propTypes.any,
    offsetX: propTypes.number,
    offsetY: propTypes.number,
    orientation: propTypes.oneOf(["top", "bottom", "left", "right"]),
    origin: propTypes.shape({
      x: propTypes.number,
      y: propTypes.number
    }),
    stringMap: propTypes.object,
    style: propTypes.shape({
      parent: propTypes.object,
      axis: propTypes.object,
      axisLabel: propTypes.object,
      grid: propTypes.object,
      ticks: propTypes.object,
      tickLabels: propTypes.object
    }),
    tickComponent: propTypes.element,
    tickCount: CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.greaterThanZero]),
    tickFormat: propTypes.oneOfType([propTypes.func, CustomPropTypes.homogeneousArray]),
    tickLabelComponent: propTypes.element,
    tickValues: CustomPropTypes.homogeneousArray
  })
});
Object.defineProperty(VictoryAxis, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    axisComponent: react.createElement(LineSegment, null),
    axisLabelComponent: react.createElement(VictoryLabel, null),
    tickLabelComponent: react.createElement(VictoryLabel, null),
    tickComponent: react.createElement(LineSegment, null),
    gridComponent: react.createElement(LineSegment, null),
    standalone: true,
    theme: VictoryTheme.grayscale,
    containerComponent: react.createElement(VictoryContainer, null),
    groupComponent: react.createElement("g", {
      role: "presentation"
    }),
    fixLabelOverlap: false
  }
});
Object.defineProperty(VictoryAxis, "getDomain", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Axis2.getDomain
});
Object.defineProperty(VictoryAxis, "getAxis", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Axis2.getAxis
});
Object.defineProperty(VictoryAxis, "getStyles", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    return getStyles$2(props, fallbackProps.style);
  }
});
Object.defineProperty(VictoryAxis, "getBaseProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    return getBaseProps(props, fallbackProps);
  }
});
Object.defineProperty(VictoryAxis, "expectedComponents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["axisComponent", "axisLabelComponent", "groupComponent", "containerComponent", "tickComponent", "tickLabelComponent", "gridComponent"]
});
var VictoryAxis$1 = addEvents(VictoryAxis, options);
var getPosition$2 = function(r3, angle, axis2) {
  return axis2 === "x" ? r3 * Math.cos(angle) : -r3 * Math.sin(angle);
};
var getAxisType = function(props) {
  var typicalType = props.dependentAxis ? "radial" : "angular";
  var invertedType = typicalType === "angular" ? "radial" : "angular";
  return props.horizontal ? invertedType : typicalType;
};
var filterTicks = function(ticks4, scale) {
  var compareTicks = function(t4) {
    return scale(t4) % (2 * Math.PI);
  };
  return uniqBy_1(ticks4, compareTicks);
};
var getEvaluatedStyles$1 = function(style, props) {
  return {
    tickStyle: Helpers.evaluateStyle(style.ticks, props),
    labelStyle: Helpers.evaluateStyle(style.tickLabels, props),
    gridStyle: Helpers.evaluateStyle(style.grid, props)
  };
};
var getStyleObject$1 = function(props) {
  var _props$theme = props.theme, theme = _props$theme === void 0 ? {} : _props$theme, dependentAxis = props.dependentAxis;
  var generalAxisStyle = theme.polarAxis && theme.polarAxis.style || theme.axis && theme.axis.style;
  var polarAxisType = dependentAxis ? "polarDependentAxis" : "polarIndependentAxis";
  var standardAxisType = dependentAxis ? "dependentAxis" : "independentAxis";
  var specificAxisStyle = theme[polarAxisType] && theme[polarAxisType].style || theme[standardAxisType] && theme[standardAxisType].style;
  var mergeStyles = function() {
    var styleNamespaces = ["axis", "axisLabel", "grid", "parent", "tickLabels", "ticks"];
    return styleNamespaces.reduce(function(memo, curr) {
      memo[curr] = defaults_1({}, specificAxisStyle[curr], generalAxisStyle[curr]);
      return memo;
    }, {});
  };
  return generalAxisStyle && specificAxisStyle ? mergeStyles() : specificAxisStyle || generalAxisStyle;
};
var getRadius$1 = function(props) {
  var _Helpers$getPadding = Helpers.getPadding(props), left2 = _Helpers$getPadding.left, right2 = _Helpers$getPadding.right, top2 = _Helpers$getPadding.top, bottom2 = _Helpers$getPadding.bottom;
  var width = props.width, height = props.height;
  return Math.min(width - left2 - right2, height - top2 - bottom2) / 2;
};
var getRange$1 = function(props, axis2) {
  if (props.range && props.range[axis2]) {
    return props.range[axis2];
  } else if (props.range && Array.isArray(props.range)) {
    return props.range;
  }
  var axisType = getAxisType(props);
  if (axisType === "angular") {
    var startAngle = Helpers.degreesToRadians(props.startAngle);
    var endAngle = Helpers.degreesToRadians(props.endAngle);
    return [startAngle, endAngle];
  }
  var radius = getRadius$1(props);
  return [props.innerRadius || 0, radius];
};
var getScale$1 = function(props) {
  var axis2 = Axis2.getAxis(props);
  var scale = Scale.getBaseScale(props, axis2);
  var domain = Axis2.getDomain(props, axis2) || scale.domain();
  var range7 = getRange$1(props, axis2);
  scale.range(range7);
  scale.domain(domain);
  return scale;
};
var getStyles$3 = function(props, styleObject) {
  var style = props.style || {};
  styleObject = styleObject || {};
  var parentStyleProps = {
    height: "auto",
    width: "100%"
  };
  return {
    parent: defaults_1(parentStyleProps, style.parent, styleObject.parent),
    axis: defaults_1({}, style.axis, styleObject.axis),
    axisLabel: defaults_1({}, style.axisLabel, styleObject.axisLabel),
    grid: defaults_1({}, style.grid, styleObject.grid),
    ticks: defaults_1({}, style.ticks, styleObject.ticks),
    tickLabels: defaults_1({}, style.tickLabels, styleObject.tickLabels)
  };
};
var getAxisAngle = function(props) {
  var axisAngle = props.axisAngle, startAngle = props.startAngle, dependentAxis = props.dependentAxis;
  var axis2 = Axis2.getAxis(props);
  var axisValue = Axis2.getAxisValue(props, axis2);
  if (axisValue === void 0 || !dependentAxis) {
    return axisAngle === void 0 ? startAngle : axisAngle;
  }
  return Helpers.radiansToDegrees(axisValue);
};
var getTickProps$1 = function(props, calculatedValues, tickValue2, index4) {
  var axisType = calculatedValues.axisType, radius = calculatedValues.radius, scale = calculatedValues.scale, style = calculatedValues.style, stringTicks2 = calculatedValues.stringTicks, ticks4 = calculatedValues.ticks, tickFormat4 = calculatedValues.tickFormat, origin = calculatedValues.origin;
  var text2 = tickFormat4(tickValue2, index4, ticks4);
  var tick = stringTicks2 ? stringTicks2[index4] : tickValue2;
  var _getEvaluatedStyles = getEvaluatedStyles$1(style, {
    tick,
    tickValue: tickValue2,
    index: index4,
    ticks: ticks4,
    stringTicks: stringTicks2,
    radius,
    scale,
    axisType,
    text: text2
  }), tickStyle = _getEvaluatedStyles.tickStyle;
  var axisAngle = axisType === "radial" ? getAxisAngle(props) : void 0;
  var tickPadding = tickStyle.padding || tickStyle.size || 0;
  var padAngle = Helpers.degreesToRadians(90 - axisAngle);
  var tickAngle = axisType === "angular" ? scale(tickValue2) : Helpers.degreesToRadians(-1 * axisAngle);
  var tickRadius = axisType === "angular" ? radius : scale(tickValue2);
  return axisType === "angular" ? {
    index: index4,
    datum: tick,
    style: tickStyle,
    x1: getPosition$2(tickRadius, tickAngle, "x") + origin.x,
    y1: getPosition$2(tickRadius, tickAngle, "y") + origin.y,
    x2: getPosition$2(tickRadius + tickPadding, tickAngle, "x") + origin.x,
    y2: getPosition$2(tickRadius + tickPadding, tickAngle, "y") + origin.y
  } : {
    index: index4,
    datum: tick,
    style: tickStyle,
    x1: tickRadius * Math.cos(tickAngle) + Math.cos(padAngle) * tickPadding + origin.x,
    x2: tickRadius * Math.cos(tickAngle) - Math.cos(padAngle) * tickPadding + origin.x,
    y1: tickRadius * Math.sin(tickAngle) + Math.sin(padAngle) * tickPadding + origin.y,
    y2: tickRadius * Math.sin(tickAngle) - Math.sin(padAngle) * tickPadding + origin.y
  };
};
var getTickLabelProps$1 = function(props, calculatedValues, tickValue2, index4) {
  var axisType = calculatedValues.axisType, radius = calculatedValues.radius, tickFormat4 = calculatedValues.tickFormat, style = calculatedValues.style, scale = calculatedValues.scale, ticks4 = calculatedValues.ticks, stringTicks2 = calculatedValues.stringTicks, origin = calculatedValues.origin;
  var text2 = tickFormat4(tickValue2, index4, ticks4);
  var tick = stringTicks2 ? stringTicks2[index4] : tickValue2;
  var _getEvaluatedStyles2 = getEvaluatedStyles$1(style, {
    text: text2,
    tick,
    tickValue: tickValue2,
    index: index4,
    ticks: ticks4,
    stringTicks: stringTicks2,
    radius,
    scale,
    axisType
  }), labelStyle = _getEvaluatedStyles2.labelStyle;
  var tickLabelComponent = props.tickLabelComponent;
  var labelPlacement = tickLabelComponent.props && tickLabelComponent.props.labelPlacement ? tickLabelComponent.props.labelPlacement : props.labelPlacement;
  var tickPadding = labelStyle.padding || 0;
  var angularPadding = 0;
  var axisAngle = axisType === "radial" ? getAxisAngle(props) : void 0;
  var labelAngle = axisType === "angular" ? Helpers.radiansToDegrees(scale(tickValue2)) : axisAngle + angularPadding;
  var textAngle = labelStyle.angle === void 0 ? LabelHelpers.getPolarAngle(assign_1({}, props, {
    labelPlacement
  }), labelAngle) : labelStyle.angle;
  var labelRadius = axisType === "angular" ? radius + tickPadding : scale(tickValue2);
  var textAnchor = labelStyle.textAnchor || LabelHelpers.getPolarTextAnchor(assign_1({}, props, {
    labelPlacement
  }), labelAngle);
  return {
    index: index4,
    datum: tick,
    style: labelStyle,
    angle: textAngle,
    textAnchor,
    text: text2,
    x: labelRadius * Math.cos(Helpers.degreesToRadians(labelAngle)) + origin.x,
    y: -labelRadius * Math.sin(Helpers.degreesToRadians(labelAngle)) + origin.y
  };
};
var getGridProps$1 = function(props, calculatedValues, tickValue2, index4) {
  var axisType = calculatedValues.axisType, radius = calculatedValues.radius, style = calculatedValues.style, scale = calculatedValues.scale, stringTicks2 = calculatedValues.stringTicks, ticks4 = calculatedValues.ticks, tickFormat4 = calculatedValues.tickFormat, origin = calculatedValues.origin;
  var text2 = tickFormat4(tickValue2, index4, ticks4);
  var startAngle = props.startAngle, endAngle = props.endAngle, _props$innerRadius = props.innerRadius, innerRadius = _props$innerRadius === void 0 ? 0 : _props$innerRadius;
  var tick = stringTicks2 ? stringTicks2[index4] : tickValue2;
  var _getEvaluatedStyles3 = getEvaluatedStyles$1(style, {
    tick,
    tickValue: tickValue2,
    index: index4,
    ticks: ticks4,
    stringTicks: stringTicks2,
    radius,
    scale,
    axisType,
    text: text2
  }), gridStyle = _getEvaluatedStyles3.gridStyle;
  var angle = scale(tickValue2);
  return axisType === "angular" ? {
    index: index4,
    datum: tick,
    style: gridStyle,
    x1: getPosition$2(radius, angle, "x") + origin.x,
    y1: getPosition$2(radius, angle, "y") + origin.y,
    x2: getPosition$2(innerRadius, angle, "x") + origin.x,
    y2: getPosition$2(innerRadius, angle, "y") + origin.y
  } : {
    style: gridStyle,
    index: index4,
    datum: tick,
    cx: origin.x,
    cy: origin.y,
    r: scale(tickValue2),
    startAngle,
    endAngle
  };
};
var getAxisLabelProps$1 = function(props, calculatedValues) {
  var axisType = calculatedValues.axisType, radius = calculatedValues.radius, style = calculatedValues.style;
  calculatedValues.scale;
  var origin = calculatedValues.origin;
  var axisLabelComponent = props.axisLabelComponent;
  if (axisType !== "radial") {
    return {};
  }
  var labelPlacement = axisLabelComponent.props && axisLabelComponent.props.labelPlacement ? axisLabelComponent.props.labelPlacement : props.labelPlacement;
  var labelStyle = style && style.axisLabel || {};
  var axisAngle = axisType === "radial" ? getAxisAngle(props) : void 0;
  var textAngle = labelStyle.angle === void 0 ? LabelHelpers.getPolarAngle(assign_1({}, props, {
    labelPlacement
  }), axisAngle) : labelStyle.angle;
  var labelRadius = radius + (labelStyle.padding || 0);
  var textAnchor = labelStyle.textAnchor || LabelHelpers.getTextPolarAnchor(assign_1({}, props, {
    labelPlacement
  }), axisAngle);
  var verticalAnchor = labelStyle.verticalAnchor || LabelHelpers.getPolarVerticalAnchor(assign_1({}, props, {
    labelPlacement
  }), axisAngle);
  return {
    style: labelStyle,
    angle: textAngle,
    textAnchor,
    verticalAnchor,
    text: props.label,
    x: getPosition$2(labelRadius, Helpers.degreesToRadians(axisAngle), "x") + origin.x,
    y: getPosition$2(labelRadius, Helpers.degreesToRadians(axisAngle), "y") + origin.y
  };
};
var getAxisProps$1 = function(modifiedProps, calculatedValues) {
  var style = calculatedValues.style, axisType = calculatedValues.axisType, radius = calculatedValues.radius;
  calculatedValues.scale;
  var origin = calculatedValues.origin;
  var startAngle = modifiedProps.startAngle, endAngle = modifiedProps.endAngle, _modifiedProps$innerR = modifiedProps.innerRadius, innerRadius = _modifiedProps$innerR === void 0 ? 0 : _modifiedProps$innerR;
  var axisAngle = axisType === "radial" ? Helpers.degreesToRadians(getAxisAngle(modifiedProps)) : void 0;
  return axisType === "radial" ? {
    style: style.axis,
    x1: getPosition$2(innerRadius, axisAngle, "x") + origin.x,
    x2: getPosition$2(radius, axisAngle, "x") + origin.x,
    y1: getPosition$2(innerRadius, axisAngle, "y") + origin.y,
    y2: getPosition$2(radius, axisAngle, "y") + origin.y
  } : {
    style: style.axis,
    cx: origin.x,
    cy: origin.y,
    r: radius,
    startAngle,
    endAngle
  };
};
var getCalculatedValues$1 = function(props) {
  props = assign_1({
    polar: true
  }, props);
  var defaultStyles3 = getStyleObject$1(props);
  var style = getStyles$3(props, defaultStyles3);
  var padding2 = Helpers.getPadding(props);
  var axis2 = Axis2.getAxis(props);
  var axisType = getAxisType(props);
  var stringTicks2 = Axis2.stringTicks(props) ? props.tickValues : void 0;
  var domain = Axis2.getDomain(props, axis2);
  var range7 = getRange$1(props, axis2);
  var scale = getScale$1(props);
  var initialTicks = Axis2.getTicks(props, scale);
  var ticks4 = axisType === "angular" ? filterTicks(initialTicks, scale) : initialTicks;
  var tickFormat4 = Axis2.getTickFormat(props, scale);
  var radius = getRadius$1(props);
  var origin = Helpers.getPolarOrigin(props);
  return {
    axis: axis2,
    style,
    padding: padding2,
    stringTicks: stringTicks2,
    axisType,
    scale,
    ticks: ticks4,
    tickFormat: tickFormat4,
    domain,
    range: range7,
    radius,
    origin
  };
};
var getBaseProps$1 = function(props, fallbackProps2) {
  props = Axis2.modifyProps(props, fallbackProps2);
  var calculatedValues = getCalculatedValues$1(props);
  var style = calculatedValues.style, scale = calculatedValues.scale, ticks4 = calculatedValues.ticks, domain = calculatedValues.domain;
  var _props = props, width = _props.width, height = _props.height, standalone = _props.standalone, theme = _props.theme, name = _props.name;
  var axisProps = getAxisProps$1(props, calculatedValues);
  var axisLabelProps = getAxisLabelProps$1(props, calculatedValues);
  var initialChildProps = {
    parent: {
      style: style.parent,
      ticks: ticks4,
      scale,
      width,
      height,
      domain,
      standalone,
      theme,
      name
    }
  };
  return ticks4.reduce(function(childProps, tick, index4) {
    childProps[index4] = {
      axis: axisProps,
      axisLabel: axisLabelProps,
      ticks: getTickProps$1(props, calculatedValues, tick, index4),
      tickLabels: getTickLabelProps$1(props, calculatedValues, tick, index4),
      grid: getGridProps$1(props, calculatedValues, tick, index4)
    };
    return childProps;
  }, initialChildProps);
};
function _objectSpread$8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$b(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$b(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$e(arr) {
  return _arrayWithoutHoles$e(arr) || _iterableToArray$e(arr) || _nonIterableSpread$e();
}
function _nonIterableSpread$e() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$e(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$e(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$a(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$a(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$a(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$a(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$a(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$9(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$9(self2);
}
function _assertThisInitialized$9(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$9(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var fallbackProps$1 = {
  width: 450,
  height: 300,
  padding: 50
};
var options$1 = {
  components: [{
    name: "axis",
    index: 0
  }, {
    name: "axisLabel",
    index: 0
  }, {
    name: "grid"
  }, {
    name: "parent",
    index: "parent"
  }, {
    name: "ticks"
  }, {
    name: "tickLabels"
  }]
};
var VictoryPolarAxis = /* @__PURE__ */ function(_React$Component) {
  _inherits$9(VictoryPolarAxis2, _React$Component);
  function VictoryPolarAxis2() {
    _classCallCheck$a(this, VictoryPolarAxis2);
    return _possibleConstructorReturn$9(this, (VictoryPolarAxis2.__proto__ || Object.getPrototypeOf(VictoryPolarAxis2)).apply(this, arguments));
  }
  _createClass$a(VictoryPolarAxis2, [{
    key: "renderAxisLine",
    value: function renderAxisLine(props) {
      var dependentAxis = props.dependentAxis;
      var axisComponent = dependentAxis ? props.axisComponent : props.circularAxisComponent;
      var axisProps = this.getComponentProps(axisComponent, "axis", 0);
      return react.cloneElement(axisComponent, axisProps);
    }
  }, {
    key: "renderLabel",
    value: function renderLabel2(props) {
      var axisLabelComponent = props.axisLabelComponent, dependentAxis = props.dependentAxis, label = props.label;
      if (!label || !dependentAxis) {
        return null;
      }
      var axisLabelProps = this.getComponentProps(axisLabelComponent, "axisLabel", 0);
      return react.cloneElement(axisLabelComponent, axisLabelProps);
    }
  }, {
    key: "renderAxis",
    value: function renderAxis(props) {
      var _this = this;
      var tickComponent = props.tickComponent, tickLabelComponent = props.tickLabelComponent, name = props.name;
      var shouldRender = function(componentProps) {
        var _componentProps$style = componentProps.style, style = _componentProps$style === void 0 ? {} : _componentProps$style, _componentProps$event = componentProps.events, events = _componentProps$event === void 0 ? {} : _componentProps$event;
        var visible = style.stroke !== "transparent" && style.stroke !== "none" && style.strokeWidth !== 0;
        return visible || !isEmpty_1(events);
      };
      var axisType = props.dependentAxis ? "radial" : "angular";
      var gridComponent = axisType === "radial" ? props.circularGridComponent : props.gridComponent;
      var tickComponents = this.dataKeys.map(function(key, index4) {
        var tickProps = assign_1({
          key: "".concat(name, "-tick-").concat(key)
        }, _this.getComponentProps(tickComponent, "ticks", index4));
        var TickComponent = react.cloneElement(tickComponent, tickProps);
        return shouldRender(TickComponent.props) ? TickComponent : void 0;
      }).filter(Boolean);
      var gridComponents = this.dataKeys.map(function(key, index4) {
        var gridProps = assign_1({
          key: "".concat(name, "-grid-").concat(key)
        }, _this.getComponentProps(gridComponent, "grid", index4));
        var GridComponent = react.cloneElement(gridComponent, gridProps);
        return shouldRender(GridComponent.props) ? GridComponent : void 0;
      }).filter(Boolean);
      var tickLabelComponents = this.dataKeys.map(function(key, index4) {
        var tickLabelProps = assign_1({
          key: "".concat(name, "-tick-").concat(key)
        }, _this.getComponentProps(tickLabelComponent, "tickLabels", index4));
        return react.cloneElement(tickLabelComponent, tickLabelProps);
      });
      var axis2 = this.renderAxisLine(props);
      var axisLabel = this.renderLabel(props);
      var children2 = [axis2, axisLabel].concat(_toConsumableArray$e(tickComponents), _toConsumableArray$e(gridComponents), _toConsumableArray$e(tickLabelComponents));
      return this.renderGroup(props, children2);
    }
  }, {
    key: "renderGroup",
    value: function renderGroup(props, children2) {
      var groupComponent = props.groupComponent;
      return react.cloneElement(groupComponent, {}, children2);
    }
  }, {
    key: "shouldAnimate",
    value: function shouldAnimate() {
      return !!this.props.animate;
    }
  }, {
    key: "render",
    value: function render2() {
      var animationWhitelist = VictoryPolarAxis2.animationWhitelist;
      var props = Axis2.modifyProps(this.props, fallbackProps$1);
      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }
      var children2 = this.renderAxis(props);
      return props.standalone ? this.renderContainer(props.containerComponent, children2) : children2;
    }
  }]);
  return VictoryPolarAxis2;
}(react.Component);
Object.defineProperty(VictoryPolarAxis, "animationWhitelist", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["style", "domain", "range", "tickCount", "tickValues", "padding", "width", "height"]
});
Object.defineProperty(VictoryPolarAxis, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryAxis"
});
Object.defineProperty(VictoryPolarAxis, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "axis"
});
Object.defineProperty(VictoryPolarAxis, "defaultTransitions", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    onExit: {
      duration: 500
    },
    onEnter: {
      duration: 500
    }
  }
});
Object.defineProperty(VictoryPolarAxis, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread$8({}, CommonProps.baseProps, {
    axisAngle: propTypes.number,
    axisComponent: propTypes.element,
    axisLabelComponent: propTypes.element,
    axisValue: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.object]),
    categories: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.shape({
      x: propTypes.arrayOf(propTypes.string),
      y: propTypes.arrayOf(propTypes.string)
    })]),
    circularAxisComponent: propTypes.element,
    circularGridComponent: propTypes.element,
    containerComponent: propTypes.element,
    dependentAxis: propTypes.bool,
    endAngle: propTypes.number,
    events: propTypes.arrayOf(propTypes.shape({
      target: propTypes.oneOf(["axis", "axisLabel", "grid", "ticks", "tickLabels"]),
      eventKey: propTypes.oneOfType([propTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), propTypes.string]),
      eventHandlers: propTypes.object
    })),
    gridComponent: propTypes.element,
    innerRadius: CustomPropTypes.nonNegative,
    labelPlacement: propTypes.oneOf(["parallel", "perpendicular", "vertical"]),
    startAngle: propTypes.number,
    stringMap: propTypes.object,
    style: propTypes.shape({
      parent: propTypes.object,
      axis: propTypes.object,
      axisLabel: propTypes.object,
      grid: propTypes.object,
      ticks: propTypes.object,
      tickLabels: propTypes.object
    }),
    tickComponent: propTypes.element,
    tickCount: CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.greaterThanZero]),
    tickFormat: propTypes.oneOfType([propTypes.func, CustomPropTypes.homogeneousArray]),
    tickLabelComponent: propTypes.element,
    tickValues: CustomPropTypes.homogeneousArray
  })
});
Object.defineProperty(VictoryPolarAxis, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    axisComponent: react.createElement(LineSegment, null),
    axisLabelComponent: react.createElement(VictoryLabel, null),
    circularAxisComponent: react.createElement(Arc, null),
    circularGridComponent: react.createElement(Arc, null),
    containerComponent: react.createElement(VictoryContainer, null),
    endAngle: 360,
    gridComponent: react.createElement(LineSegment, null),
    groupComponent: react.createElement("g", {
      role: "presentation"
    }),
    labelPlacement: "parallel",
    startAngle: 0,
    standalone: true,
    theme: VictoryTheme.grayscale,
    tickComponent: react.createElement(LineSegment, null),
    tickLabelComponent: react.createElement(VictoryLabel, null)
  }
});
Object.defineProperty(VictoryPolarAxis, "getDomain", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Axis2.getDomain
});
Object.defineProperty(VictoryPolarAxis, "getAxis", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Axis2.getAxis
});
Object.defineProperty(VictoryPolarAxis, "getScale", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: getScale$1
});
Object.defineProperty(VictoryPolarAxis, "getStyles", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    return getStyles$3(props, fallbackProps$1.style);
  }
});
Object.defineProperty(VictoryPolarAxis, "getBaseProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    return getBaseProps$1(props, fallbackProps$1);
  }
});
Object.defineProperty(VictoryPolarAxis, "expectedComponents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["axisComponent", "circularAxisComponent", "groupComponent", "containerComponent", "tickComponent", "tickLabelComponent", "gridComponent", "circularGridComponent"]
});
var VictoryPolarAxis$1 = addEvents(VictoryPolarAxis, options$1);
function _toConsumableArray$f(arr) {
  return _arrayWithoutHoles$f(arr) || _iterableToArray$f(arr) || _nonIterableSpread$f();
}
function _nonIterableSpread$f() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$f(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$f(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var fallbackProps$2 = {
  width: 450,
  height: 300,
  padding: 50
};
function getAxisProps$2(child, props, calculatedProps) {
  var domain = calculatedProps.domain, scale = calculatedProps.scale, stringMap = calculatedProps.stringMap, categories = calculatedProps.categories, horizontal = calculatedProps.horizontal, orientations = calculatedProps.orientations;
  var childProps = Axis2.modifyProps(defaults_1({
    horizontal,
    theme: props.theme
  }, child.props));
  var axis2 = child.type.getAxis(childProps);
  var crossAxis = childProps.crossAxis === false ? false : true;
  var orientation = childProps.orientation || orientations[axis2];
  var axisOffset = horizontal ? getHorizontalAxisOffset(props, calculatedProps, orientation) : getAxisOffset(props, calculatedProps, orientation);
  return {
    stringMap,
    horizontal,
    categories,
    startAngle: props.startAngle,
    endAngle: props.endAngle,
    innerRadius: props.innerRadius,
    domain,
    scale,
    offsetY: childProps.offsetY !== void 0 ? childProps.offsetY : axisOffset.y,
    offsetX: childProps.offsetX !== void 0 ? childProps.offsetX : axisOffset.x,
    crossAxis,
    orientation
  };
}
function getBackgroundWithProps(props, calculatedProps) {
  var backgroundElement = props.backgroundComponent;
  var height = props.polar ? calculatedProps.range.y[1] : calculatedProps.range.y[0] - calculatedProps.range.y[1];
  var width = calculatedProps.range.x[1] - calculatedProps.range.x[0];
  var xScale = props.horizontal ? calculatedProps.scale.y.range()[0] : calculatedProps.scale.x.range()[0];
  var yScale = props.horizontal ? calculatedProps.scale.x.range()[1] : calculatedProps.scale.y.range()[1];
  var xCoordinate = props.polar ? calculatedProps.origin.x : xScale;
  var yCoordinate = props.polar ? calculatedProps.origin.y : yScale;
  var parentName = props.name || "chart";
  var backgroundProps = {
    height,
    polar: props.polar,
    scale: calculatedProps.scale,
    style: props.style.background,
    x: xCoordinate,
    y: yCoordinate,
    key: "".concat(parentName, "-background"),
    width
  };
  return react.cloneElement(backgroundElement, defaults_1({}, backgroundElement.props, backgroundProps));
}
function getChildProps(child, props, calculatedProps) {
  var axisChild = Axis2.findAxisComponents([child]);
  if (axisChild.length > 0) {
    return getAxisProps$2(axisChild[0], props, calculatedProps);
  }
  var categories = calculatedProps.categories, domain = calculatedProps.domain, range7 = calculatedProps.range, scale = calculatedProps.scale, stringMap = calculatedProps.stringMap, horizontal = calculatedProps.horizontal;
  return {
    categories,
    domain,
    range: range7,
    scale,
    stringMap,
    horizontal
  };
}
function getStyles$4(props) {
  var styleProps = props.style && props.style.parent;
  return {
    parent: defaults_1({}, styleProps, {
      height: "100%",
      width: "100%",
      userSelect: "none"
    })
  };
}
function getOrientation$1(axis2, originSign, horizontal) {
  var sign5 = originSign || "positive";
  var orientations = {
    positive: {
      x: "bottom",
      y: "left"
    },
    negative: {
      x: "top",
      y: "right"
    }
  };
  var horizontalOrientations = {
    positive: {
      x: "left",
      y: "bottom"
    },
    negative: {
      x: "right",
      y: "top"
    }
  };
  return horizontal ? horizontalOrientations[sign5][axis2] : orientations[sign5][axis2];
}
function getCalculatedProps$1(props, childComponents) {
  var style = getStyles$4(props);
  props = Helpers.modifyProps(props, fallbackProps$2, "chart");
  var _props = props, horizontal = _props.horizontal, polar = _props.polar;
  var allStrings = Wrapper.getStringsFromChildren(props, childComponents);
  var categories = Wrapper.getCategories(props, childComponents, allStrings);
  var stringMap = createStringMap$1(props, childComponents, allStrings);
  var domain = {
    x: getDomain$2(assign_1({}, props, {
      categories
    }), "x", childComponents),
    y: getDomain$2(assign_1({}, props, {
      categories
    }), "y", childComponents)
  };
  var range7 = {
    x: Helpers.getRange(props, "x"),
    y: Helpers.getRange(props, "y")
  };
  var baseScale = {
    x: Scale.getScaleFromProps(props, "x") || Wrapper.getScale(props, "x"),
    y: Scale.getScaleFromProps(props, "y") || Wrapper.getScale(props, "y")
  };
  var scale = {
    x: baseScale.x.domain(domain.x).range(horizontal ? range7.y : range7.x),
    y: baseScale.y.domain(domain.y).range(horizontal ? range7.x : range7.y)
  };
  var origin = polar ? Helpers.getPolarOrigin(props) : Axis2.getOrigin(domain);
  var originSign = {
    x: Axis2.getOriginSign(origin.x, domain.x),
    y: Axis2.getOriginSign(origin.y, domain.y)
  };
  var orientations = {
    x: getOrientation$1("x", originSign.y, horizontal),
    y: getOrientation$1("y", originSign.x, horizontal)
  };
  var padding2 = Helpers.getPadding(props);
  return {
    categories,
    domain,
    range: range7,
    horizontal,
    scale,
    stringMap,
    style,
    origin,
    padding: padding2,
    orientations
  };
}
function getChildren(props, childComponents, calculatedProps) {
  childComponents = childComponents || getChildComponents(props);
  calculatedProps = calculatedProps || getCalculatedProps$1(props, childComponents);
  var baseStyle = calculatedProps.style.parent;
  var height = props.height, polar = props.polar, theme = props.theme, width = props.width;
  var _calculatedProps = calculatedProps, origin = _calculatedProps.origin, horizontal = _calculatedProps.horizontal;
  var parentName = props.name || "chart";
  return childComponents.map(function(child, index4) {
    var role = child.type && child.type.role;
    var style = Array.isArray(child.props.style) ? child.props.style : defaults_1({}, child.props.style, {
      parent: baseStyle
    });
    var childProps = getChildProps(child, props, calculatedProps);
    var name = child.props.name || "".concat(parentName, "-").concat(role, "-").concat(index4);
    var newProps = defaults_1({
      horizontal,
      height,
      polar,
      theme,
      width,
      style,
      name,
      origin: polar ? origin : void 0,
      padding: calculatedProps.padding,
      key: "".concat(name, "-key-").concat(index4),
      standalone: false
    }, childProps);
    return react.cloneElement(child, newProps);
  });
}
var getChildComponents = function(props, defaultAxes) {
  var childComponents = react.Children.toArray(props.children);
  var newChildComponents = _toConsumableArray$f(childComponents);
  if (childComponents.length === 0) {
    newChildComponents.push(defaultAxes.independent, defaultAxes.dependent);
  } else {
    var axisComponents = {
      dependent: Axis2.getAxisComponentsWithParent(childComponents, "dependent"),
      independent: Axis2.getAxisComponentsWithParent(childComponents, "independent")
    };
    if (axisComponents.dependent.length === 0 && axisComponents.independent.length === 0) {
      newChildComponents = props.prependDefaultAxes ? [defaultAxes.independent, defaultAxes.dependent].concat(newChildComponents) : newChildComponents.concat([defaultAxes.independent, defaultAxes.dependent]);
    }
  }
  return newChildComponents;
};
var getDomain$2 = function(props, axis2, childComponents) {
  childComponents = childComponents || react.Children.toArray(props.children);
  var domain = Wrapper.getDomain(props, axis2, childComponents);
  var axisComponent = Axis2.getAxisComponent(childComponents, axis2);
  var invertDomain = axisComponent && axisComponent.props && axisComponent.props.invertAxis;
  return invertDomain ? domain.concat().reverse() : domain;
};
var getAxisOffset = function(props, calculatedProps, orientation) {
  var scale = calculatedProps.scale, origin = calculatedProps.origin, domain = calculatedProps.domain, padding2 = calculatedProps.padding;
  var top2 = padding2.top, bottom2 = padding2.bottom, left2 = padding2.left, right2 = padding2.right;
  var orientations = {
    x: orientation === "bottom" || orientation === "top" ? orientation : calculatedProps.orientations.x,
    y: orientation === "left" || orientation === "right" ? orientation : calculatedProps.orientations.y
  };
  var orientationOffset = {
    y: orientations.x === "bottom" ? bottom2 : top2,
    x: orientations.y === "left" ? left2 : right2
  };
  var originOffset = {
    x: orientations.y === "left" ? 0 : props.width,
    y: orientations.x === "bottom" ? props.height : 0
  };
  var originPosition = {
    x: origin.x === domain.x[0] || origin.x === domain.x[1] ? 0 : scale.x(origin.x),
    y: origin.y === domain.y[0] || origin.y === domain.y[1] ? 0 : scale.y(origin.y)
  };
  return {
    x: originPosition.x ? Math.abs(originOffset.x - originPosition.x) : orientationOffset.x,
    y: originPosition.y ? Math.abs(originOffset.y - originPosition.y) : orientationOffset.y
  };
};
var getHorizontalAxisOffset = function(props, calculatedProps, orientation) {
  var scale = calculatedProps.scale, origin = calculatedProps.origin, domain = calculatedProps.domain, padding2 = calculatedProps.padding;
  var top2 = padding2.top, bottom2 = padding2.bottom, left2 = padding2.left, right2 = padding2.right;
  var orientations = {
    y: orientation === "bottom" || orientation === "top" ? orientation : calculatedProps.orientations.x,
    x: orientation === "left" || orientation === "right" ? orientation : calculatedProps.orientations.y
  };
  var orientationOffset = {
    x: orientations.y === "bottom" ? bottom2 : top2,
    y: orientations.x === "left" ? left2 : right2
  };
  var originOffset = {
    y: orientations.x === "left" ? 0 : props.width,
    x: orientations.y === "bottom" ? props.height : 0
  };
  var originPosition = {
    x: origin.x === domain.x[0] || origin.x === domain.x[1] ? 0 : scale.x(origin.x),
    y: origin.y === domain.y[0] || origin.y === domain.y[1] ? 0 : scale.y(origin.y)
  };
  return {
    y: originPosition.x ? Math.abs(originOffset.x - originPosition.x) : orientationOffset.x,
    x: originPosition.y ? Math.abs(originOffset.y - originPosition.y) : orientationOffset.y
  };
};
var createStringMap$1 = function(props, childComponents, allStrings) {
  var x5 = !allStrings.x || allStrings.x.length === 0 ? null : allStrings.x.reduce(function(memo, string2, index4) {
    memo[string2] = index4 + 1;
    return memo;
  }, {});
  var y7 = !allStrings.y || allStrings.y.length === 0 ? null : allStrings.y.reduce(function(memo, string2, index4) {
    memo[string2] = index4 + 1;
    return memo;
  }, {});
  return {
    x: x5,
    y: y7
  };
};
function _objectSpread$9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$c(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$c(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$b(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$b(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$b(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$b(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$b(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$a(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$a(self2);
}
function _inherits$a(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$a(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var fallbackProps$3 = {
  width: 450,
  height: 300,
  padding: 50
};
var VictoryChart = /* @__PURE__ */ function(_React$Component) {
  _inherits$a(VictoryChart2, _React$Component);
  function VictoryChart2(props) {
    var _this;
    _classCallCheck$b(this, VictoryChart2);
    _this = _possibleConstructorReturn$a(this, (VictoryChart2.__proto__ || Object.getPrototypeOf(VictoryChart2)).call(this, props));
    _this.state = {};
    if (props.animate) {
      _this.state = {
        nodesShouldLoad: false,
        nodesDoneLoad: false,
        animating: true
      };
      _this.setAnimationState = Wrapper.setAnimationState.bind(_assertThisInitialized$a(_this));
    }
    return _this;
  }
  _createClass$b(VictoryChart2, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (this.props.animate) {
        if (!reactFastCompare(this.props, nextProps)) {
          this.setAnimationState(this.props, nextProps);
          return false;
        }
      }
      return true;
    }
  }, {
    key: "getNewChildren",
    value: function getNewChildren(props, childComponents, calculatedProps) {
      var children2 = getChildren(props, childComponents, calculatedProps);
      var getAnimationProps = Wrapper.getAnimationProps.bind(this);
      var newChildren = children2.map(function(child, index4) {
        var childProps = assign_1({
          animate: getAnimationProps(props, child, index4)
        }, child.props);
        return react.cloneElement(child, childProps);
      });
      if (props.style && props.style.background) {
        var backgroundComponent = getBackgroundWithProps(props, calculatedProps);
        newChildren.unshift(backgroundComponent);
      }
      return newChildren;
    }
  }, {
    key: "renderContainer",
    value: function renderContainer(containerComponent, props) {
      var containerProps = defaults_1({}, containerComponent.props, props);
      return react.cloneElement(containerComponent, containerProps);
    }
  }, {
    key: "getContainerProps",
    value: function getContainerProps(props, calculatedProps) {
      var width = props.width, height = props.height, standalone = props.standalone, theme = props.theme, polar = props.polar, name = props.name;
      var domain = calculatedProps.domain, scale = calculatedProps.scale, style = calculatedProps.style, origin = calculatedProps.origin, radius = calculatedProps.radius, horizontal = calculatedProps.horizontal;
      return {
        domain,
        scale,
        width,
        height,
        standalone,
        theme,
        style: style.parent,
        horizontal,
        name,
        polar,
        radius,
        origin: polar ? origin : void 0
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var props = this.state && this.state.nodesWillExit ? this.state.oldProps || this.props : this.props;
      var modifiedProps = Helpers.modifyProps(props, fallbackProps$3, "chart");
      var eventKey = modifiedProps.eventKey, containerComponent = modifiedProps.containerComponent, groupComponent = modifiedProps.groupComponent, standalone = modifiedProps.standalone, externalEventMutations = modifiedProps.externalEventMutations;
      var axes = props.polar ? modifiedProps.defaultPolarAxes : modifiedProps.defaultAxes;
      var childComponents = getChildComponents(modifiedProps, axes);
      var calculatedProps = getCalculatedProps$1(modifiedProps, childComponents);
      var newChildren = this.getNewChildren(modifiedProps, childComponents, calculatedProps);
      var containerProps = standalone ? this.getContainerProps(modifiedProps, calculatedProps) : {};
      var container = standalone ? this.renderContainer(containerComponent, containerProps) : groupComponent;
      var events = Wrapper.getAllEvents(props);
      if (!isEmpty_1(events)) {
        return react.createElement(VictorySharedEvents, {
          container,
          eventKey,
          events,
          externalEventMutations
        }, newChildren);
      }
      return react.cloneElement(container, container.props, newChildren);
    }
  }]);
  return VictoryChart2;
}(react.Component);
Object.defineProperty(VictoryChart, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryChart"
});
Object.defineProperty(VictoryChart, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread$9({}, CommonProps.baseProps, {
    backgroundComponent: propTypes.element,
    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
    defaultAxes: propTypes.shape({
      independent: propTypes.element,
      dependent: propTypes.element
    }),
    defaultPolarAxes: propTypes.shape({
      independent: propTypes.element,
      dependent: propTypes.element
    }),
    endAngle: propTypes.number,
    innerRadius: CustomPropTypes.nonNegative,
    prependDefaultAxes: propTypes.bool,
    startAngle: propTypes.number
  })
});
Object.defineProperty(VictoryChart, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    backgroundComponent: react.createElement(Background, null),
    containerComponent: react.createElement(VictoryContainer, null),
    defaultAxes: {
      independent: react.createElement(VictoryAxis$1, null),
      dependent: react.createElement(VictoryAxis$1, {
        dependentAxis: true
      })
    },
    defaultPolarAxes: {
      independent: react.createElement(VictoryPolarAxis$1, null),
      dependent: react.createElement(VictoryPolarAxis$1, {
        dependentAxis: true
      })
    },
    groupComponent: react.createElement("g", null),
    standalone: true,
    theme: VictoryTheme.grayscale
  }
});
Object.defineProperty(VictoryChart, "expectedComponents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["groupComponent", "containerComponent"]
});
var fallbackProps$4 = {
  width: 450,
  height: 300,
  padding: 50
};
function fillData(props, datasets) {
  var fillInMissingData = props.fillInMissingData;
  var xMap = datasets.reduce(function(prev, dataset) {
    dataset.forEach(function(datum2) {
      prev[datum2._x instanceof Date ? datum2._x.getTime() : datum2._x] = true;
    });
    return prev;
  }, {});
  var xKeys = keys_1(xMap).map(function(k6) {
    return +k6;
  });
  var xArr = orderBy_1(xKeys);
  return datasets.map(function(dataset) {
    var indexOffset = 0;
    var isDate2 = dataset[0] && dataset[0]._x instanceof Date;
    var filledInData = xArr.map(function(x5, index4) {
      x5 = +x5;
      var datum2 = dataset[index4 - indexOffset];
      if (datum2) {
        var x14 = isDate2 ? datum2._x.getTime() : datum2._x;
        if (x14 === x5) {
          return datum2;
        } else {
          indexOffset++;
          var y7 = fillInMissingData ? 0 : null;
          x5 = isDate2 ? new Date(x5) : x5;
          return {
            x: x5,
            y: y7,
            _x: x5,
            _y: y7
          };
        }
      } else {
        var _y = fillInMissingData ? 0 : null;
        x5 = isDate2 ? new Date(x5) : x5;
        return {
          x: x5,
          y: _y,
          _x: x5,
          _y
        };
      }
    });
    return filledInData;
  });
}
function getY0(datum2, index4, datasets) {
  if (datum2.y0) {
    return datum2.y0;
  }
  var y7 = datum2._y;
  var previousDatasets = datasets.slice(0, index4);
  var previousPoints = previousDatasets.reduce(function(prev, dataset) {
    return prev.concat(dataset.filter(function(previousDatum) {
      return datum2._x instanceof Date ? previousDatum._x.getTime() === datum2._x.getTime() : previousDatum._x === datum2._x;
    }).map(function(previousDatum) {
      return previousDatum._y || 0;
    }));
  }, []);
  var y03 = previousPoints.length && previousPoints.reduce(function(memo, value2) {
    var sameSign = y7 < 0 && value2 < 0 || y7 >= 0 && value2 >= 0;
    return sameSign ? +value2 + memo : memo;
  }, 0);
  return previousPoints.some(function(point8) {
    return point8 instanceof Date;
  }) ? new Date(y03) : y03;
}
function addLayoutData(props, datasets, index4) {
  var xOffset = props.xOffset || 0;
  return datasets[index4].map(function(datum2) {
    var yOffset = getY0(datum2, index4, datasets) || 0;
    return assign_1({}, datum2, {
      _y0: !(datum2._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum2._y,
      _y1: datum2._y === null ? null : datum2._y instanceof Date ? new Date(+datum2._y + +yOffset) : datum2._y + yOffset,
      _x1: datum2._x === null ? null : datum2._x instanceof Date ? new Date(+datum2._x + +xOffset) : datum2._x + xOffset
    });
  });
}
function stackData(props, childComponents) {
  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);
  var datasets = fillData(props, dataFromChildren);
  return datasets.map(function(d2, i) {
    return addLayoutData(props, datasets, i);
  });
}
function getCalculatedProps$2(props, childComponents) {
  childComponents = childComponents || react.Children.toArray(props.children);
  var role = "stack";
  props = Helpers.modifyProps(props, fallbackProps$4, role);
  var style = Wrapper.getStyle(props.theme, props.style, role);
  var categories = props.categories || Wrapper.getCategories(props, childComponents);
  var datasets = props.datasets || stackData(props, childComponents);
  var children2 = childComponents.map(function(c5, i) {
    return react.cloneElement(c5, {
      data: datasets[i]
    });
  });
  var domain = {
    x: Wrapper.getDomain(assign_1({}, props, {
      categories
    }), "x", children2),
    y: Wrapper.getDomain(assign_1({}, props, {
      categories
    }), "y", children2)
  };
  var range7 = props.range || {
    x: Helpers.getRange(props, "x"),
    y: Helpers.getRange(props, "y")
  };
  var baseScale = {
    x: Scale.getScaleFromProps(props, "x") || Wrapper.getScale(props, "x"),
    y: Scale.getScaleFromProps(props, "y") || Wrapper.getScale(props, "y")
  };
  var scale = {
    x: baseScale.x.domain(domain.x).range(props.horizontal ? range7.y : range7.x),
    y: baseScale.y.domain(domain.y).range(props.horizontal ? range7.x : range7.y)
  };
  var _props = props, colorScale3 = _props.colorScale, horizontal = _props.horizontal;
  return {
    datasets,
    categories,
    range: range7,
    domain,
    horizontal,
    scale,
    style,
    colorScale: colorScale3,
    role
  };
}
function getLabels(props, datasets, index4) {
  if (!props.labels) {
    return void 0;
  }
  return datasets.length === index4 + 1 ? props.labels : void 0;
}
function getChildProps$1(props, calculatedProps) {
  var categories = calculatedProps.categories, domain = calculatedProps.domain, range7 = calculatedProps.range, scale = calculatedProps.scale, horizontal = calculatedProps.horizontal;
  return {
    height: props.height,
    width: props.width,
    padding: Helpers.getPadding(props),
    standalone: false,
    theme: props.theme,
    categories,
    domain,
    range: range7,
    scale,
    horizontal
  };
}
function getColorScale(props, child) {
  var role = child.type && child.type.role;
  var colorScaleOptions = child.props.colorScale || props.colorScale;
  if (role !== "group" && role !== "stack") {
    return void 0;
  }
  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;
}
function getChildren$1(props, childComponents, calculatedProps) {
  props = Helpers.modifyProps(props, fallbackProps$4, "stack");
  childComponents = childComponents || react.Children.toArray(props.children);
  calculatedProps = calculatedProps || getCalculatedProps$2(props, childComponents);
  var _calculatedProps = calculatedProps, datasets = _calculatedProps.datasets;
  var childProps = getChildProps$1(props, calculatedProps);
  var parentName = props.name || "stack";
  return childComponents.map(function(child, index4) {
    var role = child.type && child.type.role;
    var data3 = datasets[index4];
    var style = Wrapper.getChildStyle(child, index4, calculatedProps);
    var labels = props.labels ? getLabels(props, datasets, index4) : child.props.labels;
    var name = child.props.name || "".concat(parentName, "-").concat(role, "-").concat(index4);
    return react.cloneElement(child, assign_1({
      key: "".concat(name, "-key-").concat(index4),
      labels,
      name,
      domainPadding: child.props.domainPadding || props.domainPadding,
      theme: props.theme,
      labelComponent: props.labelComponent || child.props.labelComponent,
      style,
      colorScale: getColorScale(props, child),
      data: data3,
      polar: props.polar
    }, childProps));
  });
}
function _objectSpread$a(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$d(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$d(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$c(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$c(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$c(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$c(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$c(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$b(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$b(self2);
}
function _inherits$b(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _assertThisInitialized$b(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var fallbackProps$5 = {
  width: 450,
  height: 300,
  padding: 50
};
var VictoryStack = /* @__PURE__ */ function(_React$Component) {
  _inherits$b(VictoryStack2, _React$Component);
  function VictoryStack2(props) {
    var _this;
    _classCallCheck$c(this, VictoryStack2);
    _this = _possibleConstructorReturn$b(this, (VictoryStack2.__proto__ || Object.getPrototypeOf(VictoryStack2)).call(this, props));
    if (props.animate) {
      _this.state = {
        nodesShouldLoad: false,
        nodesDoneLoad: false,
        animating: true
      };
      _this.setAnimationState = Wrapper.setAnimationState.bind(_assertThisInitialized$b(_this));
    }
    return _this;
  }
  _createClass$c(VictoryStack2, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (this.props.animate) {
        if (!reactFastCompare(this.props, nextProps)) {
          this.setAnimationState(this.props, nextProps);
          return false;
        }
      }
      return true;
    }
  }, {
    key: "getNewChildren",
    value: function getNewChildren(props, childComponents, calculatedProps) {
      var children2 = getChildren$1(props, childComponents, calculatedProps);
      var getAnimationProps = Wrapper.getAnimationProps.bind(this);
      var newChildren = children2.map(function(child, index4) {
        var childProps = assign_1({
          animate: getAnimationProps(props, child, index4)
        }, child.props);
        return react.cloneElement(child, childProps);
      });
      return newChildren.reverse();
    }
  }, {
    key: "renderContainer",
    value: function renderContainer(containerComponent, props) {
      var containerProps = defaults_1({}, containerComponent.props, props);
      return react.cloneElement(containerComponent, containerProps);
    }
  }, {
    key: "getContainerProps",
    value: function getContainerProps(props, calculatedProps) {
      var width = props.width, height = props.height, standalone = props.standalone, theme = props.theme, polar = props.polar, horizontal = props.horizontal, name = props.name;
      var domain = calculatedProps.domain, scale = calculatedProps.scale, style = calculatedProps.style, origin = calculatedProps.origin;
      return {
        domain,
        scale,
        width,
        height,
        standalone,
        theme,
        style: style.parent,
        horizontal,
        polar,
        origin,
        name
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var role = this.constructor.role;
      var props = this.state && this.state.nodesWillExit ? this.state.oldProps || this.props : this.props;
      var modifiedProps = Helpers.modifyProps(props, fallbackProps$5, role);
      var eventKey = modifiedProps.eventKey, containerComponent = modifiedProps.containerComponent, standalone = modifiedProps.standalone, groupComponent = modifiedProps.groupComponent, externalEventMutations = modifiedProps.externalEventMutations;
      var childComponents = react.Children.toArray(modifiedProps.children);
      var calculatedProps = getCalculatedProps$2(modifiedProps, childComponents);
      var newChildren = this.getNewChildren(modifiedProps, childComponents, calculatedProps);
      var containerProps = standalone ? this.getContainerProps(modifiedProps, calculatedProps) : {};
      var container = standalone ? this.renderContainer(containerComponent, containerProps) : groupComponent;
      var events = Wrapper.getAllEvents(props);
      if (!isEmpty_1(events)) {
        return react.createElement(VictorySharedEvents, {
          container,
          eventKey,
          events,
          externalEventMutations
        }, newChildren);
      }
      return react.cloneElement(container, container.props, newChildren);
    }
  }]);
  return VictoryStack2;
}(react.Component);
Object.defineProperty(VictoryStack, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryStack"
});
Object.defineProperty(VictoryStack, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "stack"
});
Object.defineProperty(VictoryStack, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread$a({}, CommonProps.baseProps, {
    bins: propTypes.oneOfType([propTypes.arrayOf(propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),
    categories: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.shape({
      x: propTypes.arrayOf(propTypes.string),
      y: propTypes.arrayOf(propTypes.string)
    })]),
    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
    colorScale: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.oneOf(["grayscale", "qualitative", "heatmap", "warm", "cool", "red", "green", "blue"])]),
    fillInMissingData: propTypes.bool,
    horizontal: propTypes.bool,
    labelComponent: propTypes.element,
    labels: propTypes.oneOfType([propTypes.func, propTypes.array]),
    style: propTypes.shape({
      parent: propTypes.object,
      data: propTypes.object,
      labels: propTypes.object
    }),
    xOffset: propTypes.number
  })
});
Object.defineProperty(VictoryStack, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    containerComponent: react.createElement(VictoryContainer, null),
    groupComponent: react.createElement("g", null),
    standalone: true,
    theme: VictoryTheme.grayscale,
    fillInMissingData: true
  }
});
Object.defineProperty(VictoryStack, "expectedComponents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["groupComponent", "containerComponent", "labelComponent"]
});
Object.defineProperty(VictoryStack, "getChildren", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: getChildren$1
});
var getDataWithBaseline = function(props, scale) {
  var data3 = Data.getData(props);
  if (data3.length < 2) {
    data3 = [];
  }
  var getDefaultMin = function(axis2) {
    var defaultZero = Scale.getType(scale[axis2]) === "log" ? 1 / Number.MAX_SAFE_INTEGER : 0;
    var domain = scale[axis2].domain();
    var minY = Collection.getMinValue(domain);
    var maxY = Collection.getMaxValue(domain);
    var defaultMin = defaultZero;
    if (minY < 0 && maxY <= 0) {
      defaultMin = maxY;
    } else if (minY >= 0 && maxY > 0) {
      defaultMin = minY;
    }
    return Collection.containsDates(domain) ? new Date(defaultMin) : defaultMin;
  };
  return data3.map(function(datum2) {
    var _y1 = datum2._y1 !== void 0 ? datum2._y1 : datum2._y;
    var _y0 = datum2._y0 !== void 0 ? datum2._y0 : getDefaultMin("y");
    var _x1 = datum2._x1 !== void 0 ? datum2._x1 : datum2._x;
    var _x0 = datum2._x0 !== void 0 ? datum2._x0 : getDefaultMin("x");
    return assign_1({}, datum2, {
      _y0,
      _y1,
      _x0,
      _x1
    });
  });
};
var getCalculatedValues$2 = function(props) {
  var polar = props.polar;
  var defaultStyles3 = Helpers.getDefaultStyles(props, "area");
  var style = Helpers.getStyles(props.style, defaultStyles3);
  var range7 = {
    x: Helpers.getRange(props, "x"),
    y: Helpers.getRange(props, "y")
  };
  var domain = {
    x: Domain.getDomainWithZero(props, "x"),
    y: Domain.getDomainWithZero(props, "y")
  };
  var scale = {
    x: Scale.getBaseScale(props, "x").domain(domain.x).range(props.horizontal ? range7.y : range7.x),
    y: Scale.getBaseScale(props, "y").domain(domain.y).range(props.horizontal ? range7.x : range7.y)
  };
  var origin = polar ? props.origin || Helpers.getPolarOrigin(props) : void 0;
  var data3 = getDataWithBaseline(props, scale);
  return {
    style,
    data: data3,
    scale,
    domain,
    origin
  };
};
var getBaseProps$2 = function(props, fallbackProps2) {
  var modifiedProps = Helpers.modifyProps(props, fallbackProps2, "area");
  props = assign_1({}, modifiedProps, getCalculatedValues$2(modifiedProps));
  var _props = props, data3 = _props.data, domain = _props.domain, events = _props.events, groupComponent = _props.groupComponent, height = _props.height, horizontal = _props.horizontal, interpolation = _props.interpolation, origin = _props.origin, padding2 = _props.padding, polar = _props.polar, scale = _props.scale, sharedEvents = _props.sharedEvents, standalone = _props.standalone, style = _props.style, theme = _props.theme, width = _props.width, labels = _props.labels, name = _props.name;
  var initialChildProps = {
    parent: {
      style: style.parent,
      width,
      height,
      scale,
      data: data3,
      domain,
      standalone,
      theme,
      polar,
      origin,
      padding: padding2,
      name,
      horizontal
    },
    all: {
      data: {
        horizontal,
        polar,
        origin,
        scale,
        data: data3,
        interpolation,
        groupComponent,
        style: style.data
      }
    }
  };
  return data3.reduce(function(childProps, datum2, index4) {
    var text2 = LabelHelpers.getText(props, datum2, index4);
    if (text2 !== void 0 && text2 !== null || labels && (events || sharedEvents)) {
      var eventKey = !isNil_1(datum2.eventKey) ? datum2.eventKey : index4;
      childProps[eventKey] = {
        labels: LabelHelpers.getProps(props, index4)
      };
    }
    return childProps;
  }, initialChildProps);
};
function _objectSpread$b(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$e(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$e(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var defined = function(d2) {
  var y7 = d2._y1 !== void 0 ? d2._y1 : d2._y;
  return y7 !== null && y7 !== void 0 && d2._y0 !== null;
};
var getXAccessor = function(scale) {
  return function(d2) {
    return scale.x(d2._x1 !== void 0 ? d2._x1 : d2._x);
  };
};
var getYAccessor = function(scale) {
  return function(d2) {
    return scale.y(d2._y1 !== void 0 ? d2._y1 : d2._y);
  };
};
var getY0Accessor = function(scale) {
  return function(d2) {
    return scale.y(d2._y0);
  };
};
var getAngleAccessor = function(scale) {
  return function(d2) {
    var x5 = scale.x(d2._x1 !== void 0 ? d2._x1 : d2._x);
    return -1 * x5 + Math.PI / 2;
  };
};
var toNewName$1 = function(interpolation) {
  var capitalize = function(s4) {
    return s4 && s4[0].toUpperCase() + s4.slice(1);
  };
  return "curve".concat(capitalize(interpolation));
};
var getLineFunction = function(props) {
  var polar = props.polar, scale = props.scale, horizontal = props.horizontal;
  var interpolationFunction = typeof props.interpolation === "function" && props.interpolation;
  var interpolationName = typeof props.interpolation === "string" && toNewName$1(props.interpolation);
  return polar ? d3RadialLine().defined(defined).curve(interpolationFunction || d3Shape["".concat(interpolationName, "Closed")]).angle(getAngleAccessor(scale)).radius(getYAccessor(scale)) : d3Line().defined(defined).curve(interpolationFunction || d3Shape[interpolationName]).x(horizontal ? getYAccessor(scale) : getXAccessor(scale)).y(horizontal ? getXAccessor(scale) : getYAccessor(scale));
};
var getCartesianArea = function(props, interpolation) {
  var horizontal = props.horizontal, scale = props.scale;
  var interpolationFunction = typeof interpolation === "function" && interpolation;
  var interpolationName = typeof interpolation === "string" && interpolation;
  return horizontal ? d3Area().defined(defined).curve(interpolationFunction || d3Shape[interpolationName]).x0(getY0Accessor(scale)).x1(getYAccessor(scale)).y(getXAccessor(scale)) : d3Area().defined(defined).curve(interpolationFunction || d3Shape[interpolationName]).x(getXAccessor(scale)).y1(getYAccessor(scale)).y0(getY0Accessor(scale));
};
var getAreaFunction = function(props) {
  var polar = props.polar, scale = props.scale;
  var interpolationFunction = typeof props.interpolation === "function" && props.interpolation;
  var interpolationName = typeof props.interpolation === "string" && toNewName$1(props.interpolation);
  var interpolation = interpolationFunction || interpolationName;
  return polar ? areaRadial().defined(defined).curve(interpolationFunction || d3Shape["".concat(interpolationName, "Closed")]).angle(getAngleAccessor(scale)).outerRadius(getYAccessor(scale)).innerRadius(getY0Accessor(scale)) : getCartesianArea(props, interpolation);
};
var evaluateProps$4 = function(props) {
  var ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);
  var desc = Helpers.evaluateProp(props.desc, props);
  var id3 = Helpers.evaluateProp(props.id, props);
  var style = Helpers.evaluateStyle(assign_1({
    fill: "black"
  }, props.style), props);
  var tabIndex = Helpers.evaluateProp(props.tabIndex, props);
  return assign_1({}, props, {
    ariaLabel,
    desc,
    id: id3,
    style,
    tabIndex
  });
};
var Area = function(props) {
  props = evaluateProps$4(props);
  var _props = props, ariaLabel = _props.ariaLabel, role = _props.role, shapeRendering = _props.shapeRendering, className = _props.className, polar = _props.polar, origin = _props.origin, data3 = _props.data, pathComponent = _props.pathComponent, events = _props.events, groupComponent = _props.groupComponent, clipPath = _props.clipPath, id3 = _props.id, style = _props.style, desc = _props.desc, tabIndex = _props.tabIndex;
  var defaultTransform = polar && origin ? "translate(".concat(origin.x, ", ").concat(origin.y, ")") : void 0;
  var transform = props.transform || defaultTransform;
  var renderLine3 = style.stroke && style.stroke !== "none" && style.stroke !== "transparent";
  var areaFunction = getAreaFunction(props);
  var lineFunction = renderLine3 && getLineFunction(props);
  var areaStroke = style.stroke ? "none" : style.fill;
  var sharedProps = _objectSpread$b({
    "aria-label": ariaLabel,
    className,
    role,
    shapeRendering,
    transform
  }, events, {
    clipPath,
    tabIndex
  });
  var area3 = react.cloneElement(pathComponent, assign_1({
    key: "".concat(id3, "-area"),
    style: assign_1({}, style, {
      stroke: areaStroke
    }),
    d: areaFunction(data3),
    desc,
    tabIndex
  }, sharedProps));
  var line2 = renderLine3 ? react.cloneElement(pathComponent, assign_1({
    key: "".concat(id3, "-area-stroke"),
    style: assign_1({}, style, {
      fill: "none"
    }),
    d: lineFunction(data3)
  }, sharedProps)) : null;
  return renderLine3 ? react.cloneElement(groupComponent, {}, [area3, line2]) : area3;
};
Area.propTypes = _objectSpread$b({}, CommonProps.primitiveProps, {
  groupComponent: propTypes.element,
  interpolation: propTypes.oneOfType([propTypes.string, propTypes.func]),
  pathComponent: propTypes.element
});
Area.defaultProps = {
  groupComponent: react.createElement("g", null),
  pathComponent: react.createElement(Path2, null),
  role: "presentation",
  shapeRendering: "auto"
};
function _objectSpread$c(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$f(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$f(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$d(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$d(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$d(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$d(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$d(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$c(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$c(self2);
}
function _assertThisInitialized$c(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$c(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var fallbackProps$6 = {
  width: 450,
  height: 300,
  padding: 50,
  interpolation: "linear"
};
var options$2 = {
  components: [{
    name: "parent",
    index: "parent"
  }, {
    name: "data",
    index: "all"
  }, {
    name: "labels"
  }]
};
var VictoryArea = /* @__PURE__ */ function(_React$Component) {
  _inherits$c(VictoryArea2, _React$Component);
  function VictoryArea2() {
    _classCallCheck$d(this, VictoryArea2);
    return _possibleConstructorReturn$c(this, (VictoryArea2.__proto__ || Object.getPrototypeOf(VictoryArea2)).apply(this, arguments));
  }
  _createClass$d(VictoryArea2, [{
    key: "shouldAnimate",
    value: function shouldAnimate() {
      return !!this.props.animate;
    }
  }, {
    key: "render",
    value: function render2() {
      var animationWhitelist = VictoryArea2.animationWhitelist, role = VictoryArea2.role;
      var props = Helpers.modifyProps(this.props, fallbackProps$6, role);
      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }
      var children2 = this.renderContinuousData(props);
      return props.standalone ? this.renderContainer(props.containerComponent, children2) : children2;
    }
  }]);
  return VictoryArea2;
}(react.Component);
Object.defineProperty(VictoryArea, "animationWhitelist", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["data", "domain", "height", "padding", "style", "width"]
});
Object.defineProperty(VictoryArea, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread$c({}, CommonProps.baseProps, CommonProps.dataProps, {
    interpolation: propTypes.oneOfType([propTypes.oneOf(["basis", "cardinal", "catmullRom", "linear", "monotoneX", "monotoneY", "natural", "step", "stepAfter", "stepBefore"]), propTypes.func]),
    label: CustomPropTypes.deprecated(propTypes.string, "Use `labels` instead for individual data labels")
  })
});
Object.defineProperty(VictoryArea, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    containerComponent: react.createElement(VictoryContainer, null),
    dataComponent: react.createElement(Area, null),
    groupComponent: react.createElement(VictoryClipContainer, null),
    labelComponent: react.createElement(VictoryLabel, {
      renderInPortal: true
    }),
    samples: 50,
    sortKey: "x",
    sortOrder: "ascending",
    standalone: true,
    theme: VictoryTheme.grayscale
  }
});
Object.defineProperty(VictoryArea, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryArea"
});
Object.defineProperty(VictoryArea, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "area"
});
Object.defineProperty(VictoryArea, "continuous", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: true
});
Object.defineProperty(VictoryArea, "defaultTransitions", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: DefaultTransitions.continuousTransitions()
});
Object.defineProperty(VictoryArea, "defaultPolarTransitions", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: DefaultTransitions.continuousPolarTransitions()
});
Object.defineProperty(VictoryArea, "getDomain", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Domain.getDomainWithZero
});
Object.defineProperty(VictoryArea, "getData", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: Data.getData
});
Object.defineProperty(VictoryArea, "getBaseProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    return getBaseProps$2(props, fallbackProps$6);
  }
});
Object.defineProperty(VictoryArea, "expectedComponents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: ["dataComponent", "labelComponent", "groupComponent", "containerComponent"]
});
var victoryArea = addEvents(VictoryArea, options$2);
function _objectSpread$d(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$g(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$g(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var getVerticalPath = function(props) {
  var pointerWidth = props.pointerWidth, cornerRadius = props.cornerRadius, orientation = props.orientation, width = props.width, height = props.height, center3 = props.center;
  var sign5 = orientation === "bottom" ? 1 : -1;
  var x5 = props.x + (props.dx || 0);
  var y7 = props.y + (props.dy || 0);
  var centerX = isPlainObject_1(center3) && center3.x;
  var centerY = isPlainObject_1(center3) && center3.y;
  var pointerEdge = centerY + sign5 * (height / 2);
  var oppositeEdge = centerY - sign5 * (height / 2);
  var rightEdge = centerX + width / 2;
  var leftEdge = centerX - width / 2;
  var pointerLength = sign5 * (y7 - pointerEdge) < 0 ? 0 : props.pointerLength;
  var direction = orientation === "bottom" ? "0 0 0" : "0 0 1";
  var arc = "".concat(cornerRadius, " ").concat(cornerRadius, " ").concat(direction);
  return "M ".concat(centerX - pointerWidth / 2, ", ").concat(pointerEdge, "\n    L ").concat(pointerLength ? x5 : centerX + pointerWidth / 2, ", ").concat(pointerLength ? y7 : pointerEdge, "\n    L ").concat(centerX + pointerWidth / 2, ", ").concat(pointerEdge, "\n    L ").concat(rightEdge - cornerRadius, ", ").concat(pointerEdge, "\n    A ").concat(arc, " ").concat(rightEdge, ", ").concat(pointerEdge - sign5 * cornerRadius, "\n    L ").concat(rightEdge, ", ").concat(oppositeEdge + sign5 * cornerRadius, "\n    A ").concat(arc, " ").concat(rightEdge - cornerRadius, ", ").concat(oppositeEdge, "\n    L ").concat(leftEdge + cornerRadius, ", ").concat(oppositeEdge, "\n    A ").concat(arc, " ").concat(leftEdge, ", ").concat(oppositeEdge + sign5 * cornerRadius, "\n    L ").concat(leftEdge, ", ").concat(pointerEdge - sign5 * cornerRadius, "\n    A ").concat(arc, " ").concat(leftEdge + cornerRadius, ", ").concat(pointerEdge, "\n    z");
};
var getHorizontalPath = function(props) {
  var pointerWidth = props.pointerWidth, cornerRadius = props.cornerRadius, orientation = props.orientation, width = props.width, height = props.height, center3 = props.center;
  var sign5 = orientation === "left" ? 1 : -1;
  var x5 = props.x + (props.dx || 0);
  var y7 = props.y + (props.dy || 0);
  var centerX = isPlainObject_1(center3) && center3.x;
  var centerY = isPlainObject_1(center3) && center3.y;
  var pointerEdge = centerX - sign5 * (width / 2);
  var oppositeEdge = centerX + sign5 * (width / 2);
  var bottomEdge = centerY + height / 2;
  var topEdge = centerY - height / 2;
  var pointerLength = sign5 * (x5 - pointerEdge) > 0 ? 0 : props.pointerLength;
  var direction = orientation === "left" ? "0 0 0" : "0 0 1";
  var arc = "".concat(cornerRadius, " ").concat(cornerRadius, " ").concat(direction);
  return "M ".concat(pointerEdge, ", ").concat(centerY - pointerWidth / 2, "\n    L ").concat(pointerLength ? x5 : pointerEdge, ", ").concat(pointerLength ? y7 : centerY + pointerWidth / 2, "\n    L ").concat(pointerEdge, ", ").concat(centerY + pointerWidth / 2, "\n    L ").concat(pointerEdge, ", ").concat(bottomEdge - cornerRadius, "\n    A ").concat(arc, " ").concat(pointerEdge + sign5 * cornerRadius, ", ").concat(bottomEdge, "\n    L ").concat(oppositeEdge - sign5 * cornerRadius, ", ").concat(bottomEdge, "\n    A ").concat(arc, " ").concat(oppositeEdge, ", ").concat(bottomEdge - cornerRadius, "\n    L ").concat(oppositeEdge, ", ").concat(topEdge + cornerRadius, "\n    A ").concat(arc, " ").concat(oppositeEdge - sign5 * cornerRadius, ", ").concat(topEdge, "\n    L ").concat(pointerEdge + sign5 * cornerRadius, ", ").concat(topEdge, "\n    A ").concat(arc, " ").concat(pointerEdge, ", ").concat(topEdge + cornerRadius, "\n    z");
};
var getFlyoutPath = function(props) {
  var orientation = props.orientation || "top";
  return orientation === "left" || orientation === "right" ? getHorizontalPath(props) : getVerticalPath(props);
};
var evaluateProps$5 = function(props) {
  var id3 = Helpers.evaluateProp(props.id, props);
  var style = Helpers.evaluateStyle(props.style, props);
  return assign_1({}, props, {
    id: id3,
    style
  });
};
var Flyout = function(props) {
  props = evaluateProps$5(props);
  return react.cloneElement(props.pathComponent, _objectSpread$d({}, props.events, {
    style: props.style,
    d: getFlyoutPath(props),
    className: props.className,
    shapeRendering: props.shapeRendering,
    role: props.role,
    transform: props.transform,
    clipPath: props.clipPath
  }));
};
Flyout.propTypes = _objectSpread$d({}, CommonProps.primitiveProps, {
  center: propTypes.shape({
    x: propTypes.number,
    y: propTypes.number
  }),
  cornerRadius: propTypes.number,
  datum: propTypes.object,
  dx: propTypes.number,
  dy: propTypes.number,
  height: propTypes.number,
  orientation: propTypes.oneOf(["top", "bottom", "left", "right"]),
  pathComponent: propTypes.element,
  pointerLength: propTypes.number,
  pointerWidth: propTypes.number,
  width: propTypes.number,
  x: propTypes.number,
  y: propTypes.number
});
Flyout.defaultProps = {
  pathComponent: react.createElement(Path2, null),
  role: "presentation",
  shapeRendering: "auto"
};
function _toConsumableArray$g(arr) {
  return _arrayWithoutHoles$g(arr) || _iterableToArray$g(arr) || _nonIterableSpread$g();
}
function _nonIterableSpread$g() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$g(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$g(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _classCallCheck$e(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$e(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$e(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$e(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$e(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$d(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$d(self2);
}
function _assertThisInitialized$d(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$d(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var fallbackProps$7 = {
  cornerRadius: 5,
  pointerLength: 10,
  pointerWidth: 10
};
var VictoryTooltip = /* @__PURE__ */ function(_React$Component) {
  _inherits$d(VictoryTooltip2, _React$Component);
  function VictoryTooltip2(props) {
    var _this;
    _classCallCheck$e(this, VictoryTooltip2);
    _this = _possibleConstructorReturn$d(this, (VictoryTooltip2.__proto__ || Object.getPrototypeOf(VictoryTooltip2)).call(this, props));
    _this.id = props.id === void 0 ? uniqueId_1("tooltip-") : props.id;
    return _this;
  }
  _createClass$e(VictoryTooltip2, [{
    key: "getDefaultOrientation",
    value: function getDefaultOrientation(props) {
      var datum2 = props.datum, horizontal = props.horizontal, polar = props.polar;
      if (!polar) {
        var positive = horizontal ? "right" : "top";
        var negative = horizontal ? "left" : "bottom";
        return datum2 && datum2.y < 0 ? negative : positive;
      } else {
        return this.getPolarOrientation(props, datum2);
      }
    }
  }, {
    key: "getPolarOrientation",
    value: function getPolarOrientation2(props, datum2) {
      var degrees3 = LabelHelpers.getDegrees(props, datum2);
      var placement = props.labelPlacement || "vertical";
      if (placement === " vertical") {
        return this.getVerticalOrientations(degrees3);
      } else if (placement === "parallel") {
        return degrees3 < 90 || degrees3 > 270 ? "right" : "left";
      } else {
        return degrees3 > 180 ? "bottom" : "top";
      }
    }
  }, {
    key: "getVerticalOrientations",
    value: function getVerticalOrientations(degrees3) {
      if (degrees3 < 45 || degrees3 > 315) {
        return "right";
      } else if (degrees3 >= 45 && degrees3 <= 135) {
        return "top";
      } else if (degrees3 > 135 && degrees3 < 225) {
        return "left";
      } else {
        return "bottom";
      }
    }
  }, {
    key: "getStyles",
    value: function getStyles2(props) {
      var theme = props.theme || VictoryTheme.grayscale;
      var defaultLabelStyles = theme && theme.tooltip && theme.tooltip.style ? theme.tooltip.style : {};
      var baseLabelStyle = Array.isArray(props.style) ? props.style.map(function(s4) {
        return defaults_1({}, s4, defaultLabelStyles);
      }) : defaults_1({}, props.style, defaultLabelStyles);
      var defaultFlyoutStyles = theme && theme.tooltip && theme.tooltip.flyoutStyle ? theme.tooltip.flyoutStyle : {};
      var baseFlyoutStyle = props.flyoutStyle ? defaults_1({}, props.flyoutStyle, defaultFlyoutStyles) : defaultFlyoutStyles;
      var style = Array.isArray(baseLabelStyle) ? baseLabelStyle.map(function(s4) {
        return Helpers.evaluateStyle(s4, props);
      }) : Helpers.evaluateStyle(baseLabelStyle, props);
      var flyoutStyle = Helpers.evaluateStyle(baseFlyoutStyle, assign_1({}, props, {
        style
      }));
      return {
        style,
        flyoutStyle
      };
    }
  }, {
    key: "getEvaluatedProps",
    value: function getEvaluatedProps(props) {
      var cornerRadius = props.cornerRadius, centerOffset = props.centerOffset, dx = props.dx, dy = props.dy;
      var active = Helpers.evaluateProp(props.active, props);
      var text2 = Helpers.evaluateProp(props.text, assign_1({}, props, {
        active
      }));
      var _getStyles = this.getStyles(assign_1({}, props, {
        active,
        text: text2
      })), style = _getStyles.style, flyoutStyle = _getStyles.flyoutStyle;
      var orientation = Helpers.evaluateProp(props.orientation, assign_1({}, props, {
        active,
        text: text2,
        style,
        flyoutStyle
      })) || this.getDefaultOrientation(props);
      var padding2 = Helpers.evaluateProp(props.flyoutPadding, assign_1({}, props, {
        active,
        text: text2,
        style,
        flyoutStyle,
        orientation
      })) || this.getLabelPadding(style);
      var flyoutPadding = Helpers.getPadding({
        padding: padding2
      });
      var pointerWidth = Helpers.evaluateProp(props.pointerWidth, assign_1({}, props, {
        active,
        text: text2,
        style,
        flyoutStyle,
        orientation
      }));
      var pointerLength = Helpers.evaluateProp(props.pointerLength, assign_1({}, props, {
        active,
        text: text2,
        style,
        flyoutStyle,
        orientation
      }));
      var labelSize = TextSize.approximateTextSize(text2, style);
      var _getDimensions = this.getDimensions(assign_1({}, props, {
        style,
        flyoutStyle,
        active,
        text: text2,
        orientation,
        flyoutPadding,
        pointerWidth,
        pointerLength
      }), labelSize), flyoutHeight = _getDimensions.flyoutHeight, flyoutWidth = _getDimensions.flyoutWidth;
      var evaluatedProps = assign_1({}, props, {
        active,
        text: text2,
        style,
        flyoutStyle,
        orientation,
        flyoutHeight,
        flyoutWidth,
        flyoutPadding,
        pointerWidth,
        pointerLength
      });
      var offsetX = isPlainObject_1(centerOffset) && centerOffset.x !== void 0 ? Helpers.evaluateProp(centerOffset.x, evaluatedProps) : 0;
      var offsetY = isPlainObject_1(centerOffset) && centerOffset.y !== void 0 ? Helpers.evaluateProp(centerOffset.y, evaluatedProps) : 0;
      return assign_1({}, evaluatedProps, {
        centerOffset: {
          x: offsetX,
          y: offsetY
        },
        dx: dx !== void 0 ? Helpers.evaluateProp(dx, evaluatedProps) : 0,
        dy: dy !== void 0 ? Helpers.evaluateProp(dy, evaluatedProps) : 0,
        cornerRadius: Helpers.evaluateProp(cornerRadius, evaluatedProps)
      });
    }
  }, {
    key: "getCalculatedValues",
    value: function getCalculatedValues2(props) {
      var style = props.style, text2 = props.text, flyoutStyle = props.flyoutStyle, flyoutHeight = props.flyoutHeight, flyoutWidth = props.flyoutWidth;
      var labelSize = TextSize.approximateTextSize(text2, style);
      var flyoutDimensions = {
        height: flyoutHeight,
        width: flyoutWidth
      };
      var flyoutCenter = this.getFlyoutCenter(props, flyoutDimensions);
      var transform = this.getTransform(props);
      return {
        style,
        flyoutStyle,
        labelSize,
        flyoutDimensions,
        flyoutCenter,
        transform
      };
    }
  }, {
    key: "getTransform",
    value: function getTransform2(props) {
      var x5 = props.x, y7 = props.y, style = props.style;
      var labelStyle = style || {};
      var angle = labelStyle.angle || props.angle || this.getDefaultAngle(props);
      return angle ? "rotate(".concat(angle, " ").concat(x5, " ").concat(y7, ")") : void 0;
    }
  }, {
    key: "getDefaultAngle",
    value: function getDefaultAngle(props) {
      var polar = props.polar, labelPlacement = props.labelPlacement, orientation = props.orientation, datum2 = props.datum;
      if (!polar || !labelPlacement || labelPlacement === "vertical") {
        return 0;
      }
      var degrees3 = LabelHelpers.getDegrees(props, datum2);
      var sign5 = degrees3 > 90 && degrees3 < 180 || degrees3 > 270 ? 1 : -1;
      var labelRotation = labelPlacement === "perpendicular" ? 0 : 90;
      var angle;
      if (degrees3 === 0 || degrees3 === 180) {
        angle = orientation === "top" && degrees3 === 180 ? 270 : 90;
      } else if (degrees3 > 0 && degrees3 < 180) {
        angle = 90 - degrees3;
      } else if (degrees3 > 180 && degrees3 < 360) {
        angle = 270 - degrees3;
      }
      return angle + sign5 * labelRotation;
    }
  }, {
    key: "constrainTooltip",
    value: function constrainTooltip(center3, props, dimensions) {
      var x5 = center3.x, y7 = center3.y;
      var width = dimensions.width, height = dimensions.height;
      var extent3 = {
        x: [0, props.width],
        y: [0, props.height]
      };
      var flyoutExtent = {
        x: [x5 - width / 2, x5 + width / 2],
        y: [y7 - height / 2, y7 + height / 2]
      };
      var adjustments = {
        x: [flyoutExtent.x[0] < extent3.x[0] ? extent3.x[0] - flyoutExtent.x[0] : 0, flyoutExtent.x[1] > extent3.x[1] ? flyoutExtent.x[1] - extent3.x[1] : 0],
        y: [flyoutExtent.y[0] < extent3.y[0] ? extent3.y[0] - flyoutExtent.y[0] : 0, flyoutExtent.y[1] > extent3.y[1] ? flyoutExtent.y[1] - extent3.y[1] : 0]
      };
      return {
        x: Math.round(x5 + adjustments.x[0] - adjustments.x[1]),
        y: Math.round(y7 + adjustments.y[0] - adjustments.y[1])
      };
    }
  }, {
    key: "getFlyoutCenter",
    value: function getFlyoutCenter(props, dimensions) {
      var x5 = props.x, y7 = props.y, dx = props.dx, dy = props.dy, pointerLength = props.pointerLength, orientation = props.orientation, constrainToVisibleArea = props.constrainToVisibleArea, centerOffset = props.centerOffset;
      var height = dimensions.height, width = dimensions.width;
      var xSign = orientation === "left" ? -1 : 1;
      var ySign = orientation === "bottom" ? -1 : 1;
      var flyoutCenter = {
        x: orientation === "left" || orientation === "right" ? x5 + xSign * (pointerLength + width / 2 + xSign * dx) : x5 + dx,
        y: orientation === "top" || orientation === "bottom" ? y7 - ySign * (pointerLength + height / 2 - ySign * dy) : y7 + dy
      };
      var center3 = {
        x: isPlainObject_1(props.center) && props.center.x !== void 0 ? props.center.x : flyoutCenter.x,
        y: isPlainObject_1(props.center) && props.center.y !== void 0 ? props.center.y : flyoutCenter.y
      };
      var centerWithOffset = {
        x: center3.x + centerOffset.x,
        y: center3.y + centerOffset.y
      };
      return constrainToVisibleArea ? this.constrainTooltip(centerWithOffset, props, dimensions) : centerWithOffset;
    }
  }, {
    key: "getLabelPadding",
    value: function getLabelPadding2(style) {
      if (!style) {
        return 0;
      }
      var paddings = Array.isArray(style) ? style.map(function(s4) {
        return s4.padding;
      }) : [style.padding];
      return Math.max.apply(Math, _toConsumableArray$g(paddings).concat([0]));
    }
  }, {
    key: "getDimensions",
    value: function getDimensions(props, labelSize) {
      var orientation = props.orientation, pointerLength = props.pointerLength, pointerWidth = props.pointerWidth, flyoutHeight = props.flyoutHeight, flyoutWidth = props.flyoutWidth, flyoutPadding = props.flyoutPadding;
      var cornerRadius = Helpers.evaluateProp(props.cornerRadius, props);
      var getHeight = function() {
        var calculatedHeight = labelSize.height + flyoutPadding.top + flyoutPadding.bottom;
        var minHeight = orientation === "top" || orientation === "bottom" ? 2 * cornerRadius : 2 * cornerRadius + pointerWidth;
        return Math.max(minHeight, calculatedHeight);
      };
      var getWidth = function() {
        var calculatedWidth = labelSize.width + flyoutPadding.left + flyoutPadding.right;
        var minWidth = orientation === "left" || orientation === "right" ? 2 * cornerRadius + pointerLength : 2 * cornerRadius;
        return Math.max(minWidth, calculatedWidth);
      };
      return {
        flyoutHeight: flyoutHeight ? Helpers.evaluateProp(flyoutHeight, props) : getHeight(),
        flyoutWidth: flyoutWidth ? Helpers.evaluateProp(flyoutWidth, props) : getWidth()
      };
    }
  }, {
    key: "getLabelProps",
    value: function getLabelProps(props, calculatedValues) {
      var flyoutCenter = calculatedValues.flyoutCenter, style = calculatedValues.style, labelSize = calculatedValues.labelSize, _calculatedValues$dy = calculatedValues.dy, dy = _calculatedValues$dy === void 0 ? 0 : _calculatedValues$dy, _calculatedValues$dx = calculatedValues.dx, dx = _calculatedValues$dx === void 0 ? 0 : _calculatedValues$dx;
      var text2 = props.text, datum2 = props.datum, activePoints = props.activePoints, labelComponent = props.labelComponent, index4 = props.index, flyoutPadding = props.flyoutPadding;
      var textAnchor = (Array.isArray(style) && style.length ? style[0].textAnchor : style.textAnchor) || "middle";
      var getLabelX = function() {
        if (!textAnchor || textAnchor === "middle") {
          return flyoutCenter.x;
        }
        var sign5 = textAnchor === "end" ? -1 : 1;
        return flyoutCenter.x - sign5 * (labelSize.width / 2);
      };
      return defaults_1({}, labelComponent.props, {
        key: "".concat(this.id, "-label-").concat(index4),
        text: text2,
        datum: datum2,
        activePoints,
        textAnchor,
        dy,
        dx,
        style,
        x: getLabelX() + (flyoutPadding.left - flyoutPadding.right) / 2,
        y: flyoutCenter.y + (flyoutPadding.top - flyoutPadding.bottom) / 2,
        verticalAnchor: "middle",
        angle: style.angle
      });
    }
  }, {
    key: "getPointerOrientation",
    value: function getPointerOrientation(point8, center3, flyoutDimensions) {
      var edges2 = {
        bottom: center3.y + flyoutDimensions.height / 2,
        top: center3.y - flyoutDimensions.height / 2,
        left: center3.x - flyoutDimensions.width / 2,
        right: center3.x + flyoutDimensions.width / 2
      };
      var gaps = [{
        side: "top",
        val: edges2.top > point8.y ? edges2.top - point8.y : -1
      }, {
        side: "bottom",
        val: edges2.bottom < point8.y ? point8.y - edges2.bottom : -1
      }, {
        side: "right",
        val: edges2.right < point8.x ? point8.x - edges2.right : -1
      }, {
        side: "left",
        val: edges2.left > point8.x ? edges2.left - point8.x : -1
      }];
      return orderBy_1(gaps, "val", "desc")[0].side;
    }
  }, {
    key: "getFlyoutProps",
    value: function getFlyoutProps(props, calculatedValues) {
      var flyoutDimensions = calculatedValues.flyoutDimensions, flyoutStyle = calculatedValues.flyoutStyle, flyoutCenter = calculatedValues.flyoutCenter;
      var x5 = props.x, y7 = props.y, dx = props.dx, dy = props.dy, datum2 = props.datum, activePoints = props.activePoints, index4 = props.index, pointerLength = props.pointerLength, pointerWidth = props.pointerWidth, cornerRadius = props.cornerRadius, events = props.events, flyoutComponent = props.flyoutComponent;
      var pointerOrientation = Helpers.evaluateProp(props.pointerOrientation, props);
      return defaults_1({}, flyoutComponent.props, {
        x: x5,
        y: y7,
        dx,
        dy,
        datum: datum2,
        activePoints,
        index: index4,
        pointerLength,
        pointerWidth,
        cornerRadius,
        events,
        orientation: pointerOrientation || this.getPointerOrientation({
          x: x5,
          y: y7
        }, flyoutCenter, flyoutDimensions),
        key: "".concat(this.id, "-tooltip-").concat(index4),
        width: flyoutDimensions.width,
        height: flyoutDimensions.height,
        style: flyoutStyle,
        center: flyoutCenter
      });
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip(props) {
      var evaluatedProps = this.getEvaluatedProps(props);
      var flyoutComponent = evaluatedProps.flyoutComponent, labelComponent = evaluatedProps.labelComponent, groupComponent = evaluatedProps.groupComponent, active = evaluatedProps.active, renderInPortal = evaluatedProps.renderInPortal;
      if (!active) {
        return renderInPortal ? react.createElement(VictoryPortal, null, null) : null;
      }
      var calculatedValues = this.getCalculatedValues(evaluatedProps);
      var children2 = [react.cloneElement(flyoutComponent, this.getFlyoutProps(evaluatedProps, calculatedValues)), react.cloneElement(labelComponent, this.getLabelProps(evaluatedProps, calculatedValues))];
      var tooltip = react.cloneElement(groupComponent, {
        role: "presentation",
        transform: calculatedValues.transform
      }, children2);
      return renderInPortal ? react.createElement(VictoryPortal, null, tooltip) : tooltip;
    }
  }, {
    key: "render",
    value: function render2() {
      var props = Helpers.modifyProps(this.props, fallbackProps$7, "tooltip");
      return this.renderTooltip(props);
    }
  }]);
  return VictoryTooltip2;
}(react.Component);
Object.defineProperty(VictoryTooltip, "displayName", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "VictoryTooltip"
});
Object.defineProperty(VictoryTooltip, "role", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: "tooltip"
});
Object.defineProperty(VictoryTooltip, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    activateData: propTypes.bool,
    active: propTypes.oneOfType([propTypes.bool, propTypes.func]),
    activePoints: propTypes.array,
    angle: propTypes.number,
    center: propTypes.shape({
      x: CustomPropTypes.nonNegative,
      y: CustomPropTypes.nonNegative
    }),
    centerOffset: propTypes.shape({
      x: propTypes.oneOfType([propTypes.number, propTypes.func]),
      y: propTypes.oneOfType([propTypes.number, propTypes.func])
    }),
    constrainToVisibleArea: propTypes.bool,
    cornerRadius: propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.func]),
    data: propTypes.array,
    datum: propTypes.object,
    dx: propTypes.oneOfType([propTypes.number, propTypes.func]),
    dy: propTypes.oneOfType([propTypes.number, propTypes.func]),
    events: propTypes.object,
    flyoutComponent: propTypes.element,
    flyoutHeight: propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.func]),
    flyoutPadding: propTypes.oneOfType([propTypes.func, propTypes.number, propTypes.shape({
      top: propTypes.number,
      bottom: propTypes.number,
      left: propTypes.number,
      right: propTypes.number
    })]),
    flyoutStyle: propTypes.object,
    flyoutWidth: propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.func]),
    groupComponent: propTypes.element,
    height: propTypes.number,
    horizontal: propTypes.bool,
    id: propTypes.oneOfType([propTypes.number, propTypes.string]),
    index: propTypes.oneOfType([propTypes.number, propTypes.string]),
    labelComponent: propTypes.element,
    orientation: propTypes.oneOfType([propTypes.oneOf(["top", "bottom", "left", "right"]), propTypes.func]),
    pointerLength: propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.func]),
    pointerOrientation: propTypes.oneOfType([propTypes.oneOf(["top", "bottom", "left", "right"]), propTypes.func]),
    pointerWidth: propTypes.oneOfType([CustomPropTypes.nonNegative, propTypes.func]),
    polar: propTypes.bool,
    renderInPortal: propTypes.bool,
    scale: propTypes.shape({
      x: CustomPropTypes.scale,
      y: CustomPropTypes.scale
    }),
    style: propTypes.oneOfType([propTypes.object, propTypes.array]),
    text: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.func, propTypes.array]),
    theme: propTypes.object,
    width: propTypes.number,
    x: propTypes.number,
    y: propTypes.number
  }
});
Object.defineProperty(VictoryTooltip, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    active: false,
    renderInPortal: true,
    labelComponent: react.createElement(VictoryLabel, null),
    flyoutComponent: react.createElement(Flyout, null),
    groupComponent: react.createElement("g", null)
  }
});
Object.defineProperty(VictoryTooltip, "defaultEvents", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: function(props) {
    var activate = props.activateData ? [{
      target: "labels",
      mutation: function() {
        return {
          active: true
        };
      }
    }, {
      target: "data",
      mutation: function() {
        return {
          active: true
        };
      }
    }] : [{
      target: "labels",
      mutation: function() {
        return {
          active: true
        };
      }
    }];
    var deactivate = props.activateData ? [{
      target: "labels",
      mutation: function() {
        return {
          active: void 0
        };
      }
    }, {
      target: "data",
      mutation: function() {
        return {
          active: void 0
        };
      }
    }] : [{
      target: "labels",
      mutation: function() {
        return {
          active: void 0
        };
      }
    }];
    return [{
      target: "data",
      eventHandlers: {
        onMouseOver: function() {
          return activate;
        },
        onFocus: function() {
          return activate;
        },
        onTouchStart: function() {
          return activate;
        },
        onMouseOut: function() {
          return deactivate;
        },
        onBlur: function() {
          return deactivate;
        },
        onTouchEnd: function() {
          return deactivate;
        }
      }
    }];
  }
});
var delaunator = createCommonjsModule(function(module, exports) {
  (function(global2, factory) {
    module.exports = factory();
  })(commonjsGlobal, function() {
    var EPSILON2 = Math.pow(2, -52);
    var EDGE_STACK2 = new Uint32Array(512);
    var Delaunator = function Delaunator2(coords) {
      var n3 = coords.length >> 1;
      if (n3 > 0 && typeof coords[0] !== "number") {
        throw new Error("Expected coords to contain numbers.");
      }
      this.coords = coords;
      var maxTriangles = Math.max(2 * n3 - 5, 0);
      this._triangles = new Uint32Array(maxTriangles * 3);
      this._halfedges = new Int32Array(maxTriangles * 3);
      this._hashSize = Math.ceil(Math.sqrt(n3));
      this._hullPrev = new Uint32Array(n3);
      this._hullNext = new Uint32Array(n3);
      this._hullTri = new Uint32Array(n3);
      this._hullHash = new Int32Array(this._hashSize).fill(-1);
      this._ids = new Uint32Array(n3);
      this._dists = new Float64Array(n3);
      this.update();
    };
    Delaunator.from = function from(points, getX3, getY3) {
      if (getX3 === void 0)
        getX3 = defaultGetX;
      if (getY3 === void 0)
        getY3 = defaultGetY;
      var n3 = points.length;
      var coords = new Float64Array(n3 * 2);
      for (var i = 0; i < n3; i++) {
        var p3 = points[i];
        coords[2 * i] = getX3(p3);
        coords[2 * i + 1] = getY3(p3);
      }
      return new Delaunator(coords);
    };
    Delaunator.prototype.update = function update() {
      var ref = this;
      var coords = ref.coords;
      var hullPrev = ref._hullPrev;
      var hullNext = ref._hullNext;
      var hullTri = ref._hullTri;
      var hullHash = ref._hullHash;
      var n3 = coords.length >> 1;
      var minX = Infinity;
      var minY = Infinity;
      var maxX = -Infinity;
      var maxY = -Infinity;
      for (var i = 0; i < n3; i++) {
        var x5 = coords[2 * i];
        var y7 = coords[2 * i + 1];
        if (x5 < minX) {
          minX = x5;
        }
        if (y7 < minY) {
          minY = y7;
        }
        if (x5 > maxX) {
          maxX = x5;
        }
        if (y7 > maxY) {
          maxY = y7;
        }
        this._ids[i] = i;
      }
      var cx = (minX + maxX) / 2;
      var cy = (minY + maxY) / 2;
      var minDist = Infinity;
      var i0, i1, i2;
      for (var i$1 = 0; i$1 < n3; i$1++) {
        var d2 = dist2(cx, cy, coords[2 * i$1], coords[2 * i$1 + 1]);
        if (d2 < minDist) {
          i0 = i$1;
          minDist = d2;
        }
      }
      var i0x = coords[2 * i0];
      var i0y = coords[2 * i0 + 1];
      minDist = Infinity;
      for (var i$2 = 0; i$2 < n3; i$2++) {
        if (i$2 === i0) {
          continue;
        }
        var d$12 = dist2(i0x, i0y, coords[2 * i$2], coords[2 * i$2 + 1]);
        if (d$12 < minDist && d$12 > 0) {
          i1 = i$2;
          minDist = d$12;
        }
      }
      var i1x = coords[2 * i1];
      var i1y = coords[2 * i1 + 1];
      var minRadius = Infinity;
      for (var i$3 = 0; i$3 < n3; i$3++) {
        if (i$3 === i0 || i$3 === i1) {
          continue;
        }
        var r3 = circumradius(i0x, i0y, i1x, i1y, coords[2 * i$3], coords[2 * i$3 + 1]);
        if (r3 < minRadius) {
          i2 = i$3;
          minRadius = r3;
        }
      }
      var i2x = coords[2 * i2];
      var i2y = coords[2 * i2 + 1];
      if (minRadius === Infinity) {
        for (var i$4 = 0; i$4 < n3; i$4++) {
          this._dists[i$4] = coords[2 * i$4] - coords[0] || coords[2 * i$4 + 1] - coords[1];
        }
        quicksort(this._ids, this._dists, 0, n3 - 1);
        var hull = new Uint32Array(n3);
        var j2 = 0;
        for (var i$5 = 0, d0 = -Infinity; i$5 < n3; i$5++) {
          var id3 = this._ids[i$5];
          if (this._dists[id3] > d0) {
            hull[j2++] = id3;
            d0 = this._dists[id3];
          }
        }
        this.hull = hull.subarray(0, j2);
        this.triangles = new Uint32Array(0);
        this.halfedges = new Uint32Array(0);
        return;
      }
      if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
        var i$6 = i1;
        var x$13 = i1x;
        var y$13 = i1y;
        i1 = i2;
        i1x = i2x;
        i1y = i2y;
        i2 = i$6;
        i2x = x$13;
        i2y = y$13;
      }
      var center3 = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
      this._cx = center3.x;
      this._cy = center3.y;
      for (var i$7 = 0; i$7 < n3; i$7++) {
        this._dists[i$7] = dist2(coords[2 * i$7], coords[2 * i$7 + 1], center3.x, center3.y);
      }
      quicksort(this._ids, this._dists, 0, n3 - 1);
      this._hullStart = i0;
      var hullSize = 3;
      hullNext[i0] = hullPrev[i2] = i1;
      hullNext[i1] = hullPrev[i0] = i2;
      hullNext[i2] = hullPrev[i1] = i0;
      hullTri[i0] = 0;
      hullTri[i1] = 1;
      hullTri[i2] = 2;
      hullHash.fill(-1);
      hullHash[this._hashKey(i0x, i0y)] = i0;
      hullHash[this._hashKey(i1x, i1y)] = i1;
      hullHash[this._hashKey(i2x, i2y)] = i2;
      this.trianglesLen = 0;
      this._addTriangle(i0, i1, i2, -1, -1, -1);
      for (var k6 = 0, xp = void 0, yp = void 0; k6 < this._ids.length; k6++) {
        var i$8 = this._ids[k6];
        var x$22 = coords[2 * i$8];
        var y$2 = coords[2 * i$8 + 1];
        if (k6 > 0 && Math.abs(x$22 - xp) <= EPSILON2 && Math.abs(y$2 - yp) <= EPSILON2) {
          continue;
        }
        xp = x$22;
        yp = y$2;
        if (i$8 === i0 || i$8 === i1 || i$8 === i2) {
          continue;
        }
        var start2 = 0;
        for (var j$1 = 0, key = this._hashKey(x$22, y$2); j$1 < this._hashSize; j$1++) {
          start2 = hullHash[(key + j$1) % this._hashSize];
          if (start2 !== -1 && start2 !== hullNext[start2]) {
            break;
          }
        }
        start2 = hullPrev[start2];
        var e3 = start2, q2 = void 0;
        while (q2 = hullNext[e3], !orient(x$22, y$2, coords[2 * e3], coords[2 * e3 + 1], coords[2 * q2], coords[2 * q2 + 1])) {
          e3 = q2;
          if (e3 === start2) {
            e3 = -1;
            break;
          }
        }
        if (e3 === -1) {
          continue;
        }
        var t4 = this._addTriangle(e3, i$8, hullNext[e3], -1, -1, hullTri[e3]);
        hullTri[i$8] = this._legalize(t4 + 2);
        hullTri[e3] = t4;
        hullSize++;
        var n$12 = hullNext[e3];
        while (q2 = hullNext[n$12], orient(x$22, y$2, coords[2 * n$12], coords[2 * n$12 + 1], coords[2 * q2], coords[2 * q2 + 1])) {
          t4 = this._addTriangle(n$12, i$8, q2, hullTri[i$8], -1, hullTri[n$12]);
          hullTri[i$8] = this._legalize(t4 + 2);
          hullNext[n$12] = n$12;
          hullSize--;
          n$12 = q2;
        }
        if (e3 === start2) {
          while (q2 = hullPrev[e3], orient(x$22, y$2, coords[2 * q2], coords[2 * q2 + 1], coords[2 * e3], coords[2 * e3 + 1])) {
            t4 = this._addTriangle(q2, i$8, e3, -1, hullTri[e3], hullTri[q2]);
            this._legalize(t4 + 2);
            hullTri[q2] = t4;
            hullNext[e3] = e3;
            hullSize--;
            e3 = q2;
          }
        }
        this._hullStart = hullPrev[i$8] = e3;
        hullNext[e3] = hullPrev[n$12] = i$8;
        hullNext[i$8] = n$12;
        hullHash[this._hashKey(x$22, y$2)] = i$8;
        hullHash[this._hashKey(coords[2 * e3], coords[2 * e3 + 1])] = e3;
      }
      this.hull = new Uint32Array(hullSize);
      for (var i$9 = 0, e$12 = this._hullStart; i$9 < hullSize; i$9++) {
        this.hull[i$9] = e$12;
        e$12 = hullNext[e$12];
      }
      this.triangles = this._triangles.subarray(0, this.trianglesLen);
      this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    };
    Delaunator.prototype._hashKey = function _hashKey(x5, y7) {
      return Math.floor(pseudoAngle(x5 - this._cx, y7 - this._cy) * this._hashSize) % this._hashSize;
    };
    Delaunator.prototype._legalize = function _legalize(a3) {
      var ref = this;
      var triangles = ref._triangles;
      var halfedges = ref._halfedges;
      var coords = ref.coords;
      var i = 0;
      var ar = 0;
      while (true) {
        var b10 = halfedges[a3];
        var a0 = a3 - a3 % 3;
        ar = a0 + (a3 + 2) % 3;
        if (b10 === -1) {
          if (i === 0) {
            break;
          }
          a3 = EDGE_STACK2[--i];
          continue;
        }
        var b03 = b10 - b10 % 3;
        var al = a0 + (a3 + 1) % 3;
        var bl = b03 + (b10 + 2) % 3;
        var p0 = triangles[ar];
        var pr = triangles[a3];
        var pl = triangles[al];
        var p1 = triangles[bl];
        var illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);
        if (illegal) {
          triangles[a3] = p1;
          triangles[b10] = p0;
          var hbl = halfedges[bl];
          if (hbl === -1) {
            var e3 = this._hullStart;
            do {
              if (this._hullTri[e3] === bl) {
                this._hullTri[e3] = a3;
                break;
              }
              e3 = this._hullPrev[e3];
            } while (e3 !== this._hullStart);
          }
          this._link(a3, hbl);
          this._link(b10, halfedges[ar]);
          this._link(ar, bl);
          var br = b03 + (b10 + 1) % 3;
          if (i < EDGE_STACK2.length) {
            EDGE_STACK2[i++] = br;
          }
        } else {
          if (i === 0) {
            break;
          }
          a3 = EDGE_STACK2[--i];
        }
      }
      return ar;
    };
    Delaunator.prototype._link = function _link(a3, b10) {
      this._halfedges[a3] = b10;
      if (b10 !== -1) {
        this._halfedges[b10] = a3;
      }
    };
    Delaunator.prototype._addTriangle = function _addTriangle(i0, i1, i2, a3, b10, c5) {
      var t4 = this.trianglesLen;
      this._triangles[t4] = i0;
      this._triangles[t4 + 1] = i1;
      this._triangles[t4 + 2] = i2;
      this._link(t4, a3);
      this._link(t4 + 1, b10);
      this._link(t4 + 2, c5);
      this.trianglesLen += 3;
      return t4;
    };
    function pseudoAngle(dx, dy) {
      var p3 = dx / (Math.abs(dx) + Math.abs(dy));
      return (dy > 0 ? 3 - p3 : 1 + p3) / 4;
    }
    function dist2(ax, ay, bx, by) {
      var dx = ax - bx;
      var dy = ay - by;
      return dx * dx + dy * dy;
    }
    function orientIfSure(px, py, rx, ry, qx, qy) {
      var l3 = (ry - py) * (qx - px);
      var r3 = (rx - px) * (qy - py);
      return Math.abs(l3 - r3) >= 33306690738754716e-32 * Math.abs(l3 + r3) ? l3 - r3 : 0;
    }
    function orient(rx, ry, qx, qy, px, py) {
      var sign5 = orientIfSure(px, py, rx, ry, qx, qy) || orientIfSure(rx, ry, qx, qy, px, py) || orientIfSure(qx, qy, px, py, rx, ry);
      return sign5 < 0;
    }
    function inCircle(ax, ay, bx, by, cx, cy, px, py) {
      var dx = ax - px;
      var dy = ay - py;
      var ex = bx - px;
      var ey = by - py;
      var fx = cx - px;
      var fy = cy - py;
      var ap = dx * dx + dy * dy;
      var bp = ex * ex + ey * ey;
      var cp = fx * fx + fy * fy;
      return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;
    }
    function circumradius(ax, ay, bx, by, cx, cy) {
      var dx = bx - ax;
      var dy = by - ay;
      var ex = cx - ax;
      var ey = cy - ay;
      var bl = dx * dx + dy * dy;
      var cl = ex * ex + ey * ey;
      var d2 = 0.5 / (dx * ey - dy * ex);
      var x5 = (ey * bl - dy * cl) * d2;
      var y7 = (dx * cl - ex * bl) * d2;
      return x5 * x5 + y7 * y7;
    }
    function circumcenter(ax, ay, bx, by, cx, cy) {
      var dx = bx - ax;
      var dy = by - ay;
      var ex = cx - ax;
      var ey = cy - ay;
      var bl = dx * dx + dy * dy;
      var cl = ex * ex + ey * ey;
      var d2 = 0.5 / (dx * ey - dy * ex);
      var x5 = ax + (ey * bl - dy * cl) * d2;
      var y7 = ay + (dx * cl - ex * bl) * d2;
      return {x: x5, y: y7};
    }
    function quicksort(ids, dists, left2, right2) {
      if (right2 - left2 <= 20) {
        for (var i = left2 + 1; i <= right2; i++) {
          var temp2 = ids[i];
          var tempDist = dists[temp2];
          var j2 = i - 1;
          while (j2 >= left2 && dists[ids[j2]] > tempDist) {
            ids[j2 + 1] = ids[j2--];
          }
          ids[j2 + 1] = temp2;
        }
      } else {
        var median = left2 + right2 >> 1;
        var i$1 = left2 + 1;
        var j$1 = right2;
        swap2(ids, median, i$1);
        if (dists[ids[left2]] > dists[ids[right2]]) {
          swap2(ids, left2, right2);
        }
        if (dists[ids[i$1]] > dists[ids[right2]]) {
          swap2(ids, i$1, right2);
        }
        if (dists[ids[left2]] > dists[ids[i$1]]) {
          swap2(ids, left2, i$1);
        }
        var temp$1 = ids[i$1];
        var tempDist$1 = dists[temp$1];
        while (true) {
          do {
            i$1++;
          } while (dists[ids[i$1]] < tempDist$1);
          do {
            j$1--;
          } while (dists[ids[j$1]] > tempDist$1);
          if (j$1 < i$1) {
            break;
          }
          swap2(ids, i$1, j$1);
        }
        ids[left2 + 1] = ids[j$1];
        ids[j$1] = temp$1;
        if (right2 - i$1 + 1 >= j$1 - left2) {
          quicksort(ids, dists, i$1, right2);
          quicksort(ids, dists, left2, j$1 - 1);
        } else {
          quicksort(ids, dists, left2, j$1 - 1);
          quicksort(ids, dists, i$1, right2);
        }
      }
    }
    function swap2(arr, i, j2) {
      var tmp = arr[i];
      arr[i] = arr[j2];
      arr[j2] = tmp;
    }
    function defaultGetX(p3) {
      return p3[0];
    }
    function defaultGetY(p3) {
      return p3[1];
    }
    return Delaunator;
  });
});
var lib = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = void 0;
  var _delaunator = _interopRequireDefault(delaunator);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function pointX2(p3) {
    return p3[0];
  }
  function pointY2(p3) {
    return p3[1];
  }
  function collinear2(d2) {
    var triangles = d2.triangles, coords = d2.coords;
    for (var i = 0; i < triangles.length; i += 3) {
      var a3 = 2 * triangles[i];
      var b10 = 2 * triangles[i + 1];
      var c5 = 2 * triangles[i + 2];
      var cross2 = (coords[c5] - coords[a3]) * (coords[b10 + 1] - coords[a3 + 1]) - (coords[b10] - coords[a3]) * (coords[c5 + 1] - coords[a3 + 1]);
      if (cross2 > 1e-10) {
        return false;
      }
    }
    return true;
  }
  function jitter(x5, y7, r3) {
    return [x5 + Math.sin(x5 + y7) * r3, y7 + Math.cos(x5 - y7) * r3];
  }
  function flatArray(points, fx, fy, that) {
    var n3 = points.length;
    var array5 = new Float64Array(n3 * 2);
    for (var i = 0; i < n3; ++i) {
      var p3 = points[i];
      array5[i * 2] = fx.call(that, p3, i, points);
      array5[i * 2 + 1] = fy.call(that, p3, i, points);
    }
    return array5;
  }
  var Delaunay2 = /* @__PURE__ */ function() {
    function Delaunay3(points) {
      var delaunator2 = new _delaunator["default"](points);
      this.inedges = new Int32Array(points.length / 2);
      this._hullIndex = new Int32Array(points.length / 2);
      this.points = delaunator2.coords;
      this._init(delaunator2);
    }
    var _proto = Delaunay3.prototype;
    _proto._init = function _init(delaunator2) {
      var d2 = delaunator2;
      var points = this.points;
      if (d2.hull && d2.hull.length > 2 && collinear2(d2)) {
        this.collinear = Int32Array.from({
          length: points.length / 2
        }, function(_2, i2) {
          return i2;
        }).sort(function(i2, j2) {
          return points[2 * i2] - points[2 * j2] || points[2 * i2 + 1] - points[2 * j2 + 1];
        });
        var e3 = this.collinear[0];
        var f3 = this.collinear[this.collinear.length - 1];
        var bounds = [points[2 * e3], points[2 * e3 + 1], points[2 * f3], points[2 * f3 + 1]];
        var r3 = 1e-8 * Math.sqrt(Math.pow(bounds[3] - bounds[1], 2) + Math.pow(bounds[2] - bounds[0], 2));
        for (var i = 0, n3 = points.length / 2; i < n3; ++i) {
          var p3 = jitter(points[2 * i], points[2 * i + 1], r3);
          points[2 * i] = p3[0];
          points[2 * i + 1] = p3[1];
        }
        delaunator2 = new _delaunator["default"](points);
      }
      var halfedges = this.halfedges = delaunator2.halfedges;
      var hull = this.hull = delaunator2.hull;
      var triangles = this.triangles = delaunator2.triangles;
      var inedges = this.inedges.fill(-1);
      var hullIndex = this._hullIndex.fill(-1);
      for (var _e2 = 0, _n = halfedges.length; _e2 < _n; ++_e2) {
        var _p = triangles[_e2 % 3 === 2 ? _e2 - 2 : _e2 + 1];
        if (halfedges[_e2] === -1 || inedges[_p] === -1)
          inedges[_p] = _e2;
      }
      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {
        hullIndex[hull[_i]] = _i;
      }
      if (hull.length <= 2 && hull.length > 0) {
        this.triangles = new Int32Array(3).fill(-1);
        this.halfedges = new Int32Array(3).fill(-1);
        this.triangles[0] = hull[0];
        this.triangles[1] = hull[1];
        this.triangles[2] = hull[1];
        inedges[hull[0]] = 1;
        if (hull.length === 2)
          inedges[hull[1]] = 0;
      }
    };
    _proto.neighbors = function neighbors(i) {
      var results = [];
      var inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles;
      var e0 = inedges[i];
      if (e0 === -1)
        return results;
      var e3 = e0;
      var p0 = -1;
      do {
        p0 = triangles[e3];
        results.push(p0);
        e3 = e3 % 3 === 2 ? e3 - 2 : e3 + 1;
        if (triangles[e3] !== i)
          break;
        e3 = halfedges[e3];
        if (e3 === -1) {
          var p3 = hull[(_hullIndex[i] + 1) % hull.length];
          if (p3 !== p0)
            results.push(p3);
          break;
        }
      } while (e3 !== e0);
      return results;
    };
    _proto.find = function find3(x5, y7, i) {
      if (i === void 0) {
        i = 0;
      }
      if ((x5 = +x5, x5 !== x5) || (y7 = +y7, y7 !== y7))
        return -1;
      var i0 = i;
      var c5;
      while ((c5 = this._step(i, x5, y7)) >= 0 && c5 !== i && c5 !== i0) {
        i = c5;
      }
      return c5;
    };
    _proto._step = function _step(i, x5, y7) {
      var inedges = this.inedges, points = this.points;
      if (inedges[i] === -1 || !points.length)
        return (i + 1) % (points.length >> 1);
      var c5 = i;
      var dc2 = Math.pow(x5 - points[i * 2], 2) + Math.pow(y7 - points[i * 2 + 1], 2);
      for (var _iterator = this.neighbors(i), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
        var _ref;
        if (_isArray) {
          if (_i2 >= _iterator.length)
            break;
          _ref = _iterator[_i2++];
        } else {
          _i2 = _iterator.next();
          if (_i2.done)
            break;
          _ref = _i2.value;
        }
        var t4 = _ref;
        var dt = Math.pow(x5 - points[t4 * 2], 2) + Math.pow(y7 - points[t4 * 2 + 1], 2);
        if (dt < dc2) {
          dc2 = dt;
          c5 = t4;
        }
      }
      return c5;
    };
    return Delaunay3;
  }();
  exports["default"] = Delaunay2;
  Delaunay2.from = function(points, fx, fy, that) {
    if (fx === void 0) {
      fx = pointX2;
    }
    if (fy === void 0) {
      fy = pointY2;
    }
    return new Delaunay2(flatArray(points, fx, fy, that));
  };
});
var Delaunay = /* @__PURE__ */ getDefaultExportFromCjs(lib);
function _toConsumableArray$h(arr) {
  return _arrayWithoutHoles$h(arr) || _iterableToArray$h(arr) || _nonIterableSpread$h();
}
function _nonIterableSpread$h() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$h(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$h(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var VoronoiHelpers = {
  withinBounds: function(props, point8) {
    var width = props.width, height = props.height, polar = props.polar, origin = props.origin, scale = props.scale;
    var padding2 = Helpers.getPadding(props, "voronoiPadding");
    var x5 = point8.x, y7 = point8.y;
    if (polar) {
      var distanceSquared = Math.pow(x5 - origin.x, 2) + Math.pow(y7 - origin.y, 2);
      var radius = Math.max.apply(Math, _toConsumableArray$h(scale.y.range()));
      return distanceSquared < Math.pow(radius, 2);
    } else {
      return x5 >= padding2.left && x5 <= width - padding2.right && y7 >= padding2.top && y7 <= height - padding2.bottom;
    }
  },
  getDatasets: function(props) {
    var children2 = react.Children.toArray(props.children);
    var addMeta = function(data3, name, child) {
      var continuous4 = child && child.type && child.type.continuous;
      var style = child ? child.props && child.props.style : props.style;
      return data3.map(function(datum2, index4) {
        var _Helpers$getPoint = Helpers.getPoint(datum2), x5 = _Helpers$getPoint.x, y7 = _Helpers$getPoint.y, y03 = _Helpers$getPoint.y0, x03 = _Helpers$getPoint.x0;
        var voronoiX = (+x5 + +x03) / 2;
        var voronoiY = (+y7 + +y03) / 2;
        return assign_1({
          _voronoiX: props.voronoiDimension === "y" ? 0 : voronoiX,
          _voronoiY: props.voronoiDimension === "x" ? 0 : voronoiY,
          eventKey: index4,
          childName: name,
          continuous: continuous4,
          style
        }, datum2);
      });
    };
    if (props.data) {
      return addMeta(props.data);
    }
    var getData2 = function(childProps) {
      var data3 = Data.getData(childProps);
      return Array.isArray(data3) && data3.length > 0 ? data3 : void 0;
    };
    var iteratee = function(child, childName) {
      var childProps = child.props || {};
      var name = childProps.name || childName;
      var blacklist = props.voronoiBlacklist || [];
      var blacklistStr = blacklist.filter(isString_1);
      var blacklistRegExp = blacklist.filter(isRegExp_1);
      var isRegExpMatch = blacklistRegExp.some(function(regExp) {
        return regExp.test(name);
      });
      if (!Data.isDataComponent(child) || includes_1(blacklistStr, name) || isRegExpMatch) {
        return null;
      }
      var getChildData2 = child.type && isFunction_1(child.type.getData) ? child.type.getData : getData2;
      var childData = getChildData2(child.props);
      return childData ? addMeta(childData, name, child) : null;
    };
    return Helpers.reduceChildren(children2, iteratee, props);
  },
  findPoints: function(datasets, point8) {
    return datasets.filter(function(d2) {
      return point8._voronoiX === d2._voronoiX && point8._voronoiY === d2._voronoiY;
    });
  },
  withinRadius: function(point8, mousePosition, radius) {
    if (!point8) {
      return false;
    }
    if (!radius) {
      return true;
    }
    var x5 = mousePosition.x, y7 = mousePosition.y;
    var distanceSquared = Math.pow(x5 - point8[0], 2) + Math.pow(y7 - point8[1], 2);
    return distanceSquared < Math.pow(radius, 2);
  },
  getVoronoiPoints: function(props, mousePosition) {
    var datasets = this.getDatasets(props);
    var scaledData = datasets.map(function(d2) {
      var _Helpers$scalePoint = Helpers.scalePoint(props, d2), x5 = _Helpers$scalePoint.x, y7 = _Helpers$scalePoint.y;
      return [x5, y7];
    });
    var delaunay = Delaunay.from(scaledData);
    var index4 = delaunay.find(mousePosition.x, mousePosition.y);
    var withinRadius = this.withinRadius(scaledData[index4], mousePosition, props.radius);
    var points = withinRadius ? this.findPoints(datasets, datasets[index4]) : [];
    return {
      points,
      index: index4
    };
  },
  getActiveMutations: function(props, point8) {
    var childName = point8.childName, continuous4 = point8.continuous;
    var activateData = props.activateData, activateLabels = props.activateLabels, labels = props.labels;
    if (!activateData && !activateLabels) {
      return [];
    }
    var defaultTarget = activateData ? ["data"] : [];
    var targets = labels && !activateLabels ? defaultTarget : defaultTarget.concat("labels");
    if (isEmpty_1(targets)) {
      return [];
    }
    return targets.map(function(target) {
      var eventKey = continuous4 === true && target === "data" ? "all" : point8.eventKey;
      return {
        childName,
        eventKey,
        target,
        mutation: function() {
          return {
            active: true
          };
        }
      };
    });
  },
  getInactiveMutations: function(props, point8) {
    var childName = point8.childName, continuous4 = point8.continuous;
    var activateData = props.activateData, activateLabels = props.activateLabels, labels = props.labels;
    if (!activateData && !activateLabels) {
      return [];
    }
    var defaultTarget = activateData ? ["data"] : [];
    var targets = labels && !activateLabels ? defaultTarget : defaultTarget.concat("labels");
    if (isEmpty_1(targets)) {
      return [];
    }
    return targets.map(function(target) {
      var eventKey = continuous4 && target === "data" ? "all" : point8.eventKey;
      return {
        childName,
        eventKey,
        target,
        mutation: function() {
          return null;
        }
      };
    });
  },
  getParentMutation: function(activePoints, mousePosition, parentSVG, vIndex) {
    return [{
      target: "parent",
      eventKey: "parent",
      mutation: function() {
        return {
          activePoints,
          mousePosition,
          parentSVG,
          vIndex
        };
      }
    }];
  },
  onActivated: function(props, points) {
    if (isFunction_1(props.onActivated)) {
      props.onActivated(points, props);
    }
  },
  onDeactivated: function(props, points) {
    if (isFunction_1(props.onDeactivated)) {
      props.onDeactivated(points, props);
    }
  },
  onMouseLeave: function(evt, targetProps) {
    var _this = this, _getParentMutation;
    var activePoints = targetProps.activePoints || [];
    this.onDeactivated(targetProps, activePoints);
    var inactiveMutations = activePoints.length ? activePoints.map(function(point8) {
      return _this.getInactiveMutations(targetProps, point8);
    }) : [];
    return (_getParentMutation = this.getParentMutation([])).concat.apply(_getParentMutation, _toConsumableArray$h(inactiveMutations));
  },
  onMouseMove: function(evt, targetProps) {
    var _this2 = this;
    var activePoints = targetProps.activePoints || [];
    var parentSVG = targetProps.parentSVG || Selection2.getParentSVG(evt);
    var mousePosition = Selection2.getSVGEventCoordinates(evt, parentSVG);
    if (!this.withinBounds(targetProps, mousePosition)) {
      var _getParentMutation2;
      this.onDeactivated(targetProps, activePoints);
      var inactiveMutations = activePoints.length ? activePoints.map(function(point8) {
        return _this2.getInactiveMutations(targetProps, point8);
      }) : [];
      return (_getParentMutation2 = this.getParentMutation([], mousePosition, parentSVG)).concat.apply(_getParentMutation2, _toConsumableArray$h(inactiveMutations));
    }
    var _getVoronoiPoints = this.getVoronoiPoints(targetProps, mousePosition), _getVoronoiPoints$poi = _getVoronoiPoints.points, points = _getVoronoiPoints$poi === void 0 ? [] : _getVoronoiPoints$poi, index4 = _getVoronoiPoints.index;
    var parentMutations = this.getParentMutation(points, mousePosition, parentSVG, index4);
    if (activePoints.length && reactFastCompare(points, activePoints)) {
      return parentMutations;
    } else {
      this.onActivated(targetProps, points);
      this.onDeactivated(targetProps, activePoints);
      var activeMutations = points.length ? points.map(function(point8) {
        return _this2.getActiveMutations(targetProps, point8);
      }) : [];
      var _inactiveMutations = activePoints.length ? activePoints.map(function(point8) {
        return _this2.getInactiveMutations(targetProps, point8);
      }) : [];
      return parentMutations.concat.apply(parentMutations, _toConsumableArray$h(_inactiveMutations).concat(_toConsumableArray$h(activeMutations)));
    }
  }
};
var VoronoiHelpers$1 = {
  onMouseLeave: VoronoiHelpers.onMouseLeave.bind(VoronoiHelpers),
  onMouseMove: throttle_1(VoronoiHelpers.onMouseMove.bind(VoronoiHelpers), 32, {
    leading: true,
    trailing: false
  })
};
function _toConsumableArray$i(arr) {
  return _arrayWithoutHoles$i(arr) || _iterableToArray$i(arr) || _nonIterableSpread$i();
}
function _nonIterableSpread$i() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$i(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$i(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _objectWithoutProperties$5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectSpread$e(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$h(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$h(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$f(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$f(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$f(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$f(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$f(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$e(self2, call2) {
  if (call2 && (typeof call2 === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$e(self2);
}
function _assertThisInitialized$e(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inherits$e(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var voronoiContainerMixin = function(base) {
  var _class, _temp;
  return _temp = _class = /* @__PURE__ */ function(_base) {
    _inherits$e(VictoryVoronoiContainer, _base);
    function VictoryVoronoiContainer() {
      _classCallCheck$f(this, VictoryVoronoiContainer);
      return _possibleConstructorReturn$e(this, (VictoryVoronoiContainer.__proto__ || Object.getPrototypeOf(VictoryVoronoiContainer)).apply(this, arguments));
    }
    _createClass$f(VictoryVoronoiContainer, [{
      key: "getDimension",
      value: function getDimension(props) {
        var horizontal = props.horizontal, voronoiDimension = props.voronoiDimension;
        if (!horizontal || !voronoiDimension) {
          return voronoiDimension;
        }
        return voronoiDimension === "x" ? "y" : "x";
      }
    }, {
      key: "getPoint",
      value: function getPoint2(point8) {
        var whitelist = ["_x", "_x1", "_x0", "_y", "_y1", "_y0"];
        return pick_1(point8, whitelist);
      }
    }, {
      key: "getLabelPosition",
      value: function getLabelPosition(props, labelProps, points) {
        var mousePosition = props.mousePosition, mouseFollowTooltips = props.mouseFollowTooltips;
        var voronoiDimension = this.getDimension(props);
        var point8 = this.getPoint(points[0]);
        var basePosition = Helpers.scalePoint(props, point8);
        var center3 = mouseFollowTooltips ? mousePosition : void 0;
        if (!voronoiDimension || points.length < 2) {
          return _objectSpread$e({}, basePosition, {
            center: defaults_1({}, labelProps.center, center3)
          });
        }
        var x5 = voronoiDimension === "y" ? mousePosition.x : basePosition.x;
        var y7 = voronoiDimension === "x" ? mousePosition.y : basePosition.y;
        center3 = mouseFollowTooltips ? mousePosition : {
          x: x5,
          y: y7
        };
        return {
          x: x5,
          y: y7,
          center: defaults_1({}, labelProps.center, center3)
        };
      }
    }, {
      key: "getStyle",
      value: function getStyle(props, points, type3) {
        var labels = props.labels, labelComponent = props.labelComponent, theme = props.theme;
        var componentProps = labelComponent.props || {};
        var themeStyles = theme && theme.voronoi && theme.voronoi.style ? theme.voronoi.style : {};
        var componentStyleArray = type3 === "flyout" ? componentProps.flyoutStyle : componentProps.style;
        return points.reduce(function(memo, datum2, index4) {
          var labelProps = defaults_1({}, componentProps, {
            datum: datum2,
            active: true
          });
          var text2 = isFunction_1(labels) ? labels(labelProps) : void 0;
          var textArray = text2 !== void 0 ? "".concat(text2).split("\n") : [];
          var baseStyle = datum2.style && datum2.style[type3] || {};
          var componentStyle = Array.isArray(componentStyleArray) ? componentStyleArray[index4] : componentStyleArray;
          var style = Helpers.evaluateStyle(defaults_1({}, componentStyle, baseStyle, themeStyles[type3]), labelProps);
          var styleArray = textArray.length ? textArray.map(function() {
            return style;
          }) : [style];
          memo = memo.concat(styleArray);
          return memo;
        }, []);
      }
    }, {
      key: "getDefaultLabelProps",
      value: function getDefaultLabelProps(props, points) {
        var voronoiDimension = props.voronoiDimension, horizontal = props.horizontal, mouseFollowTooltips = props.mouseFollowTooltips;
        var point8 = this.getPoint(points[0]);
        var multiPoint = voronoiDimension && points.length > 1;
        var y7 = point8._y1 !== void 0 ? point8._y1 : point8._y;
        var defaultHorizontalOrientation = y7 < 0 ? "left" : "right";
        var defaultOrientation = y7 < 0 ? "bottom" : "top";
        var labelOrientation = horizontal ? defaultHorizontalOrientation : defaultOrientation;
        var orientation = mouseFollowTooltips ? void 0 : labelOrientation;
        return {
          orientation,
          pointerLength: multiPoint ? 0 : void 0,
          constrainToVisibleArea: multiPoint || mouseFollowTooltips ? true : void 0
        };
      }
    }, {
      key: "getLabelProps",
      value: function getLabelProps(props, points) {
        var labels = props.labels, scale = props.scale, labelComponent = props.labelComponent, theme = props.theme, width = props.width, height = props.height;
        var componentProps = labelComponent.props || {};
        var text2 = points.reduce(function(memo, datum3) {
          var labelProps2 = defaults_1({}, componentProps, {
            datum: datum3,
            active: true
          });
          var t4 = isFunction_1(labels) ? labels(labelProps2) : null;
          if (t4 === null || t4 === void 0) {
            return memo;
          }
          memo = memo.concat("".concat(t4).split("\n"));
          return memo;
        }, []);
        var _points$ = points[0], childName = _points$.childName, eventKey = _points$.eventKey;
        _points$.style;
        _points$.continuous;
        var datum2 = _objectWithoutProperties$5(_points$, ["childName", "eventKey", "style", "continuous"]);
        var name = props.name === childName ? childName : "".concat(props.name, "-").concat(childName);
        var labelProps = defaults_1({
          key: "".concat(name, "-").concat(eventKey, "-voronoi-tooltip"),
          id: "".concat(name, "-").concat(eventKey, "-voronoi-tooltip"),
          active: true,
          renderInPortal: false,
          activePoints: points,
          datum: datum2,
          scale,
          theme
        }, componentProps, {
          text: text2,
          width,
          height,
          style: this.getStyle(props, points, "labels"),
          flyoutStyle: this.getStyle(props, points, "flyout")[0]
        }, this.getDefaultLabelProps(props, points));
        var labelPosition = this.getLabelPosition(props, labelProps, points);
        return defaults_1({}, labelPosition, labelProps);
      }
    }, {
      key: "getTooltip",
      value: function getTooltip(props) {
        var labels = props.labels, activePoints = props.activePoints, labelComponent = props.labelComponent;
        if (!labels) {
          return null;
        }
        if (Array.isArray(activePoints) && activePoints.length) {
          var labelProps = this.getLabelProps(props, activePoints);
          var text2 = labelProps.text;
          var showLabel = Array.isArray(text2) ? text2.filter(Boolean).length : text2;
          return showLabel ? react.cloneElement(labelComponent, labelProps) : null;
        } else {
          return null;
        }
      }
    }, {
      key: "getChildren",
      value: function getChildren2(props) {
        return _toConsumableArray$i(react.Children.toArray(props.children)).concat([this.getTooltip(props)]);
      }
    }]);
    return VictoryVoronoiContainer;
  }(base), Object.defineProperty(_class, "displayName", {
    configurable: true,
    enumerable: true,
    writable: true,
    value: "VictoryVoronoiContainer"
  }), Object.defineProperty(_class, "propTypes", {
    configurable: true,
    enumerable: true,
    writable: true,
    value: _objectSpread$e({}, VictoryContainer.propTypes, {
      activateData: propTypes.bool,
      activateLabels: propTypes.bool,
      disable: propTypes.bool,
      labelComponent: propTypes.element,
      labels: propTypes.func,
      mouseFollowTooltips: propTypes.bool,
      onActivated: propTypes.func,
      onDeactivated: propTypes.func,
      radius: propTypes.number,
      voronoiBlacklist: propTypes.arrayOf(propTypes.oneOfType([propTypes.string, CustomPropTypes.regExp])),
      voronoiDimension: propTypes.oneOf(["x", "y"]),
      voronoiPadding: propTypes.oneOfType([propTypes.number, propTypes.shape({
        top: propTypes.number,
        bottom: propTypes.number,
        left: propTypes.number,
        right: propTypes.number
      })])
    })
  }), Object.defineProperty(_class, "defaultProps", {
    configurable: true,
    enumerable: true,
    writable: true,
    value: _objectSpread$e({}, VictoryContainer.defaultProps, {
      activateData: true,
      activateLabels: true,
      labelComponent: react.createElement(VictoryTooltip, null),
      voronoiPadding: 5
    })
  }), Object.defineProperty(_class, "defaultEvents", {
    configurable: true,
    enumerable: true,
    writable: true,
    value: function(props) {
      return [{
        target: "parent",
        eventHandlers: {
          onMouseLeave: function(evt, targetProps) {
            return props.disable ? {} : VoronoiHelpers$1.onMouseLeave(evt, targetProps);
          },
          onTouchCancel: function(evt, targetProps) {
            return props.disable ? {} : VoronoiHelpers$1.onMouseLeave(evt, targetProps);
          },
          onMouseMove: function(evt, targetProps) {
            return props.disable ? {} : VoronoiHelpers$1.onMouseMove(evt, targetProps);
          },
          onTouchMove: function(evt, targetProps) {
            return props.disable ? {} : VoronoiHelpers$1.onMouseMove(evt, targetProps);
          }
        }
      }, {
        target: "data",
        eventHandlers: props.disable ? {} : {
          onMouseOver: function() {
            return null;
          },
          onMouseOut: function() {
            return null;
          },
          onMouseMove: function() {
            return null;
          }
        }
      }];
    }
  }), _temp;
};
var victoryVoronoiContainer = voronoiContainerMixin(VictoryContainer);

// dist/components/victory.js
var CustomArea = (props) => {
  if (!props.active) {
    return /* @__PURE__ */ react.createElement(Area, {
      ...props
    });
  } else {
    const {data: data3, activeX, scale, style} = props;
    const index4 = data3.findIndex((val) => val._x.getTime() === activeX.getTime());
    const previousPoint = index4 === 0 ? activeX : data3[index4 - 1]._x;
    const nextPoint = index4 === data3.length - 1 ? activeX : data3[index4 + 1]._x;
    const percentScale = scale.x.copy().range([0, 100]);
    const currentPercent = percentScale(activeX);
    const previousPercent = percentScale(previousPoint);
    const nextPercent = percentScale(nextPoint);
    const minPercent = currentPercent - (currentPercent - previousPercent) / 2;
    const maxPercent = currentPercent + (nextPercent - currentPercent) / 2;
    const gradientId = Math.random();
    const isBrowser2 = typeof window !== "undefined" && window.__STATIC_GENERATOR !== true;
    const loc = isBrowser2 ? window.location.href : "";
    const newStyle = Object.assign({}, style, {
      fill: `url(${loc}#${gradientId})`,
      stroke: "none"
    });
    return /* @__PURE__ */ react.createElement("g", null, /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("linearGradient", {
      id: gradientId
    }, /* @__PURE__ */ react.createElement("stop", {
      offset: "0%",
      stopColor: style.fill
    }), /* @__PURE__ */ react.createElement("stop", {
      offset: `${minPercent}%`,
      stopColor: style.fill
    }), /* @__PURE__ */ react.createElement("stop", {
      offset: `${minPercent}%`,
      stopColor: "tomato"
    }), /* @__PURE__ */ react.createElement("stop", {
      offset: `${maxPercent}%`,
      stopColor: "tomato"
    }), /* @__PURE__ */ react.createElement("stop", {
      offset: `${maxPercent}%`,
      stopColor: style.fill
    }), /* @__PURE__ */ react.createElement("stop", {
      offset: "100%",
      stopColor: style.fill
    }))), /* @__PURE__ */ react.createElement(Area, {
      ...props,
      style: newStyle
    }));
  }
};
function StackedArea() {
  const [state, setState] = useState({
    activeX: null
  });
  const onActivated = (points, props) => {
    setState({activeX: points[0]._x});
  };
  return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("h1", null, "Victory Stacked Area Chart"), /* @__PURE__ */ react.createElement(VictoryChart, {
    height: 200,
    width: 300,
    scale: {x: "time"},
    containerComponent: /* @__PURE__ */ react.createElement(victoryVoronoiContainer, {
      onActivated
    })
  }, /* @__PURE__ */ react.createElement(VictoryStack, {
    colorScale: "blue"
  }, /* @__PURE__ */ react.createElement(victoryArea, {
    data: [
      {x: new Date(2001, 1, 1), y: 5},
      {x: new Date(2006, 1, 1), y: 3},
      {x: new Date(2011, 1, 1), y: 2.2},
      {x: new Date(2016, 1, 1), y: 2},
      {x: new Date(2021, 1, 1), y: 0.5}
    ],
    dataComponent: /* @__PURE__ */ react.createElement(CustomArea, {
      activeX: state.activeX
    })
  }), /* @__PURE__ */ react.createElement(victoryArea, {
    data: [
      {x: new Date(2001, 1, 1), y: 3},
      {x: new Date(2006, 1, 1), y: 2},
      {x: new Date(2011, 1, 1), y: 1.3},
      {x: new Date(2016, 1, 1), y: 1},
      {x: new Date(2021, 1, 1), y: 0.1}
    ],
    dataComponent: /* @__PURE__ */ react.createElement(CustomArea, {
      activeX: state.activeX
    })
  }), /* @__PURE__ */ react.createElement(victoryArea, {
    data: [
      {x: new Date(2001, 1, 1), y: 4},
      {x: new Date(2006, 1, 1), y: 3},
      {x: new Date(2011, 1, 1), y: 1.2},
      {x: new Date(2016, 1, 1), y: 1},
      {x: new Date(2021, 1, 1), y: 0.2}
    ],
    dataComponent: /* @__PURE__ */ react.createElement(CustomArea, {
      activeX: state.activeX
    })
  }))));
}

// snowpack/pkg/common/process-2545f00a.js
function defaultSetTimout() {
  throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
  throw new Error("clearTimeout has not been defined");
}
var cachedSetTimeout = defaultSetTimout;
var cachedClearTimeout = defaultClearTimeout;
var globalContext;
if (typeof window !== "undefined") {
  globalContext = window;
} else if (typeof self !== "undefined") {
  globalContext = self;
} else {
  globalContext = {};
}
if (typeof globalContext.setTimeout === "function") {
  cachedSetTimeout = setTimeout;
}
if (typeof globalContext.clearTimeout === "function") {
  cachedClearTimeout = clearTimeout;
}
function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    return setTimeout(fun, 0);
  }
  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }
  try {
    return cachedSetTimeout(fun, 0);
  } catch (e3) {
    try {
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e4) {
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}
function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    return clearTimeout(marker);
  }
  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }
  try {
    return cachedClearTimeout(marker);
  } catch (e3) {
    try {
      return cachedClearTimeout.call(null, marker);
    } catch (e4) {
      return cachedClearTimeout.call(this, marker);
    }
  }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }
  draining = false;
  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }
  if (queue.length) {
    drainQueue();
  }
}
function drainQueue() {
  if (draining) {
    return;
  }
  var timeout3 = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;
  while (len) {
    currentQueue = queue;
    queue = [];
    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }
    queueIndex = -1;
    len = queue.length;
  }
  currentQueue = null;
  draining = false;
  runClearTimeout(timeout3);
}
function nextTick(fun) {
  var args = new Array(arguments.length - 1);
  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }
  queue.push(new Item(fun, args));
  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}
function Item(fun, array5) {
  this.fun = fun;
  this.array = array5;
}
Item.prototype.run = function() {
  this.fun.apply(null, this.array);
};
var title = "browser";
var platform = "browser";
var browser = true;
var argv = [];
var version2 = "";
var versions = {};
var release = {};
var config = {};
function noop5() {
}
var on = noop5;
var addListener = noop5;
var once = noop5;
var off = noop5;
var removeListener = noop5;
var removeAllListeners = noop5;
var emit = noop5;
function binding(name) {
  throw new Error("process.binding is not supported");
}
function cwd() {
  return "/";
}
function chdir(dir) {
  throw new Error("process.chdir is not supported");
}
function umask() {
  return 0;
}
var performance2 = globalContext.performance || {};
var performanceNow = performance2.now || performance2.mozNow || performance2.msNow || performance2.oNow || performance2.webkitNow || function() {
  return new Date().getTime();
};
function hrtime(previousTimestamp) {
  var clocktime = performanceNow.call(performance2) * 1e-3;
  var seconds2 = Math.floor(clocktime);
  var nanoseconds = Math.floor(clocktime % 1 * 1e9);
  if (previousTimestamp) {
    seconds2 = seconds2 - previousTimestamp[0];
    nanoseconds = nanoseconds - previousTimestamp[1];
    if (nanoseconds < 0) {
      seconds2--;
      nanoseconds += 1e9;
    }
  }
  return [seconds2, nanoseconds];
}
var startTime = new Date();
function uptime() {
  var currentTime = new Date();
  var dif = currentTime - startTime;
  return dif / 1e3;
}
var process = {
  nextTick,
  title,
  browser,
  env: {NODE_ENV: "production"},
  argv,
  version: version2,
  versions,
  on,
  addListener,
  once,
  off,
  removeListener,
  removeAllListeners,
  emit,
  binding,
  cwd,
  chdir,
  umask,
  hrtime,
  platform,
  release,
  config,
  uptime
};

// snowpack/pkg/common/index-73477d67.js
var performanceNow2 = createCommonjsModule(function(module) {
  (function() {
    var getNanoSeconds, hrtime2, loadTime, moduleLoadTime, nodeLoadTime, upTime;
    if (typeof performance !== "undefined" && performance !== null && performance.now) {
      module.exports = function() {
        return performance.now();
      };
    } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
      module.exports = function() {
        return (getNanoSeconds() - nodeLoadTime) / 1e6;
      };
      hrtime2 = process.hrtime;
      getNanoSeconds = function() {
        var hr;
        hr = hrtime2();
        return hr[0] * 1e9 + hr[1];
      };
      moduleLoadTime = getNanoSeconds();
      upTime = process.uptime() * 1e9;
      nodeLoadTime = moduleLoadTime - upTime;
    } else if (Date.now) {
      module.exports = function() {
        return Date.now() - loadTime;
      };
      loadTime = Date.now();
    } else {
      module.exports = function() {
        return new Date().getTime() - loadTime;
      };
      loadTime = new Date().getTime();
    }
  }).call(commonjsGlobal);
});
var root3 = typeof window === "undefined" ? commonjsGlobal : window;
var vendors = ["moz", "webkit"];
var suffix = "AnimationFrame";
var raf = root3["request" + suffix];
var caf = root3["cancel" + suffix] || root3["cancelRequest" + suffix];
for (var i = 0; !raf && i < vendors.length; i++) {
  raf = root3[vendors[i] + "Request" + suffix];
  caf = root3[vendors[i] + "Cancel" + suffix] || root3[vendors[i] + "CancelRequest" + suffix];
}
if (!raf || !caf) {
  last2 = 0, id3 = 0, queue2 = [], frameDuration = 1e3 / 60;
  raf = function(callback) {
    if (queue2.length === 0) {
      var _now = performanceNow2(), next = Math.max(0, frameDuration - (_now - last2));
      last2 = next + _now;
      setTimeout(function() {
        var cp = queue2.slice(0);
        queue2.length = 0;
        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last2);
            } catch (e3) {
              setTimeout(function() {
                throw e3;
              }, 0);
            }
          }
        }
      }, Math.round(next));
    }
    queue2.push({
      handle: ++id3,
      callback,
      cancelled: false
    });
    return id3;
  };
  caf = function(handle) {
    for (var i = 0; i < queue2.length; i++) {
      if (queue2[i].handle === handle) {
        queue2[i].cancelled = true;
      }
    }
  };
}
var last2;
var id3;
var queue2;
var frameDuration;
var raf_1 = function(fn) {
  return raf.call(root3, fn);
};
var cancel = function() {
  caf.apply(root3, arguments);
};
var polyfill = function(object2) {
  if (!object2) {
    object2 = root3;
  }
  object2.requestAnimationFrame = raf;
  object2.cancelAnimationFrame = caf;
};
raf_1.cancel = cancel;
raf_1.polyfill = polyfill;

// snowpack/pkg/recharts.js
var d3Scales = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  scaleBand: band,
  scalePoint: point,
  scaleIdentity: identity2,
  scaleLinear: linear2,
  scaleLog: log,
  scaleSymlog: symlog,
  scaleOrdinal: ordinal,
  scaleImplicit: implicit,
  scalePow: pow,
  scaleSqrt: sqrt,
  scaleRadial: radial,
  scaleQuantile: quantile$1,
  scaleQuantize: quantize,
  scaleThreshold: threshold,
  scaleTime: time,
  scaleUtc: utcTime,
  scaleSequential: sequential,
  scaleSequentialLog: sequentialLog,
  scaleSequentialPow: sequentialPow,
  scaleSequentialSqrt: sequentialSqrt,
  scaleSequentialSymlog: sequentialSymlog,
  scaleSequentialQuantile: sequentialQuantile,
  scaleDiverging: diverging,
  scaleDivergingLog: divergingLog,
  scaleDivergingPow: divergingPow,
  scaleDivergingSqrt: divergingSqrt,
  scaleDivergingSymlog: divergingSymlog,
  tickFormat
});
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
var SVGContainerPropKeys = ["viewBox", "children"];
var SVGElementPropKeys = ["className", "color", "height", "id", "lang", "max", "media", "method", "min", "name", "style", "target", "type", "width", "role", "tabIndex", "accentHeight", "accumulate", "additive", "alignmentBaseline", "allowReorder", "alphabetic", "amplitude", "arabicForm", "ascent", "attributeName", "attributeType", "autoReverse", "azimuth", "baseFrequency", "baselineShift", "baseProfile", "bbox", "begin", "bias", "by", "calcMode", "capHeight", "clip", "clipPath", "clipPathUnits", "clipRule", "colorInterpolation", "colorInterpolationFilters", "colorProfile", "colorRendering", "contentScriptType", "contentStyleType", "cursor", "cx", "cy", "d", "decelerate", "descent", "diffuseConstant", "direction", "display", "divisor", "dominantBaseline", "dur", "dx", "dy", "edgeMode", "elevation", "enableBackground", "end", "exponent", "externalResourcesRequired", "fill", "fillOpacity", "fillRule", "filter", "filterRes", "filterUnits", "floodColor", "floodOpacity", "focusable", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "format", "from", "fx", "fy", "g1", "g2", "glyphName", "glyphOrientationHorizontal", "glyphOrientationVertical", "glyphRef", "gradientTransform", "gradientUnits", "hanging", "horizAdvX", "horizOriginX", "href", "ideographic", "imageRendering", "in2", "in", "intercept", "k1", "k2", "k3", "k4", "k", "kernelMatrix", "kernelUnitLength", "kerning", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "letterSpacing", "lightingColor", "limitingConeAngle", "local", "markerEnd", "markerHeight", "markerMid", "markerStart", "markerUnits", "markerWidth", "mask", "maskContentUnits", "maskUnits", "mathematical", "mode", "numOctaves", "offset", "opacity", "operator", "order", "orient", "orientation", "origin", "overflow", "overlinePosition", "overlineThickness", "paintOrder", "panose1", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointerEvents", "points", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "r", "radius", "refX", "refY", "renderingIntent", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "restart", "result", "rotate", "rx", "ry", "seed", "shapeRendering", "slope", "spacing", "specularConstant", "specularExponent", "speed", "spreadMethod", "startOffset", "stdDeviation", "stemh", "stemv", "stitchTiles", "stopColor", "stopOpacity", "strikethroughPosition", "strikethroughThickness", "string", "stroke", "strokeDasharray", "strokeDashoffset", "strokeLinecap", "strokeLinejoin", "strokeMiterlimit", "strokeOpacity", "strokeWidth", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textAnchor", "textDecoration", "textLength", "textRendering", "to", "transform", "u1", "u2", "underlinePosition", "underlineThickness", "unicode", "unicodeBidi", "unicodeRange", "unitsPerEm", "vAlphabetic", "values", "vectorEffect", "version", "vertAdvY", "vertOriginX", "vertOriginY", "vHanging", "vIdeographic", "viewTarget", "visibility", "vMathematical", "widths", "wordSpacing", "writingMode", "x1", "x2", "x", "xChannelSelector", "xHeight", "xlinkActuate", "xlinkArcrole", "xlinkHref", "xlinkRole", "xlinkShow", "xlinkTitle", "xlinkType", "xmlBase", "xmlLang", "xmlns", "xmlnsXlink", "xmlSpace", "y1", "y2", "y", "yChannelSelector", "z", "zoomAndPan", "ref", "key", "angle"];
var EventKeys = ["dangerouslySetInnerHTML", "onCopy", "onCopyCapture", "onCut", "onCutCapture", "onPaste", "onPasteCapture", "onCompositionEnd", "onCompositionEndCapture", "onCompositionStart", "onCompositionStartCapture", "onCompositionUpdate", "onCompositionUpdateCapture", "onFocus", "onFocusCapture", "onBlur", "onBlurCapture", "onChange", "onChangeCapture", "onBeforeInput", "onBeforeInputCapture", "onInput", "onInputCapture", "onReset", "onResetCapture", "onSubmit", "onSubmitCapture", "onInvalid", "onInvalidCapture", "onLoad", "onLoadCapture", "onError", "onErrorCapture", "onKeyDown", "onKeyDownCapture", "onKeyPress", "onKeyPressCapture", "onKeyUp", "onKeyUpCapture", "onAbort", "onAbortCapture", "onCanPlay", "onCanPlayCapture", "onCanPlayThrough", "onCanPlayThroughCapture", "onDurationChange", "onDurationChangeCapture", "onEmptied", "onEmptiedCapture", "onEncrypted", "onEncryptedCapture", "onEnded", "onEndedCapture", "onLoadedData", "onLoadedDataCapture", "onLoadedMetadata", "onLoadedMetadataCapture", "onLoadStart", "onLoadStartCapture", "onPause", "onPauseCapture", "onPlay", "onPlayCapture", "onPlaying", "onPlayingCapture", "onProgress", "onProgressCapture", "onRateChange", "onRateChangeCapture", "onSeeked", "onSeekedCapture", "onSeeking", "onSeekingCapture", "onStalled", "onStalledCapture", "onSuspend", "onSuspendCapture", "onTimeUpdate", "onTimeUpdateCapture", "onVolumeChange", "onVolumeChangeCapture", "onWaiting", "onWaitingCapture", "onAuxClick", "onAuxClickCapture", "onClick", "onClickCapture", "onContextMenu", "onContextMenuCapture", "onDoubleClick", "onDoubleClickCapture", "onDrag", "onDragCapture", "onDragEnd", "onDragEndCapture", "onDragEnter", "onDragEnterCapture", "onDragExit", "onDragExitCapture", "onDragLeave", "onDragLeaveCapture", "onDragOver", "onDragOverCapture", "onDragStart", "onDragStartCapture", "onDrop", "onDropCapture", "onMouseDown", "onMouseDownCapture", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseMoveCapture", "onMouseOut", "onMouseOutCapture", "onMouseOver", "onMouseOverCapture", "onMouseUp", "onMouseUpCapture", "onSelect", "onSelectCapture", "onTouchCancel", "onTouchCancelCapture", "onTouchEnd", "onTouchEndCapture", "onTouchMove", "onTouchMoveCapture", "onTouchStart", "onTouchStartCapture", "onPointerDown", "onPointerDownCapture", "onPointerMove", "onPointerMoveCapture", "onPointerUp", "onPointerUpCapture", "onPointerCancel", "onPointerCancelCapture", "onPointerEnter", "onPointerEnterCapture", "onPointerLeave", "onPointerLeaveCapture", "onPointerOver", "onPointerOverCapture", "onPointerOut", "onPointerOutCapture", "onGotPointerCapture", "onGotPointerCaptureCapture", "onLostPointerCapture", "onLostPointerCaptureCapture", "onScroll", "onScrollCapture", "onWheel", "onWheelCapture", "onAnimationStart", "onAnimationStartCapture", "onAnimationEnd", "onAnimationEndCapture", "onAnimationIteration", "onAnimationIterationCapture", "onTransitionEnd", "onTransitionEndCapture"];
var filterProps = function filterProps2(props, includeEvents, isSvg) {
  if (!props || typeof props === "function" || typeof props === "boolean") {
    return null;
  }
  var inputProps = props;
  if (/* @__PURE__ */ react.isValidElement(props)) {
    inputProps = props.props;
  }
  if (!isObject_1(inputProps)) {
    return null;
  }
  var out = {};
  Object.keys(inputProps).forEach(function(key) {
    if (SVGElementPropKeys.includes(key) || isSvg && SVGContainerPropKeys.includes(key) || includeEvents && EventKeys.includes(key)) {
      out[key] = inputProps[key];
    }
  });
  return out;
};
var adaptEventHandlers = function adaptEventHandlers2(props, newHandler) {
  if (!props || typeof props === "function" || typeof props === "boolean") {
    return null;
  }
  var inputProps = props;
  if (/* @__PURE__ */ react.isValidElement(props)) {
    inputProps = props.props;
  }
  if (!isObject_1(inputProps)) {
    return null;
  }
  var out = {};
  Object.keys(inputProps).forEach(function(key) {
    if (EventKeys.includes(key)) {
      out[key] = newHandler || function(e3) {
        return inputProps[key](inputProps, e3);
      };
    }
  });
  return out;
};
var getEventHandlerOfChild = function getEventHandlerOfChild2(originalHandler, data3, index4) {
  return function(e3) {
    originalHandler(data3, index4, e3);
    return null;
  };
};
var adaptEventsOfChild = function adaptEventsOfChild2(props, data3, index4) {
  if (!isObject_1(props) || _typeof(props) !== "object") {
    return null;
  }
  var out = null;
  Object.keys(props).forEach(function(key) {
    var item = props[key];
    if (EventKeys.includes(key) && typeof item === "function") {
      if (!out)
        out = {};
      out[key] = getEventHandlerOfChild(item, data3, index4);
    }
  });
  return out;
};
function _extends8() {
  _extends8 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose6(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Surface(props) {
  var children2 = props.children, width = props.width, height = props.height, viewBox = props.viewBox, className = props.className, style = props.style, others = _objectWithoutProperties2(props, ["children", "width", "height", "viewBox", "className", "style"]);
  var svgView = viewBox || {
    width,
    height,
    x: 0,
    y: 0
  };
  var layerClass = classnames("recharts-surface", className);
  return /* @__PURE__ */ react.createElement("svg", _extends8({}, filterProps(others, true, true), {
    className: layerClass,
    width,
    height,
    style,
    viewBox: "".concat(svgView.x, " ").concat(svgView.y, " ").concat(svgView.width, " ").concat(svgView.height),
    version: "1.1"
  }), children2);
}
function _extends$16() {
  _extends$16 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$16.apply(this, arguments);
}
function _objectWithoutProperties$12(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$15(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$15(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Layer(props) {
  var children2 = props.children, className = props.className, others = _objectWithoutProperties$12(props, ["children", "className"]);
  var layerClass = classnames("recharts-layer", className);
  return /* @__PURE__ */ react.createElement("g", _extends$16({
    className: layerClass
  }, filterProps(others, true)), children2);
}
function baseSlice(array5, start2, end) {
  var index4 = -1, length = array5.length;
  if (start2 < 0) {
    start2 = -start2 > length ? 0 : length + start2;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start2 > end ? 0 : end - start2 >>> 0;
  start2 >>>= 0;
  var result = Array(length);
  while (++index4 < length) {
    result[index4] = array5[index4 + start2];
  }
  return result;
}
var _baseSlice = baseSlice;
function castSlice(array5, start2, end) {
  var length = array5.length;
  end = end === void 0 ? length : end;
  return !start2 && end >= length ? array5 : _baseSlice(array5, start2, end);
}
var _castSlice = castSlice;
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string2) {
  return reHasUnicode.test(string2);
}
var _hasUnicode = hasUnicode;
function asciiToArray(string2) {
  return string2.split("");
}
var _asciiToArray = asciiToArray;
var rsAstralRange$1 = "\\ud800-\\udfff";
var rsComboMarksRange$1 = "\\u0300-\\u036f";
var reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange$1 = "\\u20d0-\\u20ff";
var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
var rsVarRange$1 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange$1 + "]";
var rsCombo = "[" + rsComboRange$1 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange$1 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ$1 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange$1 + "]?";
var rsOptJoin = "(?:" + rsZWJ$1 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string2) {
  return string2.match(reUnicode) || [];
}
var _unicodeToArray = unicodeToArray;
function stringToArray(string2) {
  return _hasUnicode(string2) ? _unicodeToArray(string2) : _asciiToArray(string2);
}
var _stringToArray = stringToArray;
function createCaseFirst(methodName) {
  return function(string2) {
    string2 = toString_1(string2);
    var strSymbols = _hasUnicode(string2) ? _stringToArray(string2) : void 0;
    var chr = strSymbols ? strSymbols[0] : string2.charAt(0);
    var trailing = strSymbols ? _castSlice(strSymbols, 1).join("") : string2.slice(1);
    return chr[methodName]() + trailing;
  };
}
var _createCaseFirst = createCaseFirst;
var upperFirst = _createCaseFirst("toUpperCase");
var upperFirst_1 = upperFirst;
function constant5(x5) {
  return function constant7() {
    return x5;
  };
}
var pi7 = Math.PI;
var tau6 = 2 * pi7;
function array3(x5) {
  return typeof x5 === "object" && "length" in x5 ? x5 : Array.from(x5);
}
function Linear3(context) {
  this._context = context;
}
Linear3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x5, y7);
        break;
    }
  }
};
function curveLinear3(context) {
  return new Linear3(context);
}
function x3(p3) {
  return p3[0];
}
function y4(p3) {
  return p3[1];
}
function shapeLine(x$13, y$13) {
  var defined4 = constant5(true), context = null, curve = curveLinear3, output = null;
  x$13 = typeof x$13 === "function" ? x$13 : x$13 === void 0 ? x3 : constant5(x$13);
  y$13 = typeof y$13 === "function" ? y$13 : y$13 === void 0 ? y4 : constant5(y$13);
  function line2(data3) {
    var i, n3 = (data3 = array3(data3)).length, d2, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x$13(d2, i, data3), +y$13(d2, i, data3));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line2.x = function(_2) {
    return arguments.length ? (x$13 = typeof _2 === "function" ? _2 : constant5(+_2), line2) : x$13;
  };
  line2.y = function(_2) {
    return arguments.length ? (y$13 = typeof _2 === "function" ? _2 : constant5(+_2), line2) : y$13;
  };
  line2.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant5(!!_2), line2) : defined4;
  };
  line2.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), line2) : curve;
  };
  line2.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), line2) : context;
  };
  return line2;
}
function shapeArea(x03, y03, y14) {
  var x14 = null, defined4 = constant5(true), context = null, curve = curveLinear3, output = null;
  x03 = typeof x03 === "function" ? x03 : x03 === void 0 ? x3 : constant5(+x03);
  y03 = typeof y03 === "function" ? y03 : y03 === void 0 ? constant5(0) : constant5(+y03);
  y14 = typeof y14 === "function" ? y14 : y14 === void 0 ? y4 : constant5(+y14);
  function area3(data3) {
    var i, j2, k6, n3 = (data3 = array3(data3)).length, d2, defined0 = false, buffer, x0z = new Array(n3), y0z = new Array(n3);
    if (context == null)
      output = curve(buffer = path());
    for (i = 0; i <= n3; ++i) {
      if (!(i < n3 && defined4(d2 = data3[i], i, data3)) === defined0) {
        if (defined0 = !defined0) {
          j2 = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k6 = i - 1; k6 >= j2; --k6) {
            output.point(x0z[k6], y0z[k6]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x03(d2, i, data3), y0z[i] = +y03(d2, i, data3);
        output.point(x14 ? +x14(d2, i, data3) : x0z[i], y14 ? +y14(d2, i, data3) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return shapeLine().defined(defined4).curve(curve).context(context);
  }
  area3.x = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant5(+_2), x14 = null, area3) : x03;
  };
  area3.x0 = function(_2) {
    return arguments.length ? (x03 = typeof _2 === "function" ? _2 : constant5(+_2), area3) : x03;
  };
  area3.x1 = function(_2) {
    return arguments.length ? (x14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant5(+_2), area3) : x14;
  };
  area3.y = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant5(+_2), y14 = null, area3) : y03;
  };
  area3.y0 = function(_2) {
    return arguments.length ? (y03 = typeof _2 === "function" ? _2 : constant5(+_2), area3) : y03;
  };
  area3.y1 = function(_2) {
    return arguments.length ? (y14 = _2 == null ? null : typeof _2 === "function" ? _2 : constant5(+_2), area3) : y14;
  };
  area3.lineX0 = area3.lineY0 = function() {
    return arealine().x(x03).y(y03);
  };
  area3.lineY1 = function() {
    return arealine().x(x03).y(y14);
  };
  area3.lineX1 = function() {
    return arealine().x(x14).y(y03);
  };
  area3.defined = function(_2) {
    return arguments.length ? (defined4 = typeof _2 === "function" ? _2 : constant5(!!_2), area3) : defined4;
  };
  area3.curve = function(_2) {
    return arguments.length ? (curve = _2, context != null && (output = curve(context)), area3) : curve;
  };
  area3.context = function(_2) {
    return arguments.length ? (_2 == null ? context = output = null : output = curve(context = _2), area3) : context;
  };
  return area3;
}
var symbolCircle = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / pi7);
    context.moveTo(r3, 0);
    context.arc(0, 0, r3, 0, tau6);
  }
};
var symbolCross = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r3, -r3);
    context.lineTo(-r3, -r3);
    context.lineTo(-r3, -3 * r3);
    context.lineTo(r3, -3 * r3);
    context.lineTo(r3, -r3);
    context.lineTo(3 * r3, -r3);
    context.lineTo(3 * r3, r3);
    context.lineTo(r3, r3);
    context.lineTo(r3, 3 * r3);
    context.lineTo(-r3, 3 * r3);
    context.lineTo(-r3, r3);
    context.lineTo(-3 * r3, r3);
    context.closePath();
  }
};
var tan303 = Math.sqrt(1 / 3);
var tan30_23 = tan303 * 2;
var symbolDiamond = {
  draw: function(context, size) {
    var y7 = Math.sqrt(size / tan30_23), x5 = y7 * tan303;
    context.moveTo(0, -y7);
    context.lineTo(x5, 0);
    context.lineTo(0, y7);
    context.lineTo(-x5, 0);
    context.closePath();
  }
};
var ka3 = 0.8908130915292852;
var kr3 = Math.sin(pi7 / 10) / Math.sin(7 * pi7 / 10);
var kx3 = Math.sin(tau6 / 10) * kr3;
var ky3 = -Math.cos(tau6 / 10) * kr3;
var symbolStar = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size * ka3), x5 = kx3 * r3, y7 = ky3 * r3;
    context.moveTo(0, -r3);
    context.lineTo(x5, y7);
    for (var i = 1; i < 5; ++i) {
      var a3 = tau6 * i / 5, c5 = Math.cos(a3), s4 = Math.sin(a3);
      context.lineTo(s4 * r3, -c5 * r3);
      context.lineTo(c5 * x5 - s4 * y7, s4 * x5 + c5 * y7);
    }
    context.closePath();
  }
};
var symbolSquare = {
  draw: function(context, size) {
    var w3 = Math.sqrt(size), x5 = -w3 / 2;
    context.rect(x5, x5, w3, w3);
  }
};
var sqrt33 = Math.sqrt(3);
var symbolTriangle = {
  draw: function(context, size) {
    var y7 = -Math.sqrt(size / (sqrt33 * 3));
    context.moveTo(0, y7 * 2);
    context.lineTo(-sqrt33 * y7, -y7);
    context.lineTo(sqrt33 * y7, -y7);
    context.closePath();
  }
};
var c3 = -0.5;
var s3 = Math.sqrt(3) / 2;
var k4 = 1 / Math.sqrt(12);
var a2 = (k4 / 2 + 1) * 3;
var symbolWye = {
  draw: function(context, size) {
    var r3 = Math.sqrt(size / a2), x03 = r3 / 2, y03 = r3 * k4, x14 = x03, y14 = r3 * k4 + r3, x22 = -x14, y22 = y14;
    context.moveTo(x03, y03);
    context.lineTo(x14, y14);
    context.lineTo(x22, y22);
    context.lineTo(c3 * x03 - s3 * y03, s3 * x03 + c3 * y03);
    context.lineTo(c3 * x14 - s3 * y14, s3 * x14 + c3 * y14);
    context.lineTo(c3 * x22 - s3 * y22, s3 * x22 + c3 * y22);
    context.lineTo(c3 * x03 + s3 * y03, c3 * y03 - s3 * x03);
    context.lineTo(c3 * x14 + s3 * y14, c3 * y14 - s3 * x14);
    context.lineTo(c3 * x22 + s3 * y22, c3 * y22 - s3 * x22);
    context.closePath();
  }
};
function shapeSymbol(type3, size) {
  var context = null;
  type3 = typeof type3 === "function" ? type3 : constant5(type3 || symbolCircle);
  size = typeof size === "function" ? size : constant5(size === void 0 ? 64 : +size);
  function symbol2() {
    var buffer;
    if (!context)
      context = buffer = path();
    type3.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  symbol2.type = function(_2) {
    return arguments.length ? (type3 = typeof _2 === "function" ? _2 : constant5(_2), symbol2) : type3;
  };
  symbol2.size = function(_2) {
    return arguments.length ? (size = typeof _2 === "function" ? _2 : constant5(+_2), symbol2) : size;
  };
  symbol2.context = function(_2) {
    return arguments.length ? (context = _2 == null ? null : _2, symbol2) : context;
  };
  return symbol2;
}
function noop6() {
}
function point6(that, x5, y7) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x5) / 6, (that._y0 + 4 * that._y1 + y7) / 6);
}
function Basis3(context) {
  this._context = context;
}
Basis3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point6(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point6(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasis2(context) {
  return new Basis3(context);
}
function BasisClosed3(context) {
  this._context = context;
}
BasisClosed3.prototype = {
  areaStart: noop6,
  areaEnd: noop6,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x5, this._y2 = y7;
        break;
      case 1:
        this._point = 2;
        this._x3 = x5, this._y3 = y7;
        break;
      case 2:
        this._point = 3;
        this._x4 = x5, this._y4 = y7;
        this._context.moveTo((this._x0 + 4 * this._x1 + x5) / 6, (this._y0 + 4 * this._y1 + y7) / 6);
        break;
      default:
        point6(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasisClosed2(context) {
  return new BasisClosed3(context);
}
function BasisOpen3(context) {
  this._context = context;
}
BasisOpen3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x03 = (this._x0 + 4 * this._x1 + x5) / 6, y03 = (this._y0 + 4 * this._y1 + y7) / 6;
        this._line ? this._context.lineTo(x03, y03) : this._context.moveTo(x03, y03);
        break;
      case 3:
        this._point = 4;
      default:
        point6(this, x5, y7);
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
  }
};
function curveBasisOpen2(context) {
  return new BasisOpen3(context);
}
function LinearClosed3(context) {
  this._context = context;
}
LinearClosed3.prototype = {
  areaStart: noop6,
  areaEnd: noop6,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    if (this._point)
      this._context.lineTo(x5, y7);
    else
      this._point = 1, this._context.moveTo(x5, y7);
  }
};
function curveLinearClosed2(context) {
  return new LinearClosed3(context);
}
function sign4(x5) {
  return x5 < 0 ? -1 : 1;
}
function slope33(that, x22, y22) {
  var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p3 = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign4(s0) + sign4(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p3)) || 0;
}
function slope23(that, t4) {
  var h2 = that._x1 - that._x0;
  return h2 ? (3 * (that._y1 - that._y0) / h2 - t4) / 2 : t4;
}
function point$13(that, t04, t14) {
  var x03 = that._x0, y03 = that._y0, x14 = that._x1, y14 = that._y1, dx = (x14 - x03) / 3;
  that._context.bezierCurveTo(x03 + dx, y03 + dx * t04, x14 - dx, y14 - dx * t14, x14, y14);
}
function MonotoneX3(context) {
  this._context = context;
}
MonotoneX3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point$13(this, this._t0, slope23(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    var t14 = NaN;
    x5 = +x5, y7 = +y7;
    if (x5 === this._x1 && y7 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point$13(this, slope23(this, t14 = slope33(this, x5, y7)), t14);
        break;
      default:
        point$13(this, this._t0, t14 = slope33(this, x5, y7));
        break;
    }
    this._x0 = this._x1, this._x1 = x5;
    this._y0 = this._y1, this._y1 = y7;
    this._t0 = t14;
  }
};
function MonotoneY3(context) {
  this._context = new ReflectContext3(context);
}
(MonotoneY3.prototype = Object.create(MonotoneX3.prototype)).point = function(x5, y7) {
  MonotoneX3.prototype.point.call(this, y7, x5);
};
function ReflectContext3(context) {
  this._context = context;
}
ReflectContext3.prototype = {
  moveTo: function(x5, y7) {
    this._context.moveTo(y7, x5);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x5, y7) {
    this._context.lineTo(y7, x5);
  },
  bezierCurveTo: function(x14, y14, x22, y22, x5, y7) {
    this._context.bezierCurveTo(y14, x14, y22, x22, y7, x5);
  }
};
function monotoneX2(context) {
  return new MonotoneX3(context);
}
function monotoneY2(context) {
  return new MonotoneY3(context);
}
function Natural3(context) {
  this._context = context;
}
Natural3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x5 = this._x, y7 = this._y, n3 = x5.length;
    if (n3) {
      this._line ? this._context.lineTo(x5[0], y7[0]) : this._context.moveTo(x5[0], y7[0]);
      if (n3 === 2) {
        this._context.lineTo(x5[1], y7[1]);
      } else {
        var px = controlPoints3(x5), py = controlPoints3(y7);
        for (var i0 = 0, i1 = 1; i1 < n3; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x5[i1], y7[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n3 === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x5, y7) {
    this._x.push(+x5);
    this._y.push(+y7);
  }
};
function controlPoints3(x5) {
  var i, n3 = x5.length - 1, m3, a3 = new Array(n3), b10 = new Array(n3), r3 = new Array(n3);
  a3[0] = 0, b10[0] = 2, r3[0] = x5[0] + 2 * x5[1];
  for (i = 1; i < n3 - 1; ++i)
    a3[i] = 1, b10[i] = 4, r3[i] = 4 * x5[i] + 2 * x5[i + 1];
  a3[n3 - 1] = 2, b10[n3 - 1] = 7, r3[n3 - 1] = 8 * x5[n3 - 1] + x5[n3];
  for (i = 1; i < n3; ++i)
    m3 = a3[i] / b10[i - 1], b10[i] -= m3, r3[i] -= m3 * r3[i - 1];
  a3[n3 - 1] = r3[n3 - 1] / b10[n3 - 1];
  for (i = n3 - 2; i >= 0; --i)
    a3[i] = (r3[i] - a3[i + 1]) / b10[i];
  b10[n3 - 1] = (x5[n3] + a3[n3 - 1]) / 2;
  for (i = 0; i < n3 - 1; ++i)
    b10[i] = 2 * x5[i + 1] - a3[i + 1];
  return [a3, b10];
}
function curveNatural2(context) {
  return new Natural3(context);
}
function Step3(context, t4) {
  this._context = context;
  this._t = t4;
}
Step3.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x5, y7) {
    x5 = +x5, y7 = +y7;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x5, y7) : this._context.moveTo(x5, y7);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y7);
          this._context.lineTo(x5, y7);
        } else {
          var x14 = this._x * (1 - this._t) + x5 * this._t;
          this._context.lineTo(x14, this._y);
          this._context.lineTo(x14, y7);
        }
        break;
      }
    }
    this._x = x5, this._y = y7;
  }
};
function curveStep2(context) {
  return new Step3(context, 0.5);
}
function stepBefore2(context) {
  return new Step3(context, 0);
}
function stepAfter2(context) {
  return new Step3(context, 1);
}
function stackOffsetNone2(series, order) {
  if (!((n3 = series.length) > 1))
    return;
  for (var i = 1, j2, s0, s1 = series[order[0]], n3, m3 = s1.length; i < n3; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j2 = 0; j2 < m3; ++j2) {
      s1[j2][1] += s1[j2][0] = isNaN(s0[j2][1]) ? s0[j2][0] : s0[j2][1];
    }
  }
}
function stackOrderNone2(series) {
  var n3 = series.length, o = new Array(n3);
  while (--n3 >= 0)
    o[n3] = n3;
  return o;
}
function stackValue3(d2, key) {
  return d2[key];
}
function stackSeries2(key) {
  const series = [];
  series.key = key;
  return series;
}
function shapeStack() {
  var keys4 = constant5([]), order = stackOrderNone2, offset = stackOffsetNone2, value2 = stackValue3;
  function stack3(data3) {
    var sz = Array.from(keys4.apply(this, arguments), stackSeries2), i, n3 = sz.length, j2 = -1, oz;
    for (const d2 of data3) {
      for (i = 0, ++j2; i < n3; ++i) {
        (sz[i][j2] = [0, +value2(d2, sz[i].key, j2, data3)]).data = d2;
      }
    }
    for (i = 0, oz = array3(order(sz)); i < n3; ++i) {
      sz[oz[i]].index = i;
    }
    offset(sz, oz);
    return sz;
  }
  stack3.keys = function(_2) {
    return arguments.length ? (keys4 = typeof _2 === "function" ? _2 : constant5(Array.from(_2)), stack3) : keys4;
  };
  stack3.value = function(_2) {
    return arguments.length ? (value2 = typeof _2 === "function" ? _2 : constant5(+_2), stack3) : value2;
  };
  stack3.order = function(_2) {
    return arguments.length ? (order = _2 == null ? stackOrderNone2 : typeof _2 === "function" ? _2 : constant5(Array.from(_2)), stack3) : order;
  };
  stack3.offset = function(_2) {
    return arguments.length ? (offset = _2 == null ? stackOffsetNone2 : _2, stack3) : offset;
  };
  return stack3;
}
function stackOffsetExpand2(series, order) {
  if (!((n3 = series.length) > 0))
    return;
  for (var i, n3, j2 = 0, m3 = series[0].length, y7; j2 < m3; ++j2) {
    for (y7 = i = 0; i < n3; ++i)
      y7 += series[i][j2][1] || 0;
    if (y7)
      for (i = 0; i < n3; ++i)
        series[i][j2][1] /= y7;
  }
  stackOffsetNone2(series, order);
}
function stackOffsetSilhouette2(series, order) {
  if (!((n3 = series.length) > 0))
    return;
  for (var j2 = 0, s0 = series[order[0]], n3, m3 = s0.length; j2 < m3; ++j2) {
    for (var i = 0, y7 = 0; i < n3; ++i)
      y7 += series[i][j2][1] || 0;
    s0[j2][1] += s0[j2][0] = -y7 / 2;
  }
  stackOffsetNone2(series, order);
}
function stackOffsetWiggle2(series, order) {
  if (!((n3 = series.length) > 0) || !((m3 = (s0 = series[order[0]]).length) > 0))
    return;
  for (var y7 = 0, j2 = 1, s0, m3, n3; j2 < m3; ++j2) {
    for (var i = 0, s1 = 0, s22 = 0; i < n3; ++i) {
      var si2 = series[order[i]], sij0 = si2[j2][1] || 0, sij1 = si2[j2 - 1][1] || 0, s32 = (sij0 - sij1) / 2;
      for (var k6 = 0; k6 < i; ++k6) {
        var sk2 = series[order[k6]], skj0 = sk2[j2][1] || 0, skj1 = sk2[j2 - 1][1] || 0;
        s32 += skj0 - skj1;
      }
      s1 += sij0, s22 += s32 * sij0;
    }
    s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
    if (s1)
      y7 -= s22 / s1;
  }
  s0[j2 - 1][1] += s0[j2 - 1][0] = y7;
  stackOffsetNone2(series, order);
}
function _typeof$1(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$1 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$1 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$1(obj);
}
function _extends$26() {
  _extends$26 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$26.apply(this, arguments);
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  return Constructor;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p3) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf(o, p3);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result);
  };
}
function _possibleConstructorReturn2(self2, call2) {
  if (call2 && (_typeof$1(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized2(self2);
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
var symbolFactories = {
  symbolCircle,
  symbolCross,
  symbolDiamond,
  symbolSquare,
  symbolStar,
  symbolTriangle,
  symbolWye
};
var RADIAN = Math.PI / 180;
var getSymbolFactory = function getSymbolFactory2(type3) {
  var name = "symbol".concat(upperFirst_1(type3));
  return symbolFactories[name] || symbolCircle;
};
var calculateAreaSize = function calculateAreaSize2(size, sizeType, type3) {
  if (sizeType === "area") {
    return size;
  }
  switch (type3) {
    case "cross":
      return 5 * size * size / 9;
    case "diamond":
      return 0.5 * size * size / Math.sqrt(3);
    case "square":
      return size * size;
    case "star": {
      var angle = 18 * RADIAN;
      return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));
    }
    case "triangle":
      return Math.sqrt(3) * size * size / 4;
    case "wye":
      return (21 - 10 * Math.sqrt(3)) * size * size / 8;
    default:
      return Math.PI * size * size / 4;
  }
};
var Symbols = /* @__PURE__ */ function(_PureComponent) {
  _inherits2(Symbols2, _PureComponent);
  var _super = _createSuper(Symbols2);
  function Symbols2() {
    _classCallCheck2(this, Symbols2);
    return _super.apply(this, arguments);
  }
  _createClass2(Symbols2, [{
    key: "getPath",
    value: function getPath() {
      var _this$props = this.props, size = _this$props.size, sizeType = _this$props.sizeType, type3 = _this$props.type;
      var symbolFactory = getSymbolFactory(type3);
      var symbol2 = shapeSymbol().type(symbolFactory).size(calculateAreaSize(size, sizeType, type3));
      return symbol2();
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props2 = this.props, className = _this$props2.className, cx = _this$props2.cx, cy = _this$props2.cy, size = _this$props2.size;
      if (cx === +cx && cy === +cy && size === +size) {
        return /* @__PURE__ */ react.createElement("path", _extends$26({}, filterProps(this.props, true), {
          className: classnames("recharts-symbols", className),
          transform: "translate(".concat(cx, ", ").concat(cy, ")"),
          d: this.getPath()
        }));
      }
      return null;
    }
  }]);
  return Symbols2;
}(react.PureComponent);
Symbols.defaultProps = {
  type: "circle",
  size: 64,
  sizeType: "area"
};
Symbols.registerSymbol = function(key, factory) {
  symbolFactories["symbol".concat(upperFirst_1(key))] = factory;
};
function _typeof$2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$2 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$2 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$2(obj);
}
function _extends$34() {
  _extends$34 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$34.apply(this, arguments);
}
function ownKeys(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty4(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty4(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$12(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$12(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$12(Constructor, staticProps);
  return Constructor;
}
function _inherits$12(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$1(subClass, superClass);
}
function _setPrototypeOf$1(o, p3) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$1(o, p3);
}
function _createSuper$1(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$1(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$1(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$12(this, result);
  };
}
function _possibleConstructorReturn$12(self2, call2) {
  if (call2 && (_typeof$2(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$12(self2);
}
function _assertThisInitialized$12(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$1() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$1(o);
}
var SIZE = 32;
var DefaultLegendContent = /* @__PURE__ */ function(_PureComponent) {
  _inherits$12(DefaultLegendContent2, _PureComponent);
  var _super = _createSuper$1(DefaultLegendContent2);
  function DefaultLegendContent2() {
    _classCallCheck$12(this, DefaultLegendContent2);
    return _super.apply(this, arguments);
  }
  _createClass$12(DefaultLegendContent2, [{
    key: "renderIcon",
    value: function renderIcon(data3) {
      var inactiveColor = this.props.inactiveColor;
      var halfSize = SIZE / 2;
      var sixthSize = SIZE / 6;
      var thirdSize = SIZE / 3;
      var color3 = data3.inactive ? inactiveColor : data3.color;
      if (data3.type === "plainline") {
        return /* @__PURE__ */ react.createElement("line", {
          strokeWidth: 4,
          fill: "none",
          stroke: color3,
          strokeDasharray: data3.payload.strokeDasharray,
          x1: 0,
          y1: halfSize,
          x2: SIZE,
          y2: halfSize,
          className: "recharts-legend-icon"
        });
      }
      if (data3.type === "line") {
        return /* @__PURE__ */ react.createElement("path", {
          strokeWidth: 4,
          fill: "none",
          stroke: color3,
          d: "M0,".concat(halfSize, "h").concat(thirdSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(2 * thirdSize, ",").concat(halfSize, "\n            H").concat(SIZE, "M").concat(2 * thirdSize, ",").concat(halfSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(thirdSize, ",").concat(halfSize),
          className: "recharts-legend-icon"
        });
      }
      if (data3.type === "rect") {
        return /* @__PURE__ */ react.createElement("path", {
          stroke: "none",
          fill: color3,
          d: "M0,".concat(SIZE / 8, "h").concat(SIZE, "v").concat(SIZE * 3 / 4, "h").concat(-SIZE, "z"),
          className: "recharts-legend-icon"
        });
      }
      if (/* @__PURE__ */ react.isValidElement(data3.legendIcon)) {
        var iconProps = _objectSpread2({}, data3);
        delete iconProps.legendIcon;
        return /* @__PURE__ */ react.cloneElement(data3.legendIcon, iconProps);
      }
      return /* @__PURE__ */ react.createElement(Symbols, {
        fill: color3,
        cx: halfSize,
        cy: halfSize,
        size: SIZE,
        sizeType: "diameter",
        type: data3.type
      });
    }
  }, {
    key: "renderItems",
    value: function renderItems() {
      var _this = this;
      var _this$props = this.props, payload = _this$props.payload, iconSize = _this$props.iconSize, layout = _this$props.layout, formatter = _this$props.formatter, inactiveColor = _this$props.inactiveColor;
      var viewBox = {
        x: 0,
        y: 0,
        width: SIZE,
        height: SIZE
      };
      var itemStyle = {
        display: layout === "horizontal" ? "inline-block" : "block",
        marginRight: 10
      };
      var svgStyle = {
        display: "inline-block",
        verticalAlign: "middle",
        marginRight: 4
      };
      return payload.map(function(entry, i) {
        var _classNames;
        var finalFormatter = entry.formatter || formatter;
        var className = classnames((_classNames = {
          "recharts-legend-item": true
        }, _defineProperty4(_classNames, "legend-item-".concat(i), true), _defineProperty4(_classNames, "inactive", entry.inactive), _classNames));
        if (entry.type === "none") {
          return null;
        }
        var color3 = entry.inactive ? inactiveColor : entry.color;
        return /* @__PURE__ */ react.createElement("li", _extends$34({
          className,
          style: itemStyle,
          key: "legend-item-".concat(i)
        }, adaptEventsOfChild(_this.props, entry, i)), /* @__PURE__ */ react.createElement(Surface, {
          width: iconSize,
          height: iconSize,
          viewBox,
          style: svgStyle
        }, _this.renderIcon(entry)), /* @__PURE__ */ react.createElement("span", {
          className: "recharts-legend-item-text",
          style: {
            color: color3
          }
        }, finalFormatter ? finalFormatter(entry.value, entry, i) : entry.value));
      });
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props2 = this.props, payload = _this$props2.payload, layout = _this$props2.layout, align = _this$props2.align;
      if (!payload || !payload.length) {
        return null;
      }
      var finalStyle = {
        padding: 0,
        margin: 0,
        textAlign: layout === "horizontal" ? align : "left"
      };
      return /* @__PURE__ */ react.createElement("ul", {
        className: "recharts-default-legend",
        style: finalStyle
      }, this.renderItems());
    }
  }]);
  return DefaultLegendContent2;
}(react.PureComponent);
DefaultLegendContent.displayName = "Legend";
DefaultLegendContent.defaultProps = {
  iconSize: 14,
  layout: "horizontal",
  align: "center",
  verticalAlign: "middle",
  inactiveColor: "#ccc"
};
var numberTag2 = "[object Number]";
function isNumber2(value2) {
  return typeof value2 == "number" || isObjectLike_1(value2) && _baseGetTag(value2) == numberTag2;
}
var isNumber_1 = isNumber2;
function isNaN$1(value2) {
  return isNumber_1(value2) && value2 != +value2;
}
var _isNaN = isNaN$1;
var mathSign = function mathSign2(value2) {
  if (value2 === 0) {
    return 0;
  }
  if (value2 > 0) {
    return 1;
  }
  return -1;
};
var isPercent = function isPercent2(value2) {
  return isString_1(value2) && value2.indexOf("%") === value2.length - 1;
};
var isNumber$1 = function isNumber3(value2) {
  return isNumber_1(value2) && !_isNaN(value2);
};
var isNumOrStr = function isNumOrStr2(value2) {
  return isNumber$1(value2) || isString_1(value2);
};
var idCounter2 = 0;
var uniqueId2 = function uniqueId3(prefix3) {
  var id3 = ++idCounter2;
  return "".concat(prefix3 || "").concat(id3);
};
var getPercentValue = function getPercentValue2(percent, totalValue) {
  var defaultValue = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  var validate = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  if (!isNumber$1(percent) && !isString_1(percent)) {
    return defaultValue;
  }
  var value2;
  if (isPercent(percent)) {
    var index4 = percent.indexOf("%");
    value2 = totalValue * parseFloat(percent.slice(0, index4)) / 100;
  } else {
    value2 = +percent;
  }
  if (_isNaN(value2)) {
    value2 = defaultValue;
  }
  if (validate && value2 > totalValue) {
    value2 = totalValue;
  }
  return value2;
};
var getAnyElementOfObject = function getAnyElementOfObject2(obj) {
  if (!obj) {
    return null;
  }
  var keys4 = Object.keys(obj);
  if (keys4 && keys4.length) {
    return obj[keys4[0]];
  }
  return null;
};
var hasDuplicate = function hasDuplicate2(ary) {
  if (!isArray_1(ary)) {
    return false;
  }
  var len = ary.length;
  var cache = {};
  for (var i = 0; i < len; i++) {
    if (!cache[ary[i]]) {
      cache[ary[i]] = true;
    } else {
      return true;
    }
  }
  return false;
};
var interpolateNumber = function interpolateNumber2(numberA, numberB) {
  if (isNumber$1(numberA) && isNumber$1(numberB)) {
    return function(t4) {
      return numberA + t4 * (numberB - numberA);
    };
  }
  return function() {
    return numberB;
  };
};
function findEntryInArray(ary, specifiedKey, specifiedValue) {
  if (!ary || !ary.length) {
    return null;
  }
  return ary.find(function(entry) {
    return entry && (typeof specifiedKey === "function" ? specifiedKey(entry) : get_1(entry, specifiedKey)) === specifiedValue;
  });
}
function _typeof$3(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$3 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$3 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$3(obj);
}
function ownKeys$1(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$12(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$1(Object(source), true).forEach(function(key) {
        _defineProperty$12(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$12(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$22(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$22(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$22(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$22(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$22(Constructor, staticProps);
  return Constructor;
}
function _inherits$22(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$2(subClass, superClass);
}
function _setPrototypeOf$2(o, p3) {
  _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$2(o, p3);
}
function _createSuper$2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$22(this, result);
  };
}
function _possibleConstructorReturn$22(self2, call2) {
  if (call2 && (_typeof$3(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$22(self2);
}
function _assertThisInitialized$22(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$2(o) {
  _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$2(o);
}
function _objectWithoutProperties$22(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$25(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$25(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function defaultUniqBy(entry) {
  return entry.value;
}
function getUniqPayload(option, payload) {
  if (option === true) {
    return uniqBy_1(payload, defaultUniqBy);
  }
  if (isFunction_1(option)) {
    return uniqBy_1(payload, option);
  }
  return payload;
}
function renderContent(content, props) {
  if (/* @__PURE__ */ react.isValidElement(content)) {
    return /* @__PURE__ */ react.cloneElement(content, props);
  }
  if (isFunction_1(content)) {
    return /* @__PURE__ */ react.createElement(content, props);
  }
  props.ref;
  var otherProps = _objectWithoutProperties$22(props, ["ref"]);
  return /* @__PURE__ */ react.createElement(DefaultLegendContent, otherProps);
}
var EPS = 1;
var Legend2 = /* @__PURE__ */ function(_PureComponent) {
  _inherits$22(Legend3, _PureComponent);
  var _super = _createSuper$2(Legend3);
  function Legend3() {
    var _this;
    _classCallCheck$22(this, Legend3);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.wrapperNode = void 0;
    _this.state = {
      boxWidth: -1,
      boxHeight: -1
    };
    return _this;
  }
  _createClass$22(Legend3, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateBBox();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateBBox();
    }
  }, {
    key: "getBBox",
    value: function getBBox() {
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        return this.wrapperNode.getBoundingClientRect();
      }
      return null;
    }
  }, {
    key: "getBBoxSnapshot",
    value: function getBBoxSnapshot() {
      var _this$state = this.state, boxWidth = _this$state.boxWidth, boxHeight = _this$state.boxHeight;
      if (boxWidth >= 0 && boxHeight >= 0) {
        return {
          width: boxWidth,
          height: boxHeight
        };
      }
      return null;
    }
  }, {
    key: "getDefaultPosition",
    value: function getDefaultPosition(style) {
      var _this$props = this.props, layout = _this$props.layout, align = _this$props.align, verticalAlign = _this$props.verticalAlign, margin = _this$props.margin, chartWidth = _this$props.chartWidth, chartHeight = _this$props.chartHeight;
      var hPos, vPos;
      if (!style || (style.left === void 0 || style.left === null) && (style.right === void 0 || style.right === null)) {
        if (align === "center" && layout === "vertical") {
          var _box = this.getBBoxSnapshot() || {
            width: 0
          };
          hPos = {
            left: ((chartWidth || 0) - _box.width) / 2
          };
        } else {
          hPos = align === "right" ? {
            right: margin && margin.right || 0
          } : {
            left: margin && margin.left || 0
          };
        }
      }
      if (!style || (style.top === void 0 || style.top === null) && (style.bottom === void 0 || style.bottom === null)) {
        if (verticalAlign === "middle") {
          var _box2 = this.getBBoxSnapshot() || {
            height: 0
          };
          vPos = {
            top: ((chartHeight || 0) - _box2.height) / 2
          };
        } else {
          vPos = verticalAlign === "bottom" ? {
            bottom: margin && margin.bottom || 0
          } : {
            top: margin && margin.top || 0
          };
        }
      }
      return _objectSpread$12(_objectSpread$12({}, hPos), vPos);
    }
  }, {
    key: "updateBBox",
    value: function updateBBox() {
      var _this$state2 = this.state, boxWidth = _this$state2.boxWidth, boxHeight = _this$state2.boxHeight;
      var onBBoxUpdate = this.props.onBBoxUpdate;
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var _box3 = this.wrapperNode.getBoundingClientRect();
        if (Math.abs(_box3.width - boxWidth) > EPS || Math.abs(_box3.height - boxHeight) > EPS) {
          this.setState({
            boxWidth: _box3.width,
            boxHeight: _box3.height
          }, function() {
            if (onBBoxUpdate) {
              onBBoxUpdate(_box3);
            }
          });
        }
      } else if (boxWidth !== -1 || boxHeight !== -1) {
        this.setState({
          boxWidth: -1,
          boxHeight: -1
        }, function() {
          if (onBBoxUpdate) {
            onBBoxUpdate(null);
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _this$props2 = this.props, content = _this$props2.content, width = _this$props2.width, height = _this$props2.height, wrapperStyle = _this$props2.wrapperStyle, payloadUniqBy = _this$props2.payloadUniqBy, payload = _this$props2.payload;
      var outerStyle = _objectSpread$12(_objectSpread$12({
        position: "absolute",
        width: width || "auto",
        height: height || "auto"
      }, this.getDefaultPosition(wrapperStyle)), wrapperStyle);
      return /* @__PURE__ */ react.createElement("div", {
        className: "recharts-legend-wrapper",
        style: outerStyle,
        ref: function ref(node) {
          _this2.wrapperNode = node;
        }
      }, renderContent(content, _objectSpread$12(_objectSpread$12({}, this.props), {}, {
        payload: getUniqPayload(payloadUniqBy, payload)
      })));
    }
  }], [{
    key: "getWithHeight",
    value: function getWithHeight(item, chartWidth) {
      var layout = item.props.layout;
      if (layout === "vertical" && isNumber$1(item.props.height)) {
        return {
          height: item.props.height
        };
      }
      if (layout === "horizontal") {
        return {
          width: item.props.width || chartWidth
        };
      }
      return null;
    }
  }]);
  return Legend3;
}(react.PureComponent);
Legend2.displayName = "Legend";
Legend2.defaultProps = {
  iconSize: 14,
  layout: "horizontal",
  align: "center",
  verticalAlign: "bottom"
};
function setRafTimeout(callback) {
  var timeout3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var currTime = -1;
  var shouldUpdate = function shouldUpdate2(now5) {
    if (currTime < 0) {
      currTime = now5;
    }
    if (now5 - currTime > timeout3) {
      callback(now5);
      currTime = -1;
    } else {
      raf_1(shouldUpdate2);
    }
  };
  raf_1(shouldUpdate);
}
function _typeof$4(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$4 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$4 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$4(obj);
}
function _toArray(arr) {
  return _arrayWithHoles2(arr) || _iterableToArray2(arr) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArray2(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function createAnimateManager() {
  var currStyle = {};
  var handleChange = function handleChange2() {
    return null;
  };
  var shouldStop = false;
  var setStyle = function setStyle2(_style) {
    if (shouldStop) {
      return;
    }
    if (Array.isArray(_style)) {
      if (!_style.length) {
        return;
      }
      var styles2 = _style;
      var _styles = _toArray(styles2), curr = _styles[0], restStyles = _styles.slice(1);
      if (typeof curr === "number") {
        setRafTimeout(setStyle2.bind(null, restStyles), curr);
        return;
      }
      setStyle2(curr);
      setRafTimeout(setStyle2.bind(null, restStyles));
      return;
    }
    if (_typeof$4(_style) === "object") {
      currStyle = _style;
      handleChange(currStyle);
    }
    if (typeof _style === "function") {
      _style();
    }
  };
  return {
    stop: function stop() {
      shouldStop = true;
    },
    start: function start2(style) {
      shouldStop = false;
      setStyle(style);
    },
    subscribe: function subscribe(_handleChange) {
      handleChange = _handleChange;
      return function() {
        handleChange = function handleChange2() {
          return null;
        };
      };
    }
  };
}
var nativeMin2 = Math.min;
function baseIntersection(arrays, iteratee, comparator) {
  var includes2 = comparator ? _arrayIncludesWith : _arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
  while (othIndex--) {
    var array5 = arrays[othIndex];
    if (othIndex && iteratee) {
      array5 = _arrayMap(array5, _baseUnary(iteratee));
    }
    maxLength = nativeMin2(array5.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || length >= 120 && array5.length >= 120) ? new _SetCache(othIndex && array5) : void 0;
  }
  array5 = arrays[0];
  var index4 = -1, seen = caches[0];
  outer:
    while (++index4 < length && result.length < maxLength) {
      var value2 = array5[index4], computed = iteratee ? iteratee(value2) : value2;
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (!(seen ? _cacheHas(seen, computed) : includes2(result, computed, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? _cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed);
        }
        result.push(value2);
      }
    }
  return result;
}
var _baseIntersection = baseIntersection;
function castArrayLikeObject(value2) {
  return isArrayLikeObject_1(value2) ? value2 : [];
}
var _castArrayLikeObject = castArrayLikeObject;
var intersection = _baseRest(function(arrays) {
  var mapped = _arrayMap(arrays, _castArrayLikeObject);
  return mapped.length && mapped[0] === arrays[0] ? _baseIntersection(mapped) : [];
});
var intersection_1 = intersection;
function _objectSpread$22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$22(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$22(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var PREFIX_LIST = ["Webkit", "Moz", "O", "ms"];
var IN_LINE_PREFIX_LIST = ["-webkit-", "-moz-", "-o-", "-ms-"];
var IN_COMPATIBLE_PROPERTY = ["transform", "transformOrigin", "transition"];
var getIntersectionKeys = function getIntersectionKeys2(preObj, nextObj) {
  return intersection_1(Object.keys(preObj), Object.keys(nextObj));
};
var identity7 = function identity8(param) {
  return param;
};
var getDashCase = function getDashCase2(name) {
  return name.replace(/([A-Z])/g, function(v3) {
    return "-".concat(v3.toLowerCase());
  });
};
var generatePrefixStyle = function generatePrefixStyle2(name, value2) {
  if (IN_COMPATIBLE_PROPERTY.indexOf(name) === -1) {
    return _defineProperty$22({}, name, value2);
  }
  var isTransition = name === "transition";
  var camelName = name.replace(/(\w)/, function(v3) {
    return v3.toUpperCase();
  });
  var styleVal = value2;
  return PREFIX_LIST.reduce(function(result, property2, i) {
    if (isTransition) {
      styleVal = value2.replace(/(transform|transform-origin)/gim, "".concat(IN_LINE_PREFIX_LIST[i], "$1"));
    }
    return _objectSpread$22({}, result, _defineProperty$22({}, property2 + camelName, styleVal));
  }, {});
};
var mapObject = function mapObject2(fn, obj) {
  return Object.keys(obj).reduce(function(res, key) {
    return _objectSpread$22({}, res, _defineProperty$22({}, key, fn(key, obj[key])));
  }, {});
};
var translateStyle = function translateStyle2(style) {
  return Object.keys(style).reduce(function(res, key) {
    return _objectSpread$22({}, res, generatePrefixStyle(key, res[key]));
  }, style);
};
var getTransitionVal = function getTransitionVal2(props, duration, easing) {
  return props.map(function(prop) {
    return "".concat(getDashCase(prop), " ").concat(duration, "ms ").concat(easing);
  }).join(",");
};
function _slicedToArray2(arr, i) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit2(arr, i) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit2(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray$12(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$12(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var ACCURACY = 1e-4;
var cubicBezierFactor = function cubicBezierFactor2(c1, c22) {
  return [0, 3 * c1, 3 * c22 - 6 * c1, 3 * c1 - 3 * c22 + 1];
};
var multyTime = function multyTime2(params, t4) {
  return params.map(function(param, i) {
    return param * Math.pow(t4, i);
  }).reduce(function(pre, curr) {
    return pre + curr;
  });
};
var cubicBezier = function cubicBezier2(c1, c22) {
  return function(t4) {
    var params = cubicBezierFactor(c1, c22);
    return multyTime(params, t4);
  };
};
var derivativeCubicBezier = function derivativeCubicBezier2(c1, c22) {
  return function(t4) {
    var params = cubicBezierFactor(c1, c22);
    var newParams = _toConsumableArray2(params.map(function(param, i) {
      return param * i;
    }).slice(1)).concat([0]);
    return multyTime(newParams, t4);
  };
};
var configBezier = function configBezier2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var x14 = args[0], y14 = args[1], x22 = args[2], y22 = args[3];
  if (args.length === 1) {
    switch (args[0]) {
      case "linear":
        x14 = 0;
        y14 = 0;
        x22 = 1;
        y22 = 1;
        break;
      case "ease":
        x14 = 0.25;
        y14 = 0.1;
        x22 = 0.25;
        y22 = 1;
        break;
      case "ease-in":
        x14 = 0.42;
        y14 = 0;
        x22 = 1;
        y22 = 1;
        break;
      case "ease-out":
        x14 = 0.42;
        y14 = 0;
        x22 = 0.58;
        y22 = 1;
        break;
      case "ease-in-out":
        x14 = 0;
        y14 = 0;
        x22 = 0.58;
        y22 = 1;
        break;
      default: {
        var easing = args[0].split("(");
        if (easing[0] === "cubic-bezier" && easing[1].split(")")[0].split(",").length === 4) {
          var _easing$1$split$0$spl = easing[1].split(")")[0].split(",").map(function(x5) {
            return parseFloat(x5);
          });
          var _easing$1$split$0$spl2 = _slicedToArray2(_easing$1$split$0$spl, 4);
          x14 = _easing$1$split$0$spl2[0];
          y14 = _easing$1$split$0$spl2[1];
          x22 = _easing$1$split$0$spl2[2];
          y22 = _easing$1$split$0$spl2[3];
        }
      }
    }
  }
  var curveX = cubicBezier(x14, x22);
  var curveY = cubicBezier(y14, y22);
  var derCurveX = derivativeCubicBezier(x14, x22);
  var rangeValue = function rangeValue2(value2) {
    if (value2 > 1) {
      return 1;
    } else if (value2 < 0) {
      return 0;
    }
    return value2;
  };
  var bezier = function bezier2(_t) {
    var t4 = _t > 1 ? 1 : _t;
    var x5 = t4;
    for (var i = 0; i < 8; ++i) {
      var evalT = curveX(x5) - t4;
      var derVal = derCurveX(x5);
      if (Math.abs(evalT - t4) < ACCURACY || derVal < ACCURACY) {
        return curveY(x5);
      }
      x5 = rangeValue(x5 - evalT / derVal);
    }
    return curveY(x5);
  };
  bezier.isStepper = false;
  return bezier;
};
var configSpring = function configSpring2() {
  var config4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _config$stiff = config4.stiff, stiff = _config$stiff === void 0 ? 100 : _config$stiff, _config$damping = config4.damping, damping = _config$damping === void 0 ? 8 : _config$damping, _config$dt = config4.dt, dt = _config$dt === void 0 ? 17 : _config$dt;
  var stepper = function stepper2(currX, destX, currV) {
    var FSpring = -(currX - destX) * stiff;
    var FDamping = currV * damping;
    var newV = currV + (FSpring - FDamping) * dt / 1e3;
    var newX = currV * dt / 1e3 + currX;
    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {
      return [destX, 0];
    }
    return [newX, newV];
  };
  stepper.isStepper = true;
  stepper.dt = dt;
  return stepper;
};
var configEasing = function configEasing2() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  var easing = args[0];
  if (typeof easing === "string") {
    switch (easing) {
      case "ease":
      case "ease-in-out":
      case "ease-out":
      case "ease-in":
      case "linear":
        return configBezier(easing);
      case "spring":
        return configSpring();
      default:
        if (easing.split("(")[0] === "cubic-bezier") {
          return configBezier(easing);
        }
    }
  }
  if (typeof easing === "function") {
    return easing;
  }
  return null;
};
function baseFilter(collection, predicate) {
  var result = [];
  _baseEach(collection, function(value2, index4, collection2) {
    if (predicate(value2, index4, collection2)) {
      result.push(value2);
    }
  });
  return result;
}
var _baseFilter = baseFilter;
function filter(collection, predicate) {
  var func = isArray_1(collection) ? _arrayFilter : _baseFilter;
  return func(collection, _baseIteratee(predicate));
}
var filter_1 = filter;
function _toConsumableArray$12(arr) {
  return _arrayWithoutHoles$12(arr) || _iterableToArray$22(arr) || _nonIterableSpread$12();
}
function _nonIterableSpread$12() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$22(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$12(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _objectSpread$32(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$32(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$32(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _slicedToArray$1(arr, i) {
  return _arrayWithHoles$2(arr) || _iterableToArrayLimit$1(arr, i) || _nonIterableRest$2();
}
function _nonIterableRest$2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit$1(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$2(arr) {
  if (Array.isArray(arr))
    return arr;
}
var alpha = function alpha2(begin, end, k6) {
  return begin + (end - begin) * k6;
};
var needContinue = function needContinue2(_ref) {
  var from = _ref.from, to2 = _ref.to;
  return from !== to2;
};
var calStepperVals = function calStepperVals2(easing, preVals, steps) {
  var nextStepVals = mapObject(function(key, val) {
    if (needContinue(val)) {
      var _easing = easing(val.from, val.to, val.velocity), _easing2 = _slicedToArray$1(_easing, 2), newX = _easing2[0], newV = _easing2[1];
      return _objectSpread$32({}, val, {
        from: newX,
        velocity: newV
      });
    }
    return val;
  }, preVals);
  if (steps < 1) {
    return mapObject(function(key, val) {
      if (needContinue(val)) {
        return _objectSpread$32({}, val, {
          velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),
          from: alpha(val.from, nextStepVals[key].from, steps)
        });
      }
      return val;
    }, preVals);
  }
  return calStepperVals2(easing, nextStepVals, steps - 1);
};
var configUpdate = function(from, to2, easing, duration, render2) {
  var interKeys = getIntersectionKeys(from, to2);
  var timingStyle = interKeys.reduce(function(res, key) {
    return _objectSpread$32({}, res, _defineProperty$32({}, key, [from[key], to2[key]]));
  }, {});
  var stepperStyle = interKeys.reduce(function(res, key) {
    return _objectSpread$32({}, res, _defineProperty$32({}, key, {
      from: from[key],
      velocity: 0,
      to: to2[key]
    }));
  }, {});
  var cafId = -1;
  var preTime;
  var beginTime;
  var update = function update2() {
    return null;
  };
  var getCurrStyle = function getCurrStyle2() {
    return mapObject(function(key, val) {
      return val.from;
    }, stepperStyle);
  };
  var shouldStopAnimation = function shouldStopAnimation2() {
    return !filter_1(stepperStyle, needContinue).length;
  };
  var stepperUpdate = function stepperUpdate2(now5) {
    if (!preTime) {
      preTime = now5;
    }
    var deltaTime = now5 - preTime;
    var steps = deltaTime / easing.dt;
    stepperStyle = calStepperVals(easing, stepperStyle, steps);
    render2(_objectSpread$32({}, from, to2, getCurrStyle()));
    preTime = now5;
    if (!shouldStopAnimation()) {
      cafId = raf_1(update);
    }
  };
  var timingUpdate = function timingUpdate2(now5) {
    if (!beginTime) {
      beginTime = now5;
    }
    var t4 = (now5 - beginTime) / duration;
    var currStyle = mapObject(function(key, val) {
      return alpha.apply(void 0, _toConsumableArray$12(val).concat([easing(t4)]));
    }, timingStyle);
    render2(_objectSpread$32({}, from, to2, currStyle));
    if (t4 < 1) {
      cafId = raf_1(update);
    } else {
      var finalStyle = mapObject(function(key, val) {
        return alpha.apply(void 0, _toConsumableArray$12(val).concat([easing(1)]));
      }, timingStyle);
      render2(_objectSpread$32({}, from, to2, finalStyle));
    }
  };
  update = easing.isStepper ? stepperUpdate : timingUpdate;
  return function() {
    raf_1(update);
    return function() {
      cancel(cafId);
    };
  };
};
function _typeof$5(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$5 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$5 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$5(obj);
}
function _objectWithoutProperties$32(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$32(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$32(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _toConsumableArray$22(arr) {
  return _arrayWithoutHoles$22(arr) || _iterableToArray$32(arr) || _nonIterableSpread$22();
}
function _nonIterableSpread$22() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$32(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$22(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _objectSpread$42(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys3 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys3 = ownKeys3.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys3.forEach(function(key) {
      _defineProperty$42(target, key, source[key]);
    });
  }
  return target;
}
function _defineProperty$42(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$32(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$32(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$32(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$32(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$32(Constructor, staticProps);
  return Constructor;
}
function _possibleConstructorReturn$32(self2, call2) {
  if (call2 && (_typeof$5(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$32(self2);
}
function _getPrototypeOf$3(o) {
  _getPrototypeOf$3 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$3(o);
}
function _inherits$32(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$3(subClass, superClass);
}
function _setPrototypeOf$3(o, p3) {
  _setPrototypeOf$3 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$3(o, p3);
}
function _assertThisInitialized$32(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
var Animate = /* @__PURE__ */ function(_PureComponent) {
  _inherits$32(Animate2, _PureComponent);
  function Animate2(props, context) {
    var _this;
    _classCallCheck$32(this, Animate2);
    _this = _possibleConstructorReturn$32(this, _getPrototypeOf$3(Animate2).call(this, props, context));
    var _this$props = _this.props, isActive = _this$props.isActive, attributeName = _this$props.attributeName, from = _this$props.from, to2 = _this$props.to, steps = _this$props.steps, children2 = _this$props.children;
    _this.handleStyleChange = _this.handleStyleChange.bind(_assertThisInitialized$32(_assertThisInitialized$32(_this)));
    _this.changeStyle = _this.changeStyle.bind(_assertThisInitialized$32(_assertThisInitialized$32(_this)));
    if (!isActive) {
      _this.state = {
        style: {}
      };
      if (typeof children2 === "function") {
        _this.state = {
          style: to2
        };
      }
      return _possibleConstructorReturn$32(_this);
    }
    if (steps && steps.length) {
      _this.state = {
        style: steps[0].style
      };
    } else if (from) {
      if (typeof children2 === "function") {
        _this.state = {
          style: from
        };
        return _possibleConstructorReturn$32(_this);
      }
      _this.state = {
        style: attributeName ? _defineProperty$42({}, attributeName, from) : from
      };
    } else {
      _this.state = {
        style: {}
      };
    }
    return _this;
  }
  _createClass$32(Animate2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props2 = this.props, isActive = _this$props2.isActive, canBegin = _this$props2.canBegin;
      this.mounted = true;
      if (!isActive || !canBegin) {
        return;
      }
      this.runAnimation(this.props);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props3 = this.props, isActive = _this$props3.isActive, canBegin = _this$props3.canBegin, attributeName = _this$props3.attributeName, shouldReAnimate = _this$props3.shouldReAnimate;
      if (!canBegin) {
        return;
      }
      if (!isActive) {
        var newState = {
          style: attributeName ? _defineProperty$42({}, attributeName, this.props.to) : this.props.to
        };
        if (this.state && this.state.style) {
          if (attributeName && this.state.style[attributeName] !== this.props.to || !attributeName && this.state.style !== this.props.to) {
            this.setState(newState);
          }
        }
        return;
      }
      if (isEqual_1(prevProps.to, this.props.to) && prevProps.canBegin && prevProps.isActive) {
        return;
      }
      var isTriggered = !prevProps.canBegin || !prevProps.isActive;
      if (this.manager) {
        this.manager.stop();
      }
      if (this.stopJSAnimation) {
        this.stopJSAnimation();
      }
      var from = isTriggered || shouldReAnimate ? this.props.from : prevProps.to;
      if (this.state && this.state.style) {
        var _newState = {
          style: attributeName ? _defineProperty$42({}, attributeName, from) : from
        };
        if (attributeName && this.state.style[attributeName] !== from || !attributeName && this.state.style !== from) {
          this.setState(_newState);
        }
      }
      this.runAnimation(_objectSpread$42({}, this.props, {
        from,
        begin: 0
      }));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      if (this.unSubscribe) {
        this.unSubscribe();
      }
      if (this.manager) {
        this.manager.stop();
        this.manager = null;
      }
      if (this.stopJSAnimation) {
        this.stopJSAnimation();
      }
    }
  }, {
    key: "runJSAnimation",
    value: function runJSAnimation(props) {
      var _this2 = this;
      var from = props.from, to2 = props.to, duration = props.duration, easing = props.easing, begin = props.begin, onAnimationEnd2 = props.onAnimationEnd, onAnimationStart2 = props.onAnimationStart;
      var startAnimation = configUpdate(from, to2, configEasing(easing), duration, this.changeStyle);
      var finalStartAnimation = function finalStartAnimation2() {
        _this2.stopJSAnimation = startAnimation();
      };
      this.manager.start([onAnimationStart2, begin, finalStartAnimation, duration, onAnimationEnd2]);
    }
  }, {
    key: "runStepAnimation",
    value: function runStepAnimation(props) {
      var _this3 = this;
      var steps = props.steps, begin = props.begin, onAnimationStart2 = props.onAnimationStart;
      var _steps$ = steps[0], initialStyle = _steps$.style, _steps$$duration = _steps$.duration, initialTime = _steps$$duration === void 0 ? 0 : _steps$$duration;
      var addStyle = function addStyle2(sequence2, nextItem, index4) {
        if (index4 === 0) {
          return sequence2;
        }
        var duration = nextItem.duration, _nextItem$easing = nextItem.easing, easing = _nextItem$easing === void 0 ? "ease" : _nextItem$easing, style = nextItem.style, nextProperties = nextItem.properties, onAnimationEnd2 = nextItem.onAnimationEnd;
        var preItem = index4 > 0 ? steps[index4 - 1] : nextItem;
        var properties = nextProperties || Object.keys(style);
        if (typeof easing === "function" || easing === "spring") {
          return _toConsumableArray$22(sequence2).concat([_this3.runJSAnimation.bind(_this3, {
            from: preItem.style,
            to: style,
            duration,
            easing
          }), duration]);
        }
        var transition2 = getTransitionVal(properties, duration, easing);
        var newStyle = _objectSpread$42({}, preItem.style, style, {
          transition: transition2
        });
        return _toConsumableArray$22(sequence2).concat([newStyle, duration, onAnimationEnd2]).filter(identity7);
      };
      return this.manager.start([onAnimationStart2].concat(_toConsumableArray$22(steps.reduce(addStyle, [initialStyle, Math.max(initialTime, begin)])), [props.onAnimationEnd]));
    }
  }, {
    key: "runAnimation",
    value: function runAnimation(props) {
      if (!this.manager) {
        this.manager = createAnimateManager();
      }
      var begin = props.begin, duration = props.duration, attributeName = props.attributeName, propsTo = props.to, easing = props.easing, onAnimationStart2 = props.onAnimationStart, onAnimationEnd2 = props.onAnimationEnd, steps = props.steps, children2 = props.children;
      var manager = this.manager;
      this.unSubscribe = manager.subscribe(this.handleStyleChange);
      if (typeof easing === "function" || typeof children2 === "function" || easing === "spring") {
        this.runJSAnimation(props);
        return;
      }
      if (steps.length > 1) {
        this.runStepAnimation(props);
        return;
      }
      var to2 = attributeName ? _defineProperty$42({}, attributeName, propsTo) : propsTo;
      var transition2 = getTransitionVal(Object.keys(to2), duration, easing);
      manager.start([onAnimationStart2, begin, _objectSpread$42({}, to2, {
        transition: transition2
      }), duration, onAnimationEnd2]);
    }
  }, {
    key: "handleStyleChange",
    value: function handleStyleChange(style) {
      this.changeStyle(style);
    }
  }, {
    key: "changeStyle",
    value: function changeStyle(style) {
      if (this.mounted) {
        this.setState({
          style
        });
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props4 = this.props, children2 = _this$props4.children;
      _this$props4.begin;
      _this$props4.duration;
      _this$props4.attributeName;
      _this$props4.easing;
      var isActive = _this$props4.isActive;
      _this$props4.steps;
      _this$props4.from;
      _this$props4.to;
      _this$props4.canBegin;
      _this$props4.onAnimationEnd;
      _this$props4.shouldReAnimate;
      _this$props4.onAnimationReStart;
      var others = _objectWithoutProperties$32(_this$props4, ["children", "begin", "duration", "attributeName", "easing", "isActive", "steps", "from", "to", "canBegin", "onAnimationEnd", "shouldReAnimate", "onAnimationReStart"]);
      var count2 = react.Children.count(children2);
      var stateStyle = translateStyle(this.state.style);
      if (typeof children2 === "function") {
        return children2(stateStyle);
      }
      if (!isActive || count2 === 0) {
        return children2;
      }
      var cloneContainer = function cloneContainer2(container) {
        var _container$props = container.props, _container$props$styl = _container$props.style, style = _container$props$styl === void 0 ? {} : _container$props$styl, className = _container$props.className;
        var res = react.cloneElement(container, _objectSpread$42({}, others, {
          style: _objectSpread$42({}, style, stateStyle),
          className
        }));
        return res;
      };
      if (count2 === 1) {
        return cloneContainer(react.Children.only(children2));
      }
      return react.createElement("div", null, react.Children.map(children2, function(child) {
        return cloneContainer(child);
      }));
    }
  }]);
  return Animate2;
}(react.PureComponent);
Animate.displayName = "Animate";
Animate.propTypes = {
  from: propTypes.oneOfType([propTypes.object, propTypes.string]),
  to: propTypes.oneOfType([propTypes.object, propTypes.string]),
  attributeName: propTypes.string,
  duration: propTypes.number,
  begin: propTypes.number,
  easing: propTypes.oneOfType([propTypes.string, propTypes.func]),
  steps: propTypes.arrayOf(propTypes.shape({
    duration: propTypes.number.isRequired,
    style: propTypes.object.isRequired,
    easing: propTypes.oneOfType([propTypes.oneOf(["ease", "ease-in", "ease-out", "ease-in-out", "linear"]), propTypes.func]),
    properties: propTypes.arrayOf("string"),
    onAnimationEnd: propTypes.func
  })),
  children: propTypes.oneOfType([propTypes.node, propTypes.func]),
  isActive: propTypes.bool,
  canBegin: propTypes.bool,
  onAnimationEnd: propTypes.func,
  shouldReAnimate: propTypes.bool,
  onAnimationStart: propTypes.func,
  onAnimationReStart: propTypes.func
};
Animate.defaultProps = {
  begin: 0,
  duration: 1e3,
  from: "",
  to: "",
  attributeName: "",
  easing: "ease",
  isActive: true,
  canBegin: true,
  steps: [],
  onAnimationEnd: function onAnimationEnd() {
  },
  onAnimationStart: function onAnimationStart() {
  }
};
({
  appearOptions: propTypes.object,
  enterOptions: propTypes.object,
  leaveOptions: propTypes.object,
  children: propTypes.element
});
({
  appear: propTypes.object,
  enter: propTypes.object,
  leave: propTypes.object,
  children: propTypes.oneOfType([propTypes.array, propTypes.element]),
  component: propTypes.any
});
var sortBy = _baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && _isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && _isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return _baseOrderBy(collection, _baseFlatten(iteratees, 1), []);
});
var sortBy_1 = sortBy;
function _typeof$6(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$6 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$6 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$6(obj);
}
function _slicedToArray$2(arr, i) {
  return _arrayWithHoles$3(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest$3();
}
function _nonIterableRest$3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit$2(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$3(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$2(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$52(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$2(Object(source), true).forEach(function(key) {
        _defineProperty$52(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$52(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$42(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$42(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$42(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$42(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$42(Constructor, staticProps);
  return Constructor;
}
function _inherits$42(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$4(subClass, superClass);
}
function _setPrototypeOf$4(o, p3) {
  _setPrototypeOf$4 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$4(o, p3);
}
function _createSuper$3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$4(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$4(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$42(this, result);
  };
}
function _possibleConstructorReturn$42(self2, call2) {
  if (call2 && (_typeof$6(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$42(self2);
}
function _assertThisInitialized$42(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$3() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$4(o) {
  _getPrototypeOf$4 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$4(o);
}
function defaultFormatter(value2) {
  return isArray_1(value2) && isNumOrStr(value2[0]) && isNumOrStr(value2[1]) ? value2.join(" ~ ") : value2;
}
var DefaultTooltipContent = /* @__PURE__ */ function(_PureComponent) {
  _inherits$42(DefaultTooltipContent2, _PureComponent);
  var _super = _createSuper$3(DefaultTooltipContent2);
  function DefaultTooltipContent2() {
    _classCallCheck$42(this, DefaultTooltipContent2);
    return _super.apply(this, arguments);
  }
  _createClass$42(DefaultTooltipContent2, [{
    key: "renderContent",
    value: function renderContent2() {
      var _this$props = this.props, payload = _this$props.payload, separator = _this$props.separator, formatter = _this$props.formatter, itemStyle = _this$props.itemStyle, itemSorter = _this$props.itemSorter;
      if (payload && payload.length) {
        var listStyle = {
          padding: 0,
          margin: 0
        };
        var items = (itemSorter ? sortBy_1(payload, itemSorter) : payload).map(function(entry, i) {
          if (entry.type === "none") {
            return null;
          }
          var finalItemStyle = _objectSpread$52({
            display: "block",
            paddingTop: 4,
            paddingBottom: 4,
            color: entry.color || "#000"
          }, itemStyle);
          var finalFormatter = entry.formatter || formatter || defaultFormatter;
          var name = entry.name, value2 = entry.value;
          if (finalFormatter) {
            var formatted = finalFormatter(value2, name, entry, i, payload);
            if (Array.isArray(formatted)) {
              var _formatted = _slicedToArray$2(formatted, 2);
              value2 = _formatted[0];
              name = _formatted[1];
            } else {
              value2 = formatted;
            }
          }
          return /* @__PURE__ */ react.createElement("li", {
            className: "recharts-tooltip-item",
            key: "tooltip-item-".concat(i),
            style: finalItemStyle
          }, isNumOrStr(name) ? /* @__PURE__ */ react.createElement("span", {
            className: "recharts-tooltip-item-name"
          }, name) : null, isNumOrStr(name) ? /* @__PURE__ */ react.createElement("span", {
            className: "recharts-tooltip-item-separator"
          }, separator) : null, /* @__PURE__ */ react.createElement("span", {
            className: "recharts-tooltip-item-value"
          }, value2), /* @__PURE__ */ react.createElement("span", {
            className: "recharts-tooltip-item-unit"
          }, entry.unit || ""));
        });
        return /* @__PURE__ */ react.createElement("ul", {
          className: "recharts-tooltip-item-list",
          style: listStyle
        }, items);
      }
      return null;
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props2 = this.props, wrapperClassName = _this$props2.wrapperClassName, contentStyle = _this$props2.contentStyle, labelClassName = _this$props2.labelClassName, labelStyle = _this$props2.labelStyle, label = _this$props2.label, labelFormatter = _this$props2.labelFormatter, payload = _this$props2.payload;
      var finalStyle = _objectSpread$52({
        margin: 0,
        padding: 10,
        backgroundColor: "#fff",
        border: "1px solid #ccc",
        whiteSpace: "nowrap"
      }, contentStyle);
      var finalLabelStyle = _objectSpread$52({
        margin: 0
      }, labelStyle);
      var hasLabel = !isNil_1(label);
      var finalLabel = hasLabel ? label : "";
      var wrapperCN = classnames("recharts-default-tooltip", wrapperClassName);
      var labelCN = classnames("recharts-tooltip-label", labelClassName);
      if (hasLabel && labelFormatter) {
        finalLabel = labelFormatter(label, payload);
      }
      return /* @__PURE__ */ react.createElement("div", {
        className: wrapperCN,
        style: finalStyle
      }, /* @__PURE__ */ react.createElement("p", {
        className: labelCN,
        style: finalLabelStyle
      }, /* @__PURE__ */ react.isValidElement(finalLabel) ? finalLabel : "".concat(finalLabel)), this.renderContent());
    }
  }]);
  return DefaultTooltipContent2;
}(react.PureComponent);
DefaultTooltipContent.displayName = "DefaultTooltipContent";
DefaultTooltipContent.defaultProps = {
  separator: " : ",
  contentStyle: {},
  itemStyle: {},
  labelStyle: {}
};
var parseIsSsrByDefault = function parseIsSsrByDefault2() {
  return !(typeof window !== "undefined" && window.document && window.document.createElement && window.setTimeout);
};
var Global = {
  isSsr: parseIsSsrByDefault(),
  get: function get3(key) {
    return Global[key];
  },
  set: function set2(key, value2) {
    if (typeof key === "string") {
      Global[key] = value2;
    } else {
      var keys4 = Object.keys(key);
      if (keys4 && keys4.length) {
        keys4.forEach(function(k6) {
          Global[k6] = key[k6];
        });
      }
    }
  }
};
function _typeof$7(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$7 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$7 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$7(obj);
}
function ownKeys$3(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$62(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$3(Object(source), true).forEach(function(key) {
        _defineProperty$62(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$3(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$62(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$52(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$52(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$52(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$52(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$52(Constructor, staticProps);
  return Constructor;
}
function _inherits$52(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$5(subClass, superClass);
}
function _setPrototypeOf$5(o, p3) {
  _setPrototypeOf$5 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$5(o, p3);
}
function _createSuper$4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$5(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$5(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$52(this, result);
  };
}
function _possibleConstructorReturn$52(self2, call2) {
  if (call2 && (_typeof$7(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$52(self2);
}
function _assertThisInitialized$52(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$4() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$5(o) {
  _getPrototypeOf$5 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$5(o);
}
var CLS_PREFIX = "recharts-tooltip-wrapper";
var EPS$1 = 1;
function defaultUniqBy$1(entry) {
  return entry.dataKey;
}
function getUniqPayload$1(option, payload) {
  if (option === true) {
    return uniqBy_1(payload, defaultUniqBy$1);
  }
  if (isFunction_1(option)) {
    return uniqBy_1(payload, option);
  }
  return payload;
}
function renderContent$1(content, props) {
  if (/* @__PURE__ */ react.isValidElement(content)) {
    return /* @__PURE__ */ react.cloneElement(content, props);
  }
  if (isFunction_1(content)) {
    return /* @__PURE__ */ react.createElement(content, props);
  }
  return /* @__PURE__ */ react.createElement(DefaultTooltipContent, props);
}
var Tooltip = /* @__PURE__ */ function(_PureComponent) {
  _inherits$52(Tooltip4, _PureComponent);
  var _super = _createSuper$4(Tooltip4);
  function Tooltip4() {
    var _this;
    _classCallCheck$52(this, Tooltip4);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      boxWidth: -1,
      boxHeight: -1
    };
    _this.wrapperNode = void 0;
    _this.getTranslate = function(_ref) {
      var key = _ref.key, tooltipDimension = _ref.tooltipDimension, viewBoxDimension = _ref.viewBoxDimension;
      var _this$props = _this.props, allowEscapeViewBox = _this$props.allowEscapeViewBox, coordinate = _this$props.coordinate, offset = _this$props.offset, position = _this$props.position, viewBox = _this$props.viewBox;
      if (position && isNumber$1(position[key])) {
        return position[key];
      }
      var restricted = coordinate[key] - tooltipDimension - offset;
      var unrestricted = coordinate[key] + offset;
      if (allowEscapeViewBox[key]) {
        return unrestricted;
      }
      var tooltipBoundary = coordinate[key] + tooltipDimension + offset;
      var viewBoxBoundary = viewBox[key] + viewBoxDimension;
      if (tooltipBoundary > viewBoxBoundary) {
        return Math.max(restricted, viewBox[key]);
      }
      return Math.max(unrestricted, viewBox[key]);
    };
    return _this;
  }
  _createClass$52(Tooltip4, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateBBox();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateBBox();
    }
  }, {
    key: "updateBBox",
    value: function updateBBox() {
      var _this$state = this.state, boxWidth = _this$state.boxWidth, boxHeight = _this$state.boxHeight;
      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
        var box = this.wrapperNode.getBoundingClientRect();
        if (Math.abs(box.width - boxWidth) > EPS$1 || Math.abs(box.height - boxHeight) > EPS$1) {
          this.setState({
            boxWidth: box.width,
            boxHeight: box.height
          });
        }
      } else if (boxWidth !== -1 || boxHeight !== -1) {
        this.setState({
          boxWidth: -1,
          boxHeight: -1
        });
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _classNames, _this2 = this;
      var _this$props2 = this.props, payload = _this$props2.payload, isAnimationActive = _this$props2.isAnimationActive, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, filterNull = _this$props2.filterNull, payloadUniqBy = _this$props2.payloadUniqBy;
      var finalPayload = getUniqPayload$1(payloadUniqBy, filterNull && payload && payload.length ? payload.filter(function(entry) {
        return !isNil_1(entry.value);
      }) : payload);
      var hasPayload = finalPayload && finalPayload.length;
      var _this$props3 = this.props, content = _this$props3.content, viewBox = _this$props3.viewBox, coordinate = _this$props3.coordinate, position = _this$props3.position, active = _this$props3.active, wrapperStyle = _this$props3.wrapperStyle;
      var outerStyle = _objectSpread$62({
        pointerEvents: "none",
        visibility: active && hasPayload ? "visible" : "hidden",
        position: "absolute",
        top: 0,
        left: 0
      }, wrapperStyle);
      var translateX2, translateY2;
      if (position && isNumber$1(position.x) && isNumber$1(position.y)) {
        translateX2 = position.x;
        translateY2 = position.y;
      } else {
        var _this$state2 = this.state, boxWidth = _this$state2.boxWidth, boxHeight = _this$state2.boxHeight;
        if (boxWidth > 0 && boxHeight > 0 && coordinate) {
          translateX2 = this.getTranslate({
            key: "x",
            tooltipDimension: boxWidth,
            viewBoxDimension: viewBox.width
          });
          translateY2 = this.getTranslate({
            key: "y",
            tooltipDimension: boxHeight,
            viewBoxDimension: viewBox.height
          });
        } else {
          outerStyle.visibility = "hidden";
        }
      }
      outerStyle = _objectSpread$62(_objectSpread$62({}, translateStyle({
        transform: this.props.useTranslate3d ? "translate3d(".concat(translateX2, "px, ").concat(translateY2, "px, 0)") : "translate(".concat(translateX2, "px, ").concat(translateY2, "px)")
      })), outerStyle);
      if (isAnimationActive && active) {
        outerStyle = _objectSpread$62(_objectSpread$62({}, translateStyle({
          transition: "transform ".concat(animationDuration, "ms ").concat(animationEasing)
        })), outerStyle);
      }
      var cls = classnames(CLS_PREFIX, (_classNames = {}, _defineProperty$62(_classNames, "".concat(CLS_PREFIX, "-right"), isNumber$1(translateX2) && coordinate && isNumber$1(coordinate.x) && translateX2 >= coordinate.x), _defineProperty$62(_classNames, "".concat(CLS_PREFIX, "-left"), isNumber$1(translateX2) && coordinate && isNumber$1(coordinate.x) && translateX2 < coordinate.x), _defineProperty$62(_classNames, "".concat(CLS_PREFIX, "-bottom"), isNumber$1(translateY2) && coordinate && isNumber$1(coordinate.y) && translateY2 >= coordinate.y), _defineProperty$62(_classNames, "".concat(CLS_PREFIX, "-top"), isNumber$1(translateY2) && coordinate && isNumber$1(coordinate.y) && translateY2 < coordinate.y), _classNames));
      return /* @__PURE__ */ react.createElement("div", {
        className: cls,
        style: outerStyle,
        ref: function ref(node) {
          _this2.wrapperNode = node;
        }
      }, renderContent$1(content, _objectSpread$62(_objectSpread$62({}, this.props), {}, {
        payload: finalPayload
      })));
    }
  }]);
  return Tooltip4;
}(react.PureComponent);
Tooltip.displayName = "Tooltip";
Tooltip.defaultProps = {
  active: false,
  allowEscapeViewBox: {
    x: false,
    y: false
  },
  offset: 10,
  viewBox: {
    x1: 0,
    x2: 0,
    y1: 0,
    y2: 0
  },
  coordinate: {
    x: 0,
    y: 0
  },
  cursorStyle: {},
  separator: " : ",
  wrapperStyle: {},
  contentStyle: {},
  itemStyle: {},
  labelStyle: {},
  cursor: true,
  trigger: "hover",
  isAnimationActive: !Global.isSsr,
  animationEasing: "ease",
  animationDuration: 400,
  filterNull: true,
  useTranslate3d: false
};
var warn = function warn2(condition, format6) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
};
var openParentheses = "(".charCodeAt(0);
var closeParentheses = ")".charCodeAt(0);
var singleQuote = "'".charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = "\\".charCodeAt(0);
var slash = "/".charCodeAt(0);
var comma = ",".charCodeAt(0);
var colon = ":".charCodeAt(0);
var star2 = "*".charCodeAt(0);
var parse = function(input) {
  var tokens = [];
  var value2 = input;
  var next, quote, prev, token2, escape, escapePos, whitespacePos;
  var pos = 0;
  var code = value2.charCodeAt(pos);
  var max6 = value2.length;
  var stack3 = [{nodes: tokens}];
  var balanced2 = 0;
  var parent;
  var name = "";
  var before = "";
  var after = "";
  while (pos < max6) {
    if (code <= 32) {
      next = pos;
      do {
        next += 1;
        code = value2.charCodeAt(next);
      } while (code <= 32);
      token2 = value2.slice(pos, next);
      prev = tokens[tokens.length - 1];
      if (code === closeParentheses && balanced2) {
        after = token2;
      } else if (prev && prev.type === "div") {
        prev.after = token2;
      } else if (code === comma || code === colon || code === slash && value2.charCodeAt(next + 1) !== star2) {
        before = token2;
      } else {
        tokens.push({
          type: "space",
          sourceIndex: pos,
          value: token2
        });
      }
      pos = next;
    } else if (code === singleQuote || code === doubleQuote) {
      next = pos;
      quote = code === singleQuote ? "'" : '"';
      token2 = {
        type: "string",
        sourceIndex: pos,
        quote
      };
      do {
        escape = false;
        next = value2.indexOf(quote, next + 1);
        if (~next) {
          escapePos = next;
          while (value2.charCodeAt(escapePos - 1) === backslash) {
            escapePos -= 1;
            escape = !escape;
          }
        } else {
          value2 += quote;
          next = value2.length - 1;
          token2.unclosed = true;
        }
      } while (escape);
      token2.value = value2.slice(pos + 1, next);
      tokens.push(token2);
      pos = next + 1;
      code = value2.charCodeAt(pos);
    } else if (code === slash && value2.charCodeAt(pos + 1) === star2) {
      token2 = {
        type: "comment",
        sourceIndex: pos
      };
      next = value2.indexOf("*/", pos);
      if (next === -1) {
        token2.unclosed = true;
        next = value2.length;
      }
      token2.value = value2.slice(pos + 2, next);
      tokens.push(token2);
      pos = next + 2;
      code = value2.charCodeAt(pos);
    } else if (code === slash || code === comma || code === colon) {
      token2 = value2[pos];
      tokens.push({
        type: "div",
        sourceIndex: pos - before.length,
        value: token2,
        before,
        after: ""
      });
      before = "";
      pos += 1;
      code = value2.charCodeAt(pos);
    } else if (openParentheses === code) {
      next = pos;
      do {
        next += 1;
        code = value2.charCodeAt(next);
      } while (code <= 32);
      token2 = {
        type: "function",
        sourceIndex: pos - name.length,
        value: name,
        before: value2.slice(pos + 1, next)
      };
      pos = next;
      if (name === "url" && code !== singleQuote && code !== doubleQuote) {
        next -= 1;
        do {
          escape = false;
          next = value2.indexOf(")", next + 1);
          if (~next) {
            escapePos = next;
            while (value2.charCodeAt(escapePos - 1) === backslash) {
              escapePos -= 1;
              escape = !escape;
            }
          } else {
            value2 += ")";
            next = value2.length - 1;
            token2.unclosed = true;
          }
        } while (escape);
        whitespacePos = next;
        do {
          whitespacePos -= 1;
          code = value2.charCodeAt(whitespacePos);
        } while (code <= 32);
        if (pos !== whitespacePos + 1) {
          token2.nodes = [
            {
              type: "word",
              sourceIndex: pos,
              value: value2.slice(pos, whitespacePos + 1)
            }
          ];
        } else {
          token2.nodes = [];
        }
        if (token2.unclosed && whitespacePos + 1 !== next) {
          token2.after = "";
          token2.nodes.push({
            type: "space",
            sourceIndex: whitespacePos + 1,
            value: value2.slice(whitespacePos + 1, next)
          });
        } else {
          token2.after = value2.slice(whitespacePos + 1, next);
        }
        pos = next + 1;
        code = value2.charCodeAt(pos);
        tokens.push(token2);
      } else {
        balanced2 += 1;
        token2.after = "";
        tokens.push(token2);
        stack3.push(token2);
        tokens = token2.nodes = [];
        parent = token2;
      }
      name = "";
    } else if (closeParentheses === code && balanced2) {
      pos += 1;
      code = value2.charCodeAt(pos);
      parent.after = after;
      after = "";
      balanced2 -= 1;
      stack3.pop();
      parent = stack3[balanced2];
      tokens = parent.nodes;
    } else {
      next = pos;
      do {
        if (code === backslash) {
          next += 1;
        }
        next += 1;
        code = value2.charCodeAt(next);
      } while (next < max6 && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash || code === openParentheses || code === closeParentheses && balanced2));
      token2 = value2.slice(pos, next);
      if (openParentheses === code) {
        name = token2;
      } else {
        tokens.push({
          type: "word",
          sourceIndex: pos,
          value: token2
        });
      }
      pos = next;
    }
  }
  for (pos = stack3.length - 1; pos; pos -= 1) {
    stack3[pos].unclosed = true;
  }
  return stack3[0].nodes;
};
var walk = function walk2(nodes, cb2, bubble) {
  var i, max6, node, result;
  for (i = 0, max6 = nodes.length; i < max6; i += 1) {
    node = nodes[i];
    if (!bubble) {
      result = cb2(node, i, nodes);
    }
    if (result !== false && node.type === "function" && Array.isArray(node.nodes)) {
      walk2(node.nodes, cb2, bubble);
    }
    if (bubble) {
      cb2(node, i, nodes);
    }
  }
};
function stringifyNode(node, custom37) {
  var type3 = node.type;
  var value2 = node.value;
  var buf;
  var customResult;
  if (custom37 && (customResult = custom37(node)) !== void 0) {
    return customResult;
  } else if (type3 === "word" || type3 === "space") {
    return value2;
  } else if (type3 === "string") {
    buf = node.quote || "";
    return buf + value2 + (node.unclosed ? "" : buf);
  } else if (type3 === "comment") {
    return "/*" + value2 + (node.unclosed ? "" : "*/");
  } else if (type3 === "div") {
    return (node.before || "") + value2 + (node.after || "");
  } else if (Array.isArray(node.nodes)) {
    buf = stringify(node.nodes);
    if (type3 !== "function") {
      return buf;
    }
    return value2 + "(" + (node.before || "") + buf + (node.after || "") + (node.unclosed ? "" : ")");
  }
  return value2;
}
function stringify(nodes, custom37) {
  var result, i;
  if (Array.isArray(nodes)) {
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) {
      result = stringifyNode(nodes[i], custom37) + result;
    }
    return result;
  }
  return stringifyNode(nodes, custom37);
}
var stringify_12 = stringify;
var minus = "-".charCodeAt(0);
var plus = "+".charCodeAt(0);
var dot = ".".charCodeAt(0);
var exp3 = "e".charCodeAt(0);
var EXP = "E".charCodeAt(0);
var unit3 = function(value2) {
  var pos = 0;
  var length = value2.length;
  var dotted = false;
  var sciPos = -1;
  var containsNumber = false;
  var code;
  while (pos < length) {
    code = value2.charCodeAt(pos);
    if (code >= 48 && code <= 57) {
      containsNumber = true;
    } else if (code === exp3 || code === EXP) {
      if (sciPos > -1) {
        break;
      }
      sciPos = pos;
    } else if (code === dot) {
      if (dotted) {
        break;
      }
      dotted = true;
    } else if (code === plus || code === minus) {
      if (pos !== 0) {
        break;
      }
    } else {
      break;
    }
    pos += 1;
  }
  if (sciPos + 1 === pos)
    pos--;
  return containsNumber ? {
    number: value2.slice(0, pos),
    unit: value2.slice(pos)
  } : false;
};
function ValueParser(value2) {
  if (this instanceof ValueParser) {
    this.nodes = parse(value2);
    return this;
  }
  return new ValueParser(value2);
}
ValueParser.prototype.toString = function() {
  return Array.isArray(this.nodes) ? stringify_12(this.nodes) : "";
};
ValueParser.prototype.walk = function(cb2, bubble) {
  walk(this.nodes, cb2, bubble);
  return this;
};
ValueParser.unit = unit3;
ValueParser.walk = walk;
ValueParser.stringify = stringify_12;
var lib2 = ValueParser;
var parser_1 = createCommonjsModule(function(module, exports) {
  var parser2 = function() {
    function JisonParserError(msg, hash) {
      Object.defineProperty(this, "name", {
        enumerable: false,
        writable: false,
        value: "JisonParserError"
      });
      if (msg == null)
        msg = "???";
      Object.defineProperty(this, "message", {
        enumerable: false,
        writable: true,
        value: msg
      });
      this.hash = hash;
      var stacktrace;
      if (hash && hash.exception instanceof Error) {
        var ex2 = hash.exception;
        this.message = ex2.message || msg;
        stacktrace = ex2.stack;
      }
      if (!stacktrace) {
        if (Error.hasOwnProperty("captureStackTrace")) {
          Error.captureStackTrace(this, this.constructor);
        } else {
          stacktrace = new Error(msg).stack;
        }
      }
      if (stacktrace) {
        Object.defineProperty(this, "stack", {
          enumerable: false,
          writable: false,
          value: stacktrace
        });
      }
    }
    if (typeof Object.setPrototypeOf === "function") {
      Object.setPrototypeOf(JisonParserError.prototype, Error.prototype);
    } else {
      JisonParserError.prototype = Object.create(Error.prototype);
    }
    JisonParserError.prototype.constructor = JisonParserError;
    JisonParserError.prototype.name = "JisonParserError";
    function bp(s5) {
      var rv = [];
      var p3 = s5.pop;
      var r3 = s5.rule;
      for (var i = 0, l3 = p3.length; i < l3; i++) {
        rv.push([
          p3[i],
          r3[i]
        ]);
      }
      return rv;
    }
    function bda(s5) {
      var rv = {};
      var d2 = s5.idx;
      var g2 = s5.goto;
      for (var i = 0, l3 = d2.length; i < l3; i++) {
        var j2 = d2[i];
        rv[j2] = g2[i];
      }
      return rv;
    }
    function bt(s5) {
      var rv = [];
      var d2 = s5.len;
      var y7 = s5.symbol;
      var t4 = s5.type;
      var a3 = s5.state;
      var m3 = s5.mode;
      var g2 = s5.goto;
      for (var i = 0, l3 = d2.length; i < l3; i++) {
        var n3 = d2[i];
        var q2 = {};
        for (var j2 = 0; j2 < n3; j2++) {
          var z3 = y7.shift();
          switch (t4.shift()) {
            case 2:
              q2[z3] = [
                m3.shift(),
                g2.shift()
              ];
              break;
            case 0:
              q2[z3] = a3.shift();
              break;
            default:
              q2[z3] = [
                3
              ];
          }
        }
        rv.push(q2);
      }
      return rv;
    }
    function s4(c6, l3, a3) {
      a3 = a3 || 0;
      for (var i = 0; i < l3; i++) {
        this.push(c6);
        c6 += a3;
      }
    }
    function c5(i, l3) {
      i = this.length - i;
      for (l3 += i; i < l3; i++) {
        this.push(this[i]);
      }
    }
    function u2(a3) {
      var rv = [];
      for (var i = 0, l3 = a3.length; i < l3; i++) {
        var e3 = a3[i];
        if (typeof e3 === "function") {
          i++;
          e3.apply(rv, a3[i]);
        } else {
          rv.push(e3);
        }
      }
      return rv;
    }
    var parser3 = {
      trace: function no_op_trace() {
      },
      JisonParserError,
      yy: {},
      options: {
        type: "lalr",
        hasPartialLrUpgradeOnConflict: true,
        errorRecoveryTokenDiscardCount: 3
      },
      symbols_: {
        $accept: 0,
        $end: 1,
        ADD: 3,
        ANGLE: 16,
        CHS: 22,
        COMMA: 14,
        CSS_CPROP: 13,
        CSS_VAR: 12,
        DIV: 6,
        EMS: 20,
        EOF: 1,
        EXS: 21,
        FREQ: 18,
        LENGTH: 15,
        LPAREN: 7,
        MUL: 5,
        NESTED_CALC: 9,
        NUMBER: 11,
        PERCENTAGE: 28,
        PREFIX: 10,
        REMS: 23,
        RES: 19,
        RPAREN: 8,
        SUB: 4,
        TIME: 17,
        VHS: 24,
        VMAXS: 27,
        VMINS: 26,
        VWS: 25,
        css_value: 33,
        css_variable: 32,
        error: 2,
        expression: 29,
        math_expression: 30,
        value: 31
      },
      terminals_: {
        1: "EOF",
        2: "error",
        3: "ADD",
        4: "SUB",
        5: "MUL",
        6: "DIV",
        7: "LPAREN",
        8: "RPAREN",
        9: "NESTED_CALC",
        10: "PREFIX",
        11: "NUMBER",
        12: "CSS_VAR",
        13: "CSS_CPROP",
        14: "COMMA",
        15: "LENGTH",
        16: "ANGLE",
        17: "TIME",
        18: "FREQ",
        19: "RES",
        20: "EMS",
        21: "EXS",
        22: "CHS",
        23: "REMS",
        24: "VHS",
        25: "VWS",
        26: "VMINS",
        27: "VMAXS",
        28: "PERCENTAGE"
      },
      TERROR: 2,
      EOF: 1,
      originalQuoteName: null,
      originalParseError: null,
      cleanupAfterParse: null,
      constructParseErrorInfo: null,
      yyMergeLocationInfo: null,
      __reentrant_call_depth: 0,
      __error_infos: [],
      __error_recovery_infos: [],
      quoteName: function parser_quoteName(id_str) {
        return '"' + id_str + '"';
      },
      getSymbolName: function parser_getSymbolName(symbol2) {
        if (this.terminals_[symbol2]) {
          return this.terminals_[symbol2];
        }
        var s5 = this.symbols_;
        for (var key in s5) {
          if (s5[key] === symbol2) {
            return key;
          }
        }
        return null;
      },
      describeSymbol: function parser_describeSymbol(symbol2) {
        if (symbol2 !== this.EOF && this.terminal_descriptions_ && this.terminal_descriptions_[symbol2]) {
          return this.terminal_descriptions_[symbol2];
        } else if (symbol2 === this.EOF) {
          return "end of input";
        }
        var id3 = this.getSymbolName(symbol2);
        if (id3) {
          return this.quoteName(id3);
        }
        return null;
      },
      collect_expected_token_set: function parser_collect_expected_token_set(state, do_not_describe) {
        var TERROR = this.TERROR;
        var tokenset = [];
        var check = {};
        if (!do_not_describe && this.state_descriptions_ && this.state_descriptions_[state]) {
          return [
            this.state_descriptions_[state]
          ];
        }
        for (var p3 in this.table[state]) {
          p3 = +p3;
          if (p3 !== TERROR) {
            var d2 = do_not_describe ? p3 : this.describeSymbol(p3);
            if (d2 && !check[d2]) {
              tokenset.push(d2);
              check[d2] = true;
            }
          }
        }
        return tokenset;
      },
      productions_: bp({
        pop: u2([
          29,
          s4,
          [30, 10],
          31,
          31,
          32,
          32,
          s4,
          [33, 15]
        ]),
        rule: u2([
          2,
          s4,
          [3, 5],
          4,
          7,
          s4,
          [1, 4],
          2,
          4,
          6,
          s4,
          [1, 14],
          2
        ])
      }),
      performAction: function parser__PerformAction(yystate, yysp, yyvstack) {
        var yy = this.yy;
        yy.parser;
        yy.lexer;
        switch (yystate) {
          case 0:
            this.$ = yyvstack[yysp - 1];
            break;
          case 1:
            this.$ = yyvstack[yysp - 1];
            return yyvstack[yysp - 1];
          case 2:
          case 3:
          case 4:
          case 5:
            this.$ = {type: "MathExpression", operator: yyvstack[yysp - 1], left: yyvstack[yysp - 2], right: yyvstack[yysp]};
            break;
          case 6:
            this.$ = yyvstack[yysp - 1];
            break;
          case 7:
            this.$ = {type: "Calc", value: yyvstack[yysp - 1]};
            break;
          case 8:
            this.$ = {type: "Calc", value: yyvstack[yysp - 1], prefix: yyvstack[yysp - 5]};
            break;
          case 9:
          case 10:
          case 11:
            this.$ = yyvstack[yysp];
            break;
          case 12:
            this.$ = {type: "Value", value: parseFloat(yyvstack[yysp])};
            break;
          case 13:
            this.$ = {type: "Value", value: parseFloat(yyvstack[yysp]) * -1};
            break;
          case 14:
            this.$ = {type: "CssVariable", value: yyvstack[yysp - 1]};
            break;
          case 15:
            this.$ = {type: "CssVariable", value: yyvstack[yysp - 3], fallback: yyvstack[yysp - 1]};
            break;
          case 16:
            this.$ = {type: "LengthValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+/.exec(yyvstack[yysp])[0]};
            break;
          case 17:
            this.$ = {type: "AngleValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+/.exec(yyvstack[yysp])[0]};
            break;
          case 18:
            this.$ = {type: "TimeValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+/.exec(yyvstack[yysp])[0]};
            break;
          case 19:
            this.$ = {type: "FrequencyValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+/.exec(yyvstack[yysp])[0]};
            break;
          case 20:
            this.$ = {type: "ResolutionValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+/.exec(yyvstack[yysp])[0]};
            break;
          case 21:
            this.$ = {type: "EmValue", value: parseFloat(yyvstack[yysp]), unit: "em"};
            break;
          case 22:
            this.$ = {type: "ExValue", value: parseFloat(yyvstack[yysp]), unit: "ex"};
            break;
          case 23:
            this.$ = {type: "ChValue", value: parseFloat(yyvstack[yysp]), unit: "ch"};
            break;
          case 24:
            this.$ = {type: "RemValue", value: parseFloat(yyvstack[yysp]), unit: "rem"};
            break;
          case 25:
            this.$ = {type: "VhValue", value: parseFloat(yyvstack[yysp]), unit: "vh"};
            break;
          case 26:
            this.$ = {type: "VwValue", value: parseFloat(yyvstack[yysp]), unit: "vw"};
            break;
          case 27:
            this.$ = {type: "VminValue", value: parseFloat(yyvstack[yysp]), unit: "vmin"};
            break;
          case 28:
            this.$ = {type: "VmaxValue", value: parseFloat(yyvstack[yysp]), unit: "vmax"};
            break;
          case 29:
            this.$ = {type: "PercentageValue", value: parseFloat(yyvstack[yysp]), unit: "%"};
            break;
          case 30:
            var prev = yyvstack[yysp];
            prev.value *= -1;
            this.$ = prev;
            break;
        }
      },
      table: bt({
        len: u2([
          24,
          1,
          5,
          23,
          1,
          18,
          s4,
          [0, 3],
          1,
          s4,
          [0, 16],
          s4,
          [23, 4],
          c5,
          [28, 3],
          0,
          0,
          16,
          1,
          6,
          6,
          s4,
          [0, 3],
          5,
          1,
          2,
          c5,
          [37, 3],
          c5,
          [20, 3],
          5,
          0,
          0
        ]),
        symbol: u2([
          4,
          7,
          9,
          11,
          12,
          s4,
          [15, 19, 1],
          1,
          1,
          s4,
          [3, 4, 1],
          c5,
          [30, 19],
          c5,
          [29, 4],
          7,
          4,
          10,
          11,
          c5,
          [22, 14],
          c5,
          [19, 3],
          c5,
          [43, 22],
          c5,
          [23, 69],
          c5,
          [139, 4],
          8,
          c5,
          [51, 24],
          4,
          c5,
          [138, 15],
          13,
          c5,
          [186, 5],
          8,
          c5,
          [6, 6],
          c5,
          [5, 5],
          9,
          8,
          14,
          c5,
          [159, 47],
          c5,
          [60, 10]
        ]),
        type: u2([
          s4,
          [2, 19],
          s4,
          [0, 5],
          1,
          s4,
          [2, 24],
          s4,
          [0, 4],
          c5,
          [22, 19],
          c5,
          [43, 42],
          c5,
          [23, 70],
          c5,
          [28, 25],
          c5,
          [45, 25],
          c5,
          [113, 54]
        ]),
        state: u2([
          1,
          2,
          8,
          6,
          7,
          30,
          c5,
          [4, 3],
          33,
          37,
          c5,
          [5, 3],
          38,
          c5,
          [4, 3],
          39,
          c5,
          [4, 3],
          40,
          c5,
          [4, 3],
          42,
          c5,
          [21, 4],
          50,
          c5,
          [5, 3],
          51,
          c5,
          [4, 3]
        ]),
        mode: u2([
          s4,
          [1, 179],
          s4,
          [2, 3],
          c5,
          [5, 5],
          c5,
          [6, 4],
          s4,
          [1, 57]
        ]),
        goto: u2([
          5,
          3,
          4,
          24,
          s4,
          [9, 15, 1],
          s4,
          [25, 5, 1],
          c5,
          [24, 19],
          31,
          35,
          32,
          34,
          c5,
          [18, 14],
          36,
          c5,
          [38, 19],
          c5,
          [19, 57],
          c5,
          [118, 4],
          41,
          c5,
          [24, 19],
          43,
          35,
          c5,
          [16, 14],
          44,
          s4,
          [2, 3],
          28,
          29,
          2,
          s4,
          [3, 3],
          28,
          29,
          3,
          c5,
          [53, 4],
          s4,
          [45, 5, 1],
          c5,
          [100, 42],
          52,
          c5,
          [5, 4],
          53
        ])
      }),
      defaultActions: bda({
        idx: u2([
          6,
          7,
          8,
          s4,
          [10, 16, 1],
          33,
          34,
          39,
          40,
          41,
          45,
          47,
          52,
          53
        ]),
        goto: u2([
          9,
          10,
          11,
          s4,
          [16, 14, 1],
          12,
          1,
          30,
          13,
          s4,
          [4, 4, 1],
          14,
          15,
          8
        ])
      }),
      parseError: function parseError(str, hash, ExceptionClass) {
        if (hash.recoverable) {
          if (typeof this.trace === "function") {
            this.trace(str);
          }
          hash.destroy();
        } else {
          if (typeof this.trace === "function") {
            this.trace(str);
          }
          if (!ExceptionClass) {
            ExceptionClass = this.JisonParserError;
          }
          throw new ExceptionClass(str, hash);
        }
      },
      parse: function parse2(input) {
        var self2 = this;
        var stack3 = new Array(128);
        var sstack = new Array(128);
        var vstack = new Array(128);
        var table = this.table;
        var sp = 0;
        var symbol2 = 0;
        this.TERROR;
        var EOF2 = this.EOF;
        this.options.errorRecoveryTokenDiscardCount | 0 || 3;
        var NO_ACTION = [0, 54];
        var lexer3;
        if (this.__lexer__) {
          lexer3 = this.__lexer__;
        } else {
          lexer3 = this.__lexer__ = Object.create(this.lexer);
        }
        var sharedState_yy = {
          parseError: void 0,
          quoteName: void 0,
          lexer: void 0,
          parser: void 0,
          pre_parse: void 0,
          post_parse: void 0,
          pre_lex: void 0,
          post_lex: void 0
        };
        if (typeof assert !== "function")
          ;
        else {
          assert;
        }
        this.yyGetSharedState = function yyGetSharedState() {
          return sharedState_yy;
        };
        function shallow_copy_noclobber(dst, src) {
          for (var k6 in src) {
            if (typeof dst[k6] === "undefined" && Object.prototype.hasOwnProperty.call(src, k6)) {
              dst[k6] = src[k6];
            }
          }
        }
        shallow_copy_noclobber(sharedState_yy, this.yy);
        sharedState_yy.lexer = lexer3;
        sharedState_yy.parser = this;
        if (typeof sharedState_yy.parseError === "function") {
          this.parseError = function parseErrorAlt(str, hash, ExceptionClass) {
            if (!ExceptionClass) {
              ExceptionClass = this.JisonParserError;
            }
            return sharedState_yy.parseError.call(this, str, hash, ExceptionClass);
          };
        } else {
          this.parseError = this.originalParseError;
        }
        if (typeof sharedState_yy.quoteName === "function") {
          this.quoteName = function quoteNameAlt(id_str) {
            return sharedState_yy.quoteName.call(this, id_str);
          };
        } else {
          this.quoteName = this.originalQuoteName;
        }
        this.cleanupAfterParse = function parser_cleanupAfterParse(resultValue, invoke_post_methods, do_not_nuke_errorinfos) {
          var rv;
          if (invoke_post_methods) {
            var hash;
            if (sharedState_yy.post_parse || this.post_parse) {
              hash = this.constructParseErrorInfo(null, null, null, false);
            }
            if (sharedState_yy.post_parse) {
              rv = sharedState_yy.post_parse.call(this, sharedState_yy, resultValue, hash);
              if (typeof rv !== "undefined")
                resultValue = rv;
            }
            if (this.post_parse) {
              rv = this.post_parse.call(this, sharedState_yy, resultValue, hash);
              if (typeof rv !== "undefined")
                resultValue = rv;
            }
            if (hash && hash.destroy) {
              hash.destroy();
            }
          }
          if (this.__reentrant_call_depth > 1)
            return resultValue;
          if (lexer3.cleanupAfterLex) {
            lexer3.cleanupAfterLex(do_not_nuke_errorinfos);
          }
          if (sharedState_yy) {
            sharedState_yy.lexer = void 0;
            sharedState_yy.parser = void 0;
            if (lexer3.yy === sharedState_yy) {
              lexer3.yy = void 0;
            }
          }
          sharedState_yy = void 0;
          this.parseError = this.originalParseError;
          this.quoteName = this.originalQuoteName;
          stack3.length = 0;
          sstack.length = 0;
          vstack.length = 0;
          sp = 0;
          if (!do_not_nuke_errorinfos) {
            for (var i = this.__error_infos.length - 1; i >= 0; i--) {
              var el = this.__error_infos[i];
              if (el && typeof el.destroy === "function") {
                el.destroy();
              }
            }
            this.__error_infos.length = 0;
          }
          return resultValue;
        };
        this.constructParseErrorInfo = function parser_constructParseErrorInfo(msg, ex, expected2, recoverable) {
          var pei = {
            errStr: msg,
            exception: ex,
            text: lexer3.match,
            value: lexer3.yytext,
            token: this.describeSymbol(symbol2) || symbol2,
            token_id: symbol2,
            line: lexer3.yylineno,
            expected: expected2,
            recoverable,
            state,
            action,
            new_state: newState,
            symbol_stack: stack3,
            state_stack: sstack,
            value_stack: vstack,
            stack_pointer: sp,
            yy: sharedState_yy,
            lexer: lexer3,
            parser: this,
            destroy: function destructParseErrorInfo() {
              var rec = !!this.recoverable;
              for (var key in this) {
                if (this.hasOwnProperty(key) && typeof key === "object") {
                  this[key] = void 0;
                }
              }
              this.recoverable = rec;
            }
          };
          this.__error_infos.push(pei);
          return pei;
        };
        function stdLex() {
          var token2 = lexer3.lex();
          if (typeof token2 !== "number") {
            token2 = self2.symbols_[token2] || token2;
          }
          return token2 || EOF2;
        }
        function fastLex() {
          var token2 = lexer3.fastLex();
          if (typeof token2 !== "number") {
            token2 = self2.symbols_[token2] || token2;
          }
          return token2 || EOF2;
        }
        var lex = stdLex;
        var state, action, r3, t4;
        var yyval = {
          $: true,
          _$: void 0,
          yy: sharedState_yy
        };
        var p3;
        var yyrulelen;
        var this_production;
        var newState;
        var retval = false;
        try {
          this.__reentrant_call_depth++;
          lexer3.setInput(input, sharedState_yy);
          if (typeof lexer3.canIUse === "function") {
            var lexerInfo = lexer3.canIUse();
            if (lexerInfo.fastLex && typeof fastLex === "function") {
              lex = fastLex;
            }
          }
          vstack[sp] = null;
          sstack[sp] = 0;
          stack3[sp] = 0;
          ++sp;
          if (this.pre_parse) {
            this.pre_parse.call(this, sharedState_yy);
          }
          if (sharedState_yy.pre_parse) {
            sharedState_yy.pre_parse.call(this, sharedState_yy);
          }
          newState = sstack[sp - 1];
          for (; ; ) {
            state = newState;
            if (this.defaultActions[state]) {
              action = 2;
              newState = this.defaultActions[state];
            } else {
              if (!symbol2) {
                symbol2 = lex();
              }
              t4 = table[state] && table[state][symbol2] || NO_ACTION;
              newState = t4[1];
              action = t4[0];
              if (!action) {
                var errStr;
                var errSymbolDescr = this.describeSymbol(symbol2) || symbol2;
                var expected = this.collect_expected_token_set(state);
                if (typeof lexer3.yylineno === "number") {
                  errStr = "Parse error on line " + (lexer3.yylineno + 1) + ": ";
                } else {
                  errStr = "Parse error: ";
                }
                if (typeof lexer3.showPosition === "function") {
                  errStr += "\n" + lexer3.showPosition(79 - 10, 10) + "\n";
                }
                if (expected.length) {
                  errStr += "Expecting " + expected.join(", ") + ", got unexpected " + errSymbolDescr;
                } else {
                  errStr += "Unexpected " + errSymbolDescr;
                }
                p3 = this.constructParseErrorInfo(errStr, null, expected, false);
                r3 = this.parseError(p3.errStr, p3, this.JisonParserError);
                if (typeof r3 !== "undefined") {
                  retval = r3;
                }
                break;
              }
            }
            switch (action) {
              default:
                if (action instanceof Array) {
                  p3 = this.constructParseErrorInfo("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol2, null, null, false);
                  r3 = this.parseError(p3.errStr, p3, this.JisonParserError);
                  if (typeof r3 !== "undefined") {
                    retval = r3;
                  }
                  break;
                }
                p3 = this.constructParseErrorInfo("Parsing halted. No viable error recovery approach available due to internal system failure.", null, null, false);
                r3 = this.parseError(p3.errStr, p3, this.JisonParserError);
                if (typeof r3 !== "undefined") {
                  retval = r3;
                }
                break;
              case 1:
                stack3[sp] = symbol2;
                vstack[sp] = lexer3.yytext;
                sstack[sp] = newState;
                ++sp;
                symbol2 = 0;
                continue;
              case 2:
                this_production = this.productions_[newState - 1];
                yyrulelen = this_production[1];
                r3 = this.performAction.call(yyval, newState, sp - 1, vstack);
                if (typeof r3 !== "undefined") {
                  retval = r3;
                  break;
                }
                sp -= yyrulelen;
                var ntsymbol = this_production[0];
                stack3[sp] = ntsymbol;
                vstack[sp] = yyval.$;
                newState = table[sstack[sp - 1]][ntsymbol];
                sstack[sp] = newState;
                ++sp;
                continue;
              case 3:
                if (sp !== -2) {
                  retval = true;
                  sp--;
                  if (typeof vstack[sp] !== "undefined") {
                    retval = vstack[sp];
                  }
                }
                break;
            }
            break;
          }
        } catch (ex) {
          if (ex instanceof this.JisonParserError) {
            throw ex;
          } else if (lexer3 && typeof lexer3.JisonLexerError === "function" && ex instanceof lexer3.JisonLexerError) {
            throw ex;
          }
          p3 = this.constructParseErrorInfo("Parsing aborted due to exception.", ex, null, false);
          retval = false;
          r3 = this.parseError(p3.errStr, p3, this.JisonParserError);
          if (typeof r3 !== "undefined") {
            retval = r3;
          }
        } finally {
          retval = this.cleanupAfterParse(retval, true, true);
          this.__reentrant_call_depth--;
        }
        return retval;
      }
    };
    parser3.originalParseError = parser3.parseError;
    parser3.originalQuoteName = parser3.quoteName;
    var lexer2 = function() {
      function JisonLexerError(msg, hash) {
        Object.defineProperty(this, "name", {
          enumerable: false,
          writable: false,
          value: "JisonLexerError"
        });
        if (msg == null)
          msg = "???";
        Object.defineProperty(this, "message", {
          enumerable: false,
          writable: true,
          value: msg
        });
        this.hash = hash;
        var stacktrace;
        if (hash && hash.exception instanceof Error) {
          var ex2 = hash.exception;
          this.message = ex2.message || msg;
          stacktrace = ex2.stack;
        }
        if (!stacktrace) {
          if (Error.hasOwnProperty("captureStackTrace")) {
            Error.captureStackTrace(this, this.constructor);
          } else {
            stacktrace = new Error(msg).stack;
          }
        }
        if (stacktrace) {
          Object.defineProperty(this, "stack", {
            enumerable: false,
            writable: false,
            value: stacktrace
          });
        }
      }
      if (typeof Object.setPrototypeOf === "function") {
        Object.setPrototypeOf(JisonLexerError.prototype, Error.prototype);
      } else {
        JisonLexerError.prototype = Object.create(Error.prototype);
      }
      JisonLexerError.prototype.constructor = JisonLexerError;
      JisonLexerError.prototype.name = "JisonLexerError";
      var lexer3 = {
        EOF: 1,
        ERROR: 2,
        __currentRuleSet__: null,
        __error_infos: [],
        __decompressed: false,
        done: false,
        _backtrack: false,
        _input: "",
        _more: false,
        _signaled_error_token: false,
        conditionStack: [],
        match: "",
        matched: "",
        matches: false,
        yytext: "",
        offset: 0,
        yyleng: 0,
        yylineno: 0,
        yylloc: null,
        constructLexErrorInfo: function lexer_constructLexErrorInfo(msg, recoverable, show_input_position) {
          msg = "" + msg;
          if (show_input_position == void 0) {
            show_input_position = !(msg.indexOf("\n") > 0 && msg.indexOf("^") > 0);
          }
          if (this.yylloc && show_input_position) {
            if (typeof this.prettyPrintRange === "function") {
              this.prettyPrintRange(this.yylloc);
              if (!/\n\s*$/.test(msg)) {
                msg += "\n";
              }
              msg += "\n  Erroneous area:\n" + this.prettyPrintRange(this.yylloc);
            } else if (typeof this.showPosition === "function") {
              var pos_str = this.showPosition();
              if (pos_str) {
                if (msg.length && msg[msg.length - 1] !== "\n" && pos_str[0] !== "\n") {
                  msg += "\n" + pos_str;
                } else {
                  msg += pos_str;
                }
              }
            }
          }
          var pei = {
            errStr: msg,
            recoverable: !!recoverable,
            text: this.match,
            token: null,
            line: this.yylineno,
            loc: this.yylloc,
            yy: this.yy,
            lexer: this,
            destroy: function destructLexErrorInfo() {
              var rec = !!this.recoverable;
              for (var key in this) {
                if (this.hasOwnProperty(key) && typeof key === "object") {
                  this[key] = void 0;
                }
              }
              this.recoverable = rec;
            }
          };
          this.__error_infos.push(pei);
          return pei;
        },
        parseError: function lexer_parseError(str, hash, ExceptionClass) {
          if (!ExceptionClass) {
            ExceptionClass = this.JisonLexerError;
          }
          if (this.yy) {
            if (this.yy.parser && typeof this.yy.parser.parseError === "function") {
              return this.yy.parser.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;
            } else if (typeof this.yy.parseError === "function") {
              return this.yy.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;
            }
          }
          throw new ExceptionClass(str, hash);
        },
        yyerror: function yyError(str) {
          var lineno_msg = "";
          if (this.yylloc) {
            lineno_msg = " on line " + (this.yylineno + 1);
          }
          var p3 = this.constructLexErrorInfo("Lexical error" + lineno_msg + ": " + str, this.options.lexerErrorsAreRecoverable);
          var args = Array.prototype.slice.call(arguments, 1);
          if (args.length) {
            p3.extra_error_attributes = args;
          }
          return this.parseError(p3.errStr, p3, this.JisonLexerError) || this.ERROR;
        },
        cleanupAfterLex: function lexer_cleanupAfterLex(do_not_nuke_errorinfos) {
          this.setInput("", {});
          if (!do_not_nuke_errorinfos) {
            for (var i = this.__error_infos.length - 1; i >= 0; i--) {
              var el = this.__error_infos[i];
              if (el && typeof el.destroy === "function") {
                el.destroy();
              }
            }
            this.__error_infos.length = 0;
          }
          return this;
        },
        clear: function lexer_clear() {
          this.yytext = "";
          this.yyleng = 0;
          this.match = "";
          this.matches = false;
          this._more = false;
          this._backtrack = false;
          var col = this.yylloc ? this.yylloc.last_column : 0;
          this.yylloc = {
            first_line: this.yylineno + 1,
            first_column: col,
            last_line: this.yylineno + 1,
            last_column: col,
            range: [this.offset, this.offset]
          };
        },
        setInput: function lexer_setInput(input, yy) {
          this.yy = yy || this.yy || {};
          if (!this.__decompressed) {
            var rules = this.rules;
            for (var i = 0, len = rules.length; i < len; i++) {
              var rule_re = rules[i];
              if (typeof rule_re === "number") {
                rules[i] = rules[rule_re];
              }
            }
            var conditions = this.conditions;
            for (var k6 in conditions) {
              var spec = conditions[k6];
              var rule_ids = spec.rules;
              var len = rule_ids.length;
              var rule_regexes = new Array(len + 1);
              var rule_new_ids = new Array(len + 1);
              for (var i = 0; i < len; i++) {
                var idx = rule_ids[i];
                var rule_re = rules[idx];
                rule_regexes[i + 1] = rule_re;
                rule_new_ids[i + 1] = idx;
              }
              spec.rules = rule_new_ids;
              spec.__rule_regexes = rule_regexes;
              spec.__rule_count = len;
            }
            this.__decompressed = true;
          }
          this._input = input || "";
          this.clear();
          this._signaled_error_token = false;
          this.done = false;
          this.yylineno = 0;
          this.matched = "";
          this.conditionStack = ["INITIAL"];
          this.__currentRuleSet__ = null;
          this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0,
            range: [0, 0]
          };
          this.offset = 0;
          return this;
        },
        editRemainingInput: function lexer_editRemainingInput(callback, cpsArg) {
          var rv = callback.call(this, this._input, cpsArg);
          if (typeof rv !== "string") {
            if (rv) {
              this._input = "" + rv;
            }
          } else {
            this._input = rv;
          }
          return this;
        },
        input: function lexer_input() {
          if (!this._input) {
            return null;
          }
          var ch2 = this._input[0];
          this.yytext += ch2;
          this.yyleng++;
          this.offset++;
          this.match += ch2;
          this.matched += ch2;
          var slice_len = 1;
          var lines = false;
          if (ch2 === "\n") {
            lines = true;
          } else if (ch2 === "\r") {
            lines = true;
            var ch22 = this._input[1];
            if (ch22 === "\n") {
              slice_len++;
              ch2 += ch22;
              this.yytext += ch22;
              this.yyleng++;
              this.offset++;
              this.match += ch22;
              this.matched += ch22;
              this.yylloc.range[1]++;
            }
          }
          if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
            this.yylloc.last_column = 0;
          } else {
            this.yylloc.last_column++;
          }
          this.yylloc.range[1]++;
          this._input = this._input.slice(slice_len);
          return ch2;
        },
        unput: function lexer_unput(ch2) {
          var len = ch2.length;
          var lines = ch2.split(/(?:\r\n?|\n)/g);
          this._input = ch2 + this._input;
          this.yytext = this.yytext.substr(0, this.yytext.length - len);
          this.yyleng = this.yytext.length;
          this.offset -= len;
          this.match = this.match.substr(0, this.match.length - len);
          this.matched = this.matched.substr(0, this.matched.length - len);
          if (lines.length > 1) {
            this.yylineno -= lines.length - 1;
            this.yylloc.last_line = this.yylineno + 1;
            var pre = this.match;
            var pre_lines = pre.split(/(?:\r\n?|\n)/g);
            if (pre_lines.length === 1) {
              pre = this.matched;
              pre_lines = pre.split(/(?:\r\n?|\n)/g);
            }
            this.yylloc.last_column = pre_lines[pre_lines.length - 1].length;
          } else {
            this.yylloc.last_column -= len;
          }
          this.yylloc.range[1] = this.yylloc.range[0] + this.yyleng;
          this.done = false;
          return this;
        },
        more: function lexer_more() {
          this._more = true;
          return this;
        },
        reject: function lexer_reject() {
          if (this.options.backtrack_lexer) {
            this._backtrack = true;
          } else {
            var lineno_msg = "";
            if (this.yylloc) {
              lineno_msg = " on line " + (this.yylineno + 1);
            }
            var p3 = this.constructLexErrorInfo("Lexical error" + lineno_msg + ": You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).", false);
            this._signaled_error_token = this.parseError(p3.errStr, p3, this.JisonLexerError) || this.ERROR;
          }
          return this;
        },
        less: function lexer_less(n3) {
          return this.unput(this.match.slice(n3));
        },
        pastInput: function lexer_pastInput(maxSize, maxLines) {
          var past = this.matched.substring(0, this.matched.length - this.match.length);
          if (maxSize < 0)
            maxSize = past.length;
          else if (!maxSize)
            maxSize = 20;
          if (maxLines < 0)
            maxLines = past.length;
          else if (!maxLines)
            maxLines = 1;
          past = past.substr(-maxSize * 2 - 2);
          var a3 = past.replace(/\r\n|\r/g, "\n").split("\n");
          a3 = a3.slice(-maxLines);
          past = a3.join("\n");
          if (past.length > maxSize) {
            past = "..." + past.substr(-maxSize);
          }
          return past;
        },
        upcomingInput: function lexer_upcomingInput(maxSize, maxLines) {
          var next = this.match;
          if (maxSize < 0)
            maxSize = next.length + this._input.length;
          else if (!maxSize)
            maxSize = 20;
          if (maxLines < 0)
            maxLines = maxSize;
          else if (!maxLines)
            maxLines = 1;
          if (next.length < maxSize * 2 + 2) {
            next += this._input.substring(0, maxSize * 2 + 2);
          }
          var a3 = next.replace(/\r\n|\r/g, "\n").split("\n");
          a3 = a3.slice(0, maxLines);
          next = a3.join("\n");
          if (next.length > maxSize) {
            next = next.substring(0, maxSize) + "...";
          }
          return next;
        },
        showPosition: function lexer_showPosition(maxPrefix, maxPostfix) {
          var pre = this.pastInput(maxPrefix).replace(/\s/g, " ");
          var c6 = new Array(pre.length + 1).join("-");
          return pre + this.upcomingInput(maxPostfix).replace(/\s/g, " ") + "\n" + c6 + "^";
        },
        deriveLocationInfo: function lexer_deriveYYLLOC(actual, preceding, following, current) {
          var loc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0,
            range: [0, 0]
          };
          if (actual) {
            loc.first_line = actual.first_line | 0;
            loc.last_line = actual.last_line | 0;
            loc.first_column = actual.first_column | 0;
            loc.last_column = actual.last_column | 0;
            if (actual.range) {
              loc.range[0] = actual.range[0] | 0;
              loc.range[1] = actual.range[1] | 0;
            }
          }
          if (loc.first_line <= 0 || loc.last_line < loc.first_line) {
            if (loc.first_line <= 0 && preceding) {
              loc.first_line = preceding.last_line | 0;
              loc.first_column = preceding.last_column | 0;
              if (preceding.range) {
                loc.range[0] = actual.range[1] | 0;
              }
            }
            if ((loc.last_line <= 0 || loc.last_line < loc.first_line) && following) {
              loc.last_line = following.first_line | 0;
              loc.last_column = following.first_column | 0;
              if (following.range) {
                loc.range[1] = actual.range[0] | 0;
              }
            }
            if (loc.first_line <= 0 && current && (loc.last_line <= 0 || current.last_line <= loc.last_line)) {
              loc.first_line = current.first_line | 0;
              loc.first_column = current.first_column | 0;
              if (current.range) {
                loc.range[0] = current.range[0] | 0;
              }
            }
            if (loc.last_line <= 0 && current && (loc.first_line <= 0 || current.first_line >= loc.first_line)) {
              loc.last_line = current.last_line | 0;
              loc.last_column = current.last_column | 0;
              if (current.range) {
                loc.range[1] = current.range[1] | 0;
              }
            }
          }
          if (loc.last_line <= 0) {
            if (loc.first_line <= 0) {
              loc.first_line = this.yylloc.first_line;
              loc.last_line = this.yylloc.last_line;
              loc.first_column = this.yylloc.first_column;
              loc.last_column = this.yylloc.last_column;
              loc.range[0] = this.yylloc.range[0];
              loc.range[1] = this.yylloc.range[1];
            } else {
              loc.last_line = this.yylloc.last_line;
              loc.last_column = this.yylloc.last_column;
              loc.range[1] = this.yylloc.range[1];
            }
          }
          if (loc.first_line <= 0) {
            loc.first_line = loc.last_line;
            loc.first_column = 0;
            loc.range[1] = loc.range[0];
          }
          if (loc.first_column < 0) {
            loc.first_column = 0;
          }
          if (loc.last_column < 0) {
            loc.last_column = loc.first_column > 0 ? loc.first_column : 80;
          }
          return loc;
        },
        prettyPrintRange: function lexer_prettyPrintRange(loc, context_loc, context_loc2) {
          loc = this.deriveLocationInfo(loc, context_loc, context_loc2);
          const CONTEXT = 3;
          const CONTEXT_TAIL = 1;
          const MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT = 2;
          var input = this.matched + this._input;
          var lines = input.split("\n");
          var l0 = Math.max(1, context_loc ? context_loc.first_line : loc.first_line - CONTEXT);
          var l1 = Math.max(1, context_loc2 ? context_loc2.last_line : loc.last_line + CONTEXT_TAIL);
          var lineno_display_width = 1 + Math.log10(l1 | 1) | 0;
          var ws_prefix = new Array(lineno_display_width).join(" ");
          var nonempty_line_indexes = [];
          var rv = lines.slice(l0 - 1, l1 + 1).map(function injectLineNumber(line2, index4) {
            var lno = index4 + l0;
            var lno_pfx = (ws_prefix + lno).substr(-lineno_display_width);
            var rv2 = lno_pfx + ": " + line2;
            var errpfx = new Array(lineno_display_width + 1).join("^");
            var offset = 2 + 1;
            var len = 0;
            if (lno === loc.first_line) {
              offset += loc.first_column;
              len = Math.max(2, (lno === loc.last_line ? loc.last_column : line2.length) - loc.first_column + 1);
            } else if (lno === loc.last_line) {
              len = Math.max(2, loc.last_column + 1);
            } else if (lno > loc.first_line && lno < loc.last_line) {
              len = Math.max(2, line2.length + 1);
            }
            if (len) {
              var lead = new Array(offset).join(".");
              var mark = new Array(len).join("^");
              rv2 += "\n" + errpfx + lead + mark;
              if (line2.trim().length > 0) {
                nonempty_line_indexes.push(index4);
              }
            }
            rv2 = rv2.replace(/\t/g, " ");
            return rv2;
          });
          if (nonempty_line_indexes.length > 2 * MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT) {
            var clip_start = nonempty_line_indexes[MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT - 1] + 1;
            var clip_end = nonempty_line_indexes[nonempty_line_indexes.length - MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT] - 1;
            var intermediate_line = new Array(lineno_display_width + 1).join(" ") + "  (...continued...)";
            intermediate_line += "\n" + new Array(lineno_display_width + 1).join("-") + "  (---------------)";
            rv.splice(clip_start, clip_end - clip_start + 1, intermediate_line);
          }
          return rv.join("\n");
        },
        describeYYLLOC: function lexer_describe_yylloc(yylloc, display_range_too) {
          var l1 = yylloc.first_line;
          var l22 = yylloc.last_line;
          var c1 = yylloc.first_column;
          var c22 = yylloc.last_column;
          var dl = l22 - l1;
          var dc2 = c22 - c1;
          var rv;
          if (dl === 0) {
            rv = "line " + l1 + ", ";
            if (dc2 <= 1) {
              rv += "column " + c1;
            } else {
              rv += "columns " + c1 + " .. " + c22;
            }
          } else {
            rv = "lines " + l1 + "(column " + c1 + ") .. " + l22 + "(column " + c22 + ")";
          }
          if (yylloc.range && display_range_too) {
            var r1 = yylloc.range[0];
            var r22 = yylloc.range[1] - 1;
            if (r22 <= r1) {
              rv += " {String Offset: " + r1 + "}";
            } else {
              rv += " {String Offset range: " + r1 + " .. " + r22 + "}";
            }
          }
          return rv;
        },
        test_match: function lexer_test_match(match2, indexed_rule) {
          var token2, lines, backup, match_str, match_str_len;
          if (this.options.backtrack_lexer) {
            backup = {
              yylineno: this.yylineno,
              yylloc: {
                first_line: this.yylloc.first_line,
                last_line: this.yylloc.last_line,
                first_column: this.yylloc.first_column,
                last_column: this.yylloc.last_column,
                range: this.yylloc.range.slice(0)
              },
              yytext: this.yytext,
              match: this.match,
              matches: this.matches,
              matched: this.matched,
              yyleng: this.yyleng,
              offset: this.offset,
              _more: this._more,
              _input: this._input,
              yy: this.yy,
              conditionStack: this.conditionStack.slice(0),
              done: this.done
            };
          }
          match_str = match2[0];
          match_str_len = match_str.length;
          lines = match_str.split(/(?:\r\n?|\n)/g);
          if (lines.length > 1) {
            this.yylineno += lines.length - 1;
            this.yylloc.last_line = this.yylineno + 1;
            this.yylloc.last_column = lines[lines.length - 1].length;
          } else {
            this.yylloc.last_column += match_str_len;
          }
          this.yytext += match_str;
          this.match += match_str;
          this.matched += match_str;
          this.matches = match2;
          this.yyleng = this.yytext.length;
          this.yylloc.range[1] += match_str_len;
          this.offset += match_str_len;
          this._more = false;
          this._backtrack = false;
          this._input = this._input.slice(match_str_len);
          token2 = this.performAction.call(this, this.yy, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
          if (this.done && this._input) {
            this.done = false;
          }
          if (token2) {
            return token2;
          } else if (this._backtrack) {
            for (var k6 in backup) {
              this[k6] = backup[k6];
            }
            this.__currentRuleSet__ = null;
            return false;
          } else if (this._signaled_error_token) {
            token2 = this._signaled_error_token;
            this._signaled_error_token = false;
            return token2;
          }
          return false;
        },
        next: function lexer_next() {
          if (this.done) {
            this.clear();
            return this.EOF;
          }
          if (!this._input) {
            this.done = true;
          }
          var token2, match2, tempMatch, index4;
          if (!this._more) {
            this.clear();
          }
          var spec = this.__currentRuleSet__;
          if (!spec) {
            spec = this.__currentRuleSet__ = this._currentRules();
            if (!spec || !spec.rules) {
              var lineno_msg = "";
              if (this.options.trackPosition) {
                lineno_msg = " on line " + (this.yylineno + 1);
              }
              var p3 = this.constructLexErrorInfo("Internal lexer engine error" + lineno_msg + ': The lex grammar programmer pushed a non-existing condition name "' + this.topState() + '"; this is a fatal error and should be reported to the application programmer team!', false);
              return this.parseError(p3.errStr, p3, this.JisonLexerError) || this.ERROR;
            }
          }
          var rule_ids = spec.rules;
          var regexes = spec.__rule_regexes;
          var len = spec.__rule_count;
          for (var i = 1; i <= len; i++) {
            tempMatch = this._input.match(regexes[i]);
            if (tempMatch && (!match2 || tempMatch[0].length > match2[0].length)) {
              match2 = tempMatch;
              index4 = i;
              if (this.options.backtrack_lexer) {
                token2 = this.test_match(tempMatch, rule_ids[i]);
                if (token2 !== false) {
                  return token2;
                } else if (this._backtrack) {
                  match2 = void 0;
                  continue;
                } else {
                  return false;
                }
              } else if (!this.options.flex) {
                break;
              }
            }
          }
          if (match2) {
            token2 = this.test_match(match2, rule_ids[index4]);
            if (token2 !== false) {
              return token2;
            }
            return false;
          }
          if (!this._input) {
            this.done = true;
            this.clear();
            return this.EOF;
          } else {
            var lineno_msg = "";
            if (this.options.trackPosition) {
              lineno_msg = " on line " + (this.yylineno + 1);
            }
            var p3 = this.constructLexErrorInfo("Lexical error" + lineno_msg + ": Unrecognized text.", this.options.lexerErrorsAreRecoverable);
            var pendingInput = this._input;
            var activeCondition = this.topState();
            var conditionStackDepth = this.conditionStack.length;
            token2 = this.parseError(p3.errStr, p3, this.JisonLexerError) || this.ERROR;
            if (token2 === this.ERROR) {
              if (!this.matches && pendingInput === this._input && activeCondition === this.topState() && conditionStackDepth === this.conditionStack.length) {
                this.input();
              }
            }
            return token2;
          }
        },
        lex: function lexer_lex() {
          var r3;
          if (typeof this.pre_lex === "function") {
            r3 = this.pre_lex.call(this, 0);
          }
          if (typeof this.options.pre_lex === "function") {
            r3 = this.options.pre_lex.call(this, r3) || r3;
          }
          if (this.yy && typeof this.yy.pre_lex === "function") {
            r3 = this.yy.pre_lex.call(this, r3) || r3;
          }
          while (!r3) {
            r3 = this.next();
          }
          if (this.yy && typeof this.yy.post_lex === "function") {
            r3 = this.yy.post_lex.call(this, r3) || r3;
          }
          if (typeof this.options.post_lex === "function") {
            r3 = this.options.post_lex.call(this, r3) || r3;
          }
          if (typeof this.post_lex === "function") {
            r3 = this.post_lex.call(this, r3) || r3;
          }
          return r3;
        },
        fastLex: function lexer_fastLex() {
          var r3;
          while (!r3) {
            r3 = this.next();
          }
          return r3;
        },
        canIUse: function lexer_canIUse() {
          var rv = {
            fastLex: !(typeof this.pre_lex === "function" || typeof this.options.pre_lex === "function" || this.yy && typeof this.yy.pre_lex === "function" || this.yy && typeof this.yy.post_lex === "function" || typeof this.options.post_lex === "function" || typeof this.post_lex === "function") && typeof this.fastLex === "function"
          };
          return rv;
        },
        begin: function lexer_begin(condition) {
          return this.pushState(condition);
        },
        pushState: function lexer_pushState(condition) {
          this.conditionStack.push(condition);
          this.__currentRuleSet__ = null;
          return this;
        },
        popState: function lexer_popState() {
          var n3 = this.conditionStack.length - 1;
          if (n3 > 0) {
            this.__currentRuleSet__ = null;
            return this.conditionStack.pop();
          } else {
            return this.conditionStack[0];
          }
        },
        topState: function lexer_topState(n3) {
          n3 = this.conditionStack.length - 1 - Math.abs(n3 || 0);
          if (n3 >= 0) {
            return this.conditionStack[n3];
          } else {
            return "INITIAL";
          }
        },
        _currentRules: function lexer__currentRules() {
          if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]];
          } else {
            return this.conditions["INITIAL"];
          }
        },
        stateStackSize: function lexer_stateStackSize() {
          return this.conditionStack.length;
        },
        options: {
          trackPosition: true
        },
        JisonLexerError,
        performAction: function lexer__performAction(yy, yyrulenumber, YY_START) {
          switch (yyrulenumber) {
            case 1:
              break;
            default:
              return this.simpleCaseActionClusters[yyrulenumber];
          }
        },
        simpleCaseActionClusters: {
          0: 13,
          2: 5,
          3: 6,
          4: 3,
          5: 4,
          6: 15,
          7: 15,
          8: 15,
          9: 15,
          10: 15,
          11: 15,
          12: 16,
          13: 16,
          14: 16,
          15: 16,
          16: 17,
          17: 17,
          18: 18,
          19: 18,
          20: 19,
          21: 19,
          22: 19,
          23: 20,
          24: 21,
          25: 22,
          26: 23,
          27: 25,
          28: 24,
          29: 26,
          30: 27,
          31: 28,
          32: 11,
          33: 9,
          34: 12,
          35: 10,
          36: 7,
          37: 8,
          38: 14,
          39: 1
        },
        rules: [
          /^(?:(--[\d\-A-Za-z]*))/,
          /^(?:\s+)/,
          /^(?:\*)/,
          /^(?:\/)/,
          /^(?:\+)/,
          /^(?:-)/,
          /^(?:(\d+(\.\d*)?|\.\d+)px\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)cm\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)mm\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)in\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)pt\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)pc\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)deg\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)grad\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)rad\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)turn\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)s\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)ms\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)Hz\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)kHz\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)dpi\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)dpcm\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)dppx\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)em\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)ex\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)ch\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)rem\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)vw\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)vh\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)vmin\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)vmax\b)/,
          /^(?:(\d+(\.\d*)?|\.\d+)%)/,
          /^(?:(\d+(\.\d*)?|\.\d+)\b)/,
          /^(?:(calc))/,
          /^(?:(var))/,
          /^(?:([a-z]+))/,
          /^(?:\()/,
          /^(?:\))/,
          /^(?:,)/,
          /^(?:$)/
        ],
        conditions: {
          INITIAL: {
            rules: [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39
            ],
            inclusive: true
          }
        }
      };
      return lexer3;
    }();
    parser3.lexer = lexer2;
    function Parser() {
      this.yy = {};
    }
    Parser.prototype = parser3;
    parser3.Parser = Parser;
    return new Parser();
  }();
  if (typeof commonjsRequire !== "undefined" && true) {
    exports.parser = parser2;
    exports.Parser = parser2.Parser;
    exports.parse = function() {
      return parser2.parse.apply(parser2, arguments);
    };
  }
});
var conversions = {
  px: {
    px: 1,
    cm: 96 / 2.54,
    mm: 96 / 25.4,
    in: 96,
    pt: 96 / 72,
    pc: 16
  },
  cm: {
    px: 2.54 / 96,
    cm: 1,
    mm: 0.1,
    in: 2.54,
    pt: 2.54 / 72,
    pc: 2.54 / 6
  },
  mm: {
    px: 25.4 / 96,
    cm: 10,
    mm: 1,
    in: 25.4,
    pt: 25.4 / 72,
    pc: 25.4 / 6
  },
  in: {
    px: 1 / 96,
    cm: 1 / 2.54,
    mm: 1 / 25.4,
    in: 1,
    pt: 1 / 72,
    pc: 1 / 6
  },
  pt: {
    px: 0.75,
    cm: 72 / 2.54,
    mm: 72 / 25.4,
    in: 72,
    pt: 1,
    pc: 12
  },
  pc: {
    px: 6 / 96,
    cm: 6 / 2.54,
    mm: 6 / 25.4,
    in: 6,
    pt: 6 / 72,
    pc: 1
  },
  deg: {
    deg: 1,
    grad: 0.9,
    rad: 180 / Math.PI,
    turn: 360
  },
  grad: {
    deg: 400 / 360,
    grad: 1,
    rad: 200 / Math.PI,
    turn: 400
  },
  rad: {
    deg: Math.PI / 180,
    grad: Math.PI / 200,
    rad: 1,
    turn: Math.PI * 2
  },
  turn: {
    deg: 1 / 360,
    grad: 1 / 400,
    rad: 0.5 / Math.PI,
    turn: 1
  },
  s: {
    s: 1,
    ms: 1 / 1e3
  },
  ms: {
    s: 1e3,
    ms: 1
  },
  Hz: {
    Hz: 1,
    kHz: 1e3
  },
  kHz: {
    Hz: 1 / 1e3,
    kHz: 1
  },
  dpi: {
    dpi: 1,
    dpcm: 1 / 2.54,
    dppx: 1 / 96
  },
  dpcm: {
    dpi: 2.54,
    dpcm: 1,
    dppx: 2.54 / 96
  },
  dppx: {
    dpi: 96,
    dpcm: 96 / 2.54,
    dppx: 1
  }
};
var cssUnitConverter = function(value2, sourceUnit, targetUnit, precision) {
  if (!conversions.hasOwnProperty(targetUnit))
    throw new Error("Cannot convert to " + targetUnit);
  if (!conversions[targetUnit].hasOwnProperty(sourceUnit))
    throw new Error("Cannot convert from " + sourceUnit + " to " + targetUnit);
  var converted = conversions[targetUnit][sourceUnit] * value2;
  if (precision !== false) {
    precision = Math.pow(10, parseInt(precision) || 5);
    return Math.round(converted * precision) / precision;
  }
  return converted;
};
var convert = createCommonjsModule(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _cssUnitConverter2 = _interopRequireDefault(cssUnitConverter);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function convertNodes(left2, right2, precision) {
    switch (left2.type) {
      case "LengthValue":
      case "AngleValue":
      case "TimeValue":
      case "FrequencyValue":
      case "ResolutionValue":
        return convertAbsoluteLength(left2, right2, precision);
      default:
        return {left: left2, right: right2};
    }
  }
  function convertAbsoluteLength(left2, right2, precision) {
    if (right2.type === left2.type) {
      right2 = {
        type: left2.type,
        value: (0, _cssUnitConverter2.default)(right2.value, right2.unit, left2.unit, precision),
        unit: left2.unit
      };
    }
    return {left: left2, right: right2};
  }
  exports.default = convertNodes;
  module.exports = exports["default"];
});
var reducer = createCommonjsModule(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.flip = flip;
  var _convert2 = _interopRequireDefault(convert);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function reduce(node, precision) {
    if (node.type === "MathExpression")
      return reduceMathExpression(node, precision);
    if (node.type === "Calc")
      return reduce(node.value, precision);
    return node;
  }
  function isEqual3(left2, right2) {
    return left2.type === right2.type && left2.value === right2.value;
  }
  function isValueType(type3) {
    switch (type3) {
      case "LengthValue":
      case "AngleValue":
      case "TimeValue":
      case "FrequencyValue":
      case "ResolutionValue":
      case "EmValue":
      case "ExValue":
      case "ChValue":
      case "RemValue":
      case "VhValue":
      case "VwValue":
      case "VminValue":
      case "VmaxValue":
      case "PercentageValue":
      case "Value":
        return true;
    }
    return false;
  }
  function convertMathExpression(node, precision) {
    var nodes = (0, _convert2.default)(node.left, node.right, precision);
    var left2 = reduce(nodes.left, precision);
    var right2 = reduce(nodes.right, precision);
    if (left2.type === "MathExpression" && right2.type === "MathExpression") {
      if (left2.operator === "/" && right2.operator === "*" || left2.operator === "-" && right2.operator === "+" || left2.operator === "*" && right2.operator === "/" || left2.operator === "+" && right2.operator === "-") {
        if (isEqual3(left2.right, right2.right))
          nodes = (0, _convert2.default)(left2.left, right2.left, precision);
        else if (isEqual3(left2.right, right2.left))
          nodes = (0, _convert2.default)(left2.left, right2.right, precision);
        left2 = reduce(nodes.left, precision);
        right2 = reduce(nodes.right, precision);
      }
    }
    node.left = left2;
    node.right = right2;
    return node;
  }
  function flip(operator) {
    return operator === "+" ? "-" : "+";
  }
  function flipValue(node) {
    if (isValueType(node.type))
      node.value = -node.value;
    else if (node.type == "MathExpression") {
      node.left = flipValue(node.left);
      node.right = flipValue(node.right);
    }
    return node;
  }
  function reduceAddSubExpression(node, precision) {
    var _node = node, left2 = _node.left, right2 = _node.right, op = _node.operator;
    if (left2.type === "CssVariable" || right2.type === "CssVariable")
      return node;
    if (right2.value === 0)
      return left2;
    if (left2.value === 0 && op === "+")
      return right2;
    if (left2.value === 0 && op === "-")
      return flipValue(right2);
    if (left2.type === right2.type && isValueType(left2.type)) {
      node = Object.assign({}, left2);
      if (op === "+")
        node.value = left2.value + right2.value;
      else
        node.value = left2.value - right2.value;
    }
    if (isValueType(left2.type) && (right2.operator === "+" || right2.operator === "-") && right2.type === "MathExpression") {
      if (left2.type === right2.left.type) {
        node = Object.assign({}, node);
        node.left = reduce({
          type: "MathExpression",
          operator: op,
          left: left2,
          right: right2.left
        }, precision);
        node.right = right2.right;
        node.operator = op === "-" ? flip(right2.operator) : right2.operator;
        return reduce(node, precision);
      } else if (left2.type === right2.right.type) {
        node = Object.assign({}, node);
        node.left = reduce({
          type: "MathExpression",
          operator: op === "-" ? flip(right2.operator) : right2.operator,
          left: left2,
          right: right2.right
        }, precision);
        node.right = right2.left;
        return reduce(node, precision);
      }
    }
    if (left2.type === "MathExpression" && (left2.operator === "+" || left2.operator === "-") && isValueType(right2.type)) {
      if (right2.type === left2.left.type) {
        node = Object.assign({}, left2);
        node.left = reduce({
          type: "MathExpression",
          operator: op,
          left: left2.left,
          right: right2
        }, precision);
        return reduce(node, precision);
      } else if (right2.type === left2.right.type) {
        node = Object.assign({}, left2);
        if (left2.operator === "-") {
          node.right = reduce({
            type: "MathExpression",
            operator: op === "-" ? "+" : "-",
            left: right2,
            right: left2.right
          }, precision);
          node.operator = op === "-" ? "-" : "+";
        } else {
          node.right = reduce({
            type: "MathExpression",
            operator: op,
            left: left2.right,
            right: right2
          }, precision);
        }
        if (node.right.value < 0) {
          node.right.value *= -1;
          node.operator = node.operator === "-" ? "+" : "-";
        }
        return reduce(node, precision);
      }
    }
    return node;
  }
  function reduceDivisionExpression(node, precision) {
    if (!isValueType(node.right.type))
      return node;
    if (node.right.type !== "Value")
      throw new Error('Cannot divide by "' + node.right.unit + '", number expected');
    if (node.right.value === 0)
      throw new Error("Cannot divide by zero");
    if (node.left.type === "MathExpression") {
      if (isValueType(node.left.left.type) && isValueType(node.left.right.type)) {
        node.left.left.value /= node.right.value;
        node.left.right.value /= node.right.value;
        return reduce(node.left, precision);
      }
      return node;
    } else if (isValueType(node.left.type)) {
      node.left.value /= node.right.value;
      return node.left;
    }
    return node;
  }
  function reduceMultiplicationExpression(node) {
    if (node.left.type === "MathExpression" && node.right.type === "Value") {
      if (isValueType(node.left.left.type) && isValueType(node.left.right.type)) {
        node.left.left.value *= node.right.value;
        node.left.right.value *= node.right.value;
        return node.left;
      }
    } else if (isValueType(node.left.type) && node.right.type === "Value") {
      node.left.value *= node.right.value;
      return node.left;
    } else if (node.left.type === "Value" && node.right.type === "MathExpression") {
      if (isValueType(node.right.left.type) && isValueType(node.right.right.type)) {
        node.right.left.value *= node.left.value;
        node.right.right.value *= node.left.value;
        return node.right;
      }
    } else if (node.left.type === "Value" && isValueType(node.right.type)) {
      node.right.value *= node.left.value;
      return node.right;
    }
    return node;
  }
  function reduceMathExpression(node, precision) {
    node = convertMathExpression(node, precision);
    switch (node.operator) {
      case "+":
      case "-":
        return reduceAddSubExpression(node, precision);
      case "/":
        return reduceDivisionExpression(node, precision);
      case "*":
        return reduceMultiplicationExpression(node);
    }
    return node;
  }
  exports.default = reduce;
});
var stringifier = createCommonjsModule(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = function(calc, node, precision) {
    var str = stringify2(node, precision);
    if (node.type === "MathExpression") {
      str = calc + "(" + str + ")";
    }
    return str;
  };
  var order = {
    "*": 0,
    "/": 0,
    "+": 1,
    "-": 1
  };
  function round2(value2, prec) {
    if (prec !== false) {
      var precision = Math.pow(10, prec);
      return Math.round(value2 * precision) / precision;
    }
    return value2;
  }
  function stringify2(node, prec) {
    switch (node.type) {
      case "MathExpression": {
        var left2 = node.left, right2 = node.right, op = node.operator;
        var str = "";
        if (left2.type === "MathExpression" && order[op] < order[left2.operator])
          str += "(" + stringify2(left2, prec) + ")";
        else
          str += stringify2(left2, prec);
        str += " " + node.operator + " ";
        if (right2.type === "MathExpression" && order[op] < order[right2.operator]) {
          str += "(" + stringify2(right2, prec) + ")";
        } else if (right2.type === "MathExpression" && op === "-" && ["+", "-"].includes(right2.operator)) {
          right2.operator = (0, reducer.flip)(right2.operator);
          str += stringify2(right2, prec);
        } else {
          str += stringify2(right2, prec);
        }
        return str;
      }
      case "Value":
        return round2(node.value, prec);
      case "CssVariable":
        if (node.fallback) {
          return "var(" + node.value + ", " + stringify2(node.fallback, prec) + ")";
        }
        return "var(" + node.value + ")";
      case "Calc":
        if (node.prefix) {
          return "-" + node.prefix + "-calc(" + stringify2(node.value, prec) + ")";
        }
        return "calc(" + stringify2(node.value, prec) + ")";
      default:
        return round2(node.value, prec) + node.unit;
    }
  }
  module.exports = exports["default"];
});
var dist = createCommonjsModule(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _postcssValueParser2 = _interopRequireDefault(lib2);
  var _reducer2 = _interopRequireDefault(reducer);
  var _stringifier2 = _interopRequireDefault(stringifier);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var MATCH_CALC = /((?:\-[a-z]+\-)?calc)/;
  exports.default = function(value2) {
    var precision = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
    return (0, _postcssValueParser2.default)(value2).walk(function(node) {
      if (node.type !== "function" || !MATCH_CALC.test(node.value))
        return;
      var contents = _postcssValueParser2.default.stringify(node.nodes);
      if (contents.indexOf("constant") >= 0 || contents.indexOf("env") >= 0)
        return;
      var ast = parser_1.parser.parse(contents);
      var reducedAst = (0, _reducer2.default)(ast, precision);
      node.type = "word";
      node.value = (0, _stringifier2.default)(node.value, reducedAst, precision);
    }, true).toString();
  };
  module.exports = exports["default"];
});
var reduceCSSCalc2 = /* @__PURE__ */ getDefaultExportFromCjs(dist);
function ownKeys$4(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$72(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$4(Object(source), true).forEach(function(key) {
        _defineProperty$72(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$4(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$72(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$32(arr) {
  return _arrayWithoutHoles$32(arr) || _iterableToArray$42(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$32();
}
function _nonIterableSpread$32() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$1(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$1(o, minLen);
}
function _iterableToArray$42(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$32(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$1(arr);
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
var stringCache = {
  widthCache: {},
  cacheCount: 0
};
var MAX_CACHE_NUM = 2e3;
var SPAN_STYLE = {
  position: "absolute",
  top: "-20000px",
  left: 0,
  padding: 0,
  margin: 0,
  border: "none",
  whiteSpace: "pre"
};
var STYLE_LIST = ["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height", "top", "left", "fontSize", "lineHeight", "padding", "margin", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom"];
var MEASUREMENT_SPAN_ID = "recharts_measurement_span";
function autoCompleteStyle(name, value2) {
  if (STYLE_LIST.indexOf(name) >= 0 && value2 === +value2) {
    return "".concat(value2, "px");
  }
  return value2;
}
function camelToMiddleLine(text2) {
  var strs = text2.split("");
  var formatStrs = strs.reduce(function(result, entry) {
    if (entry === entry.toUpperCase()) {
      return [].concat(_toConsumableArray$32(result), ["-", entry.toLowerCase()]);
    }
    return [].concat(_toConsumableArray$32(result), [entry]);
  }, []);
  return formatStrs.join("");
}
var getStyleString = function getStyleString2(style) {
  return Object.keys(style).reduce(function(result, s4) {
    return "".concat(result).concat(camelToMiddleLine(s4), ":").concat(autoCompleteStyle(s4, style[s4]), ";");
  }, "");
};
var getStringSize = function getStringSize2(text2) {
  var style = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (text2 === void 0 || text2 === null || Global.isSsr) {
    return {
      width: 0,
      height: 0
    };
  }
  var str = "".concat(text2);
  var styleString = getStyleString(style);
  var cacheKey2 = "".concat(str, "-").concat(styleString);
  if (stringCache.widthCache[cacheKey2]) {
    return stringCache.widthCache[cacheKey2];
  }
  try {
    var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
    if (!measurementSpan) {
      measurementSpan = document.createElement("span");
      measurementSpan.setAttribute("id", MEASUREMENT_SPAN_ID);
      measurementSpan.setAttribute("aria-hidden", "true");
      document.body.appendChild(measurementSpan);
    }
    var measurementSpanStyle = _objectSpread$72(_objectSpread$72({}, SPAN_STYLE), style);
    Object.keys(measurementSpanStyle).map(function(styleKey) {
      measurementSpan.style[styleKey] = measurementSpanStyle[styleKey];
      return styleKey;
    });
    measurementSpan.textContent = str;
    var rect = measurementSpan.getBoundingClientRect();
    var result = {
      width: rect.width,
      height: rect.height
    };
    stringCache.widthCache[cacheKey2] = result;
    if (++stringCache.cacheCount > MAX_CACHE_NUM) {
      stringCache.cacheCount = 0;
      stringCache.widthCache = {};
    }
    return result;
  } catch (e3) {
    return {
      width: 0,
      height: 0
    };
  }
};
var getOffset2 = function getOffset3(el) {
  var html2 = el.ownerDocument.documentElement;
  var box = {
    top: 0,
    left: 0
  };
  if (typeof el.getBoundingClientRect !== "undefined") {
    box = el.getBoundingClientRect();
  }
  return {
    top: box.top + window.pageYOffset - html2.clientTop,
    left: box.left + window.pageXOffset - html2.clientLeft
  };
};
var calculateChartCoordinate = function calculateChartCoordinate2(event, offset) {
  return {
    chartX: Math.round(event.pageX - offset.left),
    chartY: Math.round(event.pageY - offset.top)
  };
};
function _typeof$8(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$8 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$8 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$8(obj);
}
function _extends$44() {
  _extends$44 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$44.apply(this, arguments);
}
function _objectWithoutProperties$42(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$42(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$42(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck$62(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$62(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$62(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$62(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$62(Constructor, staticProps);
  return Constructor;
}
function _inherits$62(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$6(subClass, superClass);
}
function _setPrototypeOf$6(o, p3) {
  _setPrototypeOf$6 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$6(o, p3);
}
function _createSuper$5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$6(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$6(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$62(this, result);
  };
}
function _possibleConstructorReturn$62(self2, call2) {
  if (call2 && (_typeof$8(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$62(self2);
}
function _assertThisInitialized$62(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$5() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$6(o) {
  _getPrototypeOf$6 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$6(o);
}
function _slicedToArray$3(arr, i) {
  return _arrayWithHoles$4(arr) || _iterableToArrayLimit$3(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest$4();
}
function _nonIterableRest$4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$2(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$2(o, minLen);
}
function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit$3(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$5(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$82(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$5(Object(source), true).forEach(function(key) {
        _defineProperty$82(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$5(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$82(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var BREAKING_SPACES = /[ \f\n\r\t\v\u2028\u2029]+/;
var calculateWordWidths = function calculateWordWidths2(props) {
  try {
    var words = [];
    if (!isNil_1(props.children)) {
      if (props.breakAll) {
        words = props.children.toString().split("");
      } else {
        words = props.children.toString().split(BREAKING_SPACES);
      }
    }
    var wordsWithComputedWidth = words.map(function(word) {
      return {
        word,
        width: getStringSize(word, props.style).width
      };
    });
    var spaceWidth = props.breakAll ? 0 : getStringSize("\xA0", props.style).width;
    return {
      wordsWithComputedWidth,
      spaceWidth
    };
  } catch (e3) {
    return null;
  }
};
var calculateWordsByLines = function calculateWordsByLines2(props, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {
  var shouldLimitLines = isNumber$1(props.maxLines);
  var text2 = props.children;
  var calculate = function calculate2() {
    var words = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    return words.reduce(function(result2, _ref) {
      var word = _ref.word, width = _ref.width;
      var currentLine = result2[result2.length - 1];
      if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < lineWidth)) {
        currentLine.words.push(word);
        currentLine.width += width + spaceWidth;
      } else {
        var newLine = {
          words: [word],
          width
        };
        result2.push(newLine);
      }
      return result2;
    }, []);
  };
  var originalResult = calculate(initialWordsWithComputedWith);
  var findLongestLine = function findLongestLine2(words) {
    return words.reduce(function(a3, b10) {
      return a3.width > b10.width ? a3 : b10;
    });
  };
  if (!shouldLimitLines) {
    return originalResult;
  }
  var suffix2 = "\u2026";
  var checkOverflow = function checkOverflow2(index4) {
    var tempText = text2.slice(0, index4);
    var words = calculateWordWidths(_objectSpread$82(_objectSpread$82({}, props), {}, {
      children: tempText + suffix2
    })).wordsWithComputedWidth;
    var result2 = calculate(words);
    var doesOverflow = result2.length > props.maxLines || findLongestLine(result2).width > lineWidth;
    return [doesOverflow, result2];
  };
  var start2 = 0;
  var end = text2.length - 1;
  var iterations2 = 0;
  var trimmedResult;
  while (start2 <= end && iterations2 <= text2.length - 1) {
    var middle = Math.floor((start2 + end) / 2);
    var prev = middle - 1;
    var _checkOverflow = checkOverflow(prev), _checkOverflow2 = _slicedToArray$3(_checkOverflow, 2), doesPrevOverflow = _checkOverflow2[0], result = _checkOverflow2[1];
    var _checkOverflow3 = checkOverflow(middle), _checkOverflow4 = _slicedToArray$3(_checkOverflow3, 1), doesMiddleOverflow = _checkOverflow4[0];
    if (!doesPrevOverflow && !doesMiddleOverflow) {
      start2 = middle + 1;
    }
    if (doesPrevOverflow && doesMiddleOverflow) {
      end = middle - 1;
    }
    if (!doesPrevOverflow && doesMiddleOverflow) {
      trimmedResult = result;
      break;
    }
    iterations2++;
  }
  return trimmedResult || originalResult;
};
var getWordsWithoutCalculate = function getWordsWithoutCalculate2(children2) {
  var words = !isNil_1(children2) ? children2.toString().split(BREAKING_SPACES) : [];
  return [{
    words
  }];
};
var getWordsByLines = function getWordsByLines2(props, needCalculate) {
  if ((props.width || props.scaleToFit) && !Global.isSsr) {
    var wordsWithComputedWidth, spaceWidth;
    if (needCalculate) {
      var wordWidths = calculateWordWidths(props);
      if (wordWidths) {
        var wcw = wordWidths.wordsWithComputedWidth, sw = wordWidths.spaceWidth;
        wordsWithComputedWidth = wcw;
        spaceWidth = sw;
      } else {
        return getWordsWithoutCalculate(props.children);
      }
      return calculateWordsByLines(props, wordsWithComputedWidth, spaceWidth, props.width, props.scaleToFit);
    }
  }
  return getWordsWithoutCalculate(props.children);
};
var Text3 = /* @__PURE__ */ function(_Component) {
  _inherits$62(Text4, _Component);
  var _super = _createSuper$5(Text4);
  function Text4() {
    var _this;
    _classCallCheck$62(this, Text4);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {};
    return _this;
  }
  _createClass$62(Text4, [{
    key: "render",
    value: function render2() {
      var _this$props = this.props, dx = _this$props.dx, dy = _this$props.dy, textAnchor = _this$props.textAnchor, verticalAnchor = _this$props.verticalAnchor, scaleToFit = _this$props.scaleToFit, angle = _this$props.angle, lineHeight = _this$props.lineHeight, capHeight = _this$props.capHeight, className = _this$props.className, breakAll = _this$props.breakAll, textProps2 = _objectWithoutProperties$42(_this$props, ["dx", "dy", "textAnchor", "verticalAnchor", "scaleToFit", "angle", "lineHeight", "capHeight", "className", "breakAll"]);
      var wordsByLines = this.state.wordsByLines;
      if (!isNumOrStr(textProps2.x) || !isNumOrStr(textProps2.y)) {
        return null;
      }
      var x5 = textProps2.x + (isNumber$1(dx) ? dx : 0);
      var y7 = textProps2.y + (isNumber$1(dy) ? dy : 0);
      var startDy;
      switch (verticalAnchor) {
        case "start":
          startDy = reduceCSSCalc2("calc(".concat(capHeight, ")"));
          break;
        case "middle":
          startDy = reduceCSSCalc2("calc(".concat((wordsByLines.length - 1) / 2, " * -").concat(lineHeight, " + (").concat(capHeight, " / 2))"));
          break;
        default:
          startDy = reduceCSSCalc2("calc(".concat(wordsByLines.length - 1, " * -").concat(lineHeight, ")"));
          break;
      }
      var transforms = [];
      if (scaleToFit) {
        var lineWidth = wordsByLines[0].width;
        var width = this.props.width;
        transforms.push("scale(".concat((isNumber$1(width) ? width / lineWidth : 1) / lineWidth, ")"));
      }
      if (angle) {
        transforms.push("rotate(".concat(angle, ", ").concat(x5, ", ").concat(y7, ")"));
      }
      if (transforms.length) {
        textProps2.transform = transforms.join(" ");
      }
      return /* @__PURE__ */ react.createElement("text", _extends$44({}, filterProps(textProps2, true), {
        x: x5,
        y: y7,
        className: classnames("recharts-text", className),
        textAnchor
      }), wordsByLines.map(function(line2, index4) {
        return /* @__PURE__ */ react.createElement("tspan", {
          x: x5,
          dy: index4 === 0 ? startDy : lineHeight,
          key: index4
        }, line2.words.join(breakAll ? "" : " "));
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.width !== prevState.prevWidth || nextProps.scaleToFit !== prevState.prevScaleToFit || nextProps.children !== prevState.prevChildren || nextProps.style !== prevState.prevStyle || nextProps.breakAll !== prevState.prevBreakAll) {
        var needCalculate = nextProps.children !== prevState.prevChildren || nextProps.style !== prevState.prevStyle || nextProps.breakAll !== prevState.prevBreakAll;
        return {
          prevWidth: nextProps.width,
          prevScaleToFit: nextProps.scaleToFit,
          prevChildren: nextProps.children,
          prevStyle: nextProps.style,
          wordsByLines: getWordsByLines(nextProps, needCalculate)
        };
      }
      return null;
    }
  }]);
  return Text4;
}(react.Component);
Text3.defaultProps = {
  x: 0,
  y: 0,
  lineHeight: "1em",
  capHeight: "0.71em",
  scaleToFit: false,
  textAnchor: "start",
  verticalAnchor: "end"
};
function shallowEqual(a3, b10) {
  for (var key in a3) {
    if ({}.hasOwnProperty.call(a3, key) && (!{}.hasOwnProperty.call(b10, key) || a3[key] !== b10[key])) {
      return false;
    }
  }
  for (var _key in b10) {
    if ({}.hasOwnProperty.call(b10, _key) && !{}.hasOwnProperty.call(a3, _key)) {
      return false;
    }
  }
  return true;
}
function _objectWithoutProperties$52(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$52(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$52(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var REACT_BROWSER_EVENT_MAP = {
  click: "onClick",
  mousedown: "onMouseDown",
  mouseup: "onMouseUp",
  mouseover: "onMouseOver",
  mousemove: "onMouseMove",
  mouseout: "onMouseOut",
  mouseenter: "onMouseEnter",
  mouseleave: "onMouseLeave",
  touchcancel: "onTouchCancel",
  touchend: "onTouchEnd",
  touchmove: "onTouchMove",
  touchstart: "onTouchStart"
};
var getDisplayName = function getDisplayName2(Comp) {
  if (typeof Comp === "string") {
    return Comp;
  }
  if (!Comp) {
    return "";
  }
  return Comp.displayName || Comp.name || "Component";
};
var findAllByType = function findAllByType2(children2, type3) {
  var result = [];
  var types = [];
  if (isArray_1(type3)) {
    types = type3.map(function(t4) {
      return getDisplayName(t4);
    });
  } else {
    types = [getDisplayName(type3)];
  }
  react.Children.forEach(children2, function(child) {
    var childType = get_1(child, "type.displayName") || get_1(child, "type.name");
    if (types.indexOf(childType) !== -1) {
      result.push(child);
    }
  });
  return result;
};
var findChildByType = function findChildByType2(children2, type3) {
  var result = findAllByType(children2, type3);
  return result && result[0];
};
var validateWidthHeight = function validateWidthHeight2(el) {
  if (!el || !el.props) {
    return false;
  }
  var _el$props = el.props, width = _el$props.width, height = _el$props.height;
  if (!isNumber$1(width) || width <= 0 || !isNumber$1(height) || height <= 0) {
    return false;
  }
  return true;
};
var SVG_TAGS = ["a", "altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "ellipse", "feBlend", "feColormatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-url", "foreignObject", "g", "glyph", "glyphRef", "hkern", "image", "line", "lineGradient", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "script", "set", "stop", "style", "svg", "switch", "symbol", "text", "textPath", "title", "tref", "tspan", "use", "view", "vkern"];
var isSvgElement = function isSvgElement2(child) {
  return child && child.type && isString_1(child.type) && SVG_TAGS.indexOf(child.type) >= 0;
};
var isChildrenEqual = function isChildrenEqual2(nextChildren, prevChildren) {
  if (nextChildren === prevChildren) {
    return true;
  }
  if (react.Children.count(nextChildren) !== react.Children.count(prevChildren)) {
    return false;
  }
  var count2 = react.Children.count(nextChildren);
  if (count2 === 0) {
    return true;
  }
  if (count2 === 1) {
    return isSingleChildEqual(isArray_1(nextChildren) ? nextChildren[0] : nextChildren, isArray_1(prevChildren) ? prevChildren[0] : prevChildren);
  }
  for (var i = 0; i < count2; i++) {
    var nextChild = nextChildren[i];
    var prevChild = prevChildren[i];
    if (isArray_1(nextChild) || isArray_1(prevChild)) {
      if (!isChildrenEqual2(nextChild, prevChild)) {
        return false;
      }
    } else if (!isSingleChildEqual(nextChild, prevChild)) {
      return false;
    }
  }
  return true;
};
var isSingleChildEqual = function isSingleChildEqual2(nextChild, prevChild) {
  if (isNil_1(nextChild) && isNil_1(prevChild)) {
    return true;
  }
  if (!isNil_1(nextChild) && !isNil_1(prevChild)) {
    var _ref = nextChild.props || {}, nextChildren = _ref.children, nextProps = _objectWithoutProperties$52(_ref, ["children"]);
    var _ref2 = prevChild.props || {}, prevChildren = _ref2.children, prevProps = _objectWithoutProperties$52(_ref2, ["children"]);
    if (nextChildren && prevChildren) {
      return shallowEqual(nextProps, prevProps) && isChildrenEqual(nextChildren, prevChildren);
    }
    if (!nextChildren && !prevChildren) {
      return shallowEqual(nextProps, prevProps);
    }
    return false;
  }
  return false;
};
var renderByOrder = function renderByOrder2(children2, renderMap) {
  var elements = [];
  var record = {};
  react.Children.forEach(children2, function(child, index4) {
    if (isSvgElement(child)) {
      elements.push(child);
    } else if (child) {
      var displayName = getDisplayName(child.type);
      var _ref3 = renderMap[displayName] || {}, handler = _ref3.handler, once2 = _ref3.once;
      if (handler && (!once2 || !record[displayName])) {
        var results = handler(child, displayName, index4);
        elements.push(results);
        record[displayName] = true;
      }
    }
  });
  return flatten_1(elements);
};
var getReactEventByType = function getReactEventByType2(e3) {
  var type3 = e3 && e3.type;
  if (type3 && REACT_BROWSER_EVENT_MAP[type3]) {
    return REACT_BROWSER_EVENT_MAP[type3];
  }
  return null;
};
var parseChildIndex = function parseChildIndex2(child, children2) {
  var result = -1;
  react.Children.forEach(children2, function(entry, index4) {
    if (entry === child) {
      result = index4;
    }
  });
  return result;
};
function baseExtremum(array5, iteratee, comparator) {
  var index4 = -1, length = array5.length;
  while (++index4 < length) {
    var value2 = array5[index4], current = iteratee(value2);
    if (current != null && (computed === void 0 ? current === current && !isSymbol_1(current) : comparator(current, computed))) {
      var computed = current, result = value2;
    }
  }
  return result;
}
var _baseExtremum = baseExtremum;
function baseGt(value2, other) {
  return value2 > other;
}
var _baseGt = baseGt;
function max4(array5) {
  return array5 && array5.length ? _baseExtremum(array5, identity_1, _baseGt) : void 0;
}
var max_1 = max4;
function baseLt(value2, other) {
  return value2 < other;
}
var _baseLt = baseLt;
function min4(array5) {
  return array5 && array5.length ? _baseExtremum(array5, identity_1, _baseLt) : void 0;
}
var min_1 = min4;
function map4(collection, iteratee) {
  var func = isArray_1(collection) ? _arrayMap : _baseMap;
  return func(collection, _baseIteratee(iteratee));
}
var map_1 = map4;
function flatMap(collection, iteratee) {
  return _baseFlatten(map_1(collection, iteratee), 1);
}
var flatMap_1 = flatMap;
var MAX_DIGITS = 1e9;
var defaults2 = {
  precision: 20,
  rounding: 4,
  toExpNeg: -7,
  toExpPos: 21,
  LN10: "2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286"
};
var Decimal;
var external = true;
var decimalError = "[DecimalError] ";
var invalidArgument = decimalError + "Invalid argument: ";
var exponentOutOfRange = decimalError + "Exponent out of range: ";
var mathfloor = Math.floor;
var mathpow = Math.pow;
var isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
var ONE;
var BASE = 1e7;
var LOG_BASE = 7;
var MAX_SAFE_INTEGER2 = 9007199254740991;
var MAX_E = mathfloor(MAX_SAFE_INTEGER2 / LOG_BASE);
var P3 = {};
P3.absoluteValue = P3.abs = function() {
  var x5 = new this.constructor(this);
  if (x5.s)
    x5.s = 1;
  return x5;
};
P3.comparedTo = P3.cmp = function(y7) {
  var i, j2, xdL, ydL, x5 = this;
  y7 = new x5.constructor(y7);
  if (x5.s !== y7.s)
    return x5.s || -y7.s;
  if (x5.e !== y7.e)
    return x5.e > y7.e ^ x5.s < 0 ? 1 : -1;
  xdL = x5.d.length;
  ydL = y7.d.length;
  for (i = 0, j2 = xdL < ydL ? xdL : ydL; i < j2; ++i) {
    if (x5.d[i] !== y7.d[i])
      return x5.d[i] > y7.d[i] ^ x5.s < 0 ? 1 : -1;
  }
  return xdL === ydL ? 0 : xdL > ydL ^ x5.s < 0 ? 1 : -1;
};
P3.decimalPlaces = P3.dp = function() {
  var x5 = this, w3 = x5.d.length - 1, dp = (w3 - x5.e) * LOG_BASE;
  w3 = x5.d[w3];
  if (w3)
    for (; w3 % 10 == 0; w3 /= 10)
      dp--;
  return dp < 0 ? 0 : dp;
};
P3.dividedBy = P3.div = function(y7) {
  return divide(this, new this.constructor(y7));
};
P3.dividedToIntegerBy = P3.idiv = function(y7) {
  var x5 = this, Ctor = x5.constructor;
  return round(divide(x5, new Ctor(y7), 0, 1), Ctor.precision);
};
P3.equals = P3.eq = function(y7) {
  return !this.cmp(y7);
};
P3.exponent = function() {
  return getBase10Exponent(this);
};
P3.greaterThan = P3.gt = function(y7) {
  return this.cmp(y7) > 0;
};
P3.greaterThanOrEqualTo = P3.gte = function(y7) {
  return this.cmp(y7) >= 0;
};
P3.isInteger = P3.isint = function() {
  return this.e > this.d.length - 2;
};
P3.isNegative = P3.isneg = function() {
  return this.s < 0;
};
P3.isPositive = P3.ispos = function() {
  return this.s > 0;
};
P3.isZero = function() {
  return this.s === 0;
};
P3.lessThan = P3.lt = function(y7) {
  return this.cmp(y7) < 0;
};
P3.lessThanOrEqualTo = P3.lte = function(y7) {
  return this.cmp(y7) < 1;
};
P3.logarithm = P3.log = function(base) {
  var r3, x5 = this, Ctor = x5.constructor, pr = Ctor.precision, wpr = pr + 5;
  if (base === void 0) {
    base = new Ctor(10);
  } else {
    base = new Ctor(base);
    if (base.s < 1 || base.eq(ONE))
      throw Error(decimalError + "NaN");
  }
  if (x5.s < 1)
    throw Error(decimalError + (x5.s ? "NaN" : "-Infinity"));
  if (x5.eq(ONE))
    return new Ctor(0);
  external = false;
  r3 = divide(ln(x5, wpr), ln(base, wpr), wpr);
  external = true;
  return round(r3, pr);
};
P3.minus = P3.sub = function(y7) {
  var x5 = this;
  y7 = new x5.constructor(y7);
  return x5.s == y7.s ? subtract(x5, y7) : add2(x5, (y7.s = -y7.s, y7));
};
P3.modulo = P3.mod = function(y7) {
  var q2, x5 = this, Ctor = x5.constructor, pr = Ctor.precision;
  y7 = new Ctor(y7);
  if (!y7.s)
    throw Error(decimalError + "NaN");
  if (!x5.s)
    return round(new Ctor(x5), pr);
  external = false;
  q2 = divide(x5, y7, 0, 1).times(y7);
  external = true;
  return x5.minus(q2);
};
P3.naturalExponential = P3.exp = function() {
  return exp$1(this);
};
P3.naturalLogarithm = P3.ln = function() {
  return ln(this);
};
P3.negated = P3.neg = function() {
  var x5 = new this.constructor(this);
  x5.s = -x5.s || 0;
  return x5;
};
P3.plus = P3.add = function(y7) {
  var x5 = this;
  y7 = new x5.constructor(y7);
  return x5.s == y7.s ? add2(x5, y7) : subtract(x5, (y7.s = -y7.s, y7));
};
P3.precision = P3.sd = function(z3) {
  var e3, sd2, w3, x5 = this;
  if (z3 !== void 0 && z3 !== !!z3 && z3 !== 1 && z3 !== 0)
    throw Error(invalidArgument + z3);
  e3 = getBase10Exponent(x5) + 1;
  w3 = x5.d.length - 1;
  sd2 = w3 * LOG_BASE + 1;
  w3 = x5.d[w3];
  if (w3) {
    for (; w3 % 10 == 0; w3 /= 10)
      sd2--;
    for (w3 = x5.d[0]; w3 >= 10; w3 /= 10)
      sd2++;
  }
  return z3 && e3 > sd2 ? e3 : sd2;
};
P3.squareRoot = P3.sqrt = function() {
  var e3, n3, pr, r3, s4, t4, wpr, x5 = this, Ctor = x5.constructor;
  if (x5.s < 1) {
    if (!x5.s)
      return new Ctor(0);
    throw Error(decimalError + "NaN");
  }
  e3 = getBase10Exponent(x5);
  external = false;
  s4 = Math.sqrt(+x5);
  if (s4 == 0 || s4 == 1 / 0) {
    n3 = digitsToString(x5.d);
    if ((n3.length + e3) % 2 == 0)
      n3 += "0";
    s4 = Math.sqrt(n3);
    e3 = mathfloor((e3 + 1) / 2) - (e3 < 0 || e3 % 2);
    if (s4 == 1 / 0) {
      n3 = "5e" + e3;
    } else {
      n3 = s4.toExponential();
      n3 = n3.slice(0, n3.indexOf("e") + 1) + e3;
    }
    r3 = new Ctor(n3);
  } else {
    r3 = new Ctor(s4.toString());
  }
  pr = Ctor.precision;
  s4 = wpr = pr + 3;
  for (; ; ) {
    t4 = r3;
    r3 = t4.plus(divide(x5, t4, wpr + 2)).times(0.5);
    if (digitsToString(t4.d).slice(0, wpr) === (n3 = digitsToString(r3.d)).slice(0, wpr)) {
      n3 = n3.slice(wpr - 3, wpr + 1);
      if (s4 == wpr && n3 == "4999") {
        round(t4, pr + 1, 0);
        if (t4.times(t4).eq(x5)) {
          r3 = t4;
          break;
        }
      } else if (n3 != "9999") {
        break;
      }
      wpr += 4;
    }
  }
  external = true;
  return round(r3, pr);
};
P3.times = P3.mul = function(y7) {
  var carry, e3, i, k6, r3, rL, t4, xdL, ydL, x5 = this, Ctor = x5.constructor, xd2 = x5.d, yd2 = (y7 = new Ctor(y7)).d;
  if (!x5.s || !y7.s)
    return new Ctor(0);
  y7.s *= x5.s;
  e3 = x5.e + y7.e;
  xdL = xd2.length;
  ydL = yd2.length;
  if (xdL < ydL) {
    r3 = xd2;
    xd2 = yd2;
    yd2 = r3;
    rL = xdL;
    xdL = ydL;
    ydL = rL;
  }
  r3 = [];
  rL = xdL + ydL;
  for (i = rL; i--; )
    r3.push(0);
  for (i = ydL; --i >= 0; ) {
    carry = 0;
    for (k6 = xdL + i; k6 > i; ) {
      t4 = r3[k6] + yd2[i] * xd2[k6 - i - 1] + carry;
      r3[k6--] = t4 % BASE | 0;
      carry = t4 / BASE | 0;
    }
    r3[k6] = (r3[k6] + carry) % BASE | 0;
  }
  for (; !r3[--rL]; )
    r3.pop();
  if (carry)
    ++e3;
  else
    r3.shift();
  y7.d = r3;
  y7.e = e3;
  return external ? round(y7, Ctor.precision) : y7;
};
P3.toDecimalPlaces = P3.todp = function(dp, rm) {
  var x5 = this, Ctor = x5.constructor;
  x5 = new Ctor(x5);
  if (dp === void 0)
    return x5;
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0)
    rm = Ctor.rounding;
  else
    checkInt32(rm, 0, 8);
  return round(x5, dp + getBase10Exponent(x5) + 1, rm);
};
P3.toExponential = function(dp, rm) {
  var str, x5 = this, Ctor = x5.constructor;
  if (dp === void 0) {
    str = toString3(x5, true);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x5 = round(new Ctor(x5), dp + 1, rm);
    str = toString3(x5, true, dp + 1);
  }
  return str;
};
P3.toFixed = function(dp, rm) {
  var str, y7, x5 = this, Ctor = x5.constructor;
  if (dp === void 0)
    return toString3(x5);
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0)
    rm = Ctor.rounding;
  else
    checkInt32(rm, 0, 8);
  y7 = round(new Ctor(x5), dp + getBase10Exponent(x5) + 1, rm);
  str = toString3(y7.abs(), false, dp + getBase10Exponent(y7) + 1);
  return x5.isneg() && !x5.isZero() ? "-" + str : str;
};
P3.toInteger = P3.toint = function() {
  var x5 = this, Ctor = x5.constructor;
  return round(new Ctor(x5), getBase10Exponent(x5) + 1, Ctor.rounding);
};
P3.toNumber = function() {
  return +this;
};
P3.toPower = P3.pow = function(y7) {
  var e3, k6, pr, r3, sign5, yIsInt, x5 = this, Ctor = x5.constructor, guard = 12, yn = +(y7 = new Ctor(y7));
  if (!y7.s)
    return new Ctor(ONE);
  x5 = new Ctor(x5);
  if (!x5.s) {
    if (y7.s < 1)
      throw Error(decimalError + "Infinity");
    return x5;
  }
  if (x5.eq(ONE))
    return x5;
  pr = Ctor.precision;
  if (y7.eq(ONE))
    return round(x5, pr);
  e3 = y7.e;
  k6 = y7.d.length - 1;
  yIsInt = e3 >= k6;
  sign5 = x5.s;
  if (!yIsInt) {
    if (sign5 < 0)
      throw Error(decimalError + "NaN");
  } else if ((k6 = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER2) {
    r3 = new Ctor(ONE);
    e3 = Math.ceil(pr / LOG_BASE + 4);
    external = false;
    for (; ; ) {
      if (k6 % 2) {
        r3 = r3.times(x5);
        truncate(r3.d, e3);
      }
      k6 = mathfloor(k6 / 2);
      if (k6 === 0)
        break;
      x5 = x5.times(x5);
      truncate(x5.d, e3);
    }
    external = true;
    return y7.s < 0 ? new Ctor(ONE).div(r3) : round(r3, pr);
  }
  sign5 = sign5 < 0 && y7.d[Math.max(e3, k6)] & 1 ? -1 : 1;
  x5.s = 1;
  external = false;
  r3 = y7.times(ln(x5, pr + guard));
  external = true;
  r3 = exp$1(r3);
  r3.s = sign5;
  return r3;
};
P3.toPrecision = function(sd2, rm) {
  var e3, str, x5 = this, Ctor = x5.constructor;
  if (sd2 === void 0) {
    e3 = getBase10Exponent(x5);
    str = toString3(x5, e3 <= Ctor.toExpNeg || e3 >= Ctor.toExpPos);
  } else {
    checkInt32(sd2, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x5 = round(new Ctor(x5), sd2, rm);
    e3 = getBase10Exponent(x5);
    str = toString3(x5, sd2 <= e3 || e3 <= Ctor.toExpNeg, sd2);
  }
  return str;
};
P3.toSignificantDigits = P3.tosd = function(sd2, rm) {
  var x5 = this, Ctor = x5.constructor;
  if (sd2 === void 0) {
    sd2 = Ctor.precision;
    rm = Ctor.rounding;
  } else {
    checkInt32(sd2, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
  }
  return round(new Ctor(x5), sd2, rm);
};
P3.toString = P3.valueOf = P3.val = P3.toJSON = P3[Symbol.for("nodejs.util.inspect.custom")] = function() {
  var x5 = this, e3 = getBase10Exponent(x5), Ctor = x5.constructor;
  return toString3(x5, e3 <= Ctor.toExpNeg || e3 >= Ctor.toExpPos);
};
function add2(x5, y7) {
  var carry, d2, e3, i, k6, len, xd2, yd2, Ctor = x5.constructor, pr = Ctor.precision;
  if (!x5.s || !y7.s) {
    if (!y7.s)
      y7 = new Ctor(x5);
    return external ? round(y7, pr) : y7;
  }
  xd2 = x5.d;
  yd2 = y7.d;
  k6 = x5.e;
  e3 = y7.e;
  xd2 = xd2.slice();
  i = k6 - e3;
  if (i) {
    if (i < 0) {
      d2 = xd2;
      i = -i;
      len = yd2.length;
    } else {
      d2 = yd2;
      e3 = k6;
      len = xd2.length;
    }
    k6 = Math.ceil(pr / LOG_BASE);
    len = k6 > len ? k6 + 1 : len + 1;
    if (i > len) {
      i = len;
      d2.length = 1;
    }
    d2.reverse();
    for (; i--; )
      d2.push(0);
    d2.reverse();
  }
  len = xd2.length;
  i = yd2.length;
  if (len - i < 0) {
    i = len;
    d2 = yd2;
    yd2 = xd2;
    xd2 = d2;
  }
  for (carry = 0; i; ) {
    carry = (xd2[--i] = xd2[i] + yd2[i] + carry) / BASE | 0;
    xd2[i] %= BASE;
  }
  if (carry) {
    xd2.unshift(carry);
    ++e3;
  }
  for (len = xd2.length; xd2[--len] == 0; )
    xd2.pop();
  y7.d = xd2;
  y7.e = e3;
  return external ? round(y7, pr) : y7;
}
function checkInt32(i, min5, max6) {
  if (i !== ~~i || i < min5 || i > max6) {
    throw Error(invalidArgument + i);
  }
}
function digitsToString(d2) {
  var i, k6, ws, indexOfLastWord = d2.length - 1, str = "", w3 = d2[0];
  if (indexOfLastWord > 0) {
    str += w3;
    for (i = 1; i < indexOfLastWord; i++) {
      ws = d2[i] + "";
      k6 = LOG_BASE - ws.length;
      if (k6)
        str += getZeroString(k6);
      str += ws;
    }
    w3 = d2[i];
    ws = w3 + "";
    k6 = LOG_BASE - ws.length;
    if (k6)
      str += getZeroString(k6);
  } else if (w3 === 0) {
    return "0";
  }
  for (; w3 % 10 === 0; )
    w3 /= 10;
  return str + w3;
}
var divide = function() {
  function multiplyInteger(x5, k6) {
    var temp2, carry = 0, i = x5.length;
    for (x5 = x5.slice(); i--; ) {
      temp2 = x5[i] * k6 + carry;
      x5[i] = temp2 % BASE | 0;
      carry = temp2 / BASE | 0;
    }
    if (carry)
      x5.unshift(carry);
    return x5;
  }
  function compare(a3, b10, aL, bL) {
    var i, r3;
    if (aL != bL) {
      r3 = aL > bL ? 1 : -1;
    } else {
      for (i = r3 = 0; i < aL; i++) {
        if (a3[i] != b10[i]) {
          r3 = a3[i] > b10[i] ? 1 : -1;
          break;
        }
      }
    }
    return r3;
  }
  function subtract2(a3, b10, aL) {
    var i = 0;
    for (; aL--; ) {
      a3[aL] -= i;
      i = a3[aL] < b10[aL] ? 1 : 0;
      a3[aL] = i * BASE + a3[aL] - b10[aL];
    }
    for (; !a3[0] && a3.length > 1; )
      a3.shift();
  }
  return function(x5, y7, pr, dp) {
    var cmp, e3, i, k6, prod, prodL, q2, qd2, rem, remL, rem0, sd2, t4, xi2, xL, yd0, yL, yz, Ctor = x5.constructor, sign5 = x5.s == y7.s ? 1 : -1, xd2 = x5.d, yd2 = y7.d;
    if (!x5.s)
      return new Ctor(x5);
    if (!y7.s)
      throw Error(decimalError + "Division by zero");
    e3 = x5.e - y7.e;
    yL = yd2.length;
    xL = xd2.length;
    q2 = new Ctor(sign5);
    qd2 = q2.d = [];
    for (i = 0; yd2[i] == (xd2[i] || 0); )
      ++i;
    if (yd2[i] > (xd2[i] || 0))
      --e3;
    if (pr == null) {
      sd2 = pr = Ctor.precision;
    } else if (dp) {
      sd2 = pr + (getBase10Exponent(x5) - getBase10Exponent(y7)) + 1;
    } else {
      sd2 = pr;
    }
    if (sd2 < 0)
      return new Ctor(0);
    sd2 = sd2 / LOG_BASE + 2 | 0;
    i = 0;
    if (yL == 1) {
      k6 = 0;
      yd2 = yd2[0];
      sd2++;
      for (; (i < xL || k6) && sd2--; i++) {
        t4 = k6 * BASE + (xd2[i] || 0);
        qd2[i] = t4 / yd2 | 0;
        k6 = t4 % yd2 | 0;
      }
    } else {
      k6 = BASE / (yd2[0] + 1) | 0;
      if (k6 > 1) {
        yd2 = multiplyInteger(yd2, k6);
        xd2 = multiplyInteger(xd2, k6);
        yL = yd2.length;
        xL = xd2.length;
      }
      xi2 = yL;
      rem = xd2.slice(0, yL);
      remL = rem.length;
      for (; remL < yL; )
        rem[remL++] = 0;
      yz = yd2.slice();
      yz.unshift(0);
      yd0 = yd2[0];
      if (yd2[1] >= BASE / 2)
        ++yd0;
      do {
        k6 = 0;
        cmp = compare(yd2, rem, yL, remL);
        if (cmp < 0) {
          rem0 = rem[0];
          if (yL != remL)
            rem0 = rem0 * BASE + (rem[1] || 0);
          k6 = rem0 / yd0 | 0;
          if (k6 > 1) {
            if (k6 >= BASE)
              k6 = BASE - 1;
            prod = multiplyInteger(yd2, k6);
            prodL = prod.length;
            remL = rem.length;
            cmp = compare(prod, rem, prodL, remL);
            if (cmp == 1) {
              k6--;
              subtract2(prod, yL < prodL ? yz : yd2, prodL);
            }
          } else {
            if (k6 == 0)
              cmp = k6 = 1;
            prod = yd2.slice();
          }
          prodL = prod.length;
          if (prodL < remL)
            prod.unshift(0);
          subtract2(rem, prod, remL);
          if (cmp == -1) {
            remL = rem.length;
            cmp = compare(yd2, rem, yL, remL);
            if (cmp < 1) {
              k6++;
              subtract2(rem, yL < remL ? yz : yd2, remL);
            }
          }
          remL = rem.length;
        } else if (cmp === 0) {
          k6++;
          rem = [0];
        }
        qd2[i++] = k6;
        if (cmp && rem[0]) {
          rem[remL++] = xd2[xi2] || 0;
        } else {
          rem = [xd2[xi2]];
          remL = 1;
        }
      } while ((xi2++ < xL || rem[0] !== void 0) && sd2--);
    }
    if (!qd2[0])
      qd2.shift();
    q2.e = e3;
    return round(q2, dp ? pr + getBase10Exponent(q2) + 1 : pr);
  };
}();
function exp$1(x5, sd2) {
  var denominator, guard, pow3, sum2, t4, wpr, i = 0, k6 = 0, Ctor = x5.constructor, pr = Ctor.precision;
  if (getBase10Exponent(x5) > 16)
    throw Error(exponentOutOfRange + getBase10Exponent(x5));
  if (!x5.s)
    return new Ctor(ONE);
  if (sd2 == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd2;
  }
  t4 = new Ctor(0.03125);
  while (x5.abs().gte(0.1)) {
    x5 = x5.times(t4);
    k6 += 5;
  }
  guard = Math.log(mathpow(2, k6)) / Math.LN10 * 2 + 5 | 0;
  wpr += guard;
  denominator = pow3 = sum2 = new Ctor(ONE);
  Ctor.precision = wpr;
  for (; ; ) {
    pow3 = round(pow3.times(x5), wpr);
    denominator = denominator.times(++i);
    t4 = sum2.plus(divide(pow3, denominator, wpr));
    if (digitsToString(t4.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      while (k6--)
        sum2 = round(sum2.times(sum2), wpr);
      Ctor.precision = pr;
      return sd2 == null ? (external = true, round(sum2, pr)) : sum2;
    }
    sum2 = t4;
  }
}
function getBase10Exponent(x5) {
  var e3 = x5.e * LOG_BASE, w3 = x5.d[0];
  for (; w3 >= 10; w3 /= 10)
    e3++;
  return e3;
}
function getLn10(Ctor, sd2, pr) {
  if (sd2 > Ctor.LN10.sd()) {
    external = true;
    if (pr)
      Ctor.precision = pr;
    throw Error(decimalError + "LN10 precision limit exceeded");
  }
  return round(new Ctor(Ctor.LN10), sd2);
}
function getZeroString(k6) {
  var zs = "";
  for (; k6--; )
    zs += "0";
  return zs;
}
function ln(y7, sd2) {
  var c5, c0, denominator, e3, numerator, sum2, t4, wpr, x22, n3 = 1, guard = 10, x5 = y7, xd2 = x5.d, Ctor = x5.constructor, pr = Ctor.precision;
  if (x5.s < 1)
    throw Error(decimalError + (x5.s ? "NaN" : "-Infinity"));
  if (x5.eq(ONE))
    return new Ctor(0);
  if (sd2 == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd2;
  }
  if (x5.eq(10)) {
    if (sd2 == null)
      external = true;
    return getLn10(Ctor, wpr);
  }
  wpr += guard;
  Ctor.precision = wpr;
  c5 = digitsToString(xd2);
  c0 = c5.charAt(0);
  e3 = getBase10Exponent(x5);
  if (Math.abs(e3) < 15e14) {
    while (c0 < 7 && c0 != 1 || c0 == 1 && c5.charAt(1) > 3) {
      x5 = x5.times(y7);
      c5 = digitsToString(x5.d);
      c0 = c5.charAt(0);
      n3++;
    }
    e3 = getBase10Exponent(x5);
    if (c0 > 1) {
      x5 = new Ctor("0." + c5);
      e3++;
    } else {
      x5 = new Ctor(c0 + "." + c5.slice(1));
    }
  } else {
    t4 = getLn10(Ctor, wpr + 2, pr).times(e3 + "");
    x5 = ln(new Ctor(c0 + "." + c5.slice(1)), wpr - guard).plus(t4);
    Ctor.precision = pr;
    return sd2 == null ? (external = true, round(x5, pr)) : x5;
  }
  sum2 = numerator = x5 = divide(x5.minus(ONE), x5.plus(ONE), wpr);
  x22 = round(x5.times(x5), wpr);
  denominator = 3;
  for (; ; ) {
    numerator = round(numerator.times(x22), wpr);
    t4 = sum2.plus(divide(numerator, new Ctor(denominator), wpr));
    if (digitsToString(t4.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      sum2 = sum2.times(2);
      if (e3 !== 0)
        sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e3 + ""));
      sum2 = divide(sum2, new Ctor(n3), wpr);
      Ctor.precision = pr;
      return sd2 == null ? (external = true, round(sum2, pr)) : sum2;
    }
    sum2 = t4;
    denominator += 2;
  }
}
function parseDecimal(x5, str) {
  var e3, i, len;
  if ((e3 = str.indexOf(".")) > -1)
    str = str.replace(".", "");
  if ((i = str.search(/e/i)) > 0) {
    if (e3 < 0)
      e3 = i;
    e3 += +str.slice(i + 1);
    str = str.substring(0, i);
  } else if (e3 < 0) {
    e3 = str.length;
  }
  for (i = 0; str.charCodeAt(i) === 48; )
    ++i;
  for (len = str.length; str.charCodeAt(len - 1) === 48; )
    --len;
  str = str.slice(i, len);
  if (str) {
    len -= i;
    e3 = e3 - i - 1;
    x5.e = mathfloor(e3 / LOG_BASE);
    x5.d = [];
    i = (e3 + 1) % LOG_BASE;
    if (e3 < 0)
      i += LOG_BASE;
    if (i < len) {
      if (i)
        x5.d.push(+str.slice(0, i));
      for (len -= LOG_BASE; i < len; )
        x5.d.push(+str.slice(i, i += LOG_BASE));
      str = str.slice(i);
      i = LOG_BASE - str.length;
    } else {
      i -= len;
    }
    for (; i--; )
      str += "0";
    x5.d.push(+str);
    if (external && (x5.e > MAX_E || x5.e < -MAX_E))
      throw Error(exponentOutOfRange + e3);
  } else {
    x5.s = 0;
    x5.e = 0;
    x5.d = [0];
  }
  return x5;
}
function round(x5, sd2, rm) {
  var i, j2, k6, n3, rd2, doRound, w3, xdi, xd2 = x5.d;
  for (n3 = 1, k6 = xd2[0]; k6 >= 10; k6 /= 10)
    n3++;
  i = sd2 - n3;
  if (i < 0) {
    i += LOG_BASE;
    j2 = sd2;
    w3 = xd2[xdi = 0];
  } else {
    xdi = Math.ceil((i + 1) / LOG_BASE);
    k6 = xd2.length;
    if (xdi >= k6)
      return x5;
    w3 = k6 = xd2[xdi];
    for (n3 = 1; k6 >= 10; k6 /= 10)
      n3++;
    i %= LOG_BASE;
    j2 = i - LOG_BASE + n3;
  }
  if (rm !== void 0) {
    k6 = mathpow(10, n3 - j2 - 1);
    rd2 = w3 / k6 % 10 | 0;
    doRound = sd2 < 0 || xd2[xdi + 1] !== void 0 || w3 % k6;
    doRound = rm < 4 ? (rd2 || doRound) && (rm == 0 || rm == (x5.s < 0 ? 3 : 2)) : rd2 > 5 || rd2 == 5 && (rm == 4 || doRound || rm == 6 && (i > 0 ? j2 > 0 ? w3 / mathpow(10, n3 - j2) : 0 : xd2[xdi - 1]) % 10 & 1 || rm == (x5.s < 0 ? 8 : 7));
  }
  if (sd2 < 1 || !xd2[0]) {
    if (doRound) {
      k6 = getBase10Exponent(x5);
      xd2.length = 1;
      sd2 = sd2 - k6 - 1;
      xd2[0] = mathpow(10, (LOG_BASE - sd2 % LOG_BASE) % LOG_BASE);
      x5.e = mathfloor(-sd2 / LOG_BASE) || 0;
    } else {
      xd2.length = 1;
      xd2[0] = x5.e = x5.s = 0;
    }
    return x5;
  }
  if (i == 0) {
    xd2.length = xdi;
    k6 = 1;
    xdi--;
  } else {
    xd2.length = xdi + 1;
    k6 = mathpow(10, LOG_BASE - i);
    xd2[xdi] = j2 > 0 ? (w3 / mathpow(10, n3 - j2) % mathpow(10, j2) | 0) * k6 : 0;
  }
  if (doRound) {
    for (; ; ) {
      if (xdi == 0) {
        if ((xd2[0] += k6) == BASE) {
          xd2[0] = 1;
          ++x5.e;
        }
        break;
      } else {
        xd2[xdi] += k6;
        if (xd2[xdi] != BASE)
          break;
        xd2[xdi--] = 0;
        k6 = 1;
      }
    }
  }
  for (i = xd2.length; xd2[--i] === 0; )
    xd2.pop();
  if (external && (x5.e > MAX_E || x5.e < -MAX_E)) {
    throw Error(exponentOutOfRange + getBase10Exponent(x5));
  }
  return x5;
}
function subtract(x5, y7) {
  var d2, e3, i, j2, k6, len, xd2, xe2, xLTy, yd2, Ctor = x5.constructor, pr = Ctor.precision;
  if (!x5.s || !y7.s) {
    if (y7.s)
      y7.s = -y7.s;
    else
      y7 = new Ctor(x5);
    return external ? round(y7, pr) : y7;
  }
  xd2 = x5.d;
  yd2 = y7.d;
  e3 = y7.e;
  xe2 = x5.e;
  xd2 = xd2.slice();
  k6 = xe2 - e3;
  if (k6) {
    xLTy = k6 < 0;
    if (xLTy) {
      d2 = xd2;
      k6 = -k6;
      len = yd2.length;
    } else {
      d2 = yd2;
      e3 = xe2;
      len = xd2.length;
    }
    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
    if (k6 > i) {
      k6 = i;
      d2.length = 1;
    }
    d2.reverse();
    for (i = k6; i--; )
      d2.push(0);
    d2.reverse();
  } else {
    i = xd2.length;
    len = yd2.length;
    xLTy = i < len;
    if (xLTy)
      len = i;
    for (i = 0; i < len; i++) {
      if (xd2[i] != yd2[i]) {
        xLTy = xd2[i] < yd2[i];
        break;
      }
    }
    k6 = 0;
  }
  if (xLTy) {
    d2 = xd2;
    xd2 = yd2;
    yd2 = d2;
    y7.s = -y7.s;
  }
  len = xd2.length;
  for (i = yd2.length - len; i > 0; --i)
    xd2[len++] = 0;
  for (i = yd2.length; i > k6; ) {
    if (xd2[--i] < yd2[i]) {
      for (j2 = i; j2 && xd2[--j2] === 0; )
        xd2[j2] = BASE - 1;
      --xd2[j2];
      xd2[i] += BASE;
    }
    xd2[i] -= yd2[i];
  }
  for (; xd2[--len] === 0; )
    xd2.pop();
  for (; xd2[0] === 0; xd2.shift())
    --e3;
  if (!xd2[0])
    return new Ctor(0);
  y7.d = xd2;
  y7.e = e3;
  return external ? round(y7, pr) : y7;
}
function toString3(x5, isExp, sd2) {
  var k6, e3 = getBase10Exponent(x5), str = digitsToString(x5.d), len = str.length;
  if (isExp) {
    if (sd2 && (k6 = sd2 - len) > 0) {
      str = str.charAt(0) + "." + str.slice(1) + getZeroString(k6);
    } else if (len > 1) {
      str = str.charAt(0) + "." + str.slice(1);
    }
    str = str + (e3 < 0 ? "e" : "e+") + e3;
  } else if (e3 < 0) {
    str = "0." + getZeroString(-e3 - 1) + str;
    if (sd2 && (k6 = sd2 - len) > 0)
      str += getZeroString(k6);
  } else if (e3 >= len) {
    str += getZeroString(e3 + 1 - len);
    if (sd2 && (k6 = sd2 - e3 - 1) > 0)
      str = str + "." + getZeroString(k6);
  } else {
    if ((k6 = e3 + 1) < len)
      str = str.slice(0, k6) + "." + str.slice(k6);
    if (sd2 && (k6 = sd2 - len) > 0) {
      if (e3 + 1 === len)
        str += ".";
      str += getZeroString(k6);
    }
  }
  return x5.s < 0 ? "-" + str : str;
}
function truncate(arr, len) {
  if (arr.length > len) {
    arr.length = len;
    return true;
  }
}
function clone(obj) {
  var i, p3, ps;
  function Decimal2(value2) {
    var x5 = this;
    if (!(x5 instanceof Decimal2))
      return new Decimal2(value2);
    x5.constructor = Decimal2;
    if (value2 instanceof Decimal2) {
      x5.s = value2.s;
      x5.e = value2.e;
      x5.d = (value2 = value2.d) ? value2.slice() : value2;
      return;
    }
    if (typeof value2 === "number") {
      if (value2 * 0 !== 0) {
        throw Error(invalidArgument + value2);
      }
      if (value2 > 0) {
        x5.s = 1;
      } else if (value2 < 0) {
        value2 = -value2;
        x5.s = -1;
      } else {
        x5.s = 0;
        x5.e = 0;
        x5.d = [0];
        return;
      }
      if (value2 === ~~value2 && value2 < 1e7) {
        x5.e = 0;
        x5.d = [value2];
        return;
      }
      return parseDecimal(x5, value2.toString());
    } else if (typeof value2 !== "string") {
      throw Error(invalidArgument + value2);
    }
    if (value2.charCodeAt(0) === 45) {
      value2 = value2.slice(1);
      x5.s = -1;
    } else {
      x5.s = 1;
    }
    if (isDecimal.test(value2))
      parseDecimal(x5, value2);
    else
      throw Error(invalidArgument + value2);
  }
  Decimal2.prototype = P3;
  Decimal2.ROUND_UP = 0;
  Decimal2.ROUND_DOWN = 1;
  Decimal2.ROUND_CEIL = 2;
  Decimal2.ROUND_FLOOR = 3;
  Decimal2.ROUND_HALF_UP = 4;
  Decimal2.ROUND_HALF_DOWN = 5;
  Decimal2.ROUND_HALF_EVEN = 6;
  Decimal2.ROUND_HALF_CEIL = 7;
  Decimal2.ROUND_HALF_FLOOR = 8;
  Decimal2.clone = clone;
  Decimal2.config = Decimal2.set = config2;
  if (obj === void 0)
    obj = {};
  if (obj) {
    ps = ["precision", "rounding", "toExpNeg", "toExpPos", "LN10"];
    for (i = 0; i < ps.length; )
      if (!obj.hasOwnProperty(p3 = ps[i++]))
        obj[p3] = this[p3];
  }
  Decimal2.config(obj);
  return Decimal2;
}
function config2(obj) {
  if (!obj || typeof obj !== "object") {
    throw Error(decimalError + "Object expected");
  }
  var i, p3, v3, ps = [
    "precision",
    1,
    MAX_DIGITS,
    "rounding",
    0,
    8,
    "toExpNeg",
    -1 / 0,
    0,
    "toExpPos",
    0,
    1 / 0
  ];
  for (i = 0; i < ps.length; i += 3) {
    if ((v3 = obj[p3 = ps[i]]) !== void 0) {
      if (mathfloor(v3) === v3 && v3 >= ps[i + 1] && v3 <= ps[i + 2])
        this[p3] = v3;
      else
        throw Error(invalidArgument + p3 + ": " + v3);
    }
  }
  if ((v3 = obj[p3 = "LN10"]) !== void 0) {
    if (v3 == Math.LN10)
      this[p3] = new this(v3);
    else
      throw Error(invalidArgument + p3 + ": " + v3);
  }
  return this;
}
var Decimal = clone(defaults2);
ONE = new Decimal(1);
var Decimal$1 = Decimal;
function _toConsumableArray$42(arr) {
  return _arrayWithoutHoles$42(arr) || _iterableToArray$52(arr) || _nonIterableSpread$42();
}
function _nonIterableSpread$42() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$52(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$42(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
var identity$14 = function identity9(i) {
  return i;
};
var PLACE_HOLDER = {
  "@@functional/placeholder": true
};
var isPlaceHolder = function isPlaceHolder2(val) {
  return val === PLACE_HOLDER;
};
var curry0 = function curry02(fn) {
  return function _curried() {
    if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? void 0 : arguments[0])) {
      return _curried;
    }
    return fn.apply(void 0, arguments);
  };
};
var curryN = function curryN2(n3, fn) {
  if (n3 === 1) {
    return fn;
  }
  return curry0(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var argsLength = args.filter(function(arg) {
      return arg !== PLACE_HOLDER;
    }).length;
    if (argsLength >= n3) {
      return fn.apply(void 0, args);
    }
    return curryN2(n3 - argsLength, curry0(function() {
      for (var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        restArgs[_key2] = arguments[_key2];
      }
      var newArgs = args.map(function(arg) {
        return isPlaceHolder(arg) ? restArgs.shift() : arg;
      });
      return fn.apply(void 0, _toConsumableArray$42(newArgs).concat(restArgs));
    }));
  });
};
var curry = function curry2(fn) {
  return curryN(fn.length, fn);
};
var range4 = function range5(begin, end) {
  var arr = [];
  for (var i = begin; i < end; ++i) {
    arr[i - begin] = i;
  }
  return arr;
};
var map$12 = curry(function(fn, arr) {
  if (Array.isArray(arr)) {
    return arr.map(fn);
  }
  return Object.keys(arr).map(function(key) {
    return arr[key];
  }).map(fn);
});
var compose2 = function compose3() {
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }
  if (!args.length) {
    return identity$14;
  }
  var fns = args.reverse();
  var firstFn = fns[0];
  var tailsFn = fns.slice(1);
  return function() {
    return tailsFn.reduce(function(res, fn) {
      return fn(res);
    }, firstFn.apply(void 0, arguments));
  };
};
var reverse = function reverse2(arr) {
  if (Array.isArray(arr)) {
    return arr.reverse();
  }
  return arr.split("").reverse.join("");
};
var memoize2 = function memoize3(fn) {
  var lastArgs = null;
  var lastResult = null;
  return function() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    if (lastArgs && args.every(function(val, i) {
      return val === lastArgs[i];
    })) {
      return lastResult;
    }
    lastArgs = args;
    lastResult = fn.apply(void 0, args);
    return lastResult;
  };
};
function getDigitCount(value2) {
  var result;
  if (value2 === 0) {
    result = 1;
  } else {
    result = Math.floor(new Decimal$1(value2).abs().log(10).toNumber()) + 1;
  }
  return result;
}
function rangeStep(start2, end, step) {
  var num = new Decimal$1(start2);
  var i = 0;
  var result = [];
  while (num.lt(end) && i < 1e5) {
    result.push(num.toNumber());
    num = num.add(step);
    i++;
  }
  return result;
}
var interpolateNumber$1 = curry(function(a3, b10, t4) {
  var newA = +a3;
  var newB = +b10;
  return newA + t4 * (newB - newA);
});
var uninterpolateNumber = curry(function(a3, b10, x5) {
  var diff = b10 - +a3;
  diff = diff || Infinity;
  return (x5 - a3) / diff;
});
var uninterpolateTruncation = curry(function(a3, b10, x5) {
  var diff = b10 - +a3;
  diff = diff || Infinity;
  return Math.max(0, Math.min(1, (x5 - a3) / diff));
});
var Arithmetic = {
  rangeStep,
  getDigitCount,
  interpolateNumber: interpolateNumber$1,
  uninterpolateNumber,
  uninterpolateTruncation
};
function _toConsumableArray$52(arr) {
  return _arrayWithoutHoles$52(arr) || _iterableToArray$62(arr) || _nonIterableSpread$52();
}
function _nonIterableSpread$52() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray$62(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _arrayWithoutHoles$52(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function _slicedToArray$4(arr, i) {
  return _arrayWithHoles$5(arr) || _iterableToArrayLimit$4(arr, i) || _nonIterableRest$5();
}
function _nonIterableRest$5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit$4(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$5(arr) {
  if (Array.isArray(arr))
    return arr;
}
function getValidInterval(_ref) {
  var _ref2 = _slicedToArray$4(_ref, 2), min5 = _ref2[0], max6 = _ref2[1];
  var validMin = min5, validMax = max6;
  if (min5 > max6) {
    validMin = max6;
    validMax = min5;
  }
  return [validMin, validMax];
}
function getFormatStep(roughStep, allowDecimals, correctionFactor) {
  if (roughStep.lte(0)) {
    return new Decimal$1(0);
  }
  var digitCount = Arithmetic.getDigitCount(roughStep.toNumber());
  var digitCountValue = new Decimal$1(10).pow(digitCount);
  var stepRatio = roughStep.div(digitCountValue);
  var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;
  var amendStepRatio = new Decimal$1(Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);
  var formatStep = amendStepRatio.mul(digitCountValue);
  return allowDecimals ? formatStep : new Decimal$1(Math.ceil(formatStep));
}
function getTickOfSingleValue(value2, tickCount, allowDecimals) {
  var step = 1;
  var middle = new Decimal$1(value2);
  if (!middle.isint() && allowDecimals) {
    var absVal = Math.abs(value2);
    if (absVal < 1) {
      step = new Decimal$1(10).pow(Arithmetic.getDigitCount(value2) - 1);
      middle = new Decimal$1(Math.floor(middle.div(step).toNumber())).mul(step);
    } else if (absVal > 1) {
      middle = new Decimal$1(Math.floor(value2));
    }
  } else if (value2 === 0) {
    middle = new Decimal$1(Math.floor((tickCount - 1) / 2));
  } else if (!allowDecimals) {
    middle = new Decimal$1(Math.floor(value2));
  }
  var middleIndex = Math.floor((tickCount - 1) / 2);
  var fn = compose2(map$12(function(n3) {
    return middle.add(new Decimal$1(n3 - middleIndex).mul(step)).toNumber();
  }), range4);
  return fn(0, tickCount);
}
function calculateStep(min5, max6, tickCount, allowDecimals) {
  var correctionFactor = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
  if (!Number.isFinite((max6 - min5) / (tickCount - 1))) {
    return {
      step: new Decimal$1(0),
      tickMin: new Decimal$1(0),
      tickMax: new Decimal$1(0)
    };
  }
  var step = getFormatStep(new Decimal$1(max6).sub(min5).div(tickCount - 1), allowDecimals, correctionFactor);
  var middle;
  if (min5 <= 0 && max6 >= 0) {
    middle = new Decimal$1(0);
  } else {
    middle = new Decimal$1(min5).add(max6).div(2);
    middle = middle.sub(new Decimal$1(middle).mod(step));
  }
  var belowCount = Math.ceil(middle.sub(min5).div(step).toNumber());
  var upCount = Math.ceil(new Decimal$1(max6).sub(middle).div(step).toNumber());
  var scaleCount = belowCount + upCount + 1;
  if (scaleCount > tickCount) {
    return calculateStep(min5, max6, tickCount, allowDecimals, correctionFactor + 1);
  }
  if (scaleCount < tickCount) {
    upCount = max6 > 0 ? upCount + (tickCount - scaleCount) : upCount;
    belowCount = max6 > 0 ? belowCount : belowCount + (tickCount - scaleCount);
  }
  return {
    step,
    tickMin: middle.sub(new Decimal$1(belowCount).mul(step)),
    tickMax: middle.add(new Decimal$1(upCount).mul(step))
  };
}
function getNiceTickValuesFn(_ref3) {
  var _ref4 = _slicedToArray$4(_ref3, 2), min5 = _ref4[0], max6 = _ref4[1];
  var tickCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 6;
  var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var count2 = Math.max(tickCount, 2);
  var _getValidInterval = getValidInterval([min5, max6]), _getValidInterval2 = _slicedToArray$4(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];
  if (cormin === -Infinity || cormax === Infinity) {
    var _values = cormax === Infinity ? [cormin].concat(_toConsumableArray$52(range4(0, tickCount - 1).map(function() {
      return Infinity;
    }))) : _toConsumableArray$52(range4(0, tickCount - 1).map(function() {
      return -Infinity;
    })).concat([cormax]);
    return min5 > max6 ? reverse(_values) : _values;
  }
  if (cormin === cormax) {
    return getTickOfSingleValue(cormin, tickCount, allowDecimals);
  }
  var _calculateStep = calculateStep(cormin, cormax, count2, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;
  var values2 = Arithmetic.rangeStep(tickMin, tickMax.add(new Decimal$1(0.1).mul(step)), step);
  return min5 > max6 ? reverse(values2) : values2;
}
function getTickValuesFixedDomainFn(_ref7, tickCount) {
  var _ref8 = _slicedToArray$4(_ref7, 2), min5 = _ref8[0], max6 = _ref8[1];
  var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var _getValidInterval5 = getValidInterval([min5, max6]), _getValidInterval6 = _slicedToArray$4(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];
  if (cormin === -Infinity || cormax === Infinity) {
    return [min5, max6];
  }
  if (cormin === cormax) {
    return [cormin];
  }
  var count2 = Math.max(tickCount, 2);
  var step = getFormatStep(new Decimal$1(cormax).sub(cormin).div(count2 - 1), allowDecimals, 0);
  var values2 = _toConsumableArray$52(Arithmetic.rangeStep(new Decimal$1(cormin), new Decimal$1(cormax).sub(new Decimal$1(0.99).mul(step)), step)).concat([cormax]);
  return min5 > max6 ? reverse(values2) : values2;
}
var getNiceTickValues = memoize2(getNiceTickValuesFn);
var getTickValuesFixedDomain = memoize2(getTickValuesFixedDomainFn);
function _toConsumableArray$62(arr) {
  return _arrayWithoutHoles$62(arr) || _iterableToArray$72(arr) || _unsupportedIterableToArray$3(arr) || _nonIterableSpread$62();
}
function _nonIterableSpread$62() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$3(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$3(o, minLen);
}
function _iterableToArray$72(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$62(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$3(arr);
}
function _arrayLikeToArray$3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function ownKeys$6(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$92(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$6(Object(source), true).forEach(function(key) {
        _defineProperty$92(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$6(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$92(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function getValueByDataKey(obj, dataKey, defaultValue) {
  if (isNil_1(obj) || isNil_1(dataKey)) {
    return defaultValue;
  }
  if (isNumOrStr(dataKey)) {
    return get_1(obj, dataKey, defaultValue);
  }
  if (isFunction_1(dataKey)) {
    return dataKey(obj);
  }
  return defaultValue;
}
function getDomainOfDataByKey(data3, key, type3, filterNil) {
  var flattenData = flatMap_1(data3, function(entry) {
    return getValueByDataKey(entry, key);
  });
  if (type3 === "number") {
    var domain = flattenData.filter(function(entry) {
      return isNumber$1(entry) || parseFloat(entry);
    });
    return domain.length ? [min_1(domain), max_1(domain)] : [Infinity, -Infinity];
  }
  var validateData = filterNil ? flattenData.filter(function(entry) {
    return !isNil_1(entry);
  }) : flattenData;
  return validateData.map(function(entry) {
    return isNumOrStr(entry) || entry instanceof Date ? entry : "";
  });
}
var calculateActiveTickIndex = function calculateActiveTickIndex2(coordinate) {
  var _ticks$length;
  var ticks4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var unsortedTicks = arguments.length > 2 ? arguments[2] : void 0;
  var axis2 = arguments.length > 3 ? arguments[3] : void 0;
  var index4 = -1;
  var len = (_ticks$length = ticks4 === null || ticks4 === void 0 ? void 0 : ticks4.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;
  if (len > 1) {
    if (axis2 && axis2.axisType === "angleAxis" && Math.abs(Math.abs(axis2.range[1] - axis2.range[0]) - 360) <= 1e-6) {
      var range7 = axis2.range;
      for (var i = 0; i < len; i++) {
        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;
        var cur = unsortedTicks[i].coordinate;
        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;
        var sameDirectionCoord = void 0;
        if (mathSign(cur - before) !== mathSign(after - cur)) {
          var diffInterval = [];
          if (mathSign(after - cur) === mathSign(range7[1] - range7[0])) {
            sameDirectionCoord = after;
            var curInRange = cur + range7[1] - range7[0];
            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);
            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);
          } else {
            sameDirectionCoord = before;
            var afterInRange = after + range7[1] - range7[0];
            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);
            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);
          }
          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];
          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {
            index4 = unsortedTicks[i].index;
            break;
          }
        } else {
          var min5 = Math.min(before, after);
          var max6 = Math.max(before, after);
          if (coordinate > (min5 + cur) / 2 && coordinate <= (max6 + cur) / 2) {
            index4 = unsortedTicks[i].index;
            break;
          }
        }
      }
    } else {
      for (var _i = 0; _i < len; _i++) {
        if (_i === 0 && coordinate <= (ticks4[_i].coordinate + ticks4[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks4[_i].coordinate + ticks4[_i - 1].coordinate) / 2 && coordinate <= (ticks4[_i].coordinate + ticks4[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks4[_i].coordinate + ticks4[_i - 1].coordinate) / 2) {
          index4 = ticks4[_i].index;
          break;
        }
      }
    }
  } else {
    index4 = 0;
  }
  return index4;
};
var getMainColorOfGraphicItem = function getMainColorOfGraphicItem2(item) {
  var _ref = item, displayName = _ref.type.displayName;
  var _item$props = item.props, stroke = _item$props.stroke, fill = _item$props.fill;
  var result;
  switch (displayName) {
    case "Line":
      result = stroke;
      break;
    case "Area":
    case "Radar":
      result = stroke && stroke !== "none" ? stroke : fill;
      break;
    default:
      result = fill;
      break;
  }
  return result;
};
var getLegendProps = function getLegendProps2(_ref2) {
  var children2 = _ref2.children, formatedGraphicalItems = _ref2.formatedGraphicalItems, legendWidth = _ref2.legendWidth, legendContent = _ref2.legendContent;
  var legendItem = findChildByType(children2, Legend2.displayName);
  if (!legendItem) {
    return null;
  }
  var legendData;
  if (legendItem.props && legendItem.props.payload) {
    legendData = legendItem.props && legendItem.props.payload;
  } else if (legendContent === "children") {
    legendData = (formatedGraphicalItems || []).reduce(function(result, _ref3) {
      var item = _ref3.item, props = _ref3.props;
      var data3 = props.sectors || props.data || [];
      return result.concat(data3.map(function(entry) {
        return {
          type: legendItem.props.iconType || item.props.legendType,
          value: entry.name,
          color: entry.fill,
          payload: entry
        };
      }));
    }, []);
  } else {
    legendData = (formatedGraphicalItems || []).map(function(_ref4) {
      var item = _ref4.item;
      var _item$props2 = item.props, dataKey = _item$props2.dataKey, name = _item$props2.name, legendType = _item$props2.legendType, hide = _item$props2.hide;
      return {
        inactive: hide,
        dataKey,
        type: legendItem.props.iconType || legendType || "square",
        color: getMainColorOfGraphicItem(item),
        value: name || dataKey,
        payload: item.props
      };
    });
  }
  return _objectSpread$92(_objectSpread$92(_objectSpread$92({}, legendItem.props), Legend2.getWithHeight(legendItem, legendWidth)), {}, {
    payload: legendData,
    item: legendItem
  });
};
var getBarSizeList = function getBarSizeList2(_ref5) {
  var globalSize = _ref5.barSize, _ref5$stackGroups = _ref5.stackGroups, stackGroups = _ref5$stackGroups === void 0 ? {} : _ref5$stackGroups;
  if (!stackGroups) {
    return {};
  }
  var result = {};
  var numericAxisIds = Object.keys(stackGroups);
  for (var i = 0, len = numericAxisIds.length; i < len; i++) {
    var sgs = stackGroups[numericAxisIds[i]].stackGroups;
    var stackIds = Object.keys(sgs);
    for (var j2 = 0, sLen = stackIds.length; j2 < sLen; j2++) {
      var _sgs$stackIds$j = sgs[stackIds[j2]], items = _sgs$stackIds$j.items, cateAxisId = _sgs$stackIds$j.cateAxisId;
      var barItems = items.filter(function(item) {
        return getDisplayName(item.type).indexOf("Bar") >= 0;
      });
      if (barItems && barItems.length) {
        var selfSize = barItems[0].props.barSize;
        var cateId = barItems[0].props[cateAxisId];
        if (!result[cateId]) {
          result[cateId] = [];
        }
        result[cateId].push({
          item: barItems[0],
          stackList: barItems.slice(1),
          barSize: isNil_1(selfSize) ? globalSize : selfSize
        });
      }
    }
  }
  return result;
};
var getBarPosition = function getBarPosition2(_ref6) {
  var barGap = _ref6.barGap, barCategoryGap = _ref6.barCategoryGap, bandSize = _ref6.bandSize, _ref6$sizeList = _ref6.sizeList, sizeList = _ref6$sizeList === void 0 ? [] : _ref6$sizeList, maxBarSize = _ref6.maxBarSize;
  var len = sizeList.length;
  if (len < 1)
    return null;
  var realBarGap = getPercentValue(barGap, bandSize, 0, true);
  var result;
  if (sizeList[0].barSize === +sizeList[0].barSize) {
    var useFull = false;
    var fullBarSize = bandSize / len;
    var sum2 = sizeList.reduce(function(res, entry) {
      return res + entry.barSize || 0;
    }, 0);
    sum2 += (len - 1) * realBarGap;
    if (sum2 >= bandSize) {
      sum2 -= (len - 1) * realBarGap;
      realBarGap = 0;
    }
    if (sum2 >= bandSize && fullBarSize > 0) {
      useFull = true;
      fullBarSize *= 0.9;
      sum2 = len * fullBarSize;
    }
    var offset = (bandSize - sum2) / 2 >> 0;
    var prev = {
      offset: offset - realBarGap,
      size: 0
    };
    result = sizeList.reduce(function(res, entry) {
      var newRes = [].concat(_toConsumableArray$62(res), [{
        item: entry.item,
        position: {
          offset: prev.offset + prev.size + realBarGap,
          size: useFull ? fullBarSize : entry.barSize
        }
      }]);
      prev = newRes[newRes.length - 1].position;
      if (entry.stackList && entry.stackList.length) {
        entry.stackList.forEach(function(item) {
          newRes.push({
            item,
            position: prev
          });
        });
      }
      return newRes;
    }, []);
  } else {
    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);
    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {
      realBarGap = 0;
    }
    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;
    if (originalSize > 1) {
      originalSize >>= 0;
    }
    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;
    result = sizeList.reduce(function(res, entry, i) {
      var newRes = [].concat(_toConsumableArray$62(res), [{
        item: entry.item,
        position: {
          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,
          size
        }
      }]);
      if (entry.stackList && entry.stackList.length) {
        entry.stackList.forEach(function(item) {
          newRes.push({
            item,
            position: newRes[newRes.length - 1].position
          });
        });
      }
      return newRes;
    }, []);
  }
  return result;
};
var appendOffsetOfLegend = function appendOffsetOfLegend2(offset, items, props, legendBox) {
  var children2 = props.children, width = props.width, margin = props.margin;
  var legendWidth = width - (margin.left || 0) - (margin.right || 0);
  var legendProps = getLegendProps({
    children: children2,
    legendWidth
  });
  var newOffset = offset;
  if (legendProps) {
    var box = legendBox || {};
    var align = legendProps.align, verticalAlign = legendProps.verticalAlign, layout = legendProps.layout;
    if ((layout === "vertical" || layout === "horizontal" && verticalAlign === "center") && isNumber$1(offset[align])) {
      newOffset = _objectSpread$92(_objectSpread$92({}, offset), {}, _defineProperty$92({}, align, newOffset[align] + (box.width || 0)));
    }
    if ((layout === "horizontal" || layout === "vertical" && align === "center") && isNumber$1(offset[verticalAlign])) {
      newOffset = _objectSpread$92(_objectSpread$92({}, offset), {}, _defineProperty$92({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));
    }
  }
  return newOffset;
};
var getDomainOfErrorBars = function getDomainOfErrorBars2(data3, item, dataKey, axisType) {
  var children2 = item.props.children;
  var errorBars = findAllByType(children2, "ErrorBar").filter(function(errorBarChild) {
    var direction = errorBarChild.props.direction;
    return isNil_1(direction) || isNil_1(axisType) ? true : axisType.indexOf(direction) >= 0;
  });
  if (errorBars && errorBars.length) {
    var keys4 = errorBars.map(function(errorBarChild) {
      return errorBarChild.props.dataKey;
    });
    return data3.reduce(function(result, entry) {
      var entryValue = getValueByDataKey(entry, dataKey, 0);
      var mainValue = isArray_1(entryValue) ? [min_1(entryValue), max_1(entryValue)] : [entryValue, entryValue];
      var errorDomain = keys4.reduce(function(prevErrorArr, k6) {
        var errorValue = getValueByDataKey(entry, k6, 0);
        var lowerValue = mainValue[0] - Math.abs(isArray_1(errorValue) ? errorValue[0] : errorValue);
        var upperValue = mainValue[1] + Math.abs(isArray_1(errorValue) ? errorValue[1] : errorValue);
        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];
      }, [Infinity, -Infinity]);
      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];
    }, [Infinity, -Infinity]);
  }
  return null;
};
var parseErrorBarsOfAxis = function parseErrorBarsOfAxis2(data3, items, dataKey, axisType) {
  var domains = items.map(function(item) {
    return getDomainOfErrorBars(data3, item, dataKey, axisType);
  }).filter(function(entry) {
    return !isNil_1(entry);
  });
  if (domains && domains.length) {
    return domains.reduce(function(result, entry) {
      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
    }, [Infinity, -Infinity]);
  }
  return null;
};
var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis2(data3, items, type3, filterNil) {
  var domains = items.map(function(item) {
    var dataKey = item.props.dataKey;
    if (type3 === "number" && dataKey) {
      return getDomainOfErrorBars(data3, item, dataKey) || getDomainOfDataByKey(data3, dataKey, type3, filterNil);
    }
    return getDomainOfDataByKey(data3, dataKey, type3, filterNil);
  });
  if (type3 === "number") {
    return domains.reduce(function(result, entry) {
      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
    }, [Infinity, -Infinity]);
  }
  var tag = {};
  return domains.reduce(function(result, entry) {
    for (var i = 0, len = entry.length; i < len; i++) {
      if (!tag[entry[i]]) {
        tag[entry[i]] = true;
        result.push(entry[i]);
      }
    }
    return result;
  }, []);
};
var isCategoricalAxis = function isCategoricalAxis2(layout, axisType) {
  return layout === "horizontal" && axisType === "xAxis" || layout === "vertical" && axisType === "yAxis" || layout === "centric" && axisType === "angleAxis" || layout === "radial" && axisType === "radiusAxis";
};
var getCoordinatesOfGrid = function getCoordinatesOfGrid2(ticks4, min5, max6) {
  var hasMin, hasMax;
  var values2 = ticks4.map(function(entry) {
    if (entry.coordinate === min5) {
      hasMin = true;
    }
    if (entry.coordinate === max6) {
      hasMax = true;
    }
    return entry.coordinate;
  });
  if (!hasMin) {
    values2.push(min5);
  }
  if (!hasMax) {
    values2.push(max6);
  }
  return values2;
};
var getTicksOfAxis = function getTicksOfAxis2(axis2, isGrid, isAll) {
  if (!axis2)
    return null;
  var scale = axis2.scale;
  var duplicateDomain = axis2.duplicateDomain, type3 = axis2.type, range7 = axis2.range;
  var offset = (isGrid || isAll) && type3 === "category" && scale.bandwidth ? scale.bandwidth() / 2 : 0;
  offset = axis2.axisType === "angleAxis" ? mathSign(range7[0] - range7[1]) * 2 * offset : offset;
  if (isGrid && (axis2.ticks || axis2.niceTicks)) {
    return (axis2.ticks || axis2.niceTicks).map(function(entry) {
      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;
      return {
        coordinate: scale(scaleContent) + offset,
        value: entry,
        offset
      };
    });
  }
  if (axis2.isCategorical && axis2.categoricalDomain) {
    return axis2.categoricalDomain.map(function(entry, index4) {
      return {
        coordinate: scale(entry) + offset,
        value: entry,
        index: index4,
        offset
      };
    });
  }
  if (scale.ticks && !isAll) {
    return scale.ticks(axis2.tickCount).map(function(entry) {
      return {
        coordinate: scale(entry) + offset,
        value: entry,
        offset
      };
    });
  }
  return scale.domain().map(function(entry, index4) {
    return {
      coordinate: scale(entry) + offset,
      value: duplicateDomain ? duplicateDomain[entry] : entry,
      index: index4,
      offset
    };
  });
};
var combineEventHandlers = function combineEventHandlers2(defaultHandler, parentHandler, childHandler) {
  var customizedHandler;
  if (isFunction_1(childHandler)) {
    customizedHandler = childHandler;
  } else if (isFunction_1(parentHandler)) {
    customizedHandler = parentHandler;
  }
  if (isFunction_1(defaultHandler) || customizedHandler) {
    return function(arg1, arg2, arg3, arg4) {
      if (isFunction_1(defaultHandler)) {
        defaultHandler(arg1, arg2, arg3, arg4);
      }
      if (isFunction_1(customizedHandler)) {
        customizedHandler(arg1, arg2, arg3, arg4);
      }
    };
  }
  return null;
};
var parseScale = function parseScale2(axis2, chartType) {
  var scale = axis2.scale, type3 = axis2.type, layout = axis2.layout, axisType = axis2.axisType;
  if (scale === "auto") {
    if (layout === "radial" && axisType === "radiusAxis") {
      return {
        scale: band(),
        realScaleType: "band"
      };
    }
    if (layout === "radial" && axisType === "angleAxis") {
      return {
        scale: linear2(),
        realScaleType: "linear"
      };
    }
    if (type3 === "category" && chartType && (chartType.indexOf("LineChart") >= 0 || chartType.indexOf("AreaChart") >= 0 || chartType.indexOf("ComposedChart") >= 0)) {
      return {
        scale: point(),
        realScaleType: "point"
      };
    }
    if (type3 === "category") {
      return {
        scale: band(),
        realScaleType: "band"
      };
    }
    return {
      scale: linear2(),
      realScaleType: "linear"
    };
  }
  if (isString_1(scale)) {
    var name = "scale".concat(upperFirst_1(scale));
    return {
      scale: (d3Scales[name] || point)(),
      realScaleType: d3Scales[name] ? name : "point"
    };
  }
  return isFunction_1(scale) ? {
    scale
  } : {
    scale: point(),
    realScaleType: "point"
  };
};
var EPS$2 = 1e-4;
var checkDomainOfScale = function checkDomainOfScale2(scale) {
  var domain = scale.domain();
  if (!domain || domain.length <= 2) {
    return;
  }
  var len = domain.length;
  var range7 = scale.range();
  var min5 = Math.min(range7[0], range7[1]) - EPS$2;
  var max6 = Math.max(range7[0], range7[1]) + EPS$2;
  var first = scale(domain[0]);
  var last2 = scale(domain[len - 1]);
  if (first < min5 || first > max6 || last2 < min5 || last2 > max6) {
    scale.domain([domain[0], domain[len - 1]]);
  }
};
var offsetSign = function offsetSign2(series) {
  var n3 = series.length;
  if (n3 <= 0) {
    return;
  }
  for (var j2 = 0, m3 = series[0].length; j2 < m3; ++j2) {
    var positive = 0;
    var negative = 0;
    for (var i = 0; i < n3; ++i) {
      var value2 = _isNaN(series[i][j2][1]) ? series[i][j2][0] : series[i][j2][1];
      if (value2 >= 0) {
        series[i][j2][0] = positive;
        series[i][j2][1] = positive + value2;
        positive = series[i][j2][1];
      } else {
        series[i][j2][0] = negative;
        series[i][j2][1] = negative + value2;
        negative = series[i][j2][1];
      }
    }
  }
};
var offsetPositive = function offsetPositive2(series) {
  var n3 = series.length;
  if (n3 <= 0) {
    return;
  }
  for (var j2 = 0, m3 = series[0].length; j2 < m3; ++j2) {
    var positive = 0;
    for (var i = 0; i < n3; ++i) {
      var value2 = _isNaN(series[i][j2][1]) ? series[i][j2][0] : series[i][j2][1];
      if (value2 >= 0) {
        series[i][j2][0] = positive;
        series[i][j2][1] = positive + value2;
        positive = series[i][j2][1];
      } else {
        series[i][j2][0] = 0;
        series[i][j2][1] = 0;
      }
    }
  }
};
var STACK_OFFSET_MAP = {
  sign: offsetSign,
  expand: stackOffsetExpand2,
  none: stackOffsetNone2,
  silhouette: stackOffsetSilhouette2,
  wiggle: stackOffsetWiggle2,
  positive: offsetPositive
};
var getStackedData = function getStackedData2(data3, stackItems, offsetType) {
  var dataKeys = stackItems.map(function(item) {
    return item.props.dataKey;
  });
  var stack3 = shapeStack().keys(dataKeys).value(function(d2, key) {
    return +getValueByDataKey(d2, key, 0);
  }).order(stackOrderNone2).offset(STACK_OFFSET_MAP[offsetType]);
  return stack3(data3);
};
var getStackGroupsByAxisId = function getStackGroupsByAxisId2(data3, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {
  if (!data3) {
    return null;
  }
  var items = reverseStackOrder ? _items.reverse() : _items;
  var stackGroups = items.reduce(function(result, item) {
    var _item$props3 = item.props, stackId = _item$props3.stackId, hide = _item$props3.hide;
    if (hide) {
      return result;
    }
    var axisId = item.props[numericAxisId];
    var parentGroup = result[axisId] || {
      hasStack: false,
      stackGroups: {}
    };
    if (isNumOrStr(stackId)) {
      var childGroup = parentGroup.stackGroups[stackId] || {
        numericAxisId,
        cateAxisId,
        items: []
      };
      childGroup.items.push(item);
      parentGroup.hasStack = true;
      parentGroup.stackGroups[stackId] = childGroup;
    } else {
      parentGroup.stackGroups[uniqueId2("_stackId_")] = {
        numericAxisId,
        cateAxisId,
        items: [item]
      };
    }
    return _objectSpread$92(_objectSpread$92({}, result), {}, _defineProperty$92({}, axisId, parentGroup));
  }, {});
  return Object.keys(stackGroups).reduce(function(result, axisId) {
    var group = stackGroups[axisId];
    if (group.hasStack) {
      group.stackGroups = Object.keys(group.stackGroups).reduce(function(res, stackId) {
        var g2 = group.stackGroups[stackId];
        return _objectSpread$92(_objectSpread$92({}, res), {}, _defineProperty$92({}, stackId, {
          numericAxisId,
          cateAxisId,
          items: g2.items,
          stackedData: getStackedData(data3, g2.items, offsetType)
        }));
      }, {});
    }
    return _objectSpread$92(_objectSpread$92({}, result), {}, _defineProperty$92({}, axisId, group));
  }, {});
};
var calculateDomainOfTicks = function calculateDomainOfTicks2(ticks4, type3) {
  if (type3 === "number") {
    return [min_1(ticks4), max_1(ticks4)];
  }
  return ticks4;
};
var getTicksOfScale = function getTicksOfScale2(scale, opts) {
  var realScaleType = opts.realScaleType, type3 = opts.type, tickCount = opts.tickCount, originalDomain = opts.originalDomain, allowDecimals = opts.allowDecimals;
  var scaleType = realScaleType || opts.scale;
  if (scaleType !== "auto" && scaleType !== "linear") {
    return null;
  }
  if (tickCount && type3 === "number" && originalDomain && (originalDomain[0] === "auto" || originalDomain[1] === "auto")) {
    var domain = scale.domain();
    if (!domain.length) {
      return null;
    }
    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);
    scale.domain(calculateDomainOfTicks(tickValues, type3));
    return {
      niceTicks: tickValues
    };
  }
  if (tickCount && type3 === "number") {
    var _domain = scale.domain();
    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);
    return {
      niceTicks: _tickValues
    };
  }
  return null;
};
var getCateCoordinateOfLine = function getCateCoordinateOfLine2(_ref7) {
  var axis2 = _ref7.axis, ticks4 = _ref7.ticks, bandSize = _ref7.bandSize, entry = _ref7.entry, index4 = _ref7.index, dataKey = _ref7.dataKey;
  if (axis2.type === "category") {
    if (!axis2.allowDuplicatedCategory && axis2.dataKey && !isNil_1(entry[axis2.dataKey])) {
      var matchedTick = findEntryInArray(ticks4, "value", entry[axis2.dataKey]);
      if (matchedTick) {
        return matchedTick.coordinate + bandSize / 2;
      }
    }
    return ticks4[index4] ? ticks4[index4].coordinate + bandSize / 2 : null;
  }
  var value2 = getValueByDataKey(entry, !isNil_1(dataKey) ? dataKey : axis2.dataKey);
  return !isNil_1(value2) ? axis2.scale(value2) : null;
};
var getStackedDataOfItem = function getStackedDataOfItem2(item, stackGroups) {
  var stackId = item.props.stackId;
  if (isNumOrStr(stackId)) {
    var group = stackGroups[stackId];
    if (group && group.items.length) {
      var itemIndex = -1;
      for (var i = 0, len = group.items.length; i < len; i++) {
        if (group.items[i] === item) {
          itemIndex = i;
          break;
        }
      }
      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;
    }
  }
  return null;
};
var getDomainOfSingle = function getDomainOfSingle2(data3) {
  return data3.reduce(function(result, entry) {
    return [min_1(entry.concat([result[0]]).filter(isNumber$1)), max_1(entry.concat([result[1]]).filter(isNumber$1))];
  }, [Infinity, -Infinity]);
};
var getDomainOfStackGroups = function getDomainOfStackGroups2(stackGroups, startIndex, endIndex) {
  return Object.keys(stackGroups).reduce(function(result, stackId) {
    var group = stackGroups[stackId];
    var stackedData = group.stackedData;
    var domain = stackedData.reduce(function(res, entry) {
      var s4 = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));
      return [Math.min(res[0], s4[0]), Math.max(res[1], s4[1])];
    }, [Infinity, -Infinity]);
    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];
  }, [Infinity, -Infinity]).map(function(result) {
    return result === Infinity || result === -Infinity ? 0 : result;
  });
};
var MIN_VALUE_REG = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var MAX_VALUE_REG = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var parseSpecifiedDomain = function parseSpecifiedDomain2(specifiedDomain, dataDomain, allowDataOverflow) {
  if (!isArray_1(specifiedDomain)) {
    return dataDomain;
  }
  var domain = [];
  if (isNumber$1(specifiedDomain[0])) {
    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);
  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {
    var value2 = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];
    domain[0] = dataDomain[0] - value2;
  } else if (isFunction_1(specifiedDomain[0])) {
    domain[0] = specifiedDomain[0](dataDomain[0]);
  } else {
    domain[0] = dataDomain[0];
  }
  if (isNumber$1(specifiedDomain[1])) {
    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);
  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {
    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];
    domain[1] = dataDomain[1] + _value;
  } else if (isFunction_1(specifiedDomain[1])) {
    domain[1] = specifiedDomain[1](dataDomain[1]);
  } else {
    domain[1] = dataDomain[1];
  }
  return domain;
};
var getBandSizeOfAxis = function getBandSizeOfAxis2(axis2, ticks4, isBar) {
  if (axis2 && axis2.scale && axis2.scale.bandwidth) {
    var bandWidth = axis2.scale.bandwidth();
    if (!isBar || bandWidth > 0) {
      return bandWidth;
    }
  }
  if (axis2 && ticks4 && ticks4.length >= 2) {
    var orderedTicks = sortBy_1(ticks4, function(o) {
      return o.coordinate;
    });
    var bandSize = Infinity;
    for (var i = 1, len = orderedTicks.length; i < len; i++) {
      var cur = orderedTicks[i];
      var prev = orderedTicks[i - 1];
      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);
    }
    return bandSize === Infinity ? 0 : bandSize;
  }
  return 0;
};
var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis2(specifiedDomain, calculatedDomain, axisChild) {
  if (!specifiedDomain || !specifiedDomain.length) {
    return calculatedDomain;
  }
  if (isEqual_1(specifiedDomain, get_1(axisChild, "type.defaultProps.domain"))) {
    return calculatedDomain;
  }
  return specifiedDomain;
};
function ownKeys$7(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$a2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$7(Object(source), true).forEach(function(key) {
        _defineProperty$a2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$7(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$a2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var RADIAN$1 = Math.PI / 180;
var radianToDegree = function radianToDegree2(angleInRadian) {
  return angleInRadian * 180 / Math.PI;
};
var polarToCartesian = function polarToCartesian2(cx, cy, radius, angle) {
  return {
    x: cx + Math.cos(-RADIAN$1 * angle) * radius,
    y: cy + Math.sin(-RADIAN$1 * angle) * radius
  };
};
var distanceBetweenPoints = function distanceBetweenPoints2(point8, anotherPoint) {
  var x14 = point8.x, y14 = point8.y;
  var x22 = anotherPoint.x, y22 = anotherPoint.y;
  return Math.sqrt(Math.pow(x14 - x22, 2) + Math.pow(y14 - y22, 2));
};
var getAngleOfPoint = function getAngleOfPoint2(_ref, _ref2) {
  var x5 = _ref.x, y7 = _ref.y;
  var cx = _ref2.cx, cy = _ref2.cy;
  var radius = distanceBetweenPoints({
    x: x5,
    y: y7
  }, {
    x: cx,
    y: cy
  });
  if (radius <= 0) {
    return {
      radius
    };
  }
  var cos3 = (x5 - cx) / radius;
  var angleInRadian = Math.acos(cos3);
  if (y7 > cy) {
    angleInRadian = 2 * Math.PI - angleInRadian;
  }
  return {
    radius,
    angle: radianToDegree(angleInRadian),
    angleInRadian
  };
};
var formatAngleOfSector = function formatAngleOfSector2(_ref3) {
  var startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
  var startCnt = Math.floor(startAngle / 360);
  var endCnt = Math.floor(endAngle / 360);
  var min5 = Math.min(startCnt, endCnt);
  return {
    startAngle: startAngle - min5 * 360,
    endAngle: endAngle - min5 * 360
  };
};
var reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor2(angle, _ref4) {
  var startAngle = _ref4.startAngle, endAngle = _ref4.endAngle;
  var startCnt = Math.floor(startAngle / 360);
  var endCnt = Math.floor(endAngle / 360);
  var min5 = Math.min(startCnt, endCnt);
  return angle + min5 * 360;
};
var inRangeOfSector = function inRangeOfSector2(_ref5, sector) {
  var x5 = _ref5.x, y7 = _ref5.y;
  var _getAngleOfPoint = getAngleOfPoint({
    x: x5,
    y: y7
  }, sector), radius = _getAngleOfPoint.radius, angle = _getAngleOfPoint.angle;
  var innerRadius = sector.innerRadius, outerRadius = sector.outerRadius;
  if (radius < innerRadius || radius > outerRadius) {
    return false;
  }
  if (radius === 0) {
    return true;
  }
  var _formatAngleOfSector = formatAngleOfSector(sector), startAngle = _formatAngleOfSector.startAngle, endAngle = _formatAngleOfSector.endAngle;
  var formatAngle = angle;
  var inRange;
  if (startAngle <= endAngle) {
    while (formatAngle > endAngle) {
      formatAngle -= 360;
    }
    while (formatAngle < startAngle) {
      formatAngle += 360;
    }
    inRange = formatAngle >= startAngle && formatAngle <= endAngle;
  } else {
    while (formatAngle > startAngle) {
      formatAngle -= 360;
    }
    while (formatAngle < endAngle) {
      formatAngle += 360;
    }
    inRange = formatAngle >= endAngle && formatAngle <= startAngle;
  }
  if (inRange) {
    return _objectSpread$a2(_objectSpread$a2({}, sector), {}, {
      radius,
      angle: reverseFormatAngleOfSetor(formatAngle, sector)
    });
  }
  return null;
};
function _toConsumableArray$72(arr) {
  return _arrayWithoutHoles$72(arr) || _iterableToArray$82(arr) || _unsupportedIterableToArray$4(arr) || _nonIterableSpread$72();
}
function _nonIterableSpread$72() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$4(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$4(o, minLen);
}
function _iterableToArray$82(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$72(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$4(arr);
}
function _arrayLikeToArray$4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function ownKeys$8(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$b2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$8(Object(source), true).forEach(function(key) {
        _defineProperty$b2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$8(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$b2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _extends$53() {
  _extends$53 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$53.apply(this, arguments);
}
var getLabel = function getLabel2(props) {
  var value2 = props.value, formatter = props.formatter;
  var label = isNil_1(props.children) ? value2 : props.children;
  if (isFunction_1(formatter)) {
    return formatter(label);
  }
  return label;
};
var getDeltaAngle = function getDeltaAngle2(startAngle, endAngle) {
  var sign5 = mathSign(endAngle - startAngle);
  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
  return sign5 * deltaAngle;
};
var renderRadialLabel = function renderRadialLabel2(labelProps, label, attrs) {
  var position = labelProps.position, viewBox = labelProps.viewBox, offset = labelProps.offset, className = labelProps.className;
  var _ref = viewBox, cx = _ref.cx, cy = _ref.cy, innerRadius = _ref.innerRadius, outerRadius = _ref.outerRadius, startAngle = _ref.startAngle, endAngle = _ref.endAngle, clockWise = _ref.clockWise;
  var radius = (innerRadius + outerRadius) / 2;
  var deltaAngle = getDeltaAngle(startAngle, endAngle);
  var sign5 = deltaAngle >= 0 ? 1 : -1;
  var labelAngle, direction;
  if (position === "insideStart") {
    labelAngle = startAngle + sign5 * offset;
    direction = clockWise;
  } else if (position === "insideEnd") {
    labelAngle = endAngle - sign5 * offset;
    direction = !clockWise;
  } else if (position === "end") {
    labelAngle = endAngle + sign5 * offset;
    direction = clockWise;
  }
  direction = deltaAngle <= 0 ? direction : !direction;
  var startPoint = polarToCartesian(cx, cy, radius, labelAngle);
  var endPoint = polarToCartesian(cx, cy, radius, labelAngle + (direction ? 1 : -1) * 359);
  var path3 = "M".concat(startPoint.x, ",").concat(startPoint.y, "\n    A").concat(radius, ",").concat(radius, ",0,1,").concat(direction ? 0 : 1, ",\n    ").concat(endPoint.x, ",").concat(endPoint.y);
  var id3 = isNil_1(labelProps.id) ? uniqueId2("recharts-radial-line-") : labelProps.id;
  return /* @__PURE__ */ react.createElement("text", _extends$53({}, attrs, {
    dominantBaseline: "central",
    className: classnames("recharts-radial-bar-label", className)
  }), /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("path", {
    id: id3,
    d: path3
  })), /* @__PURE__ */ react.createElement("textPath", {
    xlinkHref: "#".concat(id3)
  }, label));
};
var getAttrsOfPolarLabel = function getAttrsOfPolarLabel2(props) {
  var viewBox = props.viewBox, offset = props.offset, position = props.position;
  var _ref2 = viewBox, cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
  var midAngle = (startAngle + endAngle) / 2;
  if (position === "outside") {
    var _polarToCartesian = polarToCartesian(cx, cy, outerRadius + offset, midAngle), _x = _polarToCartesian.x, _y = _polarToCartesian.y;
    return {
      x: _x,
      y: _y,
      textAnchor: _x >= cx ? "start" : "end",
      verticalAnchor: "middle"
    };
  }
  if (position === "center") {
    return {
      x: cx,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "middle"
    };
  }
  if (position === "centerTop") {
    return {
      x: cx,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "start"
    };
  }
  if (position === "centerBottom") {
    return {
      x: cx,
      y: cy,
      textAnchor: "middle",
      verticalAnchor: "end"
    };
  }
  var r3 = (innerRadius + outerRadius) / 2;
  var _polarToCartesian2 = polarToCartesian(cx, cy, r3, midAngle), x5 = _polarToCartesian2.x, y7 = _polarToCartesian2.y;
  return {
    x: x5,
    y: y7,
    textAnchor: "middle",
    verticalAnchor: "middle"
  };
};
var getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel2(props) {
  var viewBox = props.viewBox, parentViewBox = props.parentViewBox, offset = props.offset, position = props.position;
  var _ref3 = viewBox, x5 = _ref3.x, y7 = _ref3.y, width = _ref3.width, height = _ref3.height;
  var verticalSign = height >= 0 ? 1 : -1;
  var verticalOffset = verticalSign * offset;
  var verticalEnd = verticalSign > 0 ? "end" : "start";
  var verticalStart = verticalSign > 0 ? "start" : "end";
  var horizontalSign = width >= 0 ? 1 : -1;
  var horizontalOffset = horizontalSign * offset;
  var horizontalEnd = horizontalSign > 0 ? "end" : "start";
  var horizontalStart = horizontalSign > 0 ? "start" : "end";
  if (position === "top") {
    var attrs = {
      x: x5 + width / 2,
      y: y7 - verticalSign * offset,
      textAnchor: "middle",
      verticalAnchor: verticalEnd
    };
    return _objectSpread$b2(_objectSpread$b2({}, attrs), parentViewBox ? {
      height: Math.max(y7 - parentViewBox.y, 0),
      width
    } : {});
  }
  if (position === "bottom") {
    var _attrs = {
      x: x5 + width / 2,
      y: y7 + height + verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalStart
    };
    return _objectSpread$b2(_objectSpread$b2({}, _attrs), parentViewBox ? {
      height: Math.max(parentViewBox.y + parentViewBox.height - (y7 + height), 0),
      width
    } : {});
  }
  if (position === "left") {
    var _attrs2 = {
      x: x5 - horizontalOffset,
      y: y7 + height / 2,
      textAnchor: horizontalEnd,
      verticalAnchor: "middle"
    };
    return _objectSpread$b2(_objectSpread$b2({}, _attrs2), parentViewBox ? {
      width: Math.max(_attrs2.x - parentViewBox.x, 0),
      height
    } : {});
  }
  if (position === "right") {
    var _attrs3 = {
      x: x5 + width + horizontalOffset,
      y: y7 + height / 2,
      textAnchor: horizontalStart,
      verticalAnchor: "middle"
    };
    return _objectSpread$b2(_objectSpread$b2({}, _attrs3), parentViewBox ? {
      width: Math.max(parentViewBox.x + parentViewBox.width - _attrs3.x, 0),
      height
    } : {});
  }
  var sizeAttrs = parentViewBox ? {
    width,
    height
  } : {};
  if (position === "insideLeft") {
    return _objectSpread$b2({
      x: x5 + horizontalOffset,
      y: y7 + height / 2,
      textAnchor: horizontalStart,
      verticalAnchor: "middle"
    }, sizeAttrs);
  }
  if (position === "insideRight") {
    return _objectSpread$b2({
      x: x5 + width - horizontalOffset,
      y: y7 + height / 2,
      textAnchor: horizontalEnd,
      verticalAnchor: "middle"
    }, sizeAttrs);
  }
  if (position === "insideTop") {
    return _objectSpread$b2({
      x: x5 + width / 2,
      y: y7 + verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideBottom") {
    return _objectSpread$b2({
      x: x5 + width / 2,
      y: y7 + height - verticalOffset,
      textAnchor: "middle",
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (position === "insideTopLeft") {
    return _objectSpread$b2({
      x: x5 + horizontalOffset,
      y: y7 + verticalOffset,
      textAnchor: horizontalStart,
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideTopRight") {
    return _objectSpread$b2({
      x: x5 + width - horizontalOffset,
      y: y7 + verticalOffset,
      textAnchor: horizontalEnd,
      verticalAnchor: verticalStart
    }, sizeAttrs);
  }
  if (position === "insideBottomLeft") {
    return _objectSpread$b2({
      x: x5 + horizontalOffset,
      y: y7 + height - verticalOffset,
      textAnchor: horizontalStart,
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (position === "insideBottomRight") {
    return _objectSpread$b2({
      x: x5 + width - horizontalOffset,
      y: y7 + height - verticalOffset,
      textAnchor: horizontalEnd,
      verticalAnchor: verticalEnd
    }, sizeAttrs);
  }
  if (isObject_1(position) && (isNumber$1(position.x) || isPercent(position.x)) && (isNumber$1(position.y) || isPercent(position.y))) {
    return _objectSpread$b2({
      x: x5 + getPercentValue(position.x, width),
      y: y7 + getPercentValue(position.y, height),
      textAnchor: "end",
      verticalAnchor: "end"
    }, sizeAttrs);
  }
  return _objectSpread$b2({
    x: x5 + width / 2,
    y: y7 + height / 2,
    textAnchor: "middle",
    verticalAnchor: "middle"
  }, sizeAttrs);
};
var isPolar = function isPolar2(viewBox) {
  return isNumber$1(viewBox.cx);
};
function Label(props) {
  var viewBox = props.viewBox, position = props.position, value2 = props.value, children2 = props.children, content = props.content, _props$className = props.className, className = _props$className === void 0 ? "" : _props$className, textBreakAll = props.textBreakAll;
  if (!viewBox || isNil_1(value2) && isNil_1(children2) && !/* @__PURE__ */ react.isValidElement(content) && !isFunction_1(content)) {
    return null;
  }
  if (/* @__PURE__ */ react.isValidElement(content)) {
    return /* @__PURE__ */ react.cloneElement(content, props);
  }
  var label;
  if (isFunction_1(content)) {
    label = /* @__PURE__ */ react.createElement(content, props);
    if (/* @__PURE__ */ react.isValidElement(label)) {
      return label;
    }
  } else {
    label = getLabel(props);
  }
  var isPolarLabel = isPolar(viewBox);
  var attrs = filterProps(props, true);
  if (isPolarLabel && (position === "insideStart" || position === "insideEnd" || position === "end")) {
    return renderRadialLabel(props, label, attrs);
  }
  var positionAttrs = isPolarLabel ? getAttrsOfPolarLabel(props) : getAttrsOfCartesianLabel(props);
  return /* @__PURE__ */ react.createElement(Text3, _extends$53({
    className: classnames("recharts-label", className)
  }, attrs, positionAttrs, {
    breakAll: textBreakAll
  }), label);
}
Label.displayName = "Label";
Label.defaultProps = {
  offset: 5
};
var parseViewBox = function parseViewBox2(props) {
  var cx = props.cx, cy = props.cy, angle = props.angle, startAngle = props.startAngle, endAngle = props.endAngle, r3 = props.r, radius = props.radius, innerRadius = props.innerRadius, outerRadius = props.outerRadius, x5 = props.x, y7 = props.y, top2 = props.top, left2 = props.left, width = props.width, height = props.height, clockWise = props.clockWise, labelViewBox = props.labelViewBox;
  if (labelViewBox) {
    return labelViewBox;
  }
  if (isNumber$1(width) && isNumber$1(height)) {
    if (isNumber$1(x5) && isNumber$1(y7)) {
      return {
        x: x5,
        y: y7,
        width,
        height
      };
    }
    if (isNumber$1(top2) && isNumber$1(left2)) {
      return {
        x: top2,
        y: left2,
        width,
        height
      };
    }
  }
  if (isNumber$1(x5) && isNumber$1(y7)) {
    return {
      x: x5,
      y: y7,
      width: 0,
      height: 0
    };
  }
  if (isNumber$1(cx) && isNumber$1(cy)) {
    return {
      cx,
      cy,
      startAngle: startAngle || angle || 0,
      endAngle: endAngle || angle || 0,
      innerRadius: innerRadius || 0,
      outerRadius: outerRadius || radius || r3 || 0,
      clockWise
    };
  }
  if (props.viewBox) {
    return props.viewBox;
  }
  return {};
};
var parseLabel = function parseLabel2(label, viewBox) {
  if (!label) {
    return null;
  }
  if (label === true) {
    return /* @__PURE__ */ react.createElement(Label, {
      key: "label-implicit",
      viewBox
    });
  }
  if (isNumOrStr(label)) {
    return /* @__PURE__ */ react.createElement(Label, {
      key: "label-implicit",
      viewBox,
      value: label
    });
  }
  if (/* @__PURE__ */ react.isValidElement(label)) {
    if (label.type === Label) {
      return /* @__PURE__ */ react.cloneElement(label, {
        key: "label-implicit",
        viewBox
      });
    }
    return /* @__PURE__ */ react.createElement(Label, {
      key: "label-implicit",
      content: label,
      viewBox
    });
  }
  if (isFunction_1(label)) {
    return /* @__PURE__ */ react.createElement(Label, {
      key: "label-implicit",
      content: label,
      viewBox
    });
  }
  if (isObject_1(label)) {
    return /* @__PURE__ */ react.createElement(Label, _extends$53({
      viewBox
    }, label, {
      key: "label-implicit"
    }));
  }
  return null;
};
var renderCallByParent = function renderCallByParent2(parentProps, viewBox) {
  var checkPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {
    return null;
  }
  var children2 = parentProps.children;
  var parentViewBox = parseViewBox(parentProps);
  var explicitChildren = findAllByType(children2, Label.displayName).map(function(child, index4) {
    return /* @__PURE__ */ react.cloneElement(child, {
      viewBox: viewBox || parentViewBox,
      key: "label-".concat(index4)
    });
  });
  if (!checkPropsLabel) {
    return explicitChildren;
  }
  var implicitLabel = parseLabel(parentProps.label, viewBox || parentViewBox);
  return [implicitLabel].concat(_toConsumableArray$72(explicitChildren));
};
Label.parseViewBox = parseViewBox;
Label.renderCallByParent = renderCallByParent;
function _toConsumableArray$82(arr) {
  return _arrayWithoutHoles$82(arr) || _iterableToArray$92(arr) || _unsupportedIterableToArray$5(arr) || _nonIterableSpread$82();
}
function _nonIterableSpread$82() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$5(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$5(o, minLen);
}
function _iterableToArray$92(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$82(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$5(arr);
}
function _arrayLikeToArray$5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _extends$62() {
  _extends$62 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$62.apply(this, arguments);
}
function ownKeys$9(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$c2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$9(Object(source), true).forEach(function(key) {
        _defineProperty$c2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$9(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$c2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _objectWithoutProperties$6(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$6(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultProps = {
  valueAccessor: function valueAccessor(entry) {
    return isArray_1(entry.value) ? last_1(entry.value) : entry.value;
  }
};
function LabelList(props) {
  var data3 = props.data, valueAccessor2 = props.valueAccessor, dataKey = props.dataKey, clockWise = props.clockWise, id3 = props.id, textBreakAll = props.textBreakAll, others = _objectWithoutProperties$6(props, ["data", "valueAccessor", "dataKey", "clockWise", "id", "textBreakAll"]);
  if (!data3 || !data3.length) {
    return null;
  }
  return /* @__PURE__ */ react.createElement(Layer, {
    className: "recharts-label-list"
  }, data3.map(function(entry, index4) {
    var value2 = isNil_1(dataKey) ? valueAccessor2(entry, index4) : getValueByDataKey(entry && entry.payload, dataKey);
    var idProps = isNil_1(id3) ? {} : {
      id: "".concat(id3, "-").concat(index4)
    };
    return /* @__PURE__ */ react.createElement(Label, _extends$62({}, filterProps(entry, true), others, idProps, {
      parentViewBox: entry.parentViewBox,
      index: index4,
      value: value2,
      textBreakAll,
      viewBox: Label.parseViewBox(isNil_1(clockWise) ? entry : _objectSpread$c2(_objectSpread$c2({}, entry), {}, {
        clockWise
      })),
      key: "label-".concat(index4)
    }));
  }));
}
LabelList.displayName = "LabelList";
function parseLabelList(label, data3) {
  if (!label) {
    return null;
  }
  if (label === true) {
    return /* @__PURE__ */ react.createElement(LabelList, {
      key: "labelList-implicit",
      data: data3
    });
  }
  if (/* @__PURE__ */ react.isValidElement(label) || isFunction_1(label)) {
    return /* @__PURE__ */ react.createElement(LabelList, {
      key: "labelList-implicit",
      data: data3,
      content: label
    });
  }
  if (isObject_1(label)) {
    return /* @__PURE__ */ react.createElement(LabelList, _extends$62({
      data: data3
    }, label, {
      key: "labelList-implicit"
    }));
  }
  return null;
}
function renderCallByParent$1(parentProps, data3) {
  var ckeckPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  if (!parentProps || !parentProps.children && ckeckPropsLabel && !parentProps.label) {
    return null;
  }
  var children2 = parentProps.children;
  var explicitChilren = findAllByType(children2, LabelList.displayName).map(function(child, index4) {
    return /* @__PURE__ */ react.cloneElement(child, {
      data: data3,
      key: "labelList-".concat(index4)
    });
  });
  if (!ckeckPropsLabel) {
    return explicitChilren;
  }
  var implicitLabelList = parseLabelList(parentProps.label, data3);
  return [implicitLabelList].concat(_toConsumableArray$82(explicitChilren));
}
LabelList.renderCallByParent = renderCallByParent$1;
LabelList.defaultProps = defaultProps;
function _typeof$9(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$9 = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$9 = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$9(obj);
}
function _extends$7() {
  _extends$7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$7.apply(this, arguments);
}
function _classCallCheck$72(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$72(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$72(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$72(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$72(Constructor, staticProps);
  return Constructor;
}
function _inherits$72(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$7(subClass, superClass);
}
function _setPrototypeOf$7(o, p3) {
  _setPrototypeOf$7 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$7(o, p3);
}
function _createSuper$6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$6();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$7(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$7(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$72(this, result);
  };
}
function _possibleConstructorReturn$72(self2, call2) {
  if (call2 && (_typeof$9(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$72(self2);
}
function _assertThisInitialized$72(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$6() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$7(o) {
  _getPrototypeOf$7 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$7(o);
}
var getDeltaAngle$1 = function getDeltaAngle3(startAngle, endAngle) {
  var sign5 = mathSign(endAngle - startAngle);
  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);
  return sign5 * deltaAngle;
};
var getTangentCircle = function getTangentCircle2(_ref) {
  var cx = _ref.cx, cy = _ref.cy, radius = _ref.radius, angle = _ref.angle, sign5 = _ref.sign, isExternal = _ref.isExternal, cornerRadius = _ref.cornerRadius, cornerIsExternal = _ref.cornerIsExternal;
  var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;
  var theta = Math.asin(cornerRadius / centerRadius) / RADIAN$1;
  var centerAngle = cornerIsExternal ? angle : angle + sign5 * theta;
  var center3 = polarToCartesian(cx, cy, centerRadius, centerAngle);
  var circleTangency = polarToCartesian(cx, cy, radius, centerAngle);
  var lineTangencyAngle = cornerIsExternal ? angle - sign5 * theta : angle;
  var lineTangency = polarToCartesian(cx, cy, centerRadius * Math.cos(theta * RADIAN$1), lineTangencyAngle);
  return {
    center: center3,
    circleTangency,
    lineTangency,
    theta
  };
};
var getSectorPath = function getSectorPath2(_ref2) {
  var cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
  var angle = getDeltaAngle$1(startAngle, endAngle);
  var tempEndAngle = startAngle + angle;
  var outerStartPoint = polarToCartesian(cx, cy, outerRadius, startAngle);
  var outerEndPoint = polarToCartesian(cx, cy, outerRadius, tempEndAngle);
  var path3 = "M ".concat(outerStartPoint.x, ",").concat(outerStartPoint.y, "\n    A ").concat(outerRadius, ",").concat(outerRadius, ",0,\n    ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle > tempEndAngle), ",\n    ").concat(outerEndPoint.x, ",").concat(outerEndPoint.y, "\n  ");
  if (innerRadius > 0) {
    var innerStartPoint = polarToCartesian(cx, cy, innerRadius, startAngle);
    var innerEndPoint = polarToCartesian(cx, cy, innerRadius, tempEndAngle);
    path3 += "L ".concat(innerEndPoint.x, ",").concat(innerEndPoint.y, "\n            A ").concat(innerRadius, ",").concat(innerRadius, ",0,\n            ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle <= tempEndAngle), ",\n            ").concat(innerStartPoint.x, ",").concat(innerStartPoint.y, " Z");
  } else {
    path3 += "L ".concat(cx, ",").concat(cy, " Z");
  }
  return path3;
};
var getSectorWithCorner = function getSectorWithCorner2(_ref3) {
  var cx = _ref3.cx, cy = _ref3.cy, innerRadius = _ref3.innerRadius, outerRadius = _ref3.outerRadius, cornerRadius = _ref3.cornerRadius, forceCornerRadius = _ref3.forceCornerRadius, cornerIsExternal = _ref3.cornerIsExternal, startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
  var sign5 = mathSign(endAngle - startAngle);
  var _getTangentCircle = getTangentCircle({
    cx,
    cy,
    radius: outerRadius,
    angle: startAngle,
    sign: sign5,
    cornerRadius,
    cornerIsExternal
  }), soct = _getTangentCircle.circleTangency, solt = _getTangentCircle.lineTangency, sot = _getTangentCircle.theta;
  var _getTangentCircle2 = getTangentCircle({
    cx,
    cy,
    radius: outerRadius,
    angle: endAngle,
    sign: -sign5,
    cornerRadius,
    cornerIsExternal
  }), eoct = _getTangentCircle2.circleTangency, eolt = _getTangentCircle2.lineTangency, eot = _getTangentCircle2.theta;
  var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;
  if (outerArcAngle < 0) {
    if (forceCornerRadius) {
      return "M ".concat(solt.x, ",").concat(solt.y, "\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(cornerRadius * 2, ",0\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(-cornerRadius * 2, ",0\n      ");
    }
    return getSectorPath({
      cx,
      cy,
      innerRadius,
      outerRadius,
      startAngle,
      endAngle
    });
  }
  var path3 = "M ".concat(solt.x, ",").concat(solt.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign5 < 0), ",").concat(soct.x, ",").concat(soct.y, "\n    A").concat(outerRadius, ",").concat(outerRadius, ",0,").concat(+(outerArcAngle > 180), ",").concat(+(sign5 < 0), ",").concat(eoct.x, ",").concat(eoct.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign5 < 0), ",").concat(eolt.x, ",").concat(eolt.y, "\n  ");
  if (innerRadius > 0) {
    var _getTangentCircle3 = getTangentCircle({
      cx,
      cy,
      radius: innerRadius,
      angle: startAngle,
      sign: sign5,
      isExternal: true,
      cornerRadius,
      cornerIsExternal
    }), sict = _getTangentCircle3.circleTangency, silt = _getTangentCircle3.lineTangency, sit = _getTangentCircle3.theta;
    var _getTangentCircle4 = getTangentCircle({
      cx,
      cy,
      radius: innerRadius,
      angle: endAngle,
      sign: -sign5,
      isExternal: true,
      cornerRadius,
      cornerIsExternal
    }), eict = _getTangentCircle4.circleTangency, eilt = _getTangentCircle4.lineTangency, eit = _getTangentCircle4.theta;
    var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;
    if (innerArcAngle < 0 && cornerRadius === 0) {
      return "".concat(path3, "L").concat(cx, ",").concat(cy, "Z");
    }
    path3 += "L".concat(eilt.x, ",").concat(eilt.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign5 < 0), ",").concat(eict.x, ",").concat(eict.y, "\n      A").concat(innerRadius, ",").concat(innerRadius, ",0,").concat(+(innerArcAngle > 180), ",").concat(+(sign5 > 0), ",").concat(sict.x, ",").concat(sict.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign5 < 0), ",").concat(silt.x, ",").concat(silt.y, "Z");
  } else {
    path3 += "L".concat(cx, ",").concat(cy, "Z");
  }
  return path3;
};
var Sector = /* @__PURE__ */ function(_PureComponent) {
  _inherits$72(Sector2, _PureComponent);
  var _super = _createSuper$6(Sector2);
  function Sector2() {
    _classCallCheck$72(this, Sector2);
    return _super.apply(this, arguments);
  }
  _createClass$72(Sector2, [{
    key: "render",
    value: function render2() {
      var _this$props = this.props, cx = _this$props.cx, cy = _this$props.cy, innerRadius = _this$props.innerRadius, outerRadius = _this$props.outerRadius, cornerRadius = _this$props.cornerRadius, forceCornerRadius = _this$props.forceCornerRadius, cornerIsExternal = _this$props.cornerIsExternal, startAngle = _this$props.startAngle, endAngle = _this$props.endAngle, className = _this$props.className;
      if (outerRadius < innerRadius || startAngle === endAngle) {
        return null;
      }
      var layerClass = classnames("recharts-sector", className);
      var deltaRadius = outerRadius - innerRadius;
      var cr = getPercentValue(cornerRadius, deltaRadius, 0, true);
      var path3;
      if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {
        path3 = getSectorWithCorner({
          cx,
          cy,
          innerRadius,
          outerRadius,
          cornerRadius: Math.min(cr, deltaRadius / 2),
          forceCornerRadius,
          cornerIsExternal,
          startAngle,
          endAngle
        });
      } else {
        path3 = getSectorPath({
          cx,
          cy,
          innerRadius,
          outerRadius,
          startAngle,
          endAngle
        });
      }
      return /* @__PURE__ */ react.createElement("path", _extends$7({}, filterProps(this.props, true), {
        className: layerClass,
        d: path3
      }));
    }
  }]);
  return Sector2;
}(react.PureComponent);
Sector.defaultProps = {
  cx: 0,
  cy: 0,
  innerRadius: 0,
  outerRadius: 0,
  startAngle: 0,
  endAngle: 0,
  cornerRadius: 0,
  forceCornerRadius: false,
  cornerIsExternal: false
};
function _typeof$a(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$a = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$a = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$a(obj);
}
function _extends$8() {
  _extends$8 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$8.apply(this, arguments);
}
function ownKeys$a(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$d2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$a(Object(source), true).forEach(function(key) {
        _defineProperty$d2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$a(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$d2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$82(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$82(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$82(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$82(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$82(Constructor, staticProps);
  return Constructor;
}
function _inherits$82(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$8(subClass, superClass);
}
function _setPrototypeOf$8(o, p3) {
  _setPrototypeOf$8 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$8(o, p3);
}
function _createSuper$7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$7();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$8(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$8(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$82(this, result);
  };
}
function _possibleConstructorReturn$82(self2, call2) {
  if (call2 && (_typeof$a(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$82(self2);
}
function _assertThisInitialized$82(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$7() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$8(o) {
  _getPrototypeOf$8 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$8(o);
}
var CURVE_FACTORIES = {
  curveBasisClosed: curveBasisClosed2,
  curveBasisOpen: curveBasisOpen2,
  curveBasis: curveBasis2,
  curveLinearClosed: curveLinearClosed2,
  curveLinear: curveLinear3,
  curveMonotoneX: monotoneX2,
  curveMonotoneY: monotoneY2,
  curveNatural: curveNatural2,
  curveStep: curveStep2,
  curveStepAfter: stepAfter2,
  curveStepBefore: stepBefore2
};
var defined2 = function defined3(p3) {
  return p3.x === +p3.x && p3.y === +p3.y;
};
var getX = function getX2(p3) {
  return p3.x;
};
var getY = function getY2(p3) {
  return p3.y;
};
var getCurveFactory = function getCurveFactory2(type3, layout) {
  if (isFunction_1(type3)) {
    return type3;
  }
  var name = "curve".concat(upperFirst_1(type3));
  if (name === "curveMonotone" && layout) {
    return CURVE_FACTORIES["".concat(name).concat(layout === "vertical" ? "Y" : "X")];
  }
  return CURVE_FACTORIES[name] || curveLinear3;
};
var Curve = /* @__PURE__ */ function(_PureComponent) {
  _inherits$82(Curve2, _PureComponent);
  var _super = _createSuper$7(Curve2);
  function Curve2() {
    _classCallCheck$82(this, Curve2);
    return _super.apply(this, arguments);
  }
  _createClass$82(Curve2, [{
    key: "getPath",
    value: function getPath() {
      var _this$props = this.props, type3 = _this$props.type, points = _this$props.points, baseLine = _this$props.baseLine, layout = _this$props.layout, connectNulls = _this$props.connectNulls;
      var curveFactory = getCurveFactory(type3, layout);
      var formatPoints = connectNulls ? points.filter(function(entry) {
        return defined2(entry);
      }) : points;
      var lineFunction;
      if (isArray_1(baseLine)) {
        var formatBaseLine = connectNulls ? baseLine.filter(function(base) {
          return defined2(base);
        }) : baseLine;
        var areaPoints = formatPoints.map(function(entry, index4) {
          return _objectSpread$d2(_objectSpread$d2({}, entry), {}, {
            base: formatBaseLine[index4]
          });
        });
        if (layout === "vertical") {
          lineFunction = shapeArea().y(getY).x1(getX).x0(function(d2) {
            return d2.base.x;
          });
        } else {
          lineFunction = shapeArea().x(getX).y1(getY).y0(function(d2) {
            return d2.base.y;
          });
        }
        lineFunction.defined(defined2).curve(curveFactory);
        return lineFunction(areaPoints);
      }
      if (layout === "vertical" && isNumber$1(baseLine)) {
        lineFunction = shapeArea().y(getY).x1(getX).x0(baseLine);
      } else if (isNumber$1(baseLine)) {
        lineFunction = shapeArea().x(getX).y1(getY).y0(baseLine);
      } else {
        lineFunction = shapeLine().x(getX).y(getY);
      }
      lineFunction.defined(defined2).curve(curveFactory);
      return lineFunction(formatPoints);
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props2 = this.props, className = _this$props2.className, points = _this$props2.points, path3 = _this$props2.path, pathRef = _this$props2.pathRef;
      if ((!points || !points.length) && !path3) {
        return null;
      }
      var realPath = points && points.length ? this.getPath() : path3;
      return /* @__PURE__ */ react.createElement("path", _extends$8({}, filterProps(this.props), adaptEventHandlers(this.props), {
        className: classnames("recharts-curve", className),
        d: realPath,
        ref: pathRef
      }));
    }
  }]);
  return Curve2;
}(react.PureComponent);
Curve.defaultProps = {
  type: "linear",
  points: [],
  connectNulls: false
};
function _typeof$b(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$b = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$b = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$b(obj);
}
function _extends$9() {
  _extends$9 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$9.apply(this, arguments);
}
function _classCallCheck$92(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$92(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$92(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$92(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$92(Constructor, staticProps);
  return Constructor;
}
function _inherits$92(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$9(subClass, superClass);
}
function _setPrototypeOf$9(o, p3) {
  _setPrototypeOf$9 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$9(o, p3);
}
function _createSuper$8(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$8();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$9(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$9(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$92(this, result);
  };
}
function _possibleConstructorReturn$92(self2, call2) {
  if (call2 && (_typeof$b(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$92(self2);
}
function _assertThisInitialized$92(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$8() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$9(o) {
  _getPrototypeOf$9 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$9(o);
}
var getRectanglePath = function getRectanglePath2(x5, y7, width, height, radius) {
  var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);
  var ySign = height >= 0 ? 1 : -1;
  var xSign = width >= 0 ? 1 : -1;
  var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;
  var path3;
  if (maxRadius > 0 && radius instanceof Array) {
    var newRadius = [0, 0, 0, 0];
    for (var i = 0, len = 4; i < len; i++) {
      newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];
    }
    path3 = "M".concat(x5, ",").concat(y7 + ySign * newRadius[0]);
    if (newRadius[0] > 0) {
      path3 += "A ".concat(newRadius[0], ",").concat(newRadius[0], ",0,0,").concat(clockWise, ",").concat(x5 + xSign * newRadius[0], ",").concat(y7);
    }
    path3 += "L ".concat(x5 + width - xSign * newRadius[1], ",").concat(y7);
    if (newRadius[1] > 0) {
      path3 += "A ".concat(newRadius[1], ",").concat(newRadius[1], ",0,0,").concat(clockWise, ",\n        ").concat(x5 + width, ",").concat(y7 + ySign * newRadius[1]);
    }
    path3 += "L ".concat(x5 + width, ",").concat(y7 + height - ySign * newRadius[2]);
    if (newRadius[2] > 0) {
      path3 += "A ".concat(newRadius[2], ",").concat(newRadius[2], ",0,0,").concat(clockWise, ",\n        ").concat(x5 + width - xSign * newRadius[2], ",").concat(y7 + height);
    }
    path3 += "L ".concat(x5 + xSign * newRadius[3], ",").concat(y7 + height);
    if (newRadius[3] > 0) {
      path3 += "A ".concat(newRadius[3], ",").concat(newRadius[3], ",0,0,").concat(clockWise, ",\n        ").concat(x5, ",").concat(y7 + height - ySign * newRadius[3]);
    }
    path3 += "Z";
  } else if (maxRadius > 0 && radius === +radius && radius > 0) {
    var _newRadius = Math.min(maxRadius, radius);
    path3 = "M ".concat(x5, ",").concat(y7 + ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x5 + xSign * _newRadius, ",").concat(y7, "\n            L ").concat(x5 + width - xSign * _newRadius, ",").concat(y7, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x5 + width, ",").concat(y7 + ySign * _newRadius, "\n            L ").concat(x5 + width, ",").concat(y7 + height - ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x5 + width - xSign * _newRadius, ",").concat(y7 + height, "\n            L ").concat(x5 + xSign * _newRadius, ",").concat(y7 + height, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x5, ",").concat(y7 + height - ySign * _newRadius, " Z");
  } else {
    path3 = "M ".concat(x5, ",").concat(y7, " h ").concat(width, " v ").concat(height, " h ").concat(-width, " Z");
  }
  return path3;
};
var Rectangle = /* @__PURE__ */ function(_PureComponent) {
  _inherits$92(Rectangle2, _PureComponent);
  var _super = _createSuper$8(Rectangle2);
  function Rectangle2() {
    var _this;
    _classCallCheck$92(this, Rectangle2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      totalLength: -1
    };
    _this.node = void 0;
    return _this;
  }
  _createClass$92(Rectangle2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.node && this.node.getTotalLength) {
        try {
          var totalLength = this.node.getTotalLength();
          if (totalLength) {
            this.setState({
              totalLength
            });
          }
        } catch (err) {
        }
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _this$props = this.props, x5 = _this$props.x, y7 = _this$props.y, width = _this$props.width, height = _this$props.height, radius = _this$props.radius, className = _this$props.className;
      var totalLength = this.state.totalLength;
      var _this$props2 = this.props, animationEasing = _this$props2.animationEasing, animationDuration = _this$props2.animationDuration, animationBegin = _this$props2.animationBegin, isAnimationActive = _this$props2.isAnimationActive, isUpdateAnimationActive = _this$props2.isUpdateAnimationActive;
      if (x5 !== +x5 || y7 !== +y7 || width !== +width || height !== +height || width === 0 || height === 0) {
        return null;
      }
      var layerClass = classnames("recharts-rectangle", className);
      if (!isUpdateAnimationActive) {
        return /* @__PURE__ */ react.createElement("path", _extends$9({}, filterProps(this.props, true), {
          className: layerClass,
          d: getRectanglePath(x5, y7, width, height, radius)
        }));
      }
      return /* @__PURE__ */ react.createElement(Animate, {
        canBegin: totalLength > 0,
        from: {
          width,
          height,
          x: x5,
          y: y7
        },
        to: {
          width,
          height,
          x: x5,
          y: y7
        },
        duration: animationDuration,
        animationEasing,
        isActive: isUpdateAnimationActive
      }, function(_ref) {
        var currWidth = _ref.width, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
        return /* @__PURE__ */ react.createElement(Animate, {
          canBegin: totalLength > 0,
          from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
          to: "".concat(totalLength, "px 0px"),
          attributeName: "strokeDasharray",
          begin: animationBegin,
          duration: animationDuration,
          isActive: isAnimationActive,
          easing: animationEasing
        }, /* @__PURE__ */ react.createElement("path", _extends$9({}, filterProps(_this2.props, true), {
          className: layerClass,
          d: getRectanglePath(currX, currY, currWidth, currHeight, radius),
          ref: function ref(node) {
            _this2.node = node;
          }
        })));
      });
    }
  }]);
  return Rectangle2;
}(react.PureComponent);
Rectangle.defaultProps = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  radius: 0,
  isAnimationActive: false,
  isUpdateAnimationActive: false,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: "ease"
};
function _typeof$c(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$c = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$c = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$c(obj);
}
function _extends$a() {
  _extends$a = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$a.apply(this, arguments);
}
function _classCallCheck$a2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$a2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$a2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$a2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$a2(Constructor, staticProps);
  return Constructor;
}
function _inherits$a2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$a(subClass, superClass);
}
function _setPrototypeOf$a(o, p3) {
  _setPrototypeOf$a = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$a(o, p3);
}
function _createSuper$9(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$9();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$a(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$a(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$a2(this, result);
  };
}
function _possibleConstructorReturn$a2(self2, call2) {
  if (call2 && (_typeof$c(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$a2(self2);
}
function _assertThisInitialized$a2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$9() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$a(o) {
  _getPrototypeOf$a = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$a(o);
}
var Dot = /* @__PURE__ */ function(_PureComponent) {
  _inherits$a2(Dot2, _PureComponent);
  var _super = _createSuper$9(Dot2);
  function Dot2() {
    _classCallCheck$a2(this, Dot2);
    return _super.apply(this, arguments);
  }
  _createClass$a2(Dot2, [{
    key: "render",
    value: function render2() {
      var _this$props = this.props, cx = _this$props.cx, cy = _this$props.cy, r3 = _this$props.r, className = _this$props.className;
      var layerClass = classnames("recharts-dot", className);
      if (cx === +cx && cy === +cy && r3 === +r3) {
        return /* @__PURE__ */ react.createElement("circle", _extends$a({}, filterProps(this.props), adaptEventHandlers(this.props), {
          className: layerClass,
          cx,
          cy,
          r: r3
        }));
      }
      return null;
    }
  }]);
  return Dot2;
}(react.PureComponent);
function _typeof$d(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$d = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$d = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$d(obj);
}
function _extends$b() {
  _extends$b = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$b.apply(this, arguments);
}
function _classCallCheck$b2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$b2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$b2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$b2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$b2(Constructor, staticProps);
  return Constructor;
}
function _inherits$b2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$b(subClass, superClass);
}
function _setPrototypeOf$b(o, p3) {
  _setPrototypeOf$b = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$b(o, p3);
}
function _createSuper$a(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$a();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$b(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$b(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$b2(this, result);
  };
}
function _possibleConstructorReturn$b2(self2, call2) {
  if (call2 && (_typeof$d(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$b2(self2);
}
function _assertThisInitialized$b2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$a() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$b(o) {
  _getPrototypeOf$b = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$b(o);
}
var Cross = /* @__PURE__ */ function(_PureComponent) {
  _inherits$b2(Cross2, _PureComponent);
  var _super = _createSuper$a(Cross2);
  function Cross2() {
    _classCallCheck$b2(this, Cross2);
    return _super.apply(this, arguments);
  }
  _createClass$b2(Cross2, [{
    key: "render",
    value: function render2() {
      var _this$props = this.props, x5 = _this$props.x, y7 = _this$props.y, width = _this$props.width, height = _this$props.height, top2 = _this$props.top, left2 = _this$props.left, className = _this$props.className;
      if (!isNumber$1(x5) || !isNumber$1(y7) || !isNumber$1(width) || !isNumber$1(height) || !isNumber$1(top2) || !isNumber$1(left2)) {
        return null;
      }
      return /* @__PURE__ */ react.createElement("path", _extends$b({}, filterProps(this.props, true), {
        className: classnames("recharts-cross", className),
        d: Cross2.getPath(x5, y7, width, height, top2, left2)
      }));
    }
  }], [{
    key: "getPath",
    value: function getPath(x5, y7, width, height, top2, left2) {
      return "M".concat(x5, ",").concat(top2, "v").concat(height, "M").concat(left2, ",").concat(y7, "h").concat(width);
    }
  }]);
  return Cross2;
}(react.PureComponent);
Cross.defaultProps = {
  x: 0,
  y: 0,
  top: 0,
  left: 0,
  width: 0,
  height: 0
};
function ownKeys$b(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$e2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$b(Object(source), true).forEach(function(key) {
        _defineProperty$e2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$b(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$e2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var PREFIX_LIST$1 = ["Webkit", "Moz", "O", "ms"];
var generatePrefixStyle$1 = function generatePrefixStyle3(name, value2) {
  if (!name) {
    return null;
  }
  var camelName = name.replace(/(\w)/, function(v3) {
    return v3.toUpperCase();
  });
  var result = PREFIX_LIST$1.reduce(function(res, entry) {
    return _objectSpread$e2(_objectSpread$e2({}, res), {}, _defineProperty$e2({}, entry + camelName, value2));
  }, {});
  result[name] = value2;
  return result;
};
function _typeof$e(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$e = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$e = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$e(obj);
}
function _extends$c() {
  _extends$c = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$c.apply(this, arguments);
}
function ownKeys$c(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$f(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$c(Object(source), true).forEach(function(key) {
        _defineProperty$f2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$c(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$f2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$c2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$c2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$c2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$c2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$c2(Constructor, staticProps);
  return Constructor;
}
function _inherits$c2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$c(subClass, superClass);
}
function _setPrototypeOf$c(o, p3) {
  _setPrototypeOf$c = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$c(o, p3);
}
function _createSuper$b(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$b();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$c(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$c(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$c2(this, result);
  };
}
function _possibleConstructorReturn$c2(self2, call2) {
  if (call2 && (_typeof$e(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$c2(self2);
}
function _assertThisInitialized$c2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$b() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$c(o) {
  _getPrototypeOf$c = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$c(o);
}
var createScale = function createScale2(_ref) {
  var data3 = _ref.data, startIndex = _ref.startIndex, endIndex = _ref.endIndex, x5 = _ref.x, width = _ref.width, travellerWidth = _ref.travellerWidth;
  if (!data3 || !data3.length) {
    return {};
  }
  var len = data3.length;
  var scale = point().domain(range_1(0, len)).range([x5, x5 + width - travellerWidth]);
  var scaleValues = scale.domain().map(function(entry) {
    return scale(entry);
  });
  return {
    isTextActive: false,
    isSlideMoving: false,
    isTravellerMoving: false,
    startX: scale(startIndex),
    endX: scale(endIndex),
    scale,
    scaleValues
  };
};
var isTouch = function isTouch2(e3) {
  return e3.changedTouches && !!e3.changedTouches.length;
};
var Brush2 = /* @__PURE__ */ function(_PureComponent) {
  _inherits$c2(Brush4, _PureComponent);
  var _super = _createSuper$b(Brush4);
  function Brush4(props) {
    var _this;
    _classCallCheck$c2(this, Brush4);
    _this = _super.call(this, props);
    _this.leaveTimer = void 0;
    _this.travellerDragStartHandlers = void 0;
    _this.handleDrag = function(e3) {
      if (_this.leaveTimer) {
        clearTimeout(_this.leaveTimer);
        _this.leaveTimer = null;
      }
      if (_this.state.isTravellerMoving) {
        _this.handleTravellerMove(e3);
      } else if (_this.state.isSlideMoving) {
        _this.handleSlideDrag(e3);
      }
    };
    _this.handleTouchMove = function(e3) {
      if (e3.changedTouches != null && e3.changedTouches.length > 0) {
        _this.handleDrag(e3.changedTouches[0]);
      }
    };
    _this.handleDragEnd = function() {
      _this.setState({
        isTravellerMoving: false,
        isSlideMoving: false
      });
      _this.detachDragEndListener();
    };
    _this.handleLeaveWrapper = function() {
      if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {
        _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);
      }
    };
    _this.handleEnterSlideOrTraveller = function() {
      _this.setState({
        isTextActive: true
      });
    };
    _this.handleLeaveSlideOrTraveller = function() {
      _this.setState({
        isTextActive: false
      });
    };
    _this.handleSlideDragStart = function(e3) {
      var event = isTouch(e3) ? e3.changedTouches[0] : e3;
      _this.setState({
        isTravellerMoving: false,
        isSlideMoving: true,
        slideMoveStartX: event.pageX
      });
      _this.attachDragEndListener();
    };
    _this.travellerDragStartHandlers = {
      startX: _this.handleTravellerDragStart.bind(_assertThisInitialized$c2(_this), "startX"),
      endX: _this.handleTravellerDragStart.bind(_assertThisInitialized$c2(_this), "endX")
    };
    _this.state = {};
    return _this;
  }
  _createClass$c2(Brush4, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.leaveTimer) {
        clearTimeout(this.leaveTimer);
        this.leaveTimer = null;
      }
      this.detachDragEndListener();
    }
  }, {
    key: "getIndex",
    value: function getIndex(_ref2) {
      var startX = _ref2.startX, endX = _ref2.endX;
      var scaleValues = this.state.scaleValues;
      var _this$props = this.props, gap = _this$props.gap, data3 = _this$props.data;
      var lastIndex = data3.length - 1;
      var min5 = Math.min(startX, endX);
      var max6 = Math.max(startX, endX);
      var minIndex = Brush4.getIndexInRange(scaleValues, min5);
      var maxIndex = Brush4.getIndexInRange(scaleValues, max6);
      return {
        startIndex: minIndex - minIndex % gap,
        endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap
      };
    }
  }, {
    key: "getTextOfTick",
    value: function getTextOfTick(index4) {
      var _this$props2 = this.props, data3 = _this$props2.data, tickFormatter = _this$props2.tickFormatter, dataKey = _this$props2.dataKey;
      var text2 = getValueByDataKey(data3[index4], dataKey, index4);
      return isFunction_1(tickFormatter) ? tickFormatter(text2, index4) : text2;
    }
  }, {
    key: "attachDragEndListener",
    value: function attachDragEndListener() {
      window.addEventListener("mouseup", this.handleDragEnd, true);
      window.addEventListener("touchend", this.handleDragEnd, true);
    }
  }, {
    key: "detachDragEndListener",
    value: function detachDragEndListener() {
      window.removeEventListener("mouseup", this.handleDragEnd, true);
      window.removeEventListener("touchend", this.handleDragEnd, true);
    }
  }, {
    key: "handleSlideDrag",
    value: function handleSlideDrag(e3) {
      var _this$state = this.state, slideMoveStartX = _this$state.slideMoveStartX, startX = _this$state.startX, endX = _this$state.endX;
      var _this$props3 = this.props, x5 = _this$props3.x, width = _this$props3.width, travellerWidth = _this$props3.travellerWidth, startIndex = _this$props3.startIndex, endIndex = _this$props3.endIndex, onChange = _this$props3.onChange;
      var delta = e3.pageX - slideMoveStartX;
      if (delta > 0) {
        delta = Math.min(delta, x5 + width - travellerWidth - endX, x5 + width - travellerWidth - startX);
      } else if (delta < 0) {
        delta = Math.max(delta, x5 - startX, x5 - endX);
      }
      var newIndex = this.getIndex({
        startX: startX + delta,
        endX: endX + delta
      });
      if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {
        onChange(newIndex);
      }
      this.setState({
        startX: startX + delta,
        endX: endX + delta,
        slideMoveStartX: e3.pageX
      });
    }
  }, {
    key: "handleTravellerDragStart",
    value: function handleTravellerDragStart(id3, e3) {
      var event = isTouch(e3) ? e3.changedTouches[0] : e3;
      this.setState({
        isSlideMoving: false,
        isTravellerMoving: true,
        movingTravellerId: id3,
        brushMoveStartX: event.pageX
      });
      this.attachDragEndListener();
    }
  }, {
    key: "handleTravellerMove",
    value: function handleTravellerMove(e3) {
      var _this$setState;
      var _this$state2 = this.state, brushMoveStartX = _this$state2.brushMoveStartX, movingTravellerId = _this$state2.movingTravellerId, endX = _this$state2.endX, startX = _this$state2.startX;
      var prevValue = this.state[movingTravellerId];
      var _this$props4 = this.props, x5 = _this$props4.x, width = _this$props4.width, travellerWidth = _this$props4.travellerWidth, onChange = _this$props4.onChange, gap = _this$props4.gap, data3 = _this$props4.data;
      var params = {
        startX: this.state.startX,
        endX: this.state.endX
      };
      var delta = e3.pageX - brushMoveStartX;
      if (delta > 0) {
        delta = Math.min(delta, x5 + width - travellerWidth - prevValue);
      } else if (delta < 0) {
        delta = Math.max(delta, x5 - prevValue);
      }
      params[movingTravellerId] = prevValue + delta;
      var newIndex = this.getIndex(params);
      var startIndex = newIndex.startIndex, endIndex = newIndex.endIndex;
      var isFullGap = function isFullGap2() {
        var lastIndex = data3.length - 1;
        if (movingTravellerId === "startX" && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === "endX" && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) {
          return true;
        }
        return false;
      };
      this.setState((_this$setState = {}, _defineProperty$f2(_this$setState, movingTravellerId, prevValue + delta), _defineProperty$f2(_this$setState, "brushMoveStartX", e3.pageX), _this$setState), function() {
        if (onChange) {
          if (isFullGap()) {
            onChange(newIndex);
          }
        }
      });
    }
  }, {
    key: "renderBackground",
    value: function renderBackground() {
      var _this$props5 = this.props, x5 = _this$props5.x, y7 = _this$props5.y, width = _this$props5.width, height = _this$props5.height, fill = _this$props5.fill, stroke = _this$props5.stroke;
      return /* @__PURE__ */ react.createElement("rect", {
        stroke,
        fill,
        x: x5,
        y: y7,
        width,
        height
      });
    }
  }, {
    key: "renderPanorama",
    value: function renderPanorama() {
      var _this$props6 = this.props, x5 = _this$props6.x, y7 = _this$props6.y, width = _this$props6.width, height = _this$props6.height, data3 = _this$props6.data, children2 = _this$props6.children, padding2 = _this$props6.padding;
      var chartElement = react.Children.only(children2);
      if (!chartElement) {
        return null;
      }
      return /* @__PURE__ */ react.cloneElement(chartElement, {
        x: x5,
        y: y7,
        width,
        height,
        margin: padding2,
        compact: true,
        data: data3
      });
    }
  }, {
    key: "renderTravellerLayer",
    value: function renderTravellerLayer(travellerX, id3) {
      var _this$props7 = this.props, y7 = _this$props7.y, travellerWidth = _this$props7.travellerWidth, height = _this$props7.height, traveller = _this$props7.traveller;
      var x5 = Math.max(travellerX, this.props.x);
      var travellerProps = _objectSpread$f(_objectSpread$f({}, filterProps(this.props)), {}, {
        x: x5,
        y: y7,
        width: travellerWidth,
        height
      });
      return /* @__PURE__ */ react.createElement(Layer, {
        className: "recharts-brush-traveller",
        onMouseEnter: this.handleEnterSlideOrTraveller,
        onMouseLeave: this.handleLeaveSlideOrTraveller,
        onMouseDown: this.travellerDragStartHandlers[id3],
        onTouchStart: this.travellerDragStartHandlers[id3],
        style: {
          cursor: "col-resize"
        }
      }, Brush4.renderTraveller(traveller, travellerProps));
    }
  }, {
    key: "renderSlide",
    value: function renderSlide(startX, endX) {
      var _this$props8 = this.props, y7 = _this$props8.y, height = _this$props8.height, stroke = _this$props8.stroke, travellerWidth = _this$props8.travellerWidth;
      var x5 = Math.min(startX, endX) + travellerWidth;
      var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);
      return /* @__PURE__ */ react.createElement("rect", {
        className: "recharts-brush-slide",
        onMouseEnter: this.handleEnterSlideOrTraveller,
        onMouseLeave: this.handleLeaveSlideOrTraveller,
        onMouseDown: this.handleSlideDragStart,
        onTouchStart: this.handleSlideDragStart,
        style: {
          cursor: "move"
        },
        stroke: "none",
        fill: stroke,
        fillOpacity: 0.2,
        x: x5,
        y: y7,
        width,
        height
      });
    }
  }, {
    key: "renderText",
    value: function renderText() {
      var _this$props9 = this.props, startIndex = _this$props9.startIndex, endIndex = _this$props9.endIndex, y7 = _this$props9.y, height = _this$props9.height, travellerWidth = _this$props9.travellerWidth, stroke = _this$props9.stroke;
      var _this$state3 = this.state, startX = _this$state3.startX, endX = _this$state3.endX;
      var offset = 5;
      var attrs = {
        pointerEvents: "none",
        fill: stroke
      };
      return /* @__PURE__ */ react.createElement(Layer, {
        className: "recharts-brush-texts"
      }, /* @__PURE__ */ react.createElement(Text3, _extends$c({
        textAnchor: "end",
        verticalAnchor: "middle",
        x: Math.min(startX, endX) - offset,
        y: y7 + height / 2
      }, attrs), this.getTextOfTick(startIndex)), /* @__PURE__ */ react.createElement(Text3, _extends$c({
        textAnchor: "start",
        verticalAnchor: "middle",
        x: Math.max(startX, endX) + travellerWidth + offset,
        y: y7 + height / 2
      }, attrs), this.getTextOfTick(endIndex)));
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props10 = this.props, data3 = _this$props10.data, className = _this$props10.className, children2 = _this$props10.children, x5 = _this$props10.x, y7 = _this$props10.y, width = _this$props10.width, height = _this$props10.height, alwaysShowText = _this$props10.alwaysShowText;
      var _this$state4 = this.state, startX = _this$state4.startX, endX = _this$state4.endX, isTextActive = _this$state4.isTextActive, isSlideMoving = _this$state4.isSlideMoving, isTravellerMoving = _this$state4.isTravellerMoving;
      if (!data3 || !data3.length || !isNumber$1(x5) || !isNumber$1(y7) || !isNumber$1(width) || !isNumber$1(height) || width <= 0 || height <= 0) {
        return null;
      }
      var layerClass = classnames("recharts-brush", className);
      var isPanoramic = react.Children.count(children2) === 1;
      var style = generatePrefixStyle$1("userSelect", "none");
      return /* @__PURE__ */ react.createElement(Layer, {
        className: layerClass,
        onMouseMove: this.handleDrag,
        onMouseLeave: this.handleLeaveWrapper,
        onTouchMove: this.handleTouchMove,
        style
      }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, "startX"), this.renderTravellerLayer(endX, "endX"), (isTextActive || isSlideMoving || isTravellerMoving || alwaysShowText) && this.renderText());
    }
  }], [{
    key: "renderDefaultTraveller",
    value: function renderDefaultTraveller(props) {
      var x5 = props.x, y7 = props.y, width = props.width, height = props.height, stroke = props.stroke;
      var lineY = Math.floor(y7 + height / 2) - 1;
      return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("rect", {
        x: x5,
        y: y7,
        width,
        height,
        fill: stroke,
        stroke: "none"
      }), /* @__PURE__ */ react.createElement("line", {
        x1: x5 + 1,
        y1: lineY,
        x2: x5 + width - 1,
        y2: lineY,
        fill: "none",
        stroke: "#fff"
      }), /* @__PURE__ */ react.createElement("line", {
        x1: x5 + 1,
        y1: lineY + 2,
        x2: x5 + width - 1,
        y2: lineY + 2,
        fill: "none",
        stroke: "#fff"
      }));
    }
  }, {
    key: "renderTraveller",
    value: function renderTraveller(option, props) {
      var rectangle;
      if (/* @__PURE__ */ react.isValidElement(option)) {
        rectangle = /* @__PURE__ */ react.cloneElement(option, props);
      } else if (isFunction_1(option)) {
        rectangle = option(props);
      } else {
        rectangle = Brush4.renderDefaultTraveller(props);
      }
      return rectangle;
    }
  }, {
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var data3 = nextProps.data, width = nextProps.width, x5 = nextProps.x, travellerWidth = nextProps.travellerWidth, updateId = nextProps.updateId, startIndex = nextProps.startIndex, endIndex = nextProps.endIndex;
      if (data3 !== prevState.prevData || updateId !== prevState.prevUpdateId) {
        return _objectSpread$f({
          prevData: data3,
          prevTravellerWidth: travellerWidth,
          prevUpdateId: updateId,
          prevX: x5,
          prevWidth: width
        }, data3 && data3.length ? createScale({
          data: data3,
          width,
          x: x5,
          travellerWidth,
          startIndex,
          endIndex
        }) : {
          scale: null,
          scaleValues: null
        });
      }
      if (prevState.scale && (width !== prevState.prevWidth || x5 !== prevState.prevX || travellerWidth !== prevState.prevTravellerWidth)) {
        prevState.scale.range([x5, x5 + width - travellerWidth]);
        var scaleValues = prevState.scale.domain().map(function(entry) {
          return prevState.scale(entry);
        });
        return {
          prevData: data3,
          prevTravellerWidth: travellerWidth,
          prevUpdateId: updateId,
          prevX: x5,
          prevWidth: width,
          startX: prevState.scale(nextProps.startIndex),
          endX: prevState.scale(nextProps.endIndex),
          scaleValues
        };
      }
      return null;
    }
  }, {
    key: "getIndexInRange",
    value: function getIndexInRange(range7, x5) {
      var len = range7.length;
      var start2 = 0;
      var end = len - 1;
      while (end - start2 > 1) {
        var middle = Math.floor((start2 + end) / 2);
        if (range7[middle] > x5) {
          end = middle;
        } else {
          start2 = middle;
        }
      }
      return x5 >= range7[end] ? end : start2;
    }
  }]);
  return Brush4;
}(react.PureComponent);
Brush2.displayName = "Brush";
Brush2.defaultProps = {
  height: 40,
  travellerWidth: 5,
  gap: 1,
  fill: "#fff",
  stroke: "#666",
  padding: {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  },
  leaveTimeOut: 1e3,
  alwaysShowText: false
};
var ifOverflowMatches = function ifOverflowMatches2(props, value2) {
  var alwaysShow = props.alwaysShow;
  var ifOverflow = props.ifOverflow;
  if (alwaysShow) {
    ifOverflow = "extendDomain";
  }
  return ifOverflow === value2;
};
function arrayEvery(array5, predicate) {
  var index4 = -1, length = array5 == null ? 0 : array5.length;
  while (++index4 < length) {
    if (!predicate(array5[index4], index4, array5)) {
      return false;
    }
  }
  return true;
}
var _arrayEvery = arrayEvery;
function baseEvery(collection, predicate) {
  var result = true;
  _baseEach(collection, function(value2, index4, collection2) {
    result = !!predicate(value2, index4, collection2);
    return result;
  });
  return result;
}
var _baseEvery = baseEvery;
function every(collection, predicate, guard) {
  var func = isArray_1(collection) ? _arrayEvery : _baseEvery;
  if (guard && _isIterateeCall(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, _baseIteratee(predicate));
}
var every_1 = every;
function mapValues(object2, iteratee) {
  var result = {};
  iteratee = _baseIteratee(iteratee);
  _baseForOwn(object2, function(value2, key, object3) {
    _baseAssignValue(result, key, iteratee(value2, key, object3));
  });
  return result;
}
var mapValues_1 = mapValues;
function _classCallCheck$d2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$d2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$d2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$d2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$d2(Constructor, staticProps);
  return Constructor;
}
function ownKeys$d(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$g(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$d(Object(source), true).forEach(function(key) {
        _defineProperty$g2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$d(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$g2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var formatAxisMap = function formatAxisMap2(props, axisMap, offset, axisType, chartName) {
  var width = props.width, height = props.height, layout = props.layout;
  var ids = Object.keys(axisMap);
  var steps = {
    left: offset.left,
    leftMirror: offset.left,
    right: width - offset.right,
    rightMirror: width - offset.right,
    top: offset.top,
    topMirror: offset.top,
    bottom: height - offset.bottom,
    bottomMirror: height - offset.bottom
  };
  return ids.reduce(function(result, id3) {
    var axis2 = axisMap[id3];
    var orientation = axis2.orientation, domain = axis2.domain, _axis$padding = axis2.padding, padding2 = _axis$padding === void 0 ? {} : _axis$padding, mirror = axis2.mirror, reversed = axis2.reversed;
    var offsetKey = "".concat(orientation).concat(mirror ? "Mirror" : "");
    var range7, x5, y7, needSpace;
    if (axisType === "xAxis") {
      range7 = [offset.left + (padding2.left || 0), offset.left + offset.width - (padding2.right || 0)];
    } else if (axisType === "yAxis") {
      range7 = layout === "horizontal" ? [offset.top + offset.height - (padding2.bottom || 0), offset.top + (padding2.top || 0)] : [offset.top + (padding2.top || 0), offset.top + offset.height - (padding2.bottom || 0)];
    } else {
      range7 = axis2.range;
    }
    if (reversed) {
      range7 = [range7[1], range7[0]];
    }
    var _parseScale = parseScale(axis2, chartName), scale = _parseScale.scale, realScaleType = _parseScale.realScaleType;
    scale.domain(domain).range(range7);
    checkDomainOfScale(scale);
    var ticks4 = getTicksOfScale(scale, _objectSpread$g(_objectSpread$g({}, axis2), {}, {
      realScaleType
    }));
    if (axisType === "xAxis") {
      needSpace = orientation === "top" && !mirror || orientation === "bottom" && mirror;
      x5 = offset.left;
      y7 = steps[offsetKey] - needSpace * axis2.height;
    } else if (axisType === "yAxis") {
      needSpace = orientation === "left" && !mirror || orientation === "right" && mirror;
      x5 = steps[offsetKey] - needSpace * axis2.width;
      y7 = offset.top;
    }
    var finalAxis = _objectSpread$g(_objectSpread$g(_objectSpread$g({}, axis2), ticks4), {}, {
      realScaleType,
      x: x5,
      y: y7,
      scale,
      width: axisType === "xAxis" ? offset.width : axis2.width,
      height: axisType === "yAxis" ? offset.height : axis2.height
    });
    finalAxis.bandSize = getBandSizeOfAxis(finalAxis, ticks4);
    if (!axis2.hide && axisType === "xAxis") {
      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;
    } else if (!axis2.hide) {
      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;
    }
    return _objectSpread$g(_objectSpread$g({}, result), {}, _defineProperty$g2({}, id3, finalAxis));
  }, {});
};
var rectWithPoints = function rectWithPoints2(_ref, _ref2) {
  var x14 = _ref.x, y14 = _ref.y;
  var x22 = _ref2.x, y22 = _ref2.y;
  return {
    x: Math.min(x14, x22),
    y: Math.min(y14, y22),
    width: Math.abs(x22 - x14),
    height: Math.abs(y22 - y14)
  };
};
var rectWithCoords = function rectWithCoords2(_ref3) {
  var x14 = _ref3.x1, y14 = _ref3.y1, x22 = _ref3.x2, y22 = _ref3.y2;
  return rectWithPoints({
    x: x14,
    y: y14
  }, {
    x: x22,
    y: y22
  });
};
var ScaleHelper = /* @__PURE__ */ function() {
  _createClass$d2(ScaleHelper2, null, [{
    key: "create",
    value: function create(obj) {
      return new ScaleHelper2(obj);
    }
  }]);
  function ScaleHelper2(scale) {
    _classCallCheck$d2(this, ScaleHelper2);
    this.scale = void 0;
    this.scale = scale;
  }
  _createClass$d2(ScaleHelper2, [{
    key: "apply",
    value: function apply2(value2) {
      var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref4.bandAware, position = _ref4.position;
      if (value2 === void 0) {
        return void 0;
      }
      if (position) {
        switch (position) {
          case "start": {
            return this.scale(value2);
          }
          case "middle": {
            var offset = this.bandwidth ? this.bandwidth() / 2 : 0;
            return this.scale(value2) + offset;
          }
          case "end": {
            var _offset = this.bandwidth ? this.bandwidth() : 0;
            return this.scale(value2) + _offset;
          }
          default: {
            return this.scale(value2);
          }
        }
      }
      if (bandAware) {
        var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;
        return this.scale(value2) + _offset2;
      }
      return this.scale(value2);
    }
  }, {
    key: "isInRange",
    value: function isInRange(value2) {
      var range7 = this.range();
      var first = range7[0];
      var last2 = range7[range7.length - 1];
      return first <= last2 ? value2 >= first && value2 <= last2 : value2 >= last2 && value2 <= first;
    }
  }, {
    key: "domain",
    get: function get4() {
      return this.scale.domain;
    }
  }, {
    key: "range",
    get: function get4() {
      return this.scale.range;
    }
  }, {
    key: "rangeMin",
    get: function get4() {
      return this.range()[0];
    }
  }, {
    key: "rangeMax",
    get: function get4() {
      return this.range()[1];
    }
  }, {
    key: "bandwidth",
    get: function get4() {
      return this.scale.bandwidth;
    }
  }]);
  return ScaleHelper2;
}();
ScaleHelper.EPS = 1e-4;
var createLabeledScales = function createLabeledScales2(options2) {
  var scales = Object.keys(options2).reduce(function(res, key) {
    return _objectSpread$g(_objectSpread$g({}, res), {}, _defineProperty$g2({}, key, ScaleHelper.create(options2[key])));
  }, {});
  return _objectSpread$g(_objectSpread$g({}, scales), {}, {
    apply: function apply2(coord) {
      var _ref5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref5.bandAware;
      return mapValues_1(coord, function(value2, label) {
        return scales[label].apply(value2, {
          bandAware
        });
      });
    },
    isInRange: function isInRange(coord) {
      return every_1(coord, function(value2, label) {
        return scales[label].isInRange(value2);
      });
    }
  });
};
function ownKeys$e(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$h(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$e(Object(source), true).forEach(function(key) {
        _defineProperty$h2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$e(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$h2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _slicedToArray$5(arr, i) {
  return _arrayWithHoles$6(arr) || _iterableToArrayLimit$5(arr, i) || _unsupportedIterableToArray$6(arr, i) || _nonIterableRest$6();
}
function _nonIterableRest$6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$6(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$6(o, minLen);
}
function _arrayLikeToArray$6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit$5(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _extends$d() {
  _extends$d = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$d.apply(this, arguments);
}
var renderLine = function renderLine2(option, props) {
  var line2;
  if (/* @__PURE__ */ react.isValidElement(option)) {
    line2 = /* @__PURE__ */ react.cloneElement(option, props);
  } else if (isFunction_1(option)) {
    line2 = option(props);
  } else {
    line2 = /* @__PURE__ */ react.createElement("line", _extends$d({}, props, {
      className: "recharts-reference-line-line"
    }));
  }
  return line2;
};
var getEndPoints = function getEndPoints2(scales, isFixedX, isFixedY, isSegment, props) {
  var _props$viewBox = props.viewBox, x5 = _props$viewBox.x, y7 = _props$viewBox.y, width = _props$viewBox.width, height = _props$viewBox.height, position = props.position;
  if (isFixedY) {
    var yCoord = props.y, orientation = props.yAxis.orientation;
    var coord = scales.y.apply(yCoord, {
      position
    });
    if (ifOverflowMatches(props, "discard") && !scales.y.isInRange(coord)) {
      return null;
    }
    var points = [{
      x: x5 + width,
      y: coord
    }, {
      x: x5,
      y: coord
    }];
    return orientation === "left" ? points.reverse() : points;
  }
  if (isFixedX) {
    var xCoord = props.x, _orientation = props.xAxis.orientation;
    var _coord = scales.x.apply(xCoord, {
      position
    });
    if (ifOverflowMatches(props, "discard") && !scales.x.isInRange(_coord)) {
      return null;
    }
    var _points = [{
      x: _coord,
      y: y7 + height
    }, {
      x: _coord,
      y: y7
    }];
    return _orientation === "top" ? _points.reverse() : _points;
  }
  if (isSegment) {
    var segment = props.segment;
    var _points2 = segment.map(function(p3) {
      return scales.apply(p3, {
        position
      });
    });
    if (ifOverflowMatches(props, "discard") && some_1(_points2, function(p3) {
      return !scales.isInRange(p3);
    })) {
      return null;
    }
    return _points2;
  }
  return null;
};
function ReferenceLine(props) {
  var fixedX = props.x, fixedY = props.y, segment = props.segment, xAxis = props.xAxis, yAxis = props.yAxis, shape = props.shape, className = props.className, alwaysShow = props.alwaysShow, clipPathId = props.clipPathId;
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var isX = isNumOrStr(fixedX);
  var isY = isNumOrStr(fixedY);
  var isSegment = segment && segment.length === 2;
  var endPoints = getEndPoints(scales, isX, isY, isSegment, props);
  if (!endPoints) {
    return null;
  }
  var _endPoints = _slicedToArray$5(endPoints, 2), _endPoints$ = _endPoints[0], x14 = _endPoints$.x, y14 = _endPoints$.y, _endPoints$2 = _endPoints[1], x22 = _endPoints$2.x, y22 = _endPoints$2.y;
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  var lineProps = _objectSpread$h(_objectSpread$h({
    clipPath
  }, filterProps(props, true)), {}, {
    x1: x14,
    y1: y14,
    x2: x22,
    y2: y22
  });
  return /* @__PURE__ */ react.createElement(Layer, {
    className: classnames("recharts-reference-line", className)
  }, renderLine(shape, lineProps), Label.renderCallByParent(props, rectWithCoords({
    x1: x14,
    y1: y14,
    x2: x22,
    y2: y22
  })));
}
ReferenceLine.displayName = "ReferenceLine";
ReferenceLine.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  fill: "none",
  stroke: "#ccc",
  fillOpacity: 1,
  strokeWidth: 1,
  position: "middle"
};
function _extends$e() {
  _extends$e = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$e.apply(this, arguments);
}
function ownKeys$f(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$i(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$f(Object(source), true).forEach(function(key) {
        _defineProperty$i(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$f(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$i(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var getCoordinate = function getCoordinate2(props) {
  var x5 = props.x, y7 = props.y, xAxis = props.xAxis, yAxis = props.yAxis;
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var result = scales.apply({
    x: x5,
    y: y7
  }, {
    bandAware: true
  });
  if (ifOverflowMatches(props, "discard") && !scales.isInRange(result)) {
    return null;
  }
  return result;
};
function ReferenceDot(props) {
  var x5 = props.x, y7 = props.y, r3 = props.r, alwaysShow = props.alwaysShow, clipPathId = props.clipPathId;
  var isX = isNumOrStr(x5);
  var isY = isNumOrStr(y7);
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  if (!isX || !isY) {
    return null;
  }
  var coordinate = getCoordinate(props);
  if (!coordinate) {
    return null;
  }
  var cx = coordinate.x, cy = coordinate.y;
  var shape = props.shape, className = props.className;
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  var dotProps = _objectSpread$i(_objectSpread$i({
    clipPath
  }, filterProps(props, true)), {}, {
    cx,
    cy
  });
  return /* @__PURE__ */ react.createElement(Layer, {
    className: classnames("recharts-reference-dot", className)
  }, ReferenceDot.renderDot(shape, dotProps), Label.renderCallByParent(props, {
    x: cx - r3,
    y: cy - r3,
    width: 2 * r3,
    height: 2 * r3
  }));
}
ReferenceDot.displayName = "ReferenceDot";
ReferenceDot.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  r: 10,
  fill: "#fff",
  stroke: "#ccc",
  fillOpacity: 1,
  strokeWidth: 1
};
ReferenceDot.renderDot = function(option, props) {
  var dot2;
  if (/* @__PURE__ */ react.isValidElement(option)) {
    dot2 = /* @__PURE__ */ react.cloneElement(option, props);
  } else if (isFunction_1(option)) {
    dot2 = option(props);
  } else {
    dot2 = /* @__PURE__ */ react.createElement(Dot, _extends$e({}, props, {
      cx: props.cx,
      cy: props.cy,
      className: "recharts-reference-dot-dot"
    }));
  }
  return dot2;
};
function _extends$f() {
  _extends$f = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$f.apply(this, arguments);
}
function ownKeys$g(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$j(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$g(Object(source), true).forEach(function(key) {
        _defineProperty$j(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$g(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$j(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var getRect = function getRect2(hasX1, hasX2, hasY1, hasY2, props) {
  var xValue1 = props.x1, xValue2 = props.x2, yValue1 = props.y1, yValue2 = props.y2, xAxis = props.xAxis, yAxis = props.yAxis;
  var scales = createLabeledScales({
    x: xAxis.scale,
    y: yAxis.scale
  });
  var p1 = {
    x: hasX1 ? scales.x.apply(xValue1, {
      position: "start"
    }) : scales.x.rangeMin,
    y: hasY1 ? scales.y.apply(yValue1, {
      position: "start"
    }) : scales.y.rangeMin
  };
  var p22 = {
    x: hasX2 ? scales.x.apply(xValue2, {
      position: "end"
    }) : scales.x.rangeMax,
    y: hasY2 ? scales.y.apply(yValue2, {
      position: "end"
    }) : scales.y.rangeMax
  };
  if (ifOverflowMatches(props, "discard") && (!scales.isInRange(p1) || !scales.isInRange(p22))) {
    return null;
  }
  return rectWithPoints(p1, p22);
};
function ReferenceArea(props) {
  var x14 = props.x1, x22 = props.x2, y14 = props.y1, y22 = props.y2, className = props.className, alwaysShow = props.alwaysShow, clipPathId = props.clipPathId;
  warn(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
  var hasX1 = isNumOrStr(x14);
  var hasX2 = isNumOrStr(x22);
  var hasY1 = isNumOrStr(y14);
  var hasY2 = isNumOrStr(y22);
  var shape = props.shape;
  if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) {
    return null;
  }
  var rect = getRect(hasX1, hasX2, hasY1, hasY2, props);
  if (!rect && !shape) {
    return null;
  }
  var clipPath = ifOverflowMatches(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
  return /* @__PURE__ */ react.createElement(Layer, {
    className: classnames("recharts-reference-area", className)
  }, ReferenceArea.renderRect(shape, _objectSpread$j(_objectSpread$j({
    clipPath
  }, filterProps(props, true)), rect)), Label.renderCallByParent(props, rect));
}
ReferenceArea.displayName = "ReferenceArea";
ReferenceArea.defaultProps = {
  isFront: false,
  ifOverflow: "discard",
  xAxisId: 0,
  yAxisId: 0,
  r: 10,
  fill: "#ccc",
  fillOpacity: 0.5,
  stroke: "none",
  strokeWidth: 1
};
ReferenceArea.renderRect = function(option, props) {
  var rect;
  if (/* @__PURE__ */ react.isValidElement(option)) {
    rect = /* @__PURE__ */ react.cloneElement(option, props);
  } else if (isFunction_1(option)) {
    rect = option(props);
  } else {
    rect = /* @__PURE__ */ react.createElement(Rectangle, _extends$f({}, props, {
      className: "recharts-reference-area-rect"
    }));
  }
  return rect;
};
function _typeof$f(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$f = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$f = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$f(obj);
}
function _extends$g() {
  _extends$g = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$g.apply(this, arguments);
}
function ownKeys$h(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$k(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$h(Object(source), true).forEach(function(key) {
        _defineProperty$k(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$h(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$k(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _objectWithoutProperties$7(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$7(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck$e2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$e2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$e2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$e2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$e2(Constructor, staticProps);
  return Constructor;
}
function _inherits$d2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$d(subClass, superClass);
}
function _setPrototypeOf$d(o, p3) {
  _setPrototypeOf$d = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$d(o, p3);
}
function _createSuper$c(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$c();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$d(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$d(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$d2(this, result);
  };
}
function _possibleConstructorReturn$d2(self2, call2) {
  if (call2 && (_typeof$f(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$d2(self2);
}
function _assertThisInitialized$d2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$c() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$d(o) {
  _getPrototypeOf$d = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$d(o);
}
var CartesianAxis = /* @__PURE__ */ function(_Component) {
  _inherits$d2(CartesianAxis2, _Component);
  var _super = _createSuper$c(CartesianAxis2);
  function CartesianAxis2() {
    _classCallCheck$e2(this, CartesianAxis2);
    return _super.apply(this, arguments);
  }
  _createClass$e2(CartesianAxis2, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(_ref) {
      var viewBox = _ref.viewBox, restProps = _objectWithoutProperties$7(_ref, ["viewBox"]);
      var _this$props = this.props, viewBoxOld = _this$props.viewBox, restPropsOld = _objectWithoutProperties$7(_this$props, ["viewBox"]);
      return !shallowEqual(viewBox, viewBoxOld) || !shallowEqual(restProps, restPropsOld);
    }
  }, {
    key: "getTickLineCoord",
    value: function getTickLineCoord(data3) {
      var _this$props2 = this.props, x5 = _this$props2.x, y7 = _this$props2.y, width = _this$props2.width, height = _this$props2.height, orientation = _this$props2.orientation, tickSize = _this$props2.tickSize, mirror = _this$props2.mirror, tickMargin = _this$props2.tickMargin;
      var x14, x22, y14, y22, tx, ty;
      var sign5 = mirror ? -1 : 1;
      var finalTickSize = data3.tickSize || tickSize;
      var tickCoord = isNumber$1(data3.tickCoord) ? data3.tickCoord : data3.coordinate;
      switch (orientation) {
        case "top":
          x14 = x22 = data3.coordinate;
          y22 = y7 + +!mirror * height;
          y14 = y22 - sign5 * finalTickSize;
          ty = y14 - sign5 * tickMargin;
          tx = tickCoord;
          break;
        case "left":
          y14 = y22 = data3.coordinate;
          x22 = x5 + +!mirror * width;
          x14 = x22 - sign5 * finalTickSize;
          tx = x14 - sign5 * tickMargin;
          ty = tickCoord;
          break;
        case "right":
          y14 = y22 = data3.coordinate;
          x22 = x5 + +mirror * width;
          x14 = x22 + sign5 * finalTickSize;
          tx = x14 + sign5 * tickMargin;
          ty = tickCoord;
          break;
        default:
          x14 = x22 = data3.coordinate;
          y22 = y7 + +mirror * height;
          y14 = y22 + sign5 * finalTickSize;
          ty = y14 + sign5 * tickMargin;
          tx = tickCoord;
          break;
      }
      return {
        line: {
          x1: x14,
          y1: y14,
          x2: x22,
          y2: y22
        },
        tick: {
          x: tx,
          y: ty
        }
      };
    }
  }, {
    key: "getTickTextAnchor",
    value: function getTickTextAnchor() {
      var _this$props3 = this.props, orientation = _this$props3.orientation, mirror = _this$props3.mirror;
      var textAnchor;
      switch (orientation) {
        case "left":
          textAnchor = mirror ? "start" : "end";
          break;
        case "right":
          textAnchor = mirror ? "end" : "start";
          break;
        default:
          textAnchor = "middle";
          break;
      }
      return textAnchor;
    }
  }, {
    key: "getTickVerticalAnchor",
    value: function getTickVerticalAnchor() {
      var _this$props4 = this.props, orientation = _this$props4.orientation, mirror = _this$props4.mirror;
      var verticalAnchor = "end";
      switch (orientation) {
        case "left":
        case "right":
          verticalAnchor = "middle";
          break;
        case "top":
          verticalAnchor = mirror ? "start" : "end";
          break;
        default:
          verticalAnchor = mirror ? "end" : "start";
          break;
      }
      return verticalAnchor;
    }
  }, {
    key: "renderAxisLine",
    value: function renderAxisLine() {
      var _this$props5 = this.props, x5 = _this$props5.x, y7 = _this$props5.y, width = _this$props5.width, height = _this$props5.height, orientation = _this$props5.orientation, mirror = _this$props5.mirror, axisLine = _this$props5.axisLine;
      var props = _objectSpread$k(_objectSpread$k(_objectSpread$k({}, filterProps(this.props)), filterProps(axisLine)), {}, {
        fill: "none"
      });
      if (orientation === "top" || orientation === "bottom") {
        var needHeight = +(orientation === "top" && !mirror || orientation === "bottom" && mirror);
        props = _objectSpread$k(_objectSpread$k({}, props), {}, {
          x1: x5,
          y1: y7 + needHeight * height,
          x2: x5 + width,
          y2: y7 + needHeight * height
        });
      } else {
        var needWidth = +(orientation === "left" && !mirror || orientation === "right" && mirror);
        props = _objectSpread$k(_objectSpread$k({}, props), {}, {
          x1: x5 + needWidth * width,
          y1: y7,
          x2: x5 + needWidth * width,
          y2: y7 + height
        });
      }
      return /* @__PURE__ */ react.createElement("line", _extends$g({}, props, {
        className: classnames("recharts-cartesian-axis-line", get_1(axisLine, "className"))
      }));
    }
  }, {
    key: "renderTicks",
    value: function renderTicks(ticks4) {
      var _this = this;
      var _this$props6 = this.props, tickLine = _this$props6.tickLine, stroke = _this$props6.stroke, tick = _this$props6.tick, tickFormatter = _this$props6.tickFormatter, unit5 = _this$props6.unit;
      var finalTicks = CartesianAxis2.getTicks(_objectSpread$k(_objectSpread$k({}, this.props), {}, {
        ticks: ticks4
      }));
      var textAnchor = this.getTickTextAnchor();
      var verticalAnchor = this.getTickVerticalAnchor();
      var axisProps = filterProps(this.props);
      var customTickProps = filterProps(tick);
      var tickLineProps = _objectSpread$k(_objectSpread$k({}, axisProps), {}, {
        fill: "none"
      }, filterProps(tickLine));
      var items = finalTicks.map(function(entry, i) {
        var _this$getTickLineCoor = _this.getTickLineCoord(entry), lineCoord = _this$getTickLineCoor.line, tickCoord = _this$getTickLineCoor.tick;
        var tickProps = _objectSpread$k(_objectSpread$k(_objectSpread$k(_objectSpread$k({
          textAnchor,
          verticalAnchor
        }, axisProps), {}, {
          stroke: "none",
          fill: stroke
        }, customTickProps), tickCoord), {}, {
          index: i,
          payload: entry,
          visibleTicksCount: finalTicks.length,
          tickFormatter
        });
        return /* @__PURE__ */ react.createElement(Layer, _extends$g({
          className: "recharts-cartesian-axis-tick",
          key: "tick-".concat(i)
        }, adaptEventsOfChild(_this.props, entry, i)), tickLine && /* @__PURE__ */ react.createElement("line", _extends$g({}, tickLineProps, lineCoord, {
          className: classnames("recharts-cartesian-axis-tick-line", get_1(tickLine, "className"))
        })), tick && CartesianAxis2.renderTickItem(tick, tickProps, "".concat(isFunction_1(tickFormatter) ? tickFormatter(entry.value, i) : entry.value).concat(unit5 || "")));
      });
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-axis-ticks"
      }, items);
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props7 = this.props, axisLine = _this$props7.axisLine, width = _this$props7.width, height = _this$props7.height, ticksGenerator = _this$props7.ticksGenerator, className = _this$props7.className, hide = _this$props7.hide;
      if (hide) {
        return null;
      }
      var _this$props8 = this.props, ticks4 = _this$props8.ticks, noTicksProps = _objectWithoutProperties$7(_this$props8, ["ticks"]);
      var finalTicks = ticks4;
      if (isFunction_1(ticksGenerator)) {
        finalTicks = ticks4 && ticks4.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);
      }
      if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) {
        return null;
      }
      return /* @__PURE__ */ react.createElement(Layer, {
        className: classnames("recharts-cartesian-axis", className)
      }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks), Label.renderCallByParent(this.props));
    }
  }], [{
    key: "getTicks",
    value: function getTicks3(props) {
      var tick = props.tick, ticks4 = props.ticks, viewBox = props.viewBox, minTickGap = props.minTickGap, orientation = props.orientation, interval3 = props.interval, tickFormatter = props.tickFormatter, unit5 = props.unit;
      if (!ticks4 || !ticks4.length || !tick) {
        return [];
      }
      if (isNumber$1(interval3) || Global.isSsr) {
        return CartesianAxis2.getNumberIntervalTicks(ticks4, typeof interval3 === "number" && isNumber$1(interval3) ? interval3 : 0);
      }
      if (interval3 === "preserveStartEnd") {
        return CartesianAxis2.getTicksStart({
          ticks: ticks4,
          tickFormatter,
          viewBox,
          orientation,
          minTickGap,
          unit: unit5
        }, true);
      }
      if (interval3 === "preserveStart") {
        return CartesianAxis2.getTicksStart({
          ticks: ticks4,
          tickFormatter,
          viewBox,
          orientation,
          minTickGap,
          unit: unit5
        });
      }
      return CartesianAxis2.getTicksEnd({
        ticks: ticks4,
        tickFormatter,
        viewBox,
        orientation,
        minTickGap,
        unit: unit5
      });
    }
  }, {
    key: "getNumberIntervalTicks",
    value: function getNumberIntervalTicks(ticks4, interval3) {
      return ticks4.filter(function(entry, i) {
        return i % (interval3 + 1) === 0;
      });
    }
  }, {
    key: "getTicksStart",
    value: function getTicksStart(_ref2, preserveEnd) {
      var ticks4 = _ref2.ticks, tickFormatter = _ref2.tickFormatter, viewBox = _ref2.viewBox, orientation = _ref2.orientation, minTickGap = _ref2.minTickGap, unit5 = _ref2.unit;
      var x5 = viewBox.x, y7 = viewBox.y, width = viewBox.width, height = viewBox.height;
      var sizeKey = orientation === "top" || orientation === "bottom" ? "width" : "height";
      var result = (ticks4 || []).slice();
      var unitSize = unit5 && sizeKey === "width" ? getStringSize(unit5)[sizeKey] : 0;
      var len = result.length;
      var sign5 = len >= 2 ? mathSign(result[1].coordinate - result[0].coordinate) : 1;
      var start2, end;
      if (sign5 === 1) {
        start2 = sizeKey === "width" ? x5 : y7;
        end = sizeKey === "width" ? x5 + width : y7 + height;
      } else {
        start2 = sizeKey === "width" ? x5 + width : y7 + height;
        end = sizeKey === "width" ? x5 : y7;
      }
      if (preserveEnd) {
        var tail = ticks4[len - 1];
        var tailContent = isFunction_1(tickFormatter) ? tickFormatter(tail.value, len - 1) : tail.value;
        var tailSize = getStringSize(tailContent)[sizeKey] + unitSize;
        var tailGap = sign5 * (tail.coordinate + sign5 * tailSize / 2 - end);
        result[len - 1] = tail = _objectSpread$k(_objectSpread$k({}, tail), {}, {
          tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign5 : tail.coordinate
        });
        var isTailShow = sign5 * (tail.tickCoord - sign5 * tailSize / 2 - start2) >= 0 && sign5 * (tail.tickCoord + sign5 * tailSize / 2 - end) <= 0;
        if (isTailShow) {
          end = tail.tickCoord - sign5 * (tailSize / 2 + minTickGap);
          result[len - 1] = _objectSpread$k(_objectSpread$k({}, tail), {}, {
            isShow: true
          });
        }
      }
      var count2 = preserveEnd ? len - 1 : len;
      for (var i = 0; i < count2; i++) {
        var entry = result[i];
        var content = isFunction_1(tickFormatter) ? tickFormatter(entry.value, i) : entry.value;
        var size = getStringSize(content)[sizeKey] + unitSize;
        if (i === 0) {
          var gap = sign5 * (entry.coordinate - sign5 * size / 2 - start2);
          result[i] = entry = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            tickCoord: gap < 0 ? entry.coordinate - gap * sign5 : entry.coordinate
          });
        } else {
          result[i] = entry = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            tickCoord: entry.coordinate
          });
        }
        var isShow = sign5 * (entry.tickCoord - sign5 * size / 2 - start2) >= 0 && sign5 * (entry.tickCoord + sign5 * size / 2 - end) <= 0;
        if (isShow) {
          start2 = entry.tickCoord + sign5 * (size / 2 + minTickGap);
          result[i] = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            isShow: true
          });
        }
      }
      return result.filter(function(entry2) {
        return entry2.isShow;
      });
    }
  }, {
    key: "getTicksEnd",
    value: function getTicksEnd(_ref3) {
      var ticks4 = _ref3.ticks, tickFormatter = _ref3.tickFormatter, viewBox = _ref3.viewBox, orientation = _ref3.orientation, minTickGap = _ref3.minTickGap, unit5 = _ref3.unit;
      var x5 = viewBox.x, y7 = viewBox.y, width = viewBox.width, height = viewBox.height;
      var sizeKey = orientation === "top" || orientation === "bottom" ? "width" : "height";
      var unitSize = unit5 && sizeKey === "width" ? getStringSize(unit5)[sizeKey] : 0;
      var result = (ticks4 || []).slice();
      var len = result.length;
      var sign5 = len >= 2 ? mathSign(result[1].coordinate - result[0].coordinate) : 1;
      var start2, end;
      if (sign5 === 1) {
        start2 = sizeKey === "width" ? x5 : y7;
        end = sizeKey === "width" ? x5 + width : y7 + height;
      } else {
        start2 = sizeKey === "width" ? x5 + width : y7 + height;
        end = sizeKey === "width" ? x5 : y7;
      }
      for (var i = len - 1; i >= 0; i--) {
        var entry = result[i];
        var content = isFunction_1(tickFormatter) ? tickFormatter(entry.value, len - i - 1) : entry.value;
        var size = getStringSize(content)[sizeKey] + unitSize;
        if (i === len - 1) {
          var gap = sign5 * (entry.coordinate + sign5 * size / 2 - end);
          result[i] = entry = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            tickCoord: gap > 0 ? entry.coordinate - gap * sign5 : entry.coordinate
          });
        } else {
          result[i] = entry = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            tickCoord: entry.coordinate
          });
        }
        var isShow = sign5 * (entry.tickCoord - sign5 * size / 2 - start2) >= 0 && sign5 * (entry.tickCoord + sign5 * size / 2 - end) <= 0;
        if (isShow) {
          end = entry.tickCoord - sign5 * (size / 2 + minTickGap);
          result[i] = _objectSpread$k(_objectSpread$k({}, entry), {}, {
            isShow: true
          });
        }
      }
      return result.filter(function(entry2) {
        return entry2.isShow;
      });
    }
  }, {
    key: "renderTickItem",
    value: function renderTickItem(option, props, value2) {
      var tickItem;
      if (/* @__PURE__ */ react.isValidElement(option)) {
        tickItem = /* @__PURE__ */ react.cloneElement(option, props);
      } else if (isFunction_1(option)) {
        tickItem = option(props);
      } else {
        tickItem = /* @__PURE__ */ react.createElement(Text3, _extends$g({}, props, {
          className: "recharts-cartesian-axis-tick-value"
        }), value2);
      }
      return tickItem;
    }
  }]);
  return CartesianAxis2;
}(react.Component);
CartesianAxis.displayName = "CartesianAxis";
CartesianAxis.defaultProps = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  viewBox: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  orientation: "bottom",
  ticks: [],
  stroke: "#666",
  tickLine: true,
  axisLine: true,
  tick: true,
  mirror: false,
  minTickGap: 5,
  tickSize: 6,
  tickMargin: 2,
  interval: "preserveEnd"
};
function _typeof$g(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$g = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$g = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$g(obj);
}
function _extends$h() {
  _extends$h = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$h.apply(this, arguments);
}
function _objectWithoutProperties$8(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$8(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ownKeys$i(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$l(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$i(Object(source), true).forEach(function(key) {
        _defineProperty$l(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$i(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$l(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$f2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$f2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$f2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$f2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$f2(Constructor, staticProps);
  return Constructor;
}
function _inherits$e2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$e(subClass, superClass);
}
function _setPrototypeOf$e(o, p3) {
  _setPrototypeOf$e = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$e(o, p3);
}
function _createSuper$d(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$d();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$e(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$e(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$e2(this, result);
  };
}
function _possibleConstructorReturn$e2(self2, call2) {
  if (call2 && (_typeof$g(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$e2(self2);
}
function _assertThisInitialized$e2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$d() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$e(o) {
  _getPrototypeOf$e = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$e(o);
}
var CartesianGrid = /* @__PURE__ */ function(_PureComponent) {
  _inherits$e2(CartesianGrid2, _PureComponent);
  var _super = _createSuper$d(CartesianGrid2);
  function CartesianGrid2() {
    _classCallCheck$f2(this, CartesianGrid2);
    return _super.apply(this, arguments);
  }
  _createClass$f2(CartesianGrid2, [{
    key: "renderHorizontal",
    value: function renderHorizontal(horizontalPoints) {
      var _this = this;
      var _this$props = this.props, x5 = _this$props.x, width = _this$props.width, horizontal = _this$props.horizontal;
      if (!horizontalPoints || !horizontalPoints.length) {
        return null;
      }
      var items = horizontalPoints.map(function(entry, i) {
        var props = _objectSpread$l(_objectSpread$l({}, _this.props), {}, {
          x1: x5,
          y1: entry,
          x2: x5 + width,
          y2: entry,
          key: "line-".concat(i),
          index: i
        });
        return CartesianGrid2.renderLineItem(horizontal, props);
      });
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-grid-horizontal"
      }, items);
    }
  }, {
    key: "renderVertical",
    value: function renderVertical(verticalPoints) {
      var _this2 = this;
      var _this$props2 = this.props, y7 = _this$props2.y, height = _this$props2.height, vertical = _this$props2.vertical;
      if (!verticalPoints || !verticalPoints.length) {
        return null;
      }
      var items = verticalPoints.map(function(entry, i) {
        var props = _objectSpread$l(_objectSpread$l({}, _this2.props), {}, {
          x1: entry,
          y1: y7,
          x2: entry,
          y2: y7 + height,
          key: "line-".concat(i),
          index: i
        });
        return CartesianGrid2.renderLineItem(vertical, props);
      });
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-grid-vertical"
      }, items);
    }
  }, {
    key: "renderVerticalStripes",
    value: function renderVerticalStripes(verticalPoints) {
      var verticalFill = this.props.verticalFill;
      if (!verticalFill || !verticalFill.length) {
        return null;
      }
      var _this$props3 = this.props, fillOpacity = _this$props3.fillOpacity, x5 = _this$props3.x, y7 = _this$props3.y, width = _this$props3.width, height = _this$props3.height;
      var verticalPointsUpdated = verticalPoints.slice().sort(function(a3, b10) {
        return a3 - b10;
      });
      if (x5 !== verticalPointsUpdated[0]) {
        verticalPointsUpdated.unshift(0);
      }
      var items = verticalPointsUpdated.map(function(entry, i) {
        var lineWidth = verticalPointsUpdated[i + 1] ? verticalPointsUpdated[i + 1] - entry : x5 + width - entry;
        if (lineWidth <= 0) {
          return null;
        }
        var colorIndex = i % verticalFill.length;
        return /* @__PURE__ */ react.createElement("rect", {
          key: "react-".concat(i),
          x: Math.round(entry + x5 - x5),
          y: y7,
          width: lineWidth,
          height,
          stroke: "none",
          fill: verticalFill[colorIndex],
          fillOpacity,
          className: "recharts-cartesian-grid-bg"
        });
      });
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-gridstripes-vertical"
      }, items);
    }
  }, {
    key: "renderHorizontalStripes",
    value: function renderHorizontalStripes(horizontalPoints) {
      var horizontalFill = this.props.horizontalFill;
      if (!horizontalFill || !horizontalFill.length) {
        return null;
      }
      var _this$props4 = this.props, fillOpacity = _this$props4.fillOpacity, x5 = _this$props4.x, y7 = _this$props4.y, width = _this$props4.width, height = _this$props4.height;
      var horizontalPointsUpdated = horizontalPoints.slice().sort(function(a3, b10) {
        return a3 - b10;
      });
      if (y7 !== horizontalPointsUpdated[0]) {
        horizontalPointsUpdated.unshift(0);
      }
      var items = horizontalPointsUpdated.map(function(entry, i) {
        var lineHeight = horizontalPointsUpdated[i + 1] ? horizontalPointsUpdated[i + 1] - entry : y7 + height - entry;
        if (lineHeight <= 0) {
          return null;
        }
        var colorIndex = i % horizontalFill.length;
        return /* @__PURE__ */ react.createElement("rect", {
          key: "react-".concat(i),
          y: Math.round(entry + y7 - y7),
          x: x5,
          height: lineHeight,
          width,
          stroke: "none",
          fill: horizontalFill[colorIndex],
          fillOpacity,
          className: "recharts-cartesian-grid-bg"
        });
      });
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-gridstripes-horizontal"
      }, items);
    }
  }, {
    key: "renderBackground",
    value: function renderBackground() {
      var fill = this.props.fill;
      if (!fill || fill === "none") {
        return null;
      }
      var _this$props5 = this.props, fillOpacity = _this$props5.fillOpacity, x5 = _this$props5.x, y7 = _this$props5.y, width = _this$props5.width, height = _this$props5.height;
      return /* @__PURE__ */ react.createElement("rect", {
        x: x5,
        y: y7,
        width,
        height,
        stroke: "none",
        fill,
        fillOpacity,
        className: "recharts-cartesian-grid-bg"
      });
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props6 = this.props, x5 = _this$props6.x, y7 = _this$props6.y, width = _this$props6.width, height = _this$props6.height, horizontal = _this$props6.horizontal, vertical = _this$props6.vertical, horizontalCoordinatesGenerator = _this$props6.horizontalCoordinatesGenerator, verticalCoordinatesGenerator = _this$props6.verticalCoordinatesGenerator, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, offset = _this$props6.offset, chartWidth = _this$props6.chartWidth, chartHeight = _this$props6.chartHeight;
      if (!isNumber$1(width) || width <= 0 || !isNumber$1(height) || height <= 0 || !isNumber$1(x5) || x5 !== +x5 || !isNumber$1(y7) || y7 !== +y7) {
        return null;
      }
      var _this$props7 = this.props, horizontalPoints = _this$props7.horizontalPoints, verticalPoints = _this$props7.verticalPoints;
      if ((!horizontalPoints || !horizontalPoints.length) && isFunction_1(horizontalCoordinatesGenerator)) {
        horizontalPoints = horizontalCoordinatesGenerator({
          yAxis,
          width: chartWidth,
          height: chartHeight,
          offset
        });
      }
      if ((!verticalPoints || !verticalPoints.length) && isFunction_1(verticalCoordinatesGenerator)) {
        verticalPoints = verticalCoordinatesGenerator({
          xAxis,
          width: chartWidth,
          height: chartHeight,
          offset
        });
      }
      return /* @__PURE__ */ react.createElement("g", {
        className: "recharts-cartesian-grid"
      }, this.renderBackground(), horizontal && this.renderHorizontal(horizontalPoints), vertical && this.renderVertical(verticalPoints), horizontal && this.renderHorizontalStripes(horizontalPoints), vertical && this.renderVerticalStripes(verticalPoints));
    }
  }], [{
    key: "renderLineItem",
    value: function renderLineItem(option, props) {
      var lineItem;
      if (/* @__PURE__ */ react.isValidElement(option)) {
        lineItem = /* @__PURE__ */ react.cloneElement(option, props);
      } else if (isFunction_1(option)) {
        lineItem = option(props);
      } else {
        var x14 = props.x1, y14 = props.y1, x22 = props.x2, y22 = props.y2, key = props.key, others = _objectWithoutProperties$8(props, ["x1", "y1", "x2", "y2", "key"]);
        lineItem = /* @__PURE__ */ react.createElement("line", _extends$h({}, filterProps(others), {
          x1: x14,
          y1: y14,
          x2: x22,
          y2: y22,
          fill: "none",
          key
        }));
      }
      return lineItem;
    }
  }]);
  return CartesianGrid2;
}(react.PureComponent);
CartesianGrid.displayName = "CartesianGrid";
CartesianGrid.defaultProps = {
  horizontal: true,
  vertical: true,
  horizontalPoints: [],
  verticalPoints: [],
  stroke: "#ccc",
  fill: "none",
  verticalFill: [],
  horizontalFill: []
};
function _extends$i() {
  _extends$i = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$i.apply(this, arguments);
}
function _slicedToArray$6(arr, i) {
  return _arrayWithHoles$7(arr) || _iterableToArrayLimit$6(arr, i) || _unsupportedIterableToArray$7(arr, i) || _nonIterableRest$7();
}
function _nonIterableRest$7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$7(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$7(o, minLen);
}
function _arrayLikeToArray$7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit$6(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties$9(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$9(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function ErrorBar(props) {
  var offset = props.offset, layout = props.layout, width = props.width, dataKey = props.dataKey, data3 = props.data, dataPointFormatter = props.dataPointFormatter, xAxis = props.xAxis, yAxis = props.yAxis, others = _objectWithoutProperties$9(props, ["offset", "layout", "width", "dataKey", "data", "dataPointFormatter", "xAxis", "yAxis"]);
  var svgProps = filterProps(others);
  var errorBars = data3.map(function(entry, i) {
    var _dataPointFormatter = dataPointFormatter(entry, dataKey), x5 = _dataPointFormatter.x, y7 = _dataPointFormatter.y, value2 = _dataPointFormatter.value, errorVal = _dataPointFormatter.errorVal;
    if (!errorVal) {
      return null;
    }
    var lineCoordinates = [];
    var lowBound, highBound;
    if (Array.isArray(errorVal)) {
      var _errorVal = _slicedToArray$6(errorVal, 2);
      lowBound = _errorVal[0];
      highBound = _errorVal[1];
    } else {
      lowBound = highBound = errorVal;
    }
    if (layout === "vertical") {
      var scale = xAxis.scale;
      var yMid = y7 + offset;
      var yMin = yMid + width;
      var yMax = yMid - width;
      var xMin = scale(value2 - lowBound);
      var xMax = scale(value2 + highBound);
      lineCoordinates.push({
        x1: xMax,
        y1: yMin,
        x2: xMax,
        y2: yMax
      });
      lineCoordinates.push({
        x1: xMin,
        y1: yMid,
        x2: xMax,
        y2: yMid
      });
      lineCoordinates.push({
        x1: xMin,
        y1: yMin,
        x2: xMin,
        y2: yMax
      });
    } else if (layout === "horizontal") {
      var _scale = yAxis.scale;
      var xMid = x5 + offset;
      var _xMin = xMid - width;
      var _xMax = xMid + width;
      var _yMin = _scale(value2 - lowBound);
      var _yMax = _scale(value2 + highBound);
      lineCoordinates.push({
        x1: _xMin,
        y1: _yMax,
        x2: _xMax,
        y2: _yMax
      });
      lineCoordinates.push({
        x1: xMid,
        y1: _yMin,
        x2: xMid,
        y2: _yMax
      });
      lineCoordinates.push({
        x1: _xMin,
        y1: _yMin,
        x2: _xMax,
        y2: _yMin
      });
    }
    return /* @__PURE__ */ react.createElement(Layer, _extends$i({
      className: "recharts-errorBar",
      key: "bar-".concat(i)
    }, svgProps), lineCoordinates.map(function(coordinates, index4) {
      return /* @__PURE__ */ react.createElement("line", _extends$i({}, coordinates, {
        key: "line-".concat(index4)
      }));
    }));
  });
  return /* @__PURE__ */ react.createElement(Layer, {
    className: "recharts-errorBars"
  }, errorBars);
}
ErrorBar.defaultProps = {
  stroke: "black",
  strokeWidth: 1.5,
  width: 5,
  offset: 0,
  layout: "horizontal"
};
ErrorBar.displayName = "ErrorBar";
function _typeof$h(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$h = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$h = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$h(obj);
}
function _objectWithoutProperties$a(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$a(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$a(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends$j() {
  _extends$j = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$j.apply(this, arguments);
}
function ownKeys$j(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$m(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$j(Object(source), true).forEach(function(key) {
        _defineProperty$m(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$j(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$m(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toConsumableArray$92(arr) {
  return _arrayWithoutHoles$92(arr) || _iterableToArray$a2(arr) || _unsupportedIterableToArray$8(arr) || _nonIterableSpread$92();
}
function _nonIterableSpread$92() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$8(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$8(o, minLen);
}
function _iterableToArray$a2(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$92(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$8(arr);
}
function _arrayLikeToArray$8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck$g(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$g(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$g(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$g(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$g(Constructor, staticProps);
  return Constructor;
}
function _inherits$f(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$f(subClass, superClass);
}
function _setPrototypeOf$f(o, p3) {
  _setPrototypeOf$f = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$f(o, p3);
}
function _createSuper$e(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$e();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$f(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$f(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$f(this, result);
  };
}
function _possibleConstructorReturn$f(self2, call2) {
  if (call2 && (_typeof$h(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$f(self2);
}
function _assertThisInitialized$f(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$e() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$f(o) {
  _getPrototypeOf$f = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$f(o);
}
var Line4 = /* @__PURE__ */ function(_PureComponent) {
  _inherits$f(Line5, _PureComponent);
  var _super = _createSuper$e(Line5);
  function Line5() {
    var _this;
    _classCallCheck$g(this, Line5);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.mainCurve = void 0;
    _this.state = {
      isAnimationFinished: true,
      totalLength: 0
    };
    _this.getStrokeDasharray = function(length, totalLength, lines) {
      var lineLength = lines.reduce(function(pre, next) {
        return pre + next;
      });
      var count2 = Math.floor(length / lineLength);
      var remainLength = length % lineLength;
      var restLength = totalLength - length;
      var remainLines = [];
      for (var i = 0, sum2 = 0; ; sum2 += lines[i], ++i) {
        if (sum2 + lines[i] > remainLength) {
          remainLines = [].concat(_toConsumableArray$92(lines.slice(0, i)), [remainLength - sum2]);
          break;
        }
      }
      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];
      return [].concat(_toConsumableArray$92(Line5.repeat(lines, count2)), _toConsumableArray$92(remainLines), emptyLines).map(function(line2) {
        return "".concat(line2, "px");
      }).join(", ");
    };
    _this.id = uniqueId2("recharts-line-");
    _this.pathRef = function(node) {
      _this.mainCurve = node;
    };
    _this.handleAnimationEnd = function() {
      _this.setState({
        isAnimationFinished: true
      });
      if (_this.props.onAnimationEnd) {
        _this.props.onAnimationEnd();
      }
    };
    _this.handleAnimationStart = function() {
      _this.setState({
        isAnimationFinished: false
      });
      if (_this.props.onAnimationStart) {
        _this.props.onAnimationStart();
      }
    };
    return _this;
  }
  _createClass$g(Line5, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.isAnimationActive) {
        return;
      }
      var totalLength = this.getTotalLength();
      this.setState({
        totalLength
      });
    }
  }, {
    key: "getTotalLength",
    value: function getTotalLength() {
      var curveDom = this.mainCurve;
      try {
        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
      } catch (err) {
        return 0;
      }
    }
  }, {
    key: "renderErrorBar",
    value: function renderErrorBar() {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }
      var _this$props = this.props, points = _this$props.points, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, layout = _this$props.layout, children2 = _this$props.children;
      var errorBarItems = findAllByType(children2, ErrorBar.displayName);
      if (!errorBarItems) {
        return null;
      }
      function dataPointFormatter(dataPoint, dataKey) {
        return {
          x: dataPoint.x,
          y: dataPoint.y,
          value: dataPoint.value,
          errorVal: getValueByDataKey(dataPoint.payload, dataKey)
        };
      }
      return errorBarItems.map(function(item, i) {
        return /* @__PURE__ */ react.cloneElement(item, {
          key: "bar-".concat(i),
          data: points,
          xAxis,
          yAxis,
          layout,
          dataPointFormatter
        });
      });
    }
  }, {
    key: "renderDots",
    value: function renderDots(needClip, clipPathId) {
      var isAnimationActive = this.props.isAnimationActive;
      if (isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }
      var _this$props2 = this.props, dot2 = _this$props2.dot, points = _this$props2.points, dataKey = _this$props2.dataKey;
      var lineProps = filterProps(this.props);
      var customDotProps = filterProps(dot2, true);
      var dots = points.map(function(entry, i) {
        var dotProps = _objectSpread$m(_objectSpread$m(_objectSpread$m({
          key: "dot-".concat(i),
          r: 3
        }, lineProps), customDotProps), {}, {
          value: entry.value,
          dataKey,
          cx: entry.x,
          cy: entry.y,
          index: i,
          payload: entry.payload
        });
        return Line5.renderDotItem(dot2, dotProps);
      });
      var dotsProps = {
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
      };
      return /* @__PURE__ */ react.createElement(Layer, _extends$j({
        className: "recharts-line-dots",
        key: "dots"
      }, dotsProps), dots);
    }
  }, {
    key: "renderCurveStatically",
    value: function renderCurveStatically(points, needClip, clipPathId, props) {
      var _this$props3 = this.props, type3 = _this$props3.type, layout = _this$props3.layout, connectNulls = _this$props3.connectNulls;
      _this$props3.ref;
      var others = _objectWithoutProperties$a(_this$props3, ["type", "layout", "connectNulls", "ref"]);
      var curveProps = _objectSpread$m(_objectSpread$m(_objectSpread$m({}, filterProps(others, true)), {}, {
        fill: "none",
        className: "recharts-line-curve",
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,
        points
      }, props), {}, {
        type: type3,
        layout,
        connectNulls
      });
      return /* @__PURE__ */ react.createElement(Curve, _extends$j({}, curveProps, {
        pathRef: this.pathRef
      }));
    }
  }, {
    key: "renderCurveWithAnimation",
    value: function renderCurveWithAnimation(needClip, clipPathId) {
      var _this2 = this;
      var _this$props4 = this.props, points = _this$props4.points, strokeDasharray2 = _this$props4.strokeDasharray, isAnimationActive = _this$props4.isAnimationActive, animationBegin = _this$props4.animationBegin, animationDuration = _this$props4.animationDuration, animationEasing = _this$props4.animationEasing, animationId = _this$props4.animationId, animateNewValues = _this$props4.animateNewValues, width = _this$props4.width, height = _this$props4.height;
      var _this$state = this.state, prevPoints = _this$state.prevPoints, totalLength = _this$state.totalLength;
      return /* @__PURE__ */ react.createElement(Animate, {
        begin: animationBegin,
        duration: animationDuration,
        isActive: isAnimationActive,
        easing: animationEasing,
        from: {
          t: 0
        },
        to: {
          t: 1
        },
        key: "line-".concat(animationId),
        onAnimationEnd: this.handleAnimationEnd,
        onAnimationStart: this.handleAnimationStart
      }, function(_ref) {
        var t4 = _ref.t;
        if (prevPoints) {
          var prevPointsDiffFactor = prevPoints.length / points.length;
          var stepData = points.map(function(entry, index4) {
            var prevPointIndex = Math.floor(index4 * prevPointsDiffFactor);
            if (prevPoints[prevPointIndex]) {
              var prev = prevPoints[prevPointIndex];
              var interpolatorX = interpolateNumber(prev.x, entry.x);
              var interpolatorY = interpolateNumber(prev.y, entry.y);
              return _objectSpread$m(_objectSpread$m({}, entry), {}, {
                x: interpolatorX(t4),
                y: interpolatorY(t4)
              });
            }
            if (animateNewValues) {
              var _interpolatorX = interpolateNumber(width * 2, entry.x);
              var _interpolatorY = interpolateNumber(height / 2, entry.y);
              return _objectSpread$m(_objectSpread$m({}, entry), {}, {
                x: _interpolatorX(t4),
                y: _interpolatorY(t4)
              });
            }
            return _objectSpread$m(_objectSpread$m({}, entry), {}, {
              x: entry.x,
              y: entry.y
            });
          });
          return _this2.renderCurveStatically(stepData, needClip, clipPathId);
        }
        var interpolator = interpolateNumber(0, totalLength);
        var curLength = interpolator(t4);
        var currentStrokeDasharray;
        if (strokeDasharray2) {
          var lines = "".concat(strokeDasharray2).split(/[,\s]+/gim).map(function(num) {
            return parseFloat(num);
          });
          currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);
        } else {
          currentStrokeDasharray = "".concat(curLength, "px ").concat(totalLength - curLength, "px");
        }
        return _this2.renderCurveStatically(points, needClip, clipPathId, {
          strokeDasharray: currentStrokeDasharray
        });
      });
    }
  }, {
    key: "renderCurve",
    value: function renderCurve(needClip, clipPathId) {
      var _this$props5 = this.props, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;
      var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, totalLength = _this$state2.totalLength;
      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual_1(prevPoints, points))) {
        return this.renderCurveWithAnimation(needClip, clipPathId);
      }
      return this.renderCurveStatically(points, needClip, clipPathId);
    }
  }, {
    key: "render",
    value: function render2() {
      var _this$props6 = this.props, hide = _this$props6.hide, dot2 = _this$props6.dot, points = _this$props6.points, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, top2 = _this$props6.top, left2 = _this$props6.left, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, id3 = _this$props6.id;
      if (hide || !points || !points.length) {
        return null;
      }
      var isAnimationFinished = this.state.isAnimationFinished;
      var hasSinglePoint = points.length === 1;
      var layerClass = classnames("recharts-line", className);
      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
      var clipPathId = isNil_1(id3) ? this.id : id3;
      return /* @__PURE__ */ react.createElement(Layer, {
        className: layerClass
      }, needClip ? /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("clipPath", {
        id: "clipPath-".concat(clipPathId)
      }, /* @__PURE__ */ react.createElement("rect", {
        x: left2,
        y: top2,
        width,
        height
      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(), (hasSinglePoint || dot2) && this.renderDots(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, points));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.animationId !== prevState.prevAnimationId) {
        return {
          prevAnimationId: nextProps.animationId,
          curPoints: nextProps.points,
          prevPoints: prevState.curPoints
        };
      }
      if (nextProps.points !== prevState.curPoints) {
        return {
          curPoints: nextProps.points
        };
      }
      return null;
    }
  }, {
    key: "repeat",
    value: function repeat(lines, count2) {
      var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray$92(lines), [0]) : lines;
      var result = [];
      for (var i = 0; i < count2; ++i) {
        result = [].concat(_toConsumableArray$92(result), _toConsumableArray$92(linesUnit));
      }
      return result;
    }
  }, {
    key: "renderDotItem",
    value: function renderDotItem(option, props) {
      var dotItem;
      if (/* @__PURE__ */ react.isValidElement(option)) {
        dotItem = /* @__PURE__ */ react.cloneElement(option, props);
      } else if (isFunction_1(option)) {
        dotItem = option(props);
      } else {
        var className = classnames("recharts-line-dot", option ? option.className : "");
        dotItem = /* @__PURE__ */ react.createElement(Dot, _extends$j({}, props, {
          className
        }));
      }
      return dotItem;
    }
  }]);
  return Line5;
}(react.PureComponent);
Line4.displayName = "Line";
Line4.defaultProps = {
  xAxisId: 0,
  yAxisId: 0,
  connectNulls: false,
  activeDot: true,
  dot: true,
  legendType: "line",
  stroke: "#3182bd",
  strokeWidth: 1,
  fill: "#fff",
  points: [],
  isAnimationActive: !Global.isSsr,
  animateNewValues: true,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: "ease",
  hide: false
};
Line4.getComposedData = function(_ref2) {
  var props = _ref2.props, xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, dataKey = _ref2.dataKey, bandSize = _ref2.bandSize, displayedData = _ref2.displayedData, offset = _ref2.offset;
  var layout = props.layout;
  var points = displayedData.map(function(entry, index4) {
    var value2 = getValueByDataKey(entry, dataKey);
    if (layout === "horizontal") {
      return {
        x: getCateCoordinateOfLine({
          axis: xAxis,
          ticks: xAxisTicks,
          bandSize,
          entry,
          index: index4
        }),
        y: isNil_1(value2) ? null : yAxis.scale(value2),
        value: value2,
        payload: entry
      };
    }
    return {
      x: isNil_1(value2) ? null : xAxis.scale(value2),
      y: getCateCoordinateOfLine({
        axis: yAxis,
        ticks: yAxisTicks,
        bandSize,
        entry,
        index: index4
      }),
      value: value2,
      payload: entry
    };
  });
  return _objectSpread$m({
    points,
    layout
  }, offset);
};
var XAxis = function XAxis2() {
  return null;
};
XAxis.displayName = "XAxis";
XAxis.defaultProps = {
  allowDecimals: true,
  hide: false,
  orientation: "bottom",
  width: 0,
  height: 30,
  mirror: false,
  xAxisId: 0,
  tickCount: 5,
  type: "category",
  domain: [0, "auto"],
  padding: {
    left: 0,
    right: 0
  },
  allowDataOverflow: false,
  scale: "auto",
  reversed: false,
  allowDuplicatedCategory: true
};
var YAxis = function YAxis2() {
  return null;
};
YAxis.displayName = "YAxis";
YAxis.defaultProps = {
  allowDuplicatedCategory: true,
  allowDecimals: true,
  hide: false,
  orientation: "left",
  width: 60,
  height: 0,
  mirror: false,
  yAxisId: 0,
  tickCount: 5,
  type: "number",
  domain: [0, "auto"],
  padding: {
    top: 0,
    bottom: 0
  },
  allowDataOverflow: false,
  scale: "auto",
  reversed: false
};
var detectReferenceElementsDomain = function detectReferenceElementsDomain2(children2, domain, axisId, axisType, specifiedTicks) {
  var lines = findAllByType(children2, ReferenceLine.displayName);
  var dots = findAllByType(children2, ReferenceDot.displayName);
  var elements = lines.concat(dots);
  var areas = findAllByType(children2, ReferenceArea.displayName);
  var idKey = "".concat(axisType, "Id");
  var valueKey = axisType[0];
  var finalDomain = domain;
  if (elements.length) {
    finalDomain = elements.reduce(function(result, el) {
      if (el.props[idKey] === axisId && ifOverflowMatches(el.props, "extendDomain") && isNumber$1(el.props[valueKey])) {
        var value2 = el.props[valueKey];
        return [Math.min(result[0], value2), Math.max(result[1], value2)];
      }
      return result;
    }, finalDomain);
  }
  if (areas.length) {
    var key1 = "".concat(valueKey, "1");
    var key2 = "".concat(valueKey, "2");
    finalDomain = areas.reduce(function(result, el) {
      if (el.props[idKey] === axisId && ifOverflowMatches(el.props, "extendDomain") && isNumber$1(el.props[key1]) && isNumber$1(el.props[key2])) {
        var value1 = el.props[key1];
        var value2 = el.props[key2];
        return [Math.min(result[0], value1, value2), Math.max(result[1], value1, value2)];
      }
      return result;
    }, finalDomain);
  }
  if (specifiedTicks && specifiedTicks.length) {
    finalDomain = specifiedTicks.reduce(function(result, tick) {
      if (isNumber$1(tick)) {
        return [Math.min(result[0], tick), Math.max(result[1], tick)];
      }
      return result;
    }, finalDomain);
  }
  return finalDomain;
};
var eventemitter3 = createCommonjsModule(function(module) {
  var has = Object.prototype.hasOwnProperty, prefix3 = "~";
  function Events2() {
  }
  if (Object.create) {
    Events2.prototype = Object.create(null);
    if (!new Events2().__proto__)
      prefix3 = false;
  }
  function EE(fn, context, once2) {
    this.fn = fn;
    this.context = context;
    this.once = once2 || false;
  }
  function addListener2(emitter, event, fn, context, once2) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once2), evt = prefix3 ? prefix3 + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events2();
    else
      delete emitter._events[evt];
  }
  function EventEmitter() {
    this._events = new Events2();
    this._eventsCount = 0;
  }
  EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0)
      return names;
    for (name in events = this._events) {
      if (has.call(events, name))
        names.push(prefix3 ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix3 ? prefix3 + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i = 0, l3 = handlers.length, ee3 = new Array(l3); i < l3; i++) {
      ee3[i] = handlers[i].fn;
    }
    return ee3;
  };
  EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix3 ? prefix3 + event : event, listeners = this._events[evt];
    if (!listeners)
      return 0;
    if (listeners.fn)
      return 1;
    return listeners.length;
  };
  EventEmitter.prototype.emit = function emit2(event, a1, a22, a3, a4, a5) {
    var evt = prefix3 ? prefix3 + event : event;
    if (!this._events[evt])
      return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
      if (listeners.once)
        this.removeListener(event, listeners.fn, void 0, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a22), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a22, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a22, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a22, a3, a4, a5), true;
      }
      for (i = 1, args = new Array(len - 1); i < len; i++) {
        args[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args);
    } else {
      var length = listeners.length, j2;
      for (i = 0; i < length; i++) {
        if (listeners[i].once)
          this.removeListener(event, listeners[i].fn, void 0, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a22);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a22, a3);
            break;
          default:
            if (!args)
              for (j2 = 1, args = new Array(len - 1); j2 < len; j2++) {
                args[j2 - 1] = arguments[j2];
              }
            listeners[i].fn.apply(listeners[i].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter.prototype.on = function on2(event, fn, context) {
    return addListener2(this, event, fn, context, false);
  };
  EventEmitter.prototype.once = function once2(event, fn, context) {
    return addListener2(this, event, fn, context, true);
  };
  EventEmitter.prototype.removeListener = function removeListener2(event, fn, context, once2) {
    var evt = prefix3 ? prefix3 + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once2 || listeners.once) && (!context || listeners.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length; i < length; i++) {
        if (listeners[i].fn !== fn || once2 && !listeners[i].once || context && listeners[i].context !== context) {
          events.push(listeners[i]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function removeAllListeners2(event) {
    var evt;
    if (event) {
      evt = prefix3 ? prefix3 + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events2();
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
  EventEmitter.prototype.addListener = EventEmitter.prototype.on;
  EventEmitter.prefixed = prefix3;
  EventEmitter.EventEmitter = EventEmitter;
  {
    module.exports = EventEmitter;
  }
});
var eventCenter = new eventemitter3();
if (eventCenter.setMaxListeners) {
  eventCenter.setMaxListeners(10);
}
var SYNC_EVENT = "recharts.syncMouseEvents";
function _typeof$i(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$i = function _typeof2(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$i = function _typeof2(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$i(obj);
}
function _extends$k() {
  _extends$k = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$k.apply(this, arguments);
}
function _objectWithoutProperties$b(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$b(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$b(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck$h(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$h(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$h(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$h(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$h(Constructor, staticProps);
  return Constructor;
}
function _inherits$g(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
  if (superClass)
    _setPrototypeOf$g(subClass, superClass);
}
function _setPrototypeOf$g(o, p3) {
  _setPrototypeOf$g = Object.setPrototypeOf || function _setPrototypeOf2(o2, p4) {
    o2.__proto__ = p4;
    return o2;
  };
  return _setPrototypeOf$g(o, p3);
}
function _createSuper$f(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$f();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$g(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$g(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$g(this, result);
  };
}
function _possibleConstructorReturn$g(self2, call2) {
  if (call2 && (_typeof$i(call2) === "object" || typeof call2 === "function")) {
    return call2;
  }
  return _assertThisInitialized$g(self2);
}
function _assertThisInitialized$g(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct$f() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _getPrototypeOf$g(o) {
  _getPrototypeOf$g = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$g(o);
}
function _toConsumableArray$a2(arr) {
  return _arrayWithoutHoles$a2(arr) || _iterableToArray$b2(arr) || _unsupportedIterableToArray$9(arr) || _nonIterableSpread$a2();
}
function _nonIterableSpread$a2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$9(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$9(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$9(o, minLen);
}
function _iterableToArray$b2(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _arrayWithoutHoles$a2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$9(arr);
}
function _arrayLikeToArray$9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function ownKeys$k(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread$n(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$k(Object(source), true).forEach(function(key) {
        _defineProperty$n(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$k(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$n(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var ORIENT_MAP = {
  xAxis: ["bottom", "top"],
  yAxis: ["left", "right"]
};
var originCoordinate = {
  x: 0,
  y: 0
};
var isFinit = Number.isFinite ? Number.isFinite : isFinite;
var calculateTooltipPos = function calculateTooltipPos2(rangeObj, layout) {
  if (layout === "horizontal") {
    return rangeObj.x;
  }
  if (layout === "vertical") {
    return rangeObj.y;
  }
  if (layout === "centric") {
    return rangeObj.angle;
  }
  return rangeObj.radius;
};
var getActiveCoordinate = function getActiveCoordinate2(layout, tooltipTicks, activeIndex, rangeObj) {
  var entry = tooltipTicks.find(function(tick) {
    return tick && tick.index === activeIndex;
  });
  if (entry) {
    if (layout === "horizontal") {
      return {
        x: entry.coordinate,
        y: rangeObj.y
      };
    }
    if (layout === "vertical") {
      return {
        x: rangeObj.x,
        y: entry.coordinate
      };
    }
    if (layout === "centric") {
      var _angle = entry.coordinate;
      var _radius = rangeObj.radius;
      return _objectSpread$n(_objectSpread$n(_objectSpread$n({}, rangeObj), polarToCartesian(rangeObj.cx, rangeObj.cy, _radius, _angle)), {}, {
        angle: _angle,
        radius: _radius
      });
    }
    var radius = entry.coordinate;
    var angle = rangeObj.angle;
    return _objectSpread$n(_objectSpread$n(_objectSpread$n({}, rangeObj), polarToCartesian(rangeObj.cx, rangeObj.cy, radius, angle)), {}, {
      angle,
      radius
    });
  }
  return originCoordinate;
};
var getDisplayedData = function getDisplayedData2(data3, _ref, item) {
  var graphicalItems = _ref.graphicalItems, dataStartIndex = _ref.dataStartIndex, dataEndIndex = _ref.dataEndIndex;
  var itemsData = (graphicalItems || []).reduce(function(result, child) {
    var itemData = child.props.data;
    if (itemData && itemData.length) {
      return [].concat(_toConsumableArray$a2(result), _toConsumableArray$a2(itemData));
    }
    return result;
  }, []);
  if (itemsData && itemsData.length > 0) {
    return itemsData;
  }
  if (item && item.props && item.props.data && item.props.data.length > 0) {
    return item.props.data;
  }
  if (data3 && data3.length && isNumber$1(dataStartIndex) && isNumber$1(dataEndIndex)) {
    return data3.slice(dataStartIndex, dataEndIndex + 1);
  }
  return [];
};
var getTooltipContent = function getTooltipContent2(state, chartData, activeIndex, activeLabel) {
  var graphicalItems = state.graphicalItems, tooltipAxis = state.tooltipAxis;
  var displayedData = getDisplayedData(chartData, state);
  if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) {
    return null;
  }
  return graphicalItems.reduce(function(result, child) {
    var hide = child.props.hide;
    if (hide) {
      return result;
    }
    var _child$props = child.props, dataKey = _child$props.dataKey, name = _child$props.name, unit5 = _child$props.unit, formatter = _child$props.formatter, data3 = _child$props.data, tooltipType = _child$props.tooltipType;
    var payload;
    if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
      var entries = data3 === void 0 ? displayedData : data3;
      payload = findEntryInArray(entries, tooltipAxis.dataKey, activeLabel);
    } else {
      payload = data3 && data3[activeIndex] || displayedData[activeIndex];
    }
    if (!payload) {
      return result;
    }
    return [].concat(_toConsumableArray$a2(result), [_objectSpread$n(_objectSpread$n({}, filterProps(child)), {}, {
      dataKey,
      unit: unit5,
      formatter,
      name: name || dataKey,
      color: getMainColorOfGraphicItem(child),
      value: getValueByDataKey(payload, dataKey),
      type: tooltipType,
      payload
    })]);
  }, []);
};
var getTooltipData = function getTooltipData2(state, chartData, layout, rangeObj) {
  var rangeData = rangeObj || {
    x: state.chartX,
    y: state.chartY
  };
  var pos = calculateTooltipPos(rangeData, layout);
  var ticks4 = state.orderedTooltipTicks, axis2 = state.tooltipAxis, tooltipTicks = state.tooltipTicks;
  var activeIndex = calculateActiveTickIndex(pos, ticks4, tooltipTicks, axis2);
  if (activeIndex >= 0 && tooltipTicks) {
    var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;
    var activePayload = getTooltipContent(state, chartData, activeIndex, activeLabel);
    var activeCoordinate = getActiveCoordinate(layout, ticks4, activeIndex, rangeData);
    return {
      activeTooltipIndex: activeIndex,
      activeLabel,
      activePayload,
      activeCoordinate
    };
  }
  return null;
};
var getAxisMapByAxes = function getAxisMapByAxes2(props, _ref2) {
  var axes = _ref2.axes, graphicalItems = _ref2.graphicalItems, axisType = _ref2.axisType, axisIdKey = _ref2.axisIdKey, stackGroups = _ref2.stackGroups, dataStartIndex = _ref2.dataStartIndex, dataEndIndex = _ref2.dataEndIndex;
  var layout = props.layout, children2 = props.children, stackOffset2 = props.stackOffset;
  var isCategorical = isCategoricalAxis(layout, axisType);
  var axisMap = axes.reduce(function(result, child) {
    var _child$props2 = child.props, type3 = _child$props2.type, dataKey = _child$props2.dataKey, allowDataOverflow = _child$props2.allowDataOverflow, allowDuplicatedCategory = _child$props2.allowDuplicatedCategory, scale = _child$props2.scale, ticks4 = _child$props2.ticks;
    var axisId = child.props[axisIdKey];
    var displayedData = getDisplayedData(props.data, {
      graphicalItems: graphicalItems.filter(function(item) {
        return item.props[axisIdKey] === axisId;
      }),
      dataStartIndex,
      dataEndIndex
    });
    var len = displayedData.length;
    if (!result[axisId]) {
      var domain, duplicateDomain, categoricalDomain;
      if (dataKey) {
        domain = getDomainOfDataByKey(displayedData, dataKey, type3);
        if (type3 === "category" && isCategorical) {
          var duplicate = hasDuplicate(domain);
          if (allowDuplicatedCategory && duplicate) {
            duplicateDomain = domain;
            domain = range_1(0, len);
          } else if (!allowDuplicatedCategory) {
            domain = parseDomainOfCategoryAxis(child.props.domain, domain, child).reduce(function(finalDomain, entry) {
              return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(_toConsumableArray$a2(finalDomain), [entry]);
            }, []);
          }
        } else if (type3 === "category") {
          if (!allowDuplicatedCategory) {
            domain = parseDomainOfCategoryAxis(child.props.domain, domain, child).reduce(function(finalDomain, entry) {
              return finalDomain.indexOf(entry) >= 0 || entry === "" || isNil_1(entry) ? finalDomain : [].concat(_toConsumableArray$a2(finalDomain), [entry]);
            }, []);
          } else {
            domain = domain.filter(function(entry) {
              return entry !== "" && !isNil_1(entry);
            });
          }
        } else if (type3 === "number") {
          var errorBarsDomain = parseErrorBarsOfAxis(displayedData, graphicalItems.filter(function(item) {
            return item.props[axisIdKey] === axisId && !item.props.hide;
          }), dataKey, axisType);
          if (errorBarsDomain) {
            domain = errorBarsDomain;
          }
        }
        if (isCategorical && (type3 === "number" || scale !== "auto")) {
          categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, "category");
        }
      } else if (isCategorical) {
        domain = range_1(0, len);
      } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type3 === "number") {
        domain = stackOffset2 === "expand" ? [0, 1] : getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
      } else {
        domain = getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function(item) {
          return item.props[axisIdKey] === axisId && !item.props.hide;
        }), type3, true);
      }
      if (type3 === "number") {
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType, ticks4);
        if (child.props.domain) {
          domain = parseSpecifiedDomain(child.props.domain, domain, allowDataOverflow);
        }
      } else if (type3 === "category" && child.props.domain) {
        var axisDomain = child.props.domain;
        var isDomainValidate = domain.every(function(entry) {
          return axisDomain.indexOf(entry) >= 0;
        });
        if (isDomainValidate) {
          domain = axisDomain;
        }
      }
      return _objectSpread$n(_objectSpread$n({}, result), {}, _defineProperty$n({}, axisId, _objectSpread$n(_objectSpread$n({}, child.props), {}, {
        axisType,
        domain,
        categoricalDomain,
        duplicateDomain,
        originalDomain: child.props.domain,
        isCategorical,
        layout
      })));
    }
    return result;
  }, {});
  return axisMap;
};
var getAxisMapByItems = function getAxisMapByItems2(props, _ref3) {
  var graphicalItems = _ref3.graphicalItems, Axis6 = _ref3.Axis, axisType = _ref3.axisType, axisIdKey = _ref3.axisIdKey, stackGroups = _ref3.stackGroups, dataStartIndex = _ref3.dataStartIndex, dataEndIndex = _ref3.dataEndIndex;
  var layout = props.layout, children2 = props.children;
  var displayedData = getDisplayedData(props.data, {
    graphicalItems,
    dataStartIndex,
    dataEndIndex
  });
  var len = displayedData.length;
  var isCategorical = isCategoricalAxis(layout, axisType);
  var index4 = -1;
  var axisMap = graphicalItems.reduce(function(result, child) {
    var axisId = child.props[axisIdKey];
    if (!result[axisId]) {
      index4++;
      var domain;
      if (isCategorical) {
        domain = range_1(0, len);
      } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {
        domain = getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType);
      } else {
        domain = parseSpecifiedDomain(Axis6.defaultProps.domain, getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function(item) {
          return item.props[axisIdKey] === axisId && !item.props.hide;
        }), "number"), Axis6.defaultProps.allowDataOverflow);
        domain = detectReferenceElementsDomain(children2, domain, axisId, axisType);
      }
      return _objectSpread$n(_objectSpread$n({}, result), {}, _defineProperty$n({}, axisId, _objectSpread$n(_objectSpread$n({
        axisType
      }, Axis6.defaultProps), {}, {
        hide: true,
        orientation: get_1(ORIENT_MAP, "".concat(axisType, ".").concat(index4 % 2), null),
        domain,
        originalDomain: Axis6.defaultProps.domain,
        isCategorical,
        layout
      })));
    }
    return result;
  }, {});
  return axisMap;
};
var getAxisMap = function getAxisMap2(props, _ref4) {
  var _ref4$axisType = _ref4.axisType, axisType = _ref4$axisType === void 0 ? "xAxis" : _ref4$axisType, AxisComp = _ref4.AxisComp, graphicalItems = _ref4.graphicalItems, stackGroups = _ref4.stackGroups, dataStartIndex = _ref4.dataStartIndex, dataEndIndex = _ref4.dataEndIndex;
  var children2 = props.children;
  var axisIdKey = "".concat(axisType, "Id");
  var axes = findAllByType(children2, AxisComp);
  var axisMap = {};
  if (axes && axes.length) {
    axisMap = getAxisMapByAxes(props, {
      axes,
      graphicalItems,
      axisType,
      axisIdKey,
      stackGroups,
      dataStartIndex,
      dataEndIndex
    });
  } else if (graphicalItems && graphicalItems.length) {
    axisMap = getAxisMapByItems(props, {
      Axis: AxisComp,
      graphicalItems,
      axisType,
      axisIdKey,
      stackGroups,
      dataStartIndex,
      dataEndIndex
    });
  }
  return axisMap;
};
var tooltipTicksGenerator = function tooltipTicksGenerator2(axisMap) {
  var axis2 = getAnyElementOfObject(axisMap);
  var tooltipTicks = getTicksOfAxis(axis2, false, true);
  return {
    tooltipTicks,
    orderedTooltipTicks: sortBy_1(tooltipTicks, function(o) {
      return o.coordinate;
    }),
    tooltipAxis: axis2,
    tooltipAxisBandSize: getBandSizeOfAxis(axis2)
  };
};
var createDefaultState = function createDefaultState2(props) {
  var children2 = props.children, defaultShowTooltip = props.defaultShowTooltip;
  var brushItem = findChildByType(children2, Brush2.displayName);
  var startIndex = brushItem && brushItem.props && brushItem.props.startIndex || 0;
  var endIndex = brushItem && brushItem.props && brushItem.props.endIndex || props.data && props.data.length - 1 || 0;
  return {
    chartX: 0,
    chartY: 0,
    dataStartIndex: startIndex,
    dataEndIndex: endIndex,
    activeTooltipIndex: -1,
    isTooltipActive: !isNil_1(defaultShowTooltip) ? defaultShowTooltip : false
  };
};
var hasGraphicalBarItem = function hasGraphicalBarItem2(graphicalItems) {
  if (!graphicalItems || !graphicalItems.length) {
    return false;
  }
  return graphicalItems.some(function(item) {
    var name = getDisplayName(item && item.type);
    return name && name.indexOf("Bar") >= 0;
  });
};
var getAxisNameByLayout = function getAxisNameByLayout2(layout) {
  if (layout === "horizontal") {
    return {
      numericAxisName: "yAxis",
      cateAxisName: "xAxis"
    };
  }
  if (layout === "vertical") {
    return {
      numericAxisName: "xAxis",
      cateAxisName: "yAxis"
    };
  }
  if (layout === "centric") {
    return {
      numericAxisName: "radiusAxis",
      cateAxisName: "angleAxis"
    };
  }
  return {
    numericAxisName: "angleAxis",
    cateAxisName: "radiusAxis"
  };
};
var calculateOffset = function calculateOffset2(_ref5, prevLegendBBox) {
  var props = _ref5.props, graphicalItems = _ref5.graphicalItems, _ref5$xAxisMap = _ref5.xAxisMap, xAxisMap = _ref5$xAxisMap === void 0 ? {} : _ref5$xAxisMap, _ref5$yAxisMap = _ref5.yAxisMap, yAxisMap = _ref5$yAxisMap === void 0 ? {} : _ref5$yAxisMap;
  var width = props.width, height = props.height, children2 = props.children;
  var margin = props.margin || {};
  var brushItem = findChildByType(children2, Brush2.displayName);
  var legendItem = findChildByType(children2, Legend2.displayName);
  var offsetH = Object.keys(yAxisMap).reduce(function(result, id3) {
    var entry = yAxisMap[id3];
    var orientation = entry.orientation;
    if (!entry.mirror && !entry.hide) {
      return _objectSpread$n(_objectSpread$n({}, result), {}, _defineProperty$n({}, orientation, result[orientation] + entry.width));
    }
    return result;
  }, {
    left: margin.left || 0,
    right: margin.right || 0
  });
  var offsetV = Object.keys(xAxisMap).reduce(function(result, id3) {
    var entry = xAxisMap[id3];
    var orientation = entry.orientation;
    if (!entry.mirror && !entry.hide) {
      return _objectSpread$n(_objectSpread$n({}, result), {}, _defineProperty$n({}, orientation, get_1(result, "".concat(orientation)) + entry.height));
    }
    return result;
  }, {
    top: margin.top || 0,
    bottom: margin.bottom || 0
  });
  var offset = _objectSpread$n(_objectSpread$n({}, offsetV), offsetH);
  var brushBottom = offset.bottom;
  if (brushItem) {
    offset.bottom += brushItem.props.height || Brush2.defaultProps.height;
  }
  if (legendItem && prevLegendBBox) {
    offset = appendOffsetOfLegend(offset, graphicalItems, props, prevLegendBBox);
  }
  return _objectSpread$n(_objectSpread$n({
    brushBottom
  }, offset), {}, {
    width: width - offset.left - offset.right,
    height: height - offset.top - offset.bottom
  });
};
var generateCategoricalChart = function generateCategoricalChart2(_ref6) {
  var _class, _temp;
  var chartName = _ref6.chartName, GraphicalChild = _ref6.GraphicalChild, _ref6$eventType = _ref6.eventType, eventType = _ref6$eventType === void 0 ? "axis" : _ref6$eventType, axisComponents = _ref6.axisComponents, legendContent = _ref6.legendContent, formatAxisMap3 = _ref6.formatAxisMap, defaultProps4 = _ref6.defaultProps;
  var getFormatItems = function getFormatItems2(props, currentState) {
    var graphicalItems = currentState.graphicalItems, stackGroups = currentState.stackGroups, offset = currentState.offset, updateId = currentState.updateId, dataStartIndex = currentState.dataStartIndex, dataEndIndex = currentState.dataEndIndex;
    var barSize = props.barSize, layout = props.layout, barGap = props.barGap, barCategoryGap = props.barCategoryGap, globalMaxBarSize = props.maxBarSize;
    var _getAxisNameByLayout = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout.numericAxisName, cateAxisName = _getAxisNameByLayout.cateAxisName;
    var hasBar = hasGraphicalBarItem(graphicalItems);
    var sizeList = hasBar && getBarSizeList({
      barSize,
      stackGroups
    });
    var formatedItems = [];
    graphicalItems.forEach(function(item, index4) {
      var displayedData = getDisplayedData(props.data, {
        dataStartIndex,
        dataEndIndex
      }, item);
      var _item$props = item.props, dataKey = _item$props.dataKey, childMaxBarSize = _item$props.maxBarSize;
      var numericAxisId = item.props["".concat(numericAxisName, "Id")];
      var cateAxisId = item.props["".concat(cateAxisName, "Id")];
      var axisObj = axisComponents.reduce(function(result, entry) {
        var _objectSpread6;
        var axisMap = currentState["".concat(entry.axisType, "Map")];
        var id3 = item.props["".concat(entry.axisType, "Id")];
        var axis2 = axisMap && axisMap[id3];
        return _objectSpread$n(_objectSpread$n({}, result), {}, (_objectSpread6 = {}, _defineProperty$n(_objectSpread6, entry.axisType, axis2), _defineProperty$n(_objectSpread6, "".concat(entry.axisType, "Ticks"), getTicksOfAxis(axis2)), _objectSpread6));
      }, {});
      var cateAxis = axisObj[cateAxisName];
      var cateTicks = axisObj["".concat(cateAxisName, "Ticks")];
      var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && getStackedDataOfItem(item, stackGroups[numericAxisId].stackGroups);
      var itemIsBar = getDisplayName(item.type).indexOf("Bar") >= 0;
      var bandSize = getBandSizeOfAxis(cateAxis, cateTicks);
      var barPosition = [];
      if (itemIsBar) {
        var barBandSize = getBandSizeOfAxis(cateAxis, cateTicks, true);
        var maxBarSize = isNil_1(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;
        barPosition = getBarPosition({
          barGap,
          barCategoryGap,
          bandSize: barBandSize !== bandSize ? barBandSize : bandSize,
          sizeList: sizeList[cateAxisId],
          maxBarSize
        });
        if (barBandSize !== bandSize) {
          barPosition = barPosition.map(function(pos) {
            return _objectSpread$n(_objectSpread$n({}, pos), {}, {
              position: _objectSpread$n(_objectSpread$n({}, pos.position), {}, {
                offset: pos.position.offset - barBandSize / 2
              })
            });
          });
        }
      }
      var componsedFn = item && item.type && item.type.getComposedData;
      if (componsedFn) {
        var _objectSpread7;
        formatedItems.push({
          props: _objectSpread$n(_objectSpread$n({}, componsedFn(_objectSpread$n(_objectSpread$n({}, axisObj), {}, {
            displayedData,
            props,
            dataKey,
            item,
            bandSize,
            barPosition,
            offset,
            stackedData,
            layout,
            dataStartIndex,
            dataEndIndex
          }))), {}, (_objectSpread7 = {
            key: item.key || "item-".concat(index4)
          }, _defineProperty$n(_objectSpread7, numericAxisName, axisObj[numericAxisName]), _defineProperty$n(_objectSpread7, cateAxisName, axisObj[cateAxisName]), _defineProperty$n(_objectSpread7, "animationId", updateId), _objectSpread7)),
          childIndex: parseChildIndex(item, props.children),
          item
        });
      }
    });
    return formatedItems;
  };
  var updateStateOfAxisMapsOffsetAndStackGroups = function updateStateOfAxisMapsOffsetAndStackGroups2(_ref7, prevState) {
    var props = _ref7.props, dataStartIndex = _ref7.dataStartIndex, dataEndIndex = _ref7.dataEndIndex, updateId = _ref7.updateId;
    if (!validateWidthHeight({
      props
    })) {
      return null;
    }
    var children2 = props.children, layout = props.layout, stackOffset2 = props.stackOffset, data3 = props.data, reverseStackOrder = props.reverseStackOrder;
    var _getAxisNameByLayout2 = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout2.numericAxisName, cateAxisName = _getAxisNameByLayout2.cateAxisName;
    var graphicalItems = findAllByType(children2, GraphicalChild);
    var stackGroups = getStackGroupsByAxisId(data3, graphicalItems, "".concat(numericAxisName, "Id"), "".concat(cateAxisName, "Id"), stackOffset2, reverseStackOrder);
    var axisObj = axisComponents.reduce(function(result, entry) {
      var name = "".concat(entry.axisType, "Map");
      return _objectSpread$n(_objectSpread$n({}, result), {}, _defineProperty$n({}, name, getAxisMap(props, _objectSpread$n(_objectSpread$n({}, entry), {}, {
        graphicalItems,
        stackGroups: entry.axisType === numericAxisName && stackGroups,
        dataStartIndex,
        dataEndIndex
      }))));
    }, {});
    var offset = calculateOffset(_objectSpread$n(_objectSpread$n({}, axisObj), {}, {
      props,
      graphicalItems
    }), prevState === null || prevState === void 0 ? void 0 : prevState.legendBBox);
    Object.keys(axisObj).forEach(function(key) {
      axisObj[key] = formatAxisMap3(props, axisObj[key], offset, key.replace("Map", ""), chartName);
    });
    var cateAxisMap = axisObj["".concat(cateAxisName, "Map")];
    var ticksObj = tooltipTicksGenerator(cateAxisMap);
    var formatedGraphicalItems = getFormatItems(props, _objectSpread$n(_objectSpread$n({}, axisObj), {}, {
      dataStartIndex,
      dataEndIndex,
      updateId,
      graphicalItems,
      stackGroups,
      offset
    }));
    return _objectSpread$n(_objectSpread$n({
      formatedGraphicalItems,
      graphicalItems,
      offset,
      stackGroups
    }, ticksObj), axisObj);
  };
  return _temp = _class = /* @__PURE__ */ function(_Component) {
    _inherits$g(CategoricalChartWrapper, _Component);
    var _super = _createSuper$f(CategoricalChartWrapper);
    function CategoricalChartWrapper(_props) {
      var _this;
      _classCallCheck$h(this, CategoricalChartWrapper);
      _this = _super.call(this, _props);
      _this.uniqueChartId = void 0;
      _this.clipPathId = void 0;
      _this.legendInstance = void 0;
      _this.container = void 0;
      _this.handleLegendBBoxUpdate = function(box) {
        if (box && _this.legendInstance) {
          var _this$state = _this.state, dataStartIndex = _this$state.dataStartIndex, dataEndIndex = _this$state.dataEndIndex, updateId = _this$state.updateId;
          _this.setState(_objectSpread$n({
            legendBBox: box
          }, updateStateOfAxisMapsOffsetAndStackGroups({
            props: _this.props,
            dataStartIndex,
            dataEndIndex,
            updateId
          }, _objectSpread$n(_objectSpread$n({}, _this.state), {}, {
            legendBBox: box
          }))));
        }
      };
      _this.handleReceiveSyncEvent = function(cId, chartId, data3) {
        var _this$props = _this.props, syncId = _this$props.syncId, layout = _this$props.layout;
        var updateId = _this.state.updateId;
        if (syncId === cId && chartId !== _this.uniqueChartId) {
          var dataStartIndex = data3.dataStartIndex, dataEndIndex = data3.dataEndIndex;
          if (!isNil_1(data3.dataStartIndex) || !isNil_1(data3.dataEndIndex)) {
            _this.setState(_objectSpread$n({
              dataStartIndex,
              dataEndIndex
            }, updateStateOfAxisMapsOffsetAndStackGroups({
              props: _this.props,
              dataStartIndex,
              dataEndIndex,
              updateId
            }, _this.state)));
          } else if (!isNil_1(data3.activeTooltipIndex)) {
            var chartX = data3.chartX, chartY = data3.chartY, activeTooltipIndex = data3.activeTooltipIndex;
            var _this$state2 = _this.state, offset = _this$state2.offset, tooltipTicks = _this$state2.tooltipTicks;
            if (!offset) {
              return;
            }
            var viewBox = _objectSpread$n(_objectSpread$n({}, offset), {}, {
              x: offset.left,
              y: offset.top
            });
            var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);
            var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);
            var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;
            var activePayload = getTooltipContent(_this.state, _this.props.data, activeTooltipIndex);
            var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {
              x: layout === "horizontal" ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,
              y: layout === "horizontal" ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate
            } : originCoordinate;
            _this.setState(_objectSpread$n(_objectSpread$n({}, data3), {}, {
              activeLabel,
              activeCoordinate,
              activePayload
            }));
          } else {
            _this.setState(data3);
          }
        }
      };
      _this.handleBrushChange = function(_ref8) {
        var startIndex = _ref8.startIndex, endIndex = _ref8.endIndex;
        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {
          var updateId = _this.state.updateId;
          _this.setState(function() {
            return _objectSpread$n({
              dataStartIndex: startIndex,
              dataEndIndex: endIndex
            }, updateStateOfAxisMapsOffsetAndStackGroups({
              props: _this.props,
              dataStartIndex: startIndex,
              dataEndIndex: endIndex,
              updateId
            }, _this.state));
          });
          _this.triggerSyncEvent({
            dataStartIndex: startIndex,
            dataEndIndex: endIndex
          });
        }
      };
      _this.handleMouseEnter = function(e3) {
        var onMouseEnter = _this.props.onMouseEnter;
        var mouse = _this.getMouseInfo(e3);
        if (mouse) {
          var nextState = _objectSpread$n(_objectSpread$n({}, mouse), {}, {
            isTooltipActive: true
          });
          _this.setState(nextState);
          _this.triggerSyncEvent(nextState);
          if (isFunction_1(onMouseEnter)) {
            onMouseEnter(nextState, e3);
          }
        }
      };
      _this.triggeredAfterMouseMove = function(e3) {
        var onMouseMove = _this.props.onMouseMove;
        var mouse = _this.getMouseInfo(e3);
        var nextState = mouse ? _objectSpread$n(_objectSpread$n({}, mouse), {}, {
          isTooltipActive: true
        }) : {
          isTooltipActive: false
        };
        _this.setState(nextState);
        _this.triggerSyncEvent(nextState);
        if (isFunction_1(onMouseMove)) {
          onMouseMove(nextState, e3);
        }
      };
      _this.handleItemMouseEnter = function(el) {
        _this.setState(function() {
          return {
            isTooltipActive: true,
            activeItem: el,
            activePayload: el.tooltipPayload,
            activeCoordinate: el.tooltipPosition || {
              x: el.cx,
              y: el.cy
            }
          };
        });
      };
      _this.handleItemMouseLeave = function() {
        _this.setState(function() {
          return {
            isTooltipActive: false
          };
        });
      };
      _this.handleMouseMove = function(e3) {
        if (e3 && isFunction_1(e3.persist)) {
          e3.persist();
        }
        _this.triggeredAfterMouseMove(e3);
      };
      _this.handleMouseLeave = function(e3) {
        var onMouseLeave = _this.props.onMouseLeave;
        var nextState = {
          isTooltipActive: false
        };
        _this.setState(nextState);
        _this.triggerSyncEvent(nextState);
        if (isFunction_1(onMouseLeave)) {
          onMouseLeave(nextState, e3);
        }
        _this.cancelThrottledTriggerAfterMouseMove();
      };
      _this.handleOuterEvent = function(e3) {
        var eventName = getReactEventByType(e3);
        var event = get_1(_this.props, "".concat(eventName));
        if (eventName && isFunction_1(event)) {
          var mouse;
          if (/.*touch.*/i.test(eventName)) {
            mouse = _this.getMouseInfo(e3.changedTouches[0]);
          } else {
            mouse = _this.getMouseInfo(e3);
          }
          var handler = event;
          handler(mouse, e3);
        }
      };
      _this.handleClick = function(e3) {
        var onClick = _this.props.onClick;
        var mouse = _this.getMouseInfo(e3);
        if (mouse) {
          var nextState = _objectSpread$n(_objectSpread$n({}, mouse), {}, {
            isTooltipActive: true
          });
          _this.setState(nextState);
          _this.triggerSyncEvent(nextState);
          if (isFunction_1(onClick)) {
            onClick(nextState, e3);
          }
        }
      };
      _this.handleMouseDown = function(e3) {
        var onMouseDown = _this.props.onMouseDown;
        if (isFunction_1(onMouseDown)) {
          var mouse = _this.getMouseInfo(e3);
          onMouseDown(mouse, e3);
        }
      };
      _this.handleMouseUp = function(e3) {
        var onMouseUp = _this.props.onMouseUp;
        if (isFunction_1(onMouseUp)) {
          var mouse = _this.getMouseInfo(e3);
          onMouseUp(mouse, e3);
        }
      };
      _this.handleTouchMove = function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.handleMouseMove(e3.changedTouches[0]);
        }
      };
      _this.handleTouchStart = function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.handleMouseDown(e3.changedTouches[0]);
        }
      };
      _this.handleTouchEnd = function(e3) {
        if (e3.changedTouches != null && e3.changedTouches.length > 0) {
          _this.handleMouseUp(e3.changedTouches[0]);
        }
      };
      _this.verticalCoordinatesGenerator = function(_ref9) {
        var xAxis = _ref9.xAxis, width = _ref9.width, height = _ref9.height, offset = _ref9.offset;
        return getCoordinatesOfGrid(CartesianAxis.getTicks(_objectSpread$n(_objectSpread$n(_objectSpread$n({}, CartesianAxis.defaultProps), xAxis), {}, {
          ticks: getTicksOfAxis(xAxis, true),
          viewBox: {
            x: 0,
            y: 0,
            width,
            height
          }
        })), offset.left, offset.left + offset.width);
      };
      _this.horizontalCoordinatesGenerator = function(_ref10) {
        var yAxis = _ref10.yAxis, width = _ref10.width, height = _ref10.height, offset = _ref10.offset;
        return getCoordinatesOfGrid(CartesianAxis.getTicks(_objectSpread$n(_objectSpread$n(_objectSpread$n({}, CartesianAxis.defaultProps), yAxis), {}, {
          ticks: getTicksOfAxis(yAxis, true),
          viewBox: {
            x: 0,
            y: 0,
            width,
            height
          }
        })), offset.top, offset.top + offset.height);
      };
      _this.axesTicksGenerator = function(axis2) {
        return getTicksOfAxis(axis2, true);
      };
      _this.renderCursor = function(element) {
        var _this$state3 = _this.state, isTooltipActive = _this$state3.isTooltipActive, activeCoordinate = _this$state3.activeCoordinate, activePayload = _this$state3.activePayload, offset = _this$state3.offset, activeTooltipIndex = _this$state3.activeTooltipIndex;
        if (!element || !element.props.cursor || !isTooltipActive || !activeCoordinate) {
          return null;
        }
        var layout = _this.props.layout;
        var restProps;
        var cursorComp = Curve;
        if (chartName === "ScatterChart") {
          restProps = activeCoordinate;
          cursorComp = Cross;
        } else if (chartName === "BarChart") {
          restProps = _this.getCursorRectangle();
          cursorComp = Rectangle;
        } else if (layout === "radial") {
          var _this$getCursorPoints = _this.getCursorPoints(), cx = _this$getCursorPoints.cx, cy = _this$getCursorPoints.cy, radius = _this$getCursorPoints.radius, startAngle = _this$getCursorPoints.startAngle, endAngle = _this$getCursorPoints.endAngle;
          restProps = {
            cx,
            cy,
            startAngle,
            endAngle,
            innerRadius: radius,
            outerRadius: radius
          };
          cursorComp = Sector;
        } else {
          restProps = {
            points: _this.getCursorPoints()
          };
          cursorComp = Curve;
        }
        var key = element.key || "_recharts-cursor";
        var cursorProps = _objectSpread$n(_objectSpread$n(_objectSpread$n(_objectSpread$n({
          stroke: "#ccc",
          pointerEvents: "none"
        }, offset), restProps), filterProps(element.props.cursor)), {}, {
          payload: activePayload,
          payloadIndex: activeTooltipIndex,
          key,
          className: "recharts-tooltip-cursor"
        });
        return /* @__PURE__ */ react.isValidElement(element.props.cursor) ? /* @__PURE__ */ react.cloneElement(element.props.cursor, cursorProps) : /* @__PURE__ */ react.createElement(cursorComp, cursorProps);
      };
      _this.renderPolarAxis = function(element, displayName, index4) {
        var axisType = get_1(element, "type.axisType");
        var axisMap = get_1(_this.state, "".concat(axisType, "Map"));
        var axisOption = axisMap[element.props["".concat(axisType, "Id")]];
        return /* @__PURE__ */ react.cloneElement(element, _objectSpread$n(_objectSpread$n({}, axisOption), {}, {
          className: axisType,
          key: element.key || "".concat(displayName, "-").concat(index4),
          ticks: getTicksOfAxis(axisOption, true)
        }));
      };
      _this.renderXAxis = function(element, displayName, index4) {
        var xAxisMap = _this.state.xAxisMap;
        var axisObj = xAxisMap[element.props.xAxisId];
        return _this.renderAxis(axisObj, element, displayName, index4);
      };
      _this.renderYAxis = function(element, displayName, index4) {
        var yAxisMap = _this.state.yAxisMap;
        var axisObj = yAxisMap[element.props.yAxisId];
        return _this.renderAxis(axisObj, element, displayName, index4);
      };
      _this.renderGrid = function(element) {
        var _this$state4 = _this.state, xAxisMap = _this$state4.xAxisMap, yAxisMap = _this$state4.yAxisMap, offset = _this$state4.offset;
        var _this$props2 = _this.props, width = _this$props2.width, height = _this$props2.height;
        var xAxis = getAnyElementOfObject(xAxisMap);
        var yAxisWithFiniteDomain = find_1(yAxisMap, function(axis2) {
          return every_1(axis2.domain, isFinit);
        });
        var yAxis = yAxisWithFiniteDomain || getAnyElementOfObject(yAxisMap);
        var props = element.props || {};
        return /* @__PURE__ */ react.cloneElement(element, {
          key: element.key || "grid",
          x: isNumber$1(props.x) ? props.x : offset.left,
          y: isNumber$1(props.y) ? props.y : offset.top,
          width: isNumber$1(props.width) ? props.width : offset.width,
          height: isNumber$1(props.height) ? props.height : offset.height,
          xAxis,
          yAxis,
          offset,
          chartWidth: width,
          chartHeight: height,
          verticalCoordinatesGenerator: props.verticalCoordinatesGenerator || _this.verticalCoordinatesGenerator,
          horizontalCoordinatesGenerator: props.horizontalCoordinatesGenerator || _this.horizontalCoordinatesGenerator
        });
      };
      _this.renderPolarGrid = function(element) {
        var radialLines = element.props.radialLines;
        var _this$state5 = _this.state, radiusAxisMap = _this$state5.radiusAxisMap, angleAxisMap = _this$state5.angleAxisMap;
        var radiusAxis = getAnyElementOfObject(radiusAxisMap);
        var angleAxis = getAnyElementOfObject(angleAxisMap);
        var cx = angleAxis.cx, cy = angleAxis.cy, innerRadius = angleAxis.innerRadius, outerRadius = angleAxis.outerRadius;
        return /* @__PURE__ */ react.cloneElement(element, {
          polarAngles: getTicksOfAxis(angleAxis, true).map(function(entry) {
            return entry.coordinate;
          }),
          polarRadius: getTicksOfAxis(radiusAxis, true).map(function(entry) {
            return entry.coordinate;
          }),
          cx,
          cy,
          innerRadius,
          outerRadius,
          key: element.key || "polar-grid",
          radialLines
        });
      };
      _this.renderLegend = function() {
        var formatedGraphicalItems = _this.state.formatedGraphicalItems;
        var _this$props3 = _this.props, children2 = _this$props3.children, width = _this$props3.width, height = _this$props3.height;
        var margin = _this.props.margin || {};
        var legendWidth = width - (margin.left || 0) - (margin.right || 0);
        var props = getLegendProps({
          children: children2,
          formatedGraphicalItems,
          legendWidth,
          legendContent
        });
        if (!props) {
          return null;
        }
        var item = props.item, otherProps = _objectWithoutProperties$b(props, ["item"]);
        return /* @__PURE__ */ react.cloneElement(item, _objectSpread$n(_objectSpread$n({}, otherProps), {}, {
          chartWidth: width,
          chartHeight: height,
          margin,
          ref: function ref(legend) {
            _this.legendInstance = legend;
          },
          onBBoxUpdate: _this.handleLegendBBoxUpdate
        }));
      };
      _this.renderTooltip = function() {
        var children2 = _this.props.children;
        var tooltipItem = findChildByType(children2, Tooltip.displayName);
        if (!tooltipItem) {
          return null;
        }
        var _this$state6 = _this.state, isTooltipActive = _this$state6.isTooltipActive, activeCoordinate = _this$state6.activeCoordinate, activePayload = _this$state6.activePayload, activeLabel = _this$state6.activeLabel, offset = _this$state6.offset;
        return /* @__PURE__ */ react.cloneElement(tooltipItem, {
          viewBox: _objectSpread$n(_objectSpread$n({}, offset), {}, {
            x: offset.left,
            y: offset.top
          }),
          active: isTooltipActive,
          label: activeLabel,
          payload: isTooltipActive ? activePayload : [],
          coordinate: activeCoordinate
        });
      };
      _this.renderBrush = function(element) {
        var _this$props4 = _this.props, margin = _this$props4.margin, data3 = _this$props4.data;
        var _this$state7 = _this.state, offset = _this$state7.offset, dataStartIndex = _this$state7.dataStartIndex, dataEndIndex = _this$state7.dataEndIndex, updateId = _this$state7.updateId;
        return /* @__PURE__ */ react.cloneElement(element, {
          key: element.key || "_recharts-brush",
          onChange: combineEventHandlers(_this.handleBrushChange, null, element.props.onChange),
          data: data3,
          x: isNumber$1(element.props.x) ? element.props.x : offset.left,
          y: isNumber$1(element.props.y) ? element.props.y : offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),
          width: isNumber$1(element.props.width) ? element.props.width : offset.width,
          startIndex: dataStartIndex,
          endIndex: dataEndIndex,
          updateId: "brush-".concat(updateId)
        });
      };
      _this.renderReferenceElement = function(element, displayName, index4) {
        if (!element) {
          return null;
        }
        var _assertThisInitialize = _assertThisInitialized$g(_this), clipPathId = _assertThisInitialize.clipPathId;
        var _this$state8 = _this.state, xAxisMap = _this$state8.xAxisMap, yAxisMap = _this$state8.yAxisMap, offset = _this$state8.offset;
        var _element$props = element.props, xAxisId = _element$props.xAxisId, yAxisId = _element$props.yAxisId;
        return /* @__PURE__ */ react.cloneElement(element, {
          key: element.key || "".concat(displayName, "-").concat(index4),
          xAxis: xAxisMap[xAxisId],
          yAxis: yAxisMap[yAxisId],
          viewBox: {
            x: offset.left,
            y: offset.top,
            width: offset.width,
            height: offset.height
          },
          clipPathId
        });
      };
      _this.renderActivePoints = function(_ref11) {
        var item = _ref11.item, activePoint = _ref11.activePoint, basePoint = _ref11.basePoint, childIndex = _ref11.childIndex, isRange = _ref11.isRange;
        var result = [];
        var key = item.props.key;
        var _item$item$props = item.item.props, activeDot = _item$item$props.activeDot, dataKey = _item$item$props.dataKey;
        var dotProps = _objectSpread$n(_objectSpread$n({
          index: childIndex,
          dataKey,
          cx: activePoint.x,
          cy: activePoint.y,
          r: 4,
          fill: getMainColorOfGraphicItem(item.item),
          strokeWidth: 2,
          stroke: "#fff",
          payload: activePoint.payload,
          value: activePoint.value,
          key: "".concat(key, "-activePoint-").concat(childIndex)
        }, filterProps(activeDot)), adaptEventHandlers(activeDot));
        result.push(CategoricalChartWrapper.renderActiveDot(activeDot, dotProps));
        if (basePoint) {
          result.push(CategoricalChartWrapper.renderActiveDot(activeDot, _objectSpread$n(_objectSpread$n({}, dotProps), {}, {
            cx: basePoint.x,
            cy: basePoint.y,
            key: "".concat(key, "-basePoint-").concat(childIndex)
          })));
        } else if (isRange) {
          result.push(null);
        }
        return result;
      };
      _this.renderGraphicChild = function(element, displayName, index4) {
        var item = _this.filterFormatItem(element, displayName, index4);
        if (!item) {
          return null;
        }
        var _this$state9 = _this.state, isTooltipActive = _this$state9.isTooltipActive, tooltipAxis = _this$state9.tooltipAxis, activeTooltipIndex = _this$state9.activeTooltipIndex, activeLabel = _this$state9.activeLabel;
        var children2 = _this.props.children;
        var tooltipItem = findChildByType(children2, Tooltip.displayName);
        var _item$props2 = item.props, points = _item$props2.points, isRange = _item$props2.isRange, baseLine = _item$props2.baseLine;
        var _item$item$props2 = item.item.props, activeDot = _item$item$props2.activeDot, hide = _item$item$props2.hide;
        var hasActive = !hide && isTooltipActive && tooltipItem && activeDot && activeTooltipIndex >= 0;
        var isTooltipTriggerByClick = tooltipItem && tooltipItem.props.trigger === "click";
        var itemEvents = isTooltipTriggerByClick ? {
          onClick: combineEventHandlers(_this.handleItemMouseEnter, null, item.props.onCLick)
        } : {
          onMouseLeave: combineEventHandlers(_this.handleItemMouseLeave, null, item.props.onMouseLeave),
          onMouseEnter: combineEventHandlers(_this.handleItemMouseEnter, null, item.props.onMouseEnter)
        };
        var graphicalItem = /* @__PURE__ */ react.cloneElement(element, _objectSpread$n(_objectSpread$n({}, item.props), itemEvents));
        function findWithPayload(entry) {
          return typeof tooltipAxis.dataKey === "function" ? tooltipAxis.dataKey(entry.payload) : null;
        }
        if (hasActive) {
          var activePoint, basePoint;
          if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
            var specifiedKey = typeof tooltipAxis.dataKey === "function" ? findWithPayload : "payload.".concat(tooltipAxis.dataKey.toString());
            activePoint = findEntryInArray(points, specifiedKey, activeLabel);
            basePoint = isRange && baseLine && findEntryInArray(baseLine, specifiedKey, activeLabel);
          } else {
            activePoint = points[activeTooltipIndex];
            basePoint = isRange && baseLine && baseLine[activeTooltipIndex];
          }
          if (!isNil_1(activePoint)) {
            return [graphicalItem].concat(_toConsumableArray$a2(_this.renderActivePoints({
              item,
              activePoint,
              basePoint,
              childIndex: activeTooltipIndex,
              isRange
            })));
          }
        }
        if (isRange) {
          return [graphicalItem, null, null];
        }
        return [graphicalItem, null];
      };
      _this.renderCustomized = function(element) {
        return /* @__PURE__ */ react.cloneElement(element, _objectSpread$n(_objectSpread$n({}, _this.props), _this.state));
      };
      _this.uniqueChartId = isNil_1(_props.id) ? uniqueId2("recharts") : _props.id;
      _this.clipPathId = "".concat(_this.uniqueChartId, "-clip");
      if (_props.throttleDelay) {
        _this.triggeredAfterMouseMove = throttle_1(_this.triggeredAfterMouseMove, _props.throttleDelay);
      }
      _this.state = {};
      return _this;
    }
    _createClass$h(CategoricalChartWrapper, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!isNil_1(this.props.syncId)) {
          this.addListener();
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (isNil_1(prevProps.syncId) && !isNil_1(this.props.syncId)) {
          this.addListener();
        }
        if (!isNil_1(this.props.syncId) && isNil_1(prevProps.syncId)) {
          this.removeListener();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (!isNil_1(this.props.syncId)) {
          this.removeListener();
        }
        this.cancelThrottledTriggerAfterMouseMove();
      }
    }, {
      key: "cancelThrottledTriggerAfterMouseMove",
      value: function cancelThrottledTriggerAfterMouseMove() {
        if (typeof this.triggeredAfterMouseMove.cancel === "function") {
          this.triggeredAfterMouseMove.cancel();
        }
      }
    }, {
      key: "getMouseInfo",
      value: function getMouseInfo(event) {
        if (!this.container) {
          return null;
        }
        var containerOffset = getOffset2(this.container);
        var e3 = calculateChartCoordinate(event, containerOffset);
        var rangeObj = this.inRange(e3.chartX, e3.chartY);
        if (!rangeObj) {
          return null;
        }
        var _this$state10 = this.state, xAxisMap = _this$state10.xAxisMap, yAxisMap = _this$state10.yAxisMap;
        if (eventType !== "axis" && xAxisMap && yAxisMap) {
          var xScale = getAnyElementOfObject(xAxisMap).scale;
          var yScale = getAnyElementOfObject(yAxisMap).scale;
          var xValue = xScale && xScale.invert ? xScale.invert(e3.chartX) : null;
          var yValue = yScale && yScale.invert ? yScale.invert(e3.chartY) : null;
          return _objectSpread$n(_objectSpread$n({}, e3), {}, {
            xValue,
            yValue
          });
        }
        var toolTipData = getTooltipData(this.state, this.props.data, this.props.layout, rangeObj);
        if (toolTipData) {
          return _objectSpread$n(_objectSpread$n({}, e3), toolTipData);
        }
        return null;
      }
    }, {
      key: "getCursorRectangle",
      value: function getCursorRectangle() {
        var layout = this.props.layout;
        var _this$state11 = this.state, activeCoordinate = _this$state11.activeCoordinate, offset = _this$state11.offset, tooltipAxisBandSize = _this$state11.tooltipAxisBandSize;
        var halfSize = tooltipAxisBandSize / 2;
        return {
          stroke: "none",
          fill: "#ccc",
          x: layout === "horizontal" ? activeCoordinate.x - halfSize : offset.left + 0.5,
          y: layout === "horizontal" ? offset.top + 0.5 : activeCoordinate.y - halfSize,
          width: layout === "horizontal" ? tooltipAxisBandSize : offset.width - 1,
          height: layout === "horizontal" ? offset.height - 1 : tooltipAxisBandSize
        };
      }
    }, {
      key: "getCursorPoints",
      value: function getCursorPoints() {
        var layout = this.props.layout;
        var _this$state12 = this.state, activeCoordinate = _this$state12.activeCoordinate, offset = _this$state12.offset;
        var x14, y14, x22, y22;
        if (layout === "horizontal") {
          x14 = activeCoordinate.x;
          x22 = x14;
          y14 = offset.top;
          y22 = offset.top + offset.height;
        } else if (layout === "vertical") {
          y14 = activeCoordinate.y;
          y22 = y14;
          x14 = offset.left;
          x22 = offset.left + offset.width;
        } else if (!isNil_1(activeCoordinate.cx) || !isNil_1(activeCoordinate.cy)) {
          if (layout === "centric") {
            var cx = activeCoordinate.cx, cy = activeCoordinate.cy, innerRadius = activeCoordinate.innerRadius, outerRadius = activeCoordinate.outerRadius, angle = activeCoordinate.angle;
            var innerPoint = polarToCartesian(cx, cy, innerRadius, angle);
            var outerPoint = polarToCartesian(cx, cy, outerRadius, angle);
            x14 = innerPoint.x;
            y14 = innerPoint.y;
            x22 = outerPoint.x;
            y22 = outerPoint.y;
          } else {
            var _cx = activeCoordinate.cx, _cy = activeCoordinate.cy, radius = activeCoordinate.radius, startAngle = activeCoordinate.startAngle, endAngle = activeCoordinate.endAngle;
            var startPoint = polarToCartesian(_cx, _cy, radius, startAngle);
            var endPoint = polarToCartesian(_cx, _cy, radius, endAngle);
            return {
              points: [startPoint, endPoint],
              cx: _cx,
              cy: _cy,
              radius,
              startAngle,
              endAngle
            };
          }
        }
        return [{
          x: x14,
          y: y14
        }, {
          x: x22,
          y: y22
        }];
      }
    }, {
      key: "inRange",
      value: function inRange(x5, y7) {
        var layout = this.props.layout;
        if (layout === "horizontal" || layout === "vertical") {
          var offset = this.state.offset;
          var isInRange = x5 >= offset.left && x5 <= offset.left + offset.width && y7 >= offset.top && y7 <= offset.top + offset.height;
          return isInRange ? {
            x: x5,
            y: y7
          } : null;
        }
        var _this$state13 = this.state, angleAxisMap = _this$state13.angleAxisMap, radiusAxisMap = _this$state13.radiusAxisMap;
        if (angleAxisMap && radiusAxisMap) {
          var angleAxis = getAnyElementOfObject(angleAxisMap);
          return inRangeOfSector({
            x: x5,
            y: y7
          }, angleAxis);
        }
        return null;
      }
    }, {
      key: "parseEventsOfWrapper",
      value: function parseEventsOfWrapper() {
        var children2 = this.props.children;
        var tooltipItem = findChildByType(children2, Tooltip.displayName);
        var tooltipEvents = {};
        if (tooltipItem && eventType === "axis") {
          if (tooltipItem.props.trigger === "click") {
            tooltipEvents = {
              onClick: this.handleClick
            };
          } else {
            tooltipEvents = {
              onMouseEnter: this.handleMouseEnter,
              onMouseMove: this.handleMouseMove,
              onMouseLeave: this.handleMouseLeave,
              onTouchMove: this.handleTouchMove,
              onTouchStart: this.handleTouchStart,
              onTouchEnd: this.handleTouchEnd
            };
          }
        }
        var outerEvents = adaptEventHandlers(this.props, this.handleOuterEvent);
        return _objectSpread$n(_objectSpread$n({}, outerEvents), tooltipEvents);
      }
    }, {
      key: "addListener",
      value: function addListener2() {
        eventCenter.on(SYNC_EVENT, this.handleReceiveSyncEvent);
        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {
          eventCenter.setMaxListeners(eventCenter._maxListeners + 1);
        }
      }
    }, {
      key: "removeListener",
      value: function removeListener2() {
        eventCenter.removeListener(SYNC_EVENT, this.handleReceiveSyncEvent);
        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {
          eventCenter.setMaxListeners(eventCenter._maxListeners - 1);
        }
      }
    }, {
      key: "triggerSyncEvent",
      value: function triggerSyncEvent(data3) {
        var syncId = this.props.syncId;
        if (!isNil_1(syncId)) {
          eventCenter.emit(SYNC_EVENT, syncId, this.uniqueChartId, data3);
        }
      }
    }, {
      key: "filterFormatItem",
      value: function filterFormatItem(item, displayName, childIndex) {
        var formatedGraphicalItems = this.state.formatedGraphicalItems;
        for (var i = 0, len = formatedGraphicalItems.length; i < len; i++) {
          var entry = formatedGraphicalItems[i];
          if (entry.item === item || entry.props.key === item.key || displayName === getDisplayName(entry.item.type) && childIndex === entry.childIndex) {
            return entry;
          }
        }
        return null;
      }
    }, {
      key: "renderAxis",
      value: function renderAxis(axisOptions, element, displayName, index4) {
        var _this$props5 = this.props, width = _this$props5.width, height = _this$props5.height;
        return /* @__PURE__ */ react.createElement(CartesianAxis, _extends$k({}, axisOptions, {
          className: "recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType),
          key: element.key || "".concat(displayName, "-").concat(index4),
          viewBox: {
            x: 0,
            y: 0,
            width,
            height
          },
          ticksGenerator: this.axesTicksGenerator
        }));
      }
    }, {
      key: "renderClipPath",
      value: function renderClipPath() {
        var clipPathId = this.clipPathId;
        var _this$state$offset = this.state.offset, left2 = _this$state$offset.left, top2 = _this$state$offset.top, height = _this$state$offset.height, width = _this$state$offset.width;
        return /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("clipPath", {
          id: clipPathId
        }, /* @__PURE__ */ react.createElement("rect", {
          x: left2,
          y: top2,
          height,
          width
        })));
      }
    }, {
      key: "render",
      value: function render2() {
        var _this2 = this;
        if (!validateWidthHeight(this)) {
          return null;
        }
        var _this$props6 = this.props, children2 = _this$props6.children, className = _this$props6.className, width = _this$props6.width, height = _this$props6.height, style = _this$props6.style, compact = _this$props6.compact, others = _objectWithoutProperties$b(_this$props6, ["children", "className", "width", "height", "style", "compact"]);
        var attrs = filterProps(others);
        var map7 = {
          CartesianGrid: {
            handler: this.renderGrid,
            once: true
          },
          ReferenceArea: {
            handler: this.renderReferenceElement
          },
          ReferenceLine: {
            handler: this.renderReferenceElement
          },
          ReferenceDot: {
            handler: this.renderReferenceElement
          },
          XAxis: {
            handler: this.renderXAxis
          },
          YAxis: {
            handler: this.renderYAxis
          },
          Brush: {
            handler: this.renderBrush,
            once: true
          },
          Bar: {
            handler: this.renderGraphicChild
          },
          Line: {
            handler: this.renderGraphicChild
          },
          Area: {
            handler: this.renderGraphicChild
          },
          Radar: {
            handler: this.renderGraphicChild
          },
          RadialBar: {
            handler: this.renderGraphicChild
          },
          Scatter: {
            handler: this.renderGraphicChild
          },
          Pie: {
            handler: this.renderGraphicChild
          },
          Funnel: {
            handler: this.renderGraphicChild
          },
          Tooltip: {
            handler: this.renderCursor,
            once: true
          },
          PolarGrid: {
            handler: this.renderPolarGrid,
            once: true
          },
          PolarAngleAxis: {
            handler: this.renderPolarAxis
          },
          PolarRadiusAxis: {
            handler: this.renderPolarAxis
          },
          Customized: {
            handler: this.renderCustomized
          }
        };
        if (compact) {
          return /* @__PURE__ */ react.createElement(Surface, _extends$k({}, attrs, {
            width,
            height
          }), this.renderClipPath(), renderByOrder(children2, map7));
        }
        var events = this.parseEventsOfWrapper();
        return /* @__PURE__ */ react.createElement("div", _extends$k({
          className: classnames("recharts-wrapper", className),
          style: _objectSpread$n({
            position: "relative",
            cursor: "default",
            width,
            height
          }, style)
        }, events, {
          ref: function ref(node) {
            _this2.container = node;
          }
        }), /* @__PURE__ */ react.createElement(Surface, _extends$k({}, attrs, {
          width,
          height
        }), this.renderClipPath(), renderByOrder(children2, map7)), this.renderLegend(), this.renderTooltip());
      }
    }]);
    return CategoricalChartWrapper;
  }(react.Component), _class.displayName = chartName, _class.defaultProps = _objectSpread$n({
    layout: "horizontal",
    stackOffset: "none",
    barCategoryGap: "10%",
    barGap: 4,
    margin: {
      top: 5,
      right: 5,
      bottom: 5,
      left: 5
    },
    reverseStackOrder: false
  }, defaultProps4), _class.getDerivedStateFromProps = function(nextProps, prevState) {
    var data3 = nextProps.data, children2 = nextProps.children, width = nextProps.width, height = nextProps.height, layout = nextProps.layout, stackOffset2 = nextProps.stackOffset, margin = nextProps.margin;
    if (isNil_1(prevState.updateId)) {
      var defaultState = createDefaultState(nextProps);
      return _objectSpread$n(_objectSpread$n(_objectSpread$n({}, defaultState), {}, {
        updateId: 0
      }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread$n(_objectSpread$n({
        props: nextProps
      }, defaultState), {}, {
        updateId: 0
      }), prevState)), {}, {
        prevData: data3,
        prevWidth: width,
        prevHeight: height,
        prevLayout: layout,
        prevStackOffset: stackOffset2,
        prevMargin: margin,
        prevChildren: children2
      });
    }
    if (data3 !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || layout !== prevState.prevLayout || stackOffset2 !== prevState.prevStackOffset || !shallowEqual(margin, prevState.prevMargin)) {
      var _defaultState = createDefaultState(nextProps);
      var keepFromPrevState = {
        chartX: prevState.chartX,
        chartY: prevState.chartY,
        isTooltipActive: prevState.isTooltipActive
      };
      var updatesToState = _objectSpread$n(_objectSpread$n({}, getTooltipData(prevState, data3, layout)), {}, {
        updateId: prevState.updateId + 1
      });
      var newState = _objectSpread$n(_objectSpread$n(_objectSpread$n({}, _defaultState), keepFromPrevState), updatesToState);
      return _objectSpread$n(_objectSpread$n(_objectSpread$n({}, newState), updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread$n({
        props: nextProps
      }, newState), prevState)), {}, {
        prevData: data3,
        prevWidth: width,
        prevHeight: height,
        prevLayout: layout,
        prevStackOffset: stackOffset2,
        prevMargin: margin,
        prevChildren: children2
      });
    }
    if (!isChildrenEqual(children2, prevState.prevChildren)) {
      var hasGlobalData = !isNil_1(data3);
      var newUpdateId = hasGlobalData ? prevState.updateId : prevState.updateId + 1;
      return _objectSpread$n(_objectSpread$n({
        updateId: newUpdateId
      }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread$n(_objectSpread$n({
        props: nextProps
      }, prevState), {}, {
        updateId: newUpdateId
      }), prevState)), {}, {
        prevChildren: children2
      });
    }
    return null;
  }, _class.renderActiveDot = function(option, props) {
    var dot2;
    if (/* @__PURE__ */ react.isValidElement(option)) {
      dot2 = /* @__PURE__ */ react.cloneElement(option, props);
    } else if (isFunction_1(option)) {
      dot2 = option(props);
    } else {
      dot2 = /* @__PURE__ */ react.createElement(Dot, props);
    }
    return /* @__PURE__ */ react.createElement(Layer, {
      className: "recharts-active-dot",
      key: props.key
    }, dot2);
  }, _temp;
};
var LineChart = generateCategoricalChart({
  chartName: "LineChart",
  GraphicalChild: Line4,
  axisComponents: [{
    axisType: "xAxis",
    AxisComp: XAxis
  }, {
    axisType: "yAxis",
    AxisComp: YAxis
  }],
  formatAxisMap
});

// dist/components/recharts.js
var data2 = [
  {name: 1, cost: 4.11, impression: 100},
  {name: 2, cost: 2.39, impression: 120},
  {name: 3, cost: 1.37, impression: 150},
  {name: 4, cost: 1.16, impression: 180},
  {name: 5, cost: 2.29, impression: 200},
  {name: 6, cost: 3, impression: 499},
  {name: 7, cost: 0.53, impression: 50},
  {name: 8, cost: 2.52, impression: 100},
  {name: 9, cost: 1.79, impression: 200},
  {name: 10, cost: 2.94, impression: 222},
  {name: 11, cost: 4.3, impression: 210},
  {name: 12, cost: 4.41, impression: 300},
  {name: 13, cost: 2.1, impression: 50},
  {name: 14, cost: 8, impression: 190},
  {name: 15, cost: 0, impression: 300},
  {name: 16, cost: 9, impression: 400},
  {name: 17, cost: 3, impression: 200},
  {name: 18, cost: 2, impression: 50},
  {name: 19, cost: 3, impression: 100},
  {name: 20, cost: 7, impression: 100}
];
var getAxisYDomain = (from, to2, ref, offset) => {
  const refData = data2.slice(from - 1, to2);
  let [bottom2, top2] = [refData[0][ref], refData[0][ref]];
  refData.forEach((d2) => {
    if (d2[ref] > top2)
      top2 = d2[ref];
    if (d2[ref] < bottom2)
      bottom2 = d2[ref];
  });
  return [(bottom2 | 0) - offset, (top2 | 0) + offset];
};
var initialState = {
  data: data2,
  left: "dataMin",
  right: "dataMax",
  refAreaLeft: "",
  refAreaRight: "",
  top: "dataMax+1",
  bottom: "dataMin-1",
  top2: "dataMax+20",
  bottom2: "dataMin-20",
  animation: true
};
function LineRecharts() {
  const [state, setState] = useState(initialState);
  const zoom2 = () => {
    let {refAreaLeft: refAreaLeft2, refAreaRight: refAreaRight2, data: data3} = state;
    if (refAreaLeft2 === refAreaRight2 || refAreaRight2 === "") {
      setState(() => ({
        refAreaLeft: "",
        refAreaRight: ""
      }));
      return;
    }
    if (refAreaLeft2 > refAreaRight2)
      [refAreaLeft2, refAreaRight2] = [refAreaRight2, refAreaLeft2];
    const [bottom3, top3] = getAxisYDomain(refAreaLeft2, refAreaRight2, "cost", 1);
    const [bottom222, top222] = getAxisYDomain(refAreaLeft2, refAreaRight2, "impression", 50);
    setState(() => ({
      refAreaLeft: "",
      refAreaRight: "",
      data: [...data3],
      left: refAreaLeft2,
      right: refAreaRight2,
      bottom: bottom3,
      top: top3,
      bottom2: bottom222,
      top2: top222
    }));
  };
  const zoomOut = () => {
    const {data: data3} = state;
    setState(() => ({
      data: [...data3],
      refAreaLeft: "",
      refAreaRight: "",
      left: "dataMin",
      right: "dataMax",
      top: "dataMax+1",
      bottom: "dataMin",
      top2: "dataMax+50",
      bottom2: "dataMin+50"
    }));
  };
  const {
    data: data22,
    barIndex,
    left: left2,
    right: right2,
    refAreaLeft,
    refAreaRight,
    top: top2,
    bottom: bottom2,
    top2: top22,
    bottom2: bottom22
  } = state;
  return /* @__PURE__ */ react.createElement("div", {
    className: "highlight-bar-charts",
    style: {userSelect: "none"}
  }, /* @__PURE__ */ react.createElement("button", {
    className: "btn update",
    onClick: zoomOut
  }, "Zoom Out"), /* @__PURE__ */ react.createElement(LineChart, {
    width: 800,
    height: 400,
    data: data22,
    onMouseDown: (e3) => setState({...state, refAreaLeft: e3?.activeLabel}),
    onMouseMove: (e3) => state.refAreaLeft && setState({...state, refAreaRight: e3?.activeLabel}),
    onMouseUp: zoom2
  }, /* @__PURE__ */ react.createElement(CartesianGrid, {
    strokeDasharray: "3 3"
  }), /* @__PURE__ */ react.createElement(XAxis, {
    allowDataOverflow: true,
    dataKey: "name",
    domain: [left2, right2],
    type: "number"
  }), /* @__PURE__ */ react.createElement(YAxis, {
    allowDataOverflow: true,
    domain: [bottom2, top2],
    type: "number",
    yAxisId: "1"
  }), /* @__PURE__ */ react.createElement(YAxis, {
    orientation: "right",
    allowDataOverflow: true,
    domain: [bottom22, top22],
    type: "number",
    yAxisId: "2"
  }), /* @__PURE__ */ react.createElement(Tooltip, null), /* @__PURE__ */ react.createElement(Line4, {
    yAxisId: "1",
    type: "natural",
    dataKey: "cost",
    stroke: "#8884d8",
    animationDuration: 300
  }), /* @__PURE__ */ react.createElement(Line4, {
    yAxisId: "2",
    type: "natural",
    dataKey: "impression",
    stroke: "#82ca9d",
    animationDuration: 300
  }), refAreaLeft && refAreaRight ? /* @__PURE__ */ react.createElement(ReferenceArea, {
    yAxisId: "1",
    x1: refAreaLeft,
    x2: refAreaRight,
    strokeOpacity: 0.3
  }) : null));
}

// snowpack/pkg/common/resquarify-82208d26.js
function treemapDice2(parent, x03, y03, x14, y14) {
  var nodes = parent.children, node, i = -1, n3 = nodes.length, k6 = parent.value && (x14 - x03) / parent.value;
  while (++i < n3) {
    node = nodes[i], node.y0 = y03, node.y1 = y14;
    node.x0 = x03, node.x1 = x03 += node.value * k6;
  }
}
function treemapSlice2(parent, x03, y03, x14, y14) {
  var nodes = parent.children, node, i = -1, n3 = nodes.length, k6 = parent.value && (y14 - y03) / parent.value;
  while (++i < n3) {
    node = nodes[i], node.x0 = x03, node.x1 = x14;
    node.y0 = y03, node.y1 = y03 += node.value * k6;
  }
}
var phi2 = (1 + Math.sqrt(5)) / 2;
function squarifyRatio2(ratio, parent, x03, y03, x14, y14) {
  var rows = [], nodes = parent.children, row, nodeValue, i0 = 0, i1 = 0, n3 = nodes.length, dx, dy, value2 = parent.value, sumValue, minValue, maxValue, newRatio, minRatio, alpha3, beta2;
  while (i0 < n3) {
    dx = x14 - x03, dy = y14 - y03;
    do
      sumValue = nodes[i1++].value;
    while (!sumValue && i1 < n3);
    minValue = maxValue = sumValue;
    alpha3 = Math.max(dy / dx, dx / dy) / (value2 * ratio);
    beta2 = sumValue * sumValue * alpha3;
    minRatio = Math.max(maxValue / beta2, beta2 / minValue);
    for (; i1 < n3; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue)
        minValue = nodeValue;
      if (nodeValue > maxValue)
        maxValue = nodeValue;
      beta2 = sumValue * sumValue * alpha3;
      newRatio = Math.max(maxValue / beta2, beta2 / minValue);
      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }
      minRatio = newRatio;
    }
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice)
      treemapDice2(row, x03, y03, x14, value2 ? y03 += dy * sumValue / value2 : y14);
    else
      treemapSlice2(row, x03, y03, value2 ? x03 += dx * sumValue / value2 : x14, y14);
    value2 -= sumValue, i0 = i1;
  }
  return rows;
}
var treemapSquarify = function custom35(ratio) {
  function squarify2(parent, x03, y03, x14, y14) {
    squarifyRatio2(ratio, parent, x03, y03, x14, y14);
  }
  squarify2.ratio = function(x5) {
    return custom35((x5 = +x5) > 1 ? x5 : 1);
  };
  return squarify2;
}(phi2);
function treemapBinary(parent, x03, y03, x14, y14) {
  var nodes = parent.children, i, n3 = nodes.length, sum2, sums = new Array(n3 + 1);
  for (sums[0] = sum2 = i = 0; i < n3; ++i) {
    sums[i + 1] = sum2 += nodes[i].value;
  }
  partition2(0, n3, parent.value, x03, y03, x14, y14);
  function partition2(i2, j2, value2, x04, y04, x15, y15) {
    if (i2 >= j2 - 1) {
      var node = nodes[i2];
      node.x0 = x04, node.y0 = y04;
      node.x1 = x15, node.y1 = y15;
      return;
    }
    var valueOffset = sums[i2], valueTarget = value2 / 2 + valueOffset, k6 = i2 + 1, hi2 = j2 - 1;
    while (k6 < hi2) {
      var mid = k6 + hi2 >>> 1;
      if (sums[mid] < valueTarget)
        k6 = mid + 1;
      else
        hi2 = mid;
    }
    if (valueTarget - sums[k6 - 1] < sums[k6] - valueTarget && i2 + 1 < k6)
      --k6;
    var valueLeft = sums[k6] - valueOffset, valueRight = value2 - valueLeft;
    if (x15 - x04 > y15 - y04) {
      var xk2 = (x04 * valueRight + x15 * valueLeft) / value2;
      partition2(i2, k6, valueLeft, x04, y04, xk2, y15);
      partition2(k6, j2, valueRight, xk2, y04, x15, y15);
    } else {
      var yk = (y04 * valueRight + y15 * valueLeft) / value2;
      partition2(i2, k6, valueLeft, x04, y04, x15, yk);
      partition2(k6, j2, valueRight, x04, yk, x15, y15);
    }
  }
}
function treemapSliceDice(parent, x03, y03, x14, y14) {
  (parent.depth & 1 ? treemapSlice2 : treemapDice2)(parent, x03, y03, x14, y14);
}
var treemapResquarify = function custom36(ratio) {
  function resquarify2(parent, x03, y03, x14, y14) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows, row, nodes, i, j2 = -1, n3, m3 = rows.length, value2 = parent.value;
      while (++j2 < m3) {
        row = rows[j2], nodes = row.children;
        for (i = row.value = 0, n3 = nodes.length; i < n3; ++i)
          row.value += nodes[i].value;
        if (row.dice)
          treemapDice2(row, x03, y03, x14, y03 += (y14 - y03) * row.value / value2);
        else
          treemapSlice2(row, x03, y03, x03 += (x14 - x03) * row.value / value2, y14);
        value2 -= row.value;
      }
    } else {
      parent._squarify = rows = squarifyRatio2(ratio, parent, x03, y03, x14, y14);
      rows.ratio = ratio;
    }
  }
  resquarify2.ratio = function(x5) {
    return custom36((x5 = +x5) > 1 ? x5 : 1);
  };
  return resquarify2;
}(phi2);

// snowpack/pkg/react-vis.js
function count(node) {
  var sum2 = 0, children2 = node.children, i = children2 && children2.length;
  if (!i)
    sum2 = 1;
  else
    while (--i >= 0)
      sum2 += children2[i].value;
  node.value = sum2;
}
function node_count2() {
  return this.eachAfter(count);
}
function node_each2(callback) {
  var node = this, current, next = [node], children2, i, n3;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      callback(node), children2 = node.children;
      if (children2)
        for (i = 0, n3 = children2.length; i < n3; ++i) {
          next.push(children2[i]);
        }
    }
  } while (next.length);
  return this;
}
function node_eachBefore2(callback) {
  var node = this, nodes = [node], children2, i;
  while (node = nodes.pop()) {
    callback(node), children2 = node.children;
    if (children2)
      for (i = children2.length - 1; i >= 0; --i) {
        nodes.push(children2[i]);
      }
  }
  return this;
}
function node_eachAfter2(callback) {
  var node = this, nodes = [node], next = [], children2, i, n3;
  while (node = nodes.pop()) {
    next.push(node), children2 = node.children;
    if (children2)
      for (i = 0, n3 = children2.length; i < n3; ++i) {
        nodes.push(children2[i]);
      }
  }
  while (node = next.pop()) {
    callback(node);
  }
  return this;
}
function node_sum2(value2) {
  return this.eachAfter(function(node) {
    var sum2 = +value2(node.data) || 0, children2 = node.children, i = children2 && children2.length;
    while (--i >= 0)
      sum2 += children2[i].value;
    node.value = sum2;
  });
}
function node_sort2(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
function node_path2(end) {
  var start2 = this, ancestor = leastCommonAncestor2(start2, end), nodes = [start2];
  while (start2 !== ancestor) {
    start2 = start2.parent;
    nodes.push(start2);
  }
  var k6 = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k6, 0, end);
    end = end.parent;
  }
  return nodes;
}
function leastCommonAncestor2(a3, b10) {
  if (a3 === b10)
    return a3;
  var aNodes = a3.ancestors(), bNodes = b10.ancestors(), c5 = null;
  a3 = aNodes.pop();
  b10 = bNodes.pop();
  while (a3 === b10) {
    c5 = a3;
    a3 = aNodes.pop();
    b10 = bNodes.pop();
  }
  return c5;
}
function node_ancestors2() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}
function node_descendants2() {
  var nodes = [];
  this.each(function(node) {
    nodes.push(node);
  });
  return nodes;
}
function node_leaves2() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
function node_links2() {
  var root4 = this, links = [];
  root4.each(function(node) {
    if (node !== root4) {
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}
function hierarchy2(data3, children2) {
  var root4 = new Node2(data3), valued = +data3.value && (root4.value = data3.value), node, nodes = [root4], child, childs, i, n3;
  if (children2 == null)
    children2 = defaultChildren;
  while (node = nodes.pop()) {
    if (valued)
      node.value = +node.data.value;
    if ((childs = children2(node.data)) && (n3 = childs.length)) {
      node.children = new Array(n3);
      for (i = n3 - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node2(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }
  return root4.eachBefore(computeHeight2);
}
function node_copy2() {
  return hierarchy2(this).eachBefore(copyData2);
}
function defaultChildren(d2) {
  return d2.children;
}
function copyData2(node) {
  node.data = node.data.data;
}
function computeHeight2(node) {
  var height = 0;
  do
    node.height = height;
  while ((node = node.parent) && node.height < ++height);
}
function Node2(data3) {
  this.data = data3;
  this.depth = this.height = 0;
  this.parent = null;
}
Node2.prototype = hierarchy2.prototype = {
  constructor: Node2,
  count: node_count2,
  each: node_each2,
  eachAfter: node_eachAfter2,
  eachBefore: node_eachBefore2,
  sum: node_sum2,
  sort: node_sort2,
  path: node_path2,
  ancestors: node_ancestors2,
  descendants: node_descendants2,
  leaves: node_leaves2,
  links: node_links2,
  copy: node_copy2
};
var slice4 = Array.prototype.slice;
function shuffle2(array5) {
  var m3 = array5.length, t4, i;
  while (m3) {
    i = Math.random() * m3-- | 0;
    t4 = array5[m3];
    array5[m3] = array5[i];
    array5[i] = t4;
  }
  return array5;
}
function enclose(circles2) {
  var i = 0, n3 = (circles2 = shuffle2(slice4.call(circles2))).length, B6 = [], p3, e3;
  while (i < n3) {
    p3 = circles2[i];
    if (e3 && enclosesWeak(e3, p3))
      ++i;
    else
      e3 = encloseBasis(B6 = extendBasis(B6, p3)), i = 0;
  }
  return e3;
}
function extendBasis(B6, p3) {
  var i, j2;
  if (enclosesWeakAll(p3, B6))
    return [p3];
  for (i = 0; i < B6.length; ++i) {
    if (enclosesNot(p3, B6[i]) && enclosesWeakAll(encloseBasis2(B6[i], p3), B6)) {
      return [B6[i], p3];
    }
  }
  for (i = 0; i < B6.length - 1; ++i) {
    for (j2 = i + 1; j2 < B6.length; ++j2) {
      if (enclosesNot(encloseBasis2(B6[i], B6[j2]), p3) && enclosesNot(encloseBasis2(B6[i], p3), B6[j2]) && enclosesNot(encloseBasis2(B6[j2], p3), B6[i]) && enclosesWeakAll(encloseBasis3(B6[i], B6[j2], p3), B6)) {
        return [B6[i], B6[j2], p3];
      }
    }
  }
  throw new Error();
}
function enclosesNot(a3, b10) {
  var dr = a3.r - b10.r, dx = b10.x - a3.x, dy = b10.y - a3.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}
function enclosesWeak(a3, b10) {
  var dr = a3.r - b10.r + 1e-6, dx = b10.x - a3.x, dy = b10.y - a3.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}
function enclosesWeakAll(a3, B6) {
  for (var i = 0; i < B6.length; ++i) {
    if (!enclosesWeak(a3, B6[i])) {
      return false;
    }
  }
  return true;
}
function encloseBasis(B6) {
  switch (B6.length) {
    case 1:
      return encloseBasis1(B6[0]);
    case 2:
      return encloseBasis2(B6[0], B6[1]);
    case 3:
      return encloseBasis3(B6[0], B6[1], B6[2]);
  }
}
function encloseBasis1(a3) {
  return {
    x: a3.x,
    y: a3.y,
    r: a3.r
  };
}
function encloseBasis2(a3, b10) {
  var x14 = a3.x, y14 = a3.y, r1 = a3.r, x22 = b10.x, y22 = b10.y, r22 = b10.r, x21 = x22 - x14, y21 = y22 - y14, r21 = r22 - r1, l3 = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x14 + x22 + x21 / l3 * r21) / 2,
    y: (y14 + y22 + y21 / l3 * r21) / 2,
    r: (l3 + r1 + r22) / 2
  };
}
function encloseBasis3(a3, b10, c5) {
  var x14 = a3.x, y14 = a3.y, r1 = a3.r, x22 = b10.x, y22 = b10.y, r22 = b10.r, x32 = c5.x, y32 = c5.y, r3 = c5.r, a22 = x14 - x22, a32 = x14 - x32, b23 = y14 - y22, b33 = y14 - y32, c22 = r22 - r1, c32 = r3 - r1, d1 = x14 * x14 + y14 * y14 - r1 * r1, d2 = d1 - x22 * x22 - y22 * y22 + r22 * r22, d38 = d1 - x32 * x32 - y32 * y32 + r3 * r3, ab2 = a32 * b23 - a22 * b33, xa2 = (b23 * d38 - b33 * d2) / (ab2 * 2) - x14, xb2 = (b33 * c22 - b23 * c32) / ab2, ya2 = (a32 * d2 - a22 * d38) / (ab2 * 2) - y14, yb2 = (a22 * c32 - a32 * c22) / ab2, A6 = xb2 * xb2 + yb2 * yb2 - 1, B6 = 2 * (r1 + xa2 * xb2 + ya2 * yb2), C5 = xa2 * xa2 + ya2 * ya2 - r1 * r1, r4 = -(A6 ? (B6 + Math.sqrt(B6 * B6 - 4 * A6 * C5)) / (2 * A6) : C5 / B6);
  return {
    x: x14 + xa2 + xb2 * r4,
    y: y14 + ya2 + yb2 * r4,
    r: r4
  };
}
function place(b10, a3, c5) {
  var dx = b10.x - a3.x, x5, a22, dy = b10.y - a3.y, y7, b23, d2 = dx * dx + dy * dy;
  if (d2) {
    a22 = a3.r + c5.r, a22 *= a22;
    b23 = b10.r + c5.r, b23 *= b23;
    if (a22 > b23) {
      x5 = (d2 + b23 - a22) / (2 * d2);
      y7 = Math.sqrt(Math.max(0, b23 / d2 - x5 * x5));
      c5.x = b10.x - x5 * dx - y7 * dy;
      c5.y = b10.y - x5 * dy + y7 * dx;
    } else {
      x5 = (d2 + a22 - b23) / (2 * d2);
      y7 = Math.sqrt(Math.max(0, a22 / d2 - x5 * x5));
      c5.x = a3.x + x5 * dx - y7 * dy;
      c5.y = a3.y + x5 * dy + y7 * dx;
    }
  } else {
    c5.x = a3.x + c5.r;
    c5.y = a3.y;
  }
}
function intersects(a3, b10) {
  var dr = a3.r + b10.r - 1e-6, dx = b10.x - a3.x, dy = b10.y - a3.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}
function score(node) {
  var a3 = node._, b10 = node.next._, ab2 = a3.r + b10.r, dx = (a3.x * b10.r + b10.x * a3.r) / ab2, dy = (a3.y * b10.r + b10.y * a3.r) / ab2;
  return dx * dx + dy * dy;
}
function Node$1(circle4) {
  this._ = circle4;
  this.next = null;
  this.previous = null;
}
function packEnclose(circles2) {
  if (!(n3 = circles2.length))
    return 0;
  var a3, b10, c5, n3, aa2, ca2, i, j2, k6, sj2, sk2;
  a3 = circles2[0], a3.x = 0, a3.y = 0;
  if (!(n3 > 1))
    return a3.r;
  b10 = circles2[1], a3.x = -b10.r, b10.x = a3.r, b10.y = 0;
  if (!(n3 > 2))
    return a3.r + b10.r;
  place(b10, a3, c5 = circles2[2]);
  a3 = new Node$1(a3), b10 = new Node$1(b10), c5 = new Node$1(c5);
  a3.next = c5.previous = b10;
  b10.next = a3.previous = c5;
  c5.next = b10.previous = a3;
  pack:
    for (i = 3; i < n3; ++i) {
      place(a3._, b10._, c5 = circles2[i]), c5 = new Node$1(c5);
      j2 = b10.next, k6 = a3.previous, sj2 = b10._.r, sk2 = a3._.r;
      do {
        if (sj2 <= sk2) {
          if (intersects(j2._, c5._)) {
            b10 = j2, a3.next = b10, b10.previous = a3, --i;
            continue pack;
          }
          sj2 += j2._.r, j2 = j2.next;
        } else {
          if (intersects(k6._, c5._)) {
            a3 = k6, a3.next = b10, b10.previous = a3, --i;
            continue pack;
          }
          sk2 += k6._.r, k6 = k6.previous;
        }
      } while (j2 !== k6.next);
      c5.previous = a3, c5.next = b10, a3.next = b10.previous = b10 = c5;
      aa2 = score(a3);
      while ((c5 = c5.next) !== b10) {
        if ((ca2 = score(c5)) < aa2) {
          a3 = c5, aa2 = ca2;
        }
      }
      b10 = a3.next;
    }
  a3 = [b10._], c5 = b10;
  while ((c5 = c5.next) !== b10)
    a3.push(c5._);
  c5 = enclose(a3);
  for (i = 0; i < n3; ++i)
    a3 = circles2[i], a3.x -= c5.x, a3.y -= c5.y;
  return c5.r;
}
function optional(f3) {
  return f3 == null ? null : required(f3);
}
function required(f3) {
  if (typeof f3 !== "function")
    throw new Error();
  return f3;
}
function constantZero() {
  return 0;
}
function constant6(x5) {
  return function() {
    return x5;
  };
}
function defaultRadius(d2) {
  return Math.sqrt(d2.value);
}
function pack() {
  var radius = null, dx = 1, dy = 1, padding2 = constantZero;
  function pack2(root4) {
    root4.x = dx / 2, root4.y = dy / 2;
    if (radius) {
      root4.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding2, 0.5)).eachBefore(translateChild(1));
    } else {
      root4.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding2, root4.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root4.r)));
    }
    return root4;
  }
  pack2.radius = function(x5) {
    return arguments.length ? (radius = optional(x5), pack2) : radius;
  };
  pack2.size = function(x5) {
    return arguments.length ? (dx = +x5[0], dy = +x5[1], pack2) : [dx, dy];
  };
  pack2.padding = function(x5) {
    return arguments.length ? (padding2 = typeof x5 === "function" ? x5 : constant6(+x5), pack2) : padding2;
  };
  return pack2;
}
function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}
function packChildren(padding2, k6) {
  return function(node) {
    if (children2 = node.children) {
      var children2, i, n3 = children2.length, r3 = padding2(node) * k6 || 0, e3;
      if (r3)
        for (i = 0; i < n3; ++i)
          children2[i].r += r3;
      e3 = packEnclose(children2);
      if (r3)
        for (i = 0; i < n3; ++i)
          children2[i].r -= r3;
      node.r = e3 + r3;
    }
  };
}
function translateChild(k6) {
  return function(node) {
    var parent = node.parent;
    node.r *= k6;
    if (parent) {
      node.x = parent.x + k6 * node.x;
      node.y = parent.y + k6 * node.y;
    }
  };
}
function roundNode(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
function partition() {
  var dx = 1, dy = 1, padding2 = 0, round2 = false;
  function partition2(root4) {
    var n3 = root4.height + 1;
    root4.x0 = root4.y0 = padding2;
    root4.x1 = dx;
    root4.y1 = dy / n3;
    root4.eachBefore(positionNode(dy, n3));
    if (round2)
      root4.eachBefore(roundNode);
    return root4;
  }
  function positionNode(dy2, n3) {
    return function(node) {
      if (node.children) {
        treemapDice2(node, node.x0, dy2 * (node.depth + 1) / n3, node.x1, dy2 * (node.depth + 2) / n3);
      }
      var x03 = node.x0, y03 = node.y0, x14 = node.x1 - padding2, y14 = node.y1 - padding2;
      if (x14 < x03)
        x03 = x14 = (x03 + x14) / 2;
      if (y14 < y03)
        y03 = y14 = (y03 + y14) / 2;
      node.x0 = x03;
      node.y0 = y03;
      node.x1 = x14;
      node.y1 = y14;
    };
  }
  partition2.round = function(x5) {
    return arguments.length ? (round2 = !!x5, partition2) : round2;
  };
  partition2.size = function(x5) {
    return arguments.length ? (dx = +x5[0], dy = +x5[1], partition2) : [dx, dy];
  };
  partition2.padding = function(x5) {
    return arguments.length ? (padding2 = +x5, partition2) : padding2;
  };
  return partition2;
}
function treemap() {
  var tile = treemapSquarify, round2 = false, dx = 1, dy = 1, paddingStack = [0], paddingInner = constantZero, paddingTop = constantZero, paddingRight = constantZero, paddingBottom = constantZero, paddingLeft = constantZero;
  function treemap2(root4) {
    root4.x0 = root4.y0 = 0;
    root4.x1 = dx;
    root4.y1 = dy;
    root4.eachBefore(positionNode);
    paddingStack = [0];
    if (round2)
      root4.eachBefore(roundNode);
    return root4;
  }
  function positionNode(node) {
    var p3 = paddingStack[node.depth], x03 = node.x0 + p3, y03 = node.y0 + p3, x14 = node.x1 - p3, y14 = node.y1 - p3;
    if (x14 < x03)
      x03 = x14 = (x03 + x14) / 2;
    if (y14 < y03)
      y03 = y14 = (y03 + y14) / 2;
    node.x0 = x03;
    node.y0 = y03;
    node.x1 = x14;
    node.y1 = y14;
    if (node.children) {
      p3 = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x03 += paddingLeft(node) - p3;
      y03 += paddingTop(node) - p3;
      x14 -= paddingRight(node) - p3;
      y14 -= paddingBottom(node) - p3;
      if (x14 < x03)
        x03 = x14 = (x03 + x14) / 2;
      if (y14 < y03)
        y03 = y14 = (y03 + y14) / 2;
      tile(node, x03, y03, x14, y14);
    }
  }
  treemap2.round = function(x5) {
    return arguments.length ? (round2 = !!x5, treemap2) : round2;
  };
  treemap2.size = function(x5) {
    return arguments.length ? (dx = +x5[0], dy = +x5[1], treemap2) : [dx, dy];
  };
  treemap2.tile = function(x5) {
    return arguments.length ? (tile = required(x5), treemap2) : tile;
  };
  treemap2.padding = function(x5) {
    return arguments.length ? treemap2.paddingInner(x5).paddingOuter(x5) : treemap2.paddingInner();
  };
  treemap2.paddingInner = function(x5) {
    return arguments.length ? (paddingInner = typeof x5 === "function" ? x5 : constant6(+x5), treemap2) : paddingInner;
  };
  treemap2.paddingOuter = function(x5) {
    return arguments.length ? treemap2.paddingTop(x5).paddingRight(x5).paddingBottom(x5).paddingLeft(x5) : treemap2.paddingTop();
  };
  treemap2.paddingTop = function(x5) {
    return arguments.length ? (paddingTop = typeof x5 === "function" ? x5 : constant6(+x5), treemap2) : paddingTop;
  };
  treemap2.paddingRight = function(x5) {
    return arguments.length ? (paddingRight = typeof x5 === "function" ? x5 : constant6(+x5), treemap2) : paddingRight;
  };
  treemap2.paddingBottom = function(x5) {
    return arguments.length ? (paddingBottom = typeof x5 === "function" ? x5 : constant6(+x5), treemap2) : paddingBottom;
  };
  treemap2.paddingLeft = function(x5) {
    return arguments.length ? (paddingLeft = typeof x5 === "function" ? x5 : constant6(+x5), treemap2) : paddingLeft;
  };
  return treemap2;
}
function constant$12(x5) {
  return function() {
    return x5;
  };
}
function x4(d2) {
  return d2[0];
}
function y5(d2) {
  return d2[1];
}
function RedBlackTree() {
  this._ = null;
}
function RedBlackNode(node) {
  node.U = node.C = node.L = node.R = node.P = node.N = null;
}
RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function(after, node) {
    var parent, grandpa, uncle;
    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N)
        after.N.P = node;
      after.N = node;
      if (after.R) {
        after = after.R;
        while (after.L)
          after = after.L;
        after.L = node;
      } else {
        after.R = node;
      }
      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }
    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;
    while (parent && parent.C) {
      grandpa = parent.U;
      if (parent === grandpa.L) {
        uncle = grandpa.R;
        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }
          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;
        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }
          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }
      parent = after.U;
    }
    this._.C = false;
  },
  remove: function(node) {
    if (node.N)
      node.N.P = node.P;
    if (node.P)
      node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U, sibling, left2 = node.L, right2 = node.R, next, red;
    if (!left2)
      next = right2;
    else if (!right2)
      next = left2;
    else
      next = RedBlackFirst(right2);
    if (parent) {
      if (parent.L === node)
        parent.L = next;
      else
        parent.R = next;
    } else {
      this._ = next;
    }
    if (left2 && right2) {
      red = next.C;
      next.C = node.C;
      next.L = left2;
      left2.U = next;
      if (next !== right2) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right2;
        right2.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }
    if (node)
      node.U = parent;
    if (red)
      return;
    if (node && node.C) {
      node.C = false;
      return;
    }
    do {
      if (node === this._)
        break;
      if (node === parent.L) {
        sibling = parent.R;
        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }
        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }
          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;
        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }
        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }
          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }
      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);
    if (node)
      node.C = false;
  }
};
function RedBlackRotateLeft(tree, node) {
  var p3 = node, q2 = node.R, parent = p3.U;
  if (parent) {
    if (parent.L === p3)
      parent.L = q2;
    else
      parent.R = q2;
  } else {
    tree._ = q2;
  }
  q2.U = parent;
  p3.U = q2;
  p3.R = q2.L;
  if (p3.R)
    p3.R.U = p3;
  q2.L = p3;
}
function RedBlackRotateRight(tree, node) {
  var p3 = node, q2 = node.L, parent = p3.U;
  if (parent) {
    if (parent.L === p3)
      parent.L = q2;
    else
      parent.R = q2;
  } else {
    tree._ = q2;
  }
  q2.U = parent;
  p3.U = q2;
  p3.L = q2.R;
  if (p3.L)
    p3.L.U = p3;
  q2.R = p3;
}
function RedBlackFirst(node) {
  while (node.L)
    node = node.L;
  return node;
}
function createEdge(left2, right2, v0, v1) {
  var edge = [null, null], index4 = edges.push(edge) - 1;
  edge.left = left2;
  edge.right = right2;
  if (v0)
    setEdgeEnd(edge, left2, right2, v0);
  if (v1)
    setEdgeEnd(edge, right2, left2, v1);
  cells[left2.index].halfedges.push(index4);
  cells[right2.index].halfedges.push(index4);
  return edge;
}
function createBorderEdge(left2, v0, v1) {
  var edge = [v0, v1];
  edge.left = left2;
  return edge;
}
function setEdgeEnd(edge, left2, right2, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left2;
    edge.right = right2;
  } else if (edge.left === right2) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
}
function clipEdge(edge, x03, y03, x14, y14) {
  var a3 = edge[0], b10 = edge[1], ax = a3[0], ay = a3[1], bx = b10[0], by = b10[1], t04 = 0, t14 = 1, dx = bx - ax, dy = by - ay, r3;
  r3 = x03 - ax;
  if (!dx && r3 > 0)
    return;
  r3 /= dx;
  if (dx < 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  } else if (dx > 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  }
  r3 = x14 - ax;
  if (!dx && r3 < 0)
    return;
  r3 /= dx;
  if (dx < 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  } else if (dx > 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  }
  r3 = y03 - ay;
  if (!dy && r3 > 0)
    return;
  r3 /= dy;
  if (dy < 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  } else if (dy > 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  }
  r3 = y14 - ay;
  if (!dy && r3 < 0)
    return;
  r3 /= dy;
  if (dy < 0) {
    if (r3 > t14)
      return;
    if (r3 > t04)
      t04 = r3;
  } else if (dy > 0) {
    if (r3 < t04)
      return;
    if (r3 < t14)
      t14 = r3;
  }
  if (!(t04 > 0) && !(t14 < 1))
    return true;
  if (t04 > 0)
    edge[0] = [ax + t04 * dx, ay + t04 * dy];
  if (t14 < 1)
    edge[1] = [ax + t14 * dx, ay + t14 * dy];
  return true;
}
function connectEdge(edge, x03, y03, x14, y14) {
  var v1 = edge[1];
  if (v1)
    return true;
  var v0 = edge[0], left2 = edge.left, right2 = edge.right, lx = left2[0], ly = left2[1], rx = right2[0], ry = right2[1], fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb2;
  if (ry === ly) {
    if (fx < x03 || fx >= x14)
      return;
    if (lx > rx) {
      if (!v0)
        v0 = [fx, y03];
      else if (v0[1] >= y14)
        return;
      v1 = [fx, y14];
    } else {
      if (!v0)
        v0 = [fx, y14];
      else if (v0[1] < y03)
        return;
      v1 = [fx, y03];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb2 = fy - fm * fx;
    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0)
          v0 = [(y03 - fb2) / fm, y03];
        else if (v0[1] >= y14)
          return;
        v1 = [(y14 - fb2) / fm, y14];
      } else {
        if (!v0)
          v0 = [(y14 - fb2) / fm, y14];
        else if (v0[1] < y03)
          return;
        v1 = [(y03 - fb2) / fm, y03];
      }
    } else {
      if (ly < ry) {
        if (!v0)
          v0 = [x03, fm * x03 + fb2];
        else if (v0[0] >= x14)
          return;
        v1 = [x14, fm * x14 + fb2];
      } else {
        if (!v0)
          v0 = [x14, fm * x14 + fb2];
        else if (v0[0] < x03)
          return;
        v1 = [x03, fm * x03 + fb2];
      }
    }
  }
  edge[0] = v0;
  edge[1] = v1;
  return true;
}
function clipEdges(x03, y03, x14, y14) {
  var i = edges.length, edge;
  while (i--) {
    if (!connectEdge(edge = edges[i], x03, y03, x14, y14) || !clipEdge(edge, x03, y03, x14, y14) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon5 || Math.abs(edge[0][1] - edge[1][1]) > epsilon5)) {
      delete edges[i];
    }
  }
}
function createCell(site) {
  return cells[site.index] = {
    site,
    halfedges: []
  };
}
function cellHalfedgeAngle(cell, edge) {
  var site = cell.site, va = edge.left, vb2 = edge.right;
  if (site === vb2)
    vb2 = va, va = site;
  if (vb2)
    return Math.atan2(vb2[1] - va[1], vb2[0] - va[0]);
  if (site === va)
    va = edge[1], vb2 = edge[0];
  else
    va = edge[0], vb2 = edge[1];
  return Math.atan2(va[0] - vb2[0], vb2[1] - va[1]);
}
function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}
function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}
function sortCellHalfedges() {
  for (var i = 0, n3 = cells.length, cell, halfedges, j2, m3; i < n3; ++i) {
    if ((cell = cells[i]) && (m3 = (halfedges = cell.halfedges).length)) {
      var index4 = new Array(m3), array5 = new Array(m3);
      for (j2 = 0; j2 < m3; ++j2)
        index4[j2] = j2, array5[j2] = cellHalfedgeAngle(cell, edges[halfedges[j2]]);
      index4.sort(function(i2, j3) {
        return array5[j3] - array5[i2];
      });
      for (j2 = 0; j2 < m3; ++j2)
        array5[j2] = halfedges[index4[j2]];
      for (j2 = 0; j2 < m3; ++j2)
        halfedges[j2] = array5[j2];
    }
  }
}
function clipCells(x03, y03, x14, y14) {
  var nCells = cells.length, iCell, cell, site, iHalfedge, halfedges, nHalfedges, start2, startX, startY, end, endX, endY, cover = true;
  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length;
      while (iHalfedge--) {
        if (!edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      }
      iHalfedge = 0, nHalfedges = halfedges.length;
      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start2 = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start2[0], startY = start2[1];
        if (Math.abs(endX - startX) > epsilon5 || Math.abs(endY - startY) > epsilon5) {
          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x03) < epsilon5 && y14 - endY > epsilon5 ? [x03, Math.abs(startX - x03) < epsilon5 ? startY : y14] : Math.abs(endY - y14) < epsilon5 && x14 - endX > epsilon5 ? [Math.abs(startY - y14) < epsilon5 ? startX : x14, y14] : Math.abs(endX - x14) < epsilon5 && endY - y03 > epsilon5 ? [x14, Math.abs(startX - x14) < epsilon5 ? startY : y03] : Math.abs(endY - y03) < epsilon5 && endX - x03 > epsilon5 ? [Math.abs(startY - y03) < epsilon5 ? startX : x03, y03] : null)) - 1);
          ++nHalfedges;
        }
      }
      if (nHalfedges)
        cover = false;
    }
  }
  if (cover) {
    var dx, dy, d2, dc2 = Infinity;
    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = cells[iCell]) {
        site = cell.site;
        dx = site[0] - x03;
        dy = site[1] - y03;
        d2 = dx * dx + dy * dy;
        if (d2 < dc2)
          dc2 = d2, cover = cell;
      }
    }
    if (cover) {
      var v00 = [x03, y03], v01 = [x03, y14], v11 = [x14, y14], v10 = [x14, y03];
      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);
    }
  }
  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = cells[iCell]) {
      if (!cell.halfedges.length) {
        delete cells[iCell];
      }
    }
  }
}
var circlePool = [];
var firstCircle;
function Circle2() {
  RedBlackNode(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}
function attachCircle(arc) {
  var lArc = arc.P, rArc = arc.N;
  if (!lArc || !rArc)
    return;
  var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
  if (lSite === rSite)
    return;
  var bx = cSite[0], by = cSite[1], ax = lSite[0] - bx, ay = lSite[1] - by, cx = rSite[0] - bx, cy = rSite[1] - by;
  var d2 = 2 * (ax * cy - ay * cx);
  if (d2 >= -epsilon23)
    return;
  var ha2 = ax * ax + ay * ay, hc2 = cx * cx + cy * cy, x5 = (cy * ha2 - ay * hc2) / d2, y7 = (ax * hc2 - cx * ha2) / d2;
  var circle4 = circlePool.pop() || new Circle2();
  circle4.arc = arc;
  circle4.site = cSite;
  circle4.x = x5 + bx;
  circle4.y = (circle4.cy = y7 + by) + Math.sqrt(x5 * x5 + y7 * y7);
  arc.circle = circle4;
  var before = null, node = circles._;
  while (node) {
    if (circle4.y < node.y || circle4.y === node.y && circle4.x <= node.x) {
      if (node.L)
        node = node.L;
      else {
        before = node.P;
        break;
      }
    } else {
      if (node.R)
        node = node.R;
      else {
        before = node;
        break;
      }
    }
  }
  circles.insert(before, circle4);
  if (!before)
    firstCircle = circle4;
}
function detachCircle(arc) {
  var circle4 = arc.circle;
  if (circle4) {
    if (!circle4.P)
      firstCircle = circle4.N;
    circles.remove(circle4);
    circlePool.push(circle4);
    RedBlackNode(circle4);
    arc.circle = null;
  }
}
var beachPool = [];
function Beach() {
  RedBlackNode(this);
  this.edge = this.site = this.circle = null;
}
function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}
function detachBeach(beach) {
  detachCircle(beach);
  beaches.remove(beach);
  beachPool.push(beach);
  RedBlackNode(beach);
}
function removeBeach(beach) {
  var circle4 = beach.circle, x5 = circle4.x, y7 = circle4.cy, vertex = [x5, y7], previous = beach.P, next = beach.N, disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;
  while (lArc.circle && Math.abs(x5 - lArc.circle.x) < epsilon5 && Math.abs(y7 - lArc.circle.cy) < epsilon5) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }
  disappearing.unshift(lArc);
  detachCircle(lArc);
  var rArc = next;
  while (rArc.circle && Math.abs(x5 - rArc.circle.x) < epsilon5 && Math.abs(y7 - rArc.circle.cy) < epsilon5) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }
  disappearing.push(rArc);
  detachCircle(rArc);
  var nArcs = disappearing.length, iArc;
  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
  }
  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);
  attachCircle(lArc);
  attachCircle(rArc);
}
function addBeach(site) {
  var x5 = site[0], directrix = site[1], lArc, rArc, dxl, dxr, node = beaches._;
  while (node) {
    dxl = leftBreakPoint(node, directrix) - x5;
    if (dxl > epsilon5)
      node = node.L;
    else {
      dxr = x5 - rightBreakPoint(node, directrix);
      if (dxr > epsilon5) {
        if (!node.R) {
          lArc = node;
          break;
        }
        node = node.R;
      } else {
        if (dxl > -epsilon5) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -epsilon5) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }
        break;
      }
    }
  }
  createCell(site);
  var newArc = createBeach(site);
  beaches.insert(lArc, newArc);
  if (!lArc && !rArc)
    return;
  if (lArc === rArc) {
    detachCircle(lArc);
    rArc = createBeach(lArc.site);
    beaches.insert(newArc, rArc);
    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);
    attachCircle(lArc);
    attachCircle(rArc);
    return;
  }
  if (!rArc) {
    newArc.edge = createEdge(lArc.site, newArc.site);
    return;
  }
  detachCircle(lArc);
  detachCircle(rArc);
  var lSite = lArc.site, ax = lSite[0], ay = lSite[1], bx = site[0] - ax, by = site[1] - ay, rSite = rArc.site, cx = rSite[0] - ax, cy = rSite[1] - ay, d2 = 2 * (bx * cy - by * cx), hb2 = bx * bx + by * by, hc2 = cx * cx + cy * cy, vertex = [(cy * hb2 - by * hc2) / d2 + ax, (bx * hc2 - cx * hb2) / d2 + ay];
  setEdgeEnd(rArc.edge, lSite, rSite, vertex);
  newArc.edge = createEdge(lSite, site, null, vertex);
  rArc.edge = createEdge(site, rSite, null, vertex);
  attachCircle(lArc);
  attachCircle(rArc);
}
function leftBreakPoint(arc, directrix) {
  var site = arc.site, rfocx = site[0], rfocy = site[1], pby2 = rfocy - directrix;
  if (!pby2)
    return rfocx;
  var lArc = arc.P;
  if (!lArc)
    return -Infinity;
  site = lArc.site;
  var lfocx = site[0], lfocy = site[1], plby2 = lfocy - directrix;
  if (!plby2)
    return lfocx;
  var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b10 = hl / plby2;
  if (aby2)
    return (-b10 + Math.sqrt(b10 * b10 - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}
function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc)
    return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
var epsilon5 = 1e-6;
var epsilon23 = 1e-12;
var beaches;
var cells;
var circles;
var edges;
function triangleArea(a3, b10, c5) {
  return (a3[0] - c5[0]) * (b10[1] - a3[1]) - (a3[0] - b10[0]) * (c5[1] - a3[1]);
}
function lexicographic(a3, b10) {
  return b10[1] - a3[1] || b10[0] - a3[0];
}
function Diagram(sites, extent3) {
  var site = sites.sort(lexicographic).pop(), x5, y7, circle4;
  edges = [];
  cells = new Array(sites.length);
  beaches = new RedBlackTree();
  circles = new RedBlackTree();
  while (true) {
    circle4 = firstCircle;
    if (site && (!circle4 || site[1] < circle4.y || site[1] === circle4.y && site[0] < circle4.x)) {
      if (site[0] !== x5 || site[1] !== y7) {
        addBeach(site);
        x5 = site[0], y7 = site[1];
      }
      site = sites.pop();
    } else if (circle4) {
      removeBeach(circle4.arc);
    } else {
      break;
    }
  }
  sortCellHalfedges();
  if (extent3) {
    var x03 = +extent3[0][0], y03 = +extent3[0][1], x14 = +extent3[1][0], y14 = +extent3[1][1];
    clipEdges(x03, y03, x14, y14);
    clipCells(x03, y03, x14, y14);
  }
  this.edges = edges;
  this.cells = cells;
  beaches = circles = edges = cells = null;
}
Diagram.prototype = {
  constructor: Diagram,
  polygons: function() {
    var edges2 = this.edges;
    return this.cells.map(function(cell) {
      var polygon = cell.halfedges.map(function(i) {
        return cellHalfedgeStart(cell, edges2[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function() {
    var triangles = [], edges2 = this.edges;
    this.cells.forEach(function(cell, i) {
      if (!(m3 = (halfedges = cell.halfedges).length))
        return;
      var site = cell.site, halfedges, j2 = -1, m3, s0, e1 = edges2[halfedges[m3 - 1]], s1 = e1.left === site ? e1.right : e1.left;
      while (++j2 < m3) {
        s0 = s1;
        e1 = edges2[halfedges[j2]];
        s1 = e1.left === site ? e1.right : e1.left;
        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function() {
    return this.edges.filter(function(edge) {
      return edge.right;
    }).map(function(edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function(x5, y7, radius) {
    var that = this, i0, i1 = that._found || 0, n3 = that.cells.length, cell;
    while (!(cell = that.cells[i1]))
      if (++i1 >= n3)
        return null;
    var dx = x5 - cell.site[0], dy = y7 - cell.site[1], d2 = dx * dx + dy * dy;
    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function(e3) {
        var edge = that.edges[e3], v3 = edge.left;
        if ((v3 === cell.site || !v3) && !(v3 = edge.right))
          return;
        var vx = x5 - v3[0], vy = y7 - v3[1], v22 = vx * vx + vy * vy;
        if (v22 < d2)
          d2 = v22, i1 = v3.index;
      });
    } while (i1 !== null);
    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
function d3Voronoi() {
  var x$13 = x4, y$13 = y5, extent3 = null;
  function voronoi(data3) {
    return new Diagram(data3.map(function(d2, i) {
      var s4 = [Math.round(x$13(d2, i, data3) / epsilon5) * epsilon5, Math.round(y$13(d2, i, data3) / epsilon5) * epsilon5];
      s4.index = i;
      s4.data = d2;
      return s4;
    }), extent3);
  }
  voronoi.polygons = function(data3) {
    return voronoi(data3).polygons();
  };
  voronoi.links = function(data3) {
    return voronoi(data3).links();
  };
  voronoi.triangles = function(data3) {
    return voronoi(data3).triangles();
  };
  voronoi.x = function(_2) {
    return arguments.length ? (x$13 = typeof _2 === "function" ? _2 : constant$12(+_2), voronoi) : x$13;
  };
  voronoi.y = function(_2) {
    return arguments.length ? (y$13 = typeof _2 === "function" ? _2 : constant$12(+_2), voronoi) : y$13;
  };
  voronoi.extent = function(_2) {
    return arguments.length ? (extent3 = _2 == null ? null : [[+_2[0][0], +_2[0][1]], [+_2[1][0], +_2[1][1]]], voronoi) : extent3 && [[extent3[0][0], extent3[0][1]], [extent3[1][0], extent3[1][1]]];
  };
  voronoi.size = function(_2) {
    return arguments.length ? (extent3 = _2 == null ? null : [[0, 0], [+_2[0], +_2[1]]], voronoi) : extent3 && [extent3[1][0] - extent3[0][0], extent3[1][1] - extent3[0][1]];
  };
  return voronoi;
}
var mapToZero_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = mapToZero;
  function mapToZero(obj) {
    var ret = {};
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        ret[key] = 0;
      }
    }
    return ret;
  }
  module.exports = exports["default"];
});
var stripStyle_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = stripStyle;
  function stripStyle(style) {
    var ret = {};
    for (var key in style) {
      if (!Object.prototype.hasOwnProperty.call(style, key)) {
        continue;
      }
      ret[key] = typeof style[key] === "number" ? style[key] : style[key].val;
    }
    return ret;
  }
  module.exports = exports["default"];
});
var stepper_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = stepper;
  var reusedTuple = [0, 0];
  function stepper(secondPerFrame, x5, v3, destX, k6, b10, precision) {
    var Fspring = -k6 * (x5 - destX);
    var Fdamper = -b10 * v3;
    var a3 = Fspring + Fdamper;
    var newV = v3 + a3 * secondPerFrame;
    var newX = x5 + newV * secondPerFrame;
    if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
      reusedTuple[0] = destX;
      reusedTuple[1] = 0;
      return reusedTuple;
    }
    reusedTuple[0] = newX;
    reusedTuple[1] = newV;
    return reusedTuple;
  }
  module.exports = exports["default"];
});
var performanceNow3 = createCommonjsModule(function(module) {
  (function() {
    var getNanoSeconds, hrtime2, loadTime;
    if (typeof performance !== "undefined" && performance !== null && performance.now) {
      module.exports = function() {
        return performance.now();
      };
    } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
      module.exports = function() {
        return (getNanoSeconds() - loadTime) / 1e6;
      };
      hrtime2 = process.hrtime;
      getNanoSeconds = function() {
        var hr;
        hr = hrtime2();
        return hr[0] * 1e9 + hr[1];
      };
      loadTime = getNanoSeconds();
    } else if (Date.now) {
      module.exports = function() {
        return Date.now() - loadTime;
      };
      loadTime = Date.now();
    } else {
      module.exports = function() {
        return new Date().getTime() - loadTime;
      };
      loadTime = new Date().getTime();
    }
  }).call(commonjsGlobal);
});
var shouldStopAnimation_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = shouldStopAnimation;
  function shouldStopAnimation(currentStyle, style, currentVelocity) {
    for (var key in style) {
      if (!Object.prototype.hasOwnProperty.call(style, key)) {
        continue;
      }
      if (currentVelocity[key] !== 0) {
        return false;
      }
      var styleValue2 = typeof style[key] === "number" ? style[key] : style[key].val;
      if (currentStyle[key] !== styleValue2) {
        return false;
      }
    }
    return true;
  }
  module.exports = exports["default"];
});
var Motion_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass4 = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits4(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero2 = _interopRequireDefault(mapToZero_1);
  var _stripStyle2 = _interopRequireDefault(stripStyle_1);
  var _stepper4 = _interopRequireDefault(stepper_1);
  var _performanceNow2 = _interopRequireDefault(performanceNow3);
  var _raf2 = _interopRequireDefault(raf_1);
  var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);
  var _react2 = _interopRequireDefault(react);
  var _propTypes2 = _interopRequireDefault(propTypes);
  var msPerFrame = 1e3 / 60;
  var Motion = function(_React$Component) {
    _inherits4(Motion2, _React$Component);
    _createClass4(Motion2, null, [{
      key: "propTypes",
      value: {
        defaultStyle: _propTypes2["default"].objectOf(_propTypes2["default"].number),
        style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired,
        children: _propTypes2["default"].func.isRequired,
        onRest: _propTypes2["default"].func
      },
      enumerable: true
    }]);
    function Motion2(props) {
      var _this = this;
      _classCallCheck4(this, Motion2);
      _React$Component.call(this, props);
      this.wasAnimating = false;
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyle = null;
      this.clearUnreadPropStyle = function(destStyle) {
        var dirty = false;
        var _state = _this.state;
        var currentStyle = _state.currentStyle;
        var currentVelocity = _state.currentVelocity;
        var lastIdealStyle = _state.lastIdealStyle;
        var lastIdealVelocity = _state.lastIdealVelocity;
        for (var key in destStyle) {
          if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
            continue;
          }
          var styleValue2 = destStyle[key];
          if (typeof styleValue2 === "number") {
            if (!dirty) {
              dirty = true;
              currentStyle = _extends13({}, currentStyle);
              currentVelocity = _extends13({}, currentVelocity);
              lastIdealStyle = _extends13({}, lastIdealStyle);
              lastIdealVelocity = _extends13({}, lastIdealVelocity);
            }
            currentStyle[key] = styleValue2;
            currentVelocity[key] = 0;
            lastIdealStyle[key] = styleValue2;
            lastIdealVelocity[key] = 0;
          }
        }
        if (dirty) {
          _this.setState({currentStyle, currentVelocity, lastIdealStyle, lastIdealVelocity});
        }
      };
      this.startAnimationIfNecessary = function() {
        _this.animationID = _raf2["default"](function(timestamp) {
          var propsStyle = _this.props.style;
          if (_shouldStopAnimation2["default"](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
            if (_this.wasAnimating && _this.props.onRest) {
              _this.props.onRest();
            }
            _this.animationID = null;
            _this.wasAnimating = false;
            _this.accumulatedTime = 0;
            return;
          }
          _this.wasAnimating = true;
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var newLastIdealStyle = {};
          var newLastIdealVelocity = {};
          var newCurrentStyle = {};
          var newCurrentVelocity = {};
          for (var key in propsStyle) {
            if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {
              continue;
            }
            var styleValue2 = propsStyle[key];
            if (typeof styleValue2 === "number") {
              newCurrentStyle[key] = styleValue2;
              newCurrentVelocity[key] = 0;
              newLastIdealStyle[key] = styleValue2;
              newLastIdealVelocity[key] = 0;
            } else {
              var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
              var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
              for (var i = 0; i < framesToCatchUp; i++) {
                var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
                newLastIdealStyleValue = _stepper[0];
                newLastIdealVelocityValue = _stepper[1];
              }
              var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
              var nextIdealX = _stepper2[0];
              var nextIdealV = _stepper2[1];
              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
              newLastIdealStyle[key] = newLastIdealStyleValue;
              newLastIdealVelocity[key] = newLastIdealVelocityValue;
            }
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyle: newCurrentStyle,
            currentVelocity: newCurrentVelocity,
            lastIdealStyle: newLastIdealStyle,
            lastIdealVelocity: newLastIdealVelocity
          });
          _this.unreadPropStyle = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    Motion2.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyle3 = _props.defaultStyle;
      var style = _props.style;
      var currentStyle = defaultStyle3 || _stripStyle2["default"](style);
      var currentVelocity = _mapToZero2["default"](currentStyle);
      return {
        currentStyle,
        currentVelocity,
        lastIdealStyle: currentStyle,
        lastIdealVelocity: currentVelocity
      };
    };
    Motion2.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    Motion2.prototype.componentWillReceiveProps = function componentWillReceiveProps2(props) {
      if (this.unreadPropStyle != null) {
        this.clearUnreadPropStyle(this.unreadPropStyle);
      }
      this.unreadPropStyle = props.style;
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    Motion2.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    Motion2.prototype.render = function render2() {
      var renderedChildren = this.props.children(this.state.currentStyle);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return Motion2;
  }(_react2["default"].Component);
  exports["default"] = Motion;
  module.exports = exports["default"];
});
var StaggeredMotion_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass4 = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits4(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero2 = _interopRequireDefault(mapToZero_1);
  var _stripStyle2 = _interopRequireDefault(stripStyle_1);
  var _stepper4 = _interopRequireDefault(stepper_1);
  var _performanceNow2 = _interopRequireDefault(performanceNow3);
  var _raf2 = _interopRequireDefault(raf_1);
  var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);
  var _react2 = _interopRequireDefault(react);
  var _propTypes2 = _interopRequireDefault(propTypes);
  var msPerFrame = 1e3 / 60;
  function shouldStopAnimationAll(currentStyles, styles2, currentVelocities) {
    for (var i = 0; i < currentStyles.length; i++) {
      if (!_shouldStopAnimation2["default"](currentStyles[i], styles2[i], currentVelocities[i])) {
        return false;
      }
    }
    return true;
  }
  var StaggeredMotion = function(_React$Component) {
    _inherits4(StaggeredMotion2, _React$Component);
    _createClass4(StaggeredMotion2, null, [{
      key: "propTypes",
      value: {
        defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].objectOf(_propTypes2["default"].number)),
        styles: _propTypes2["default"].func.isRequired,
        children: _propTypes2["default"].func.isRequired
      },
      enumerable: true
    }]);
    function StaggeredMotion2(props) {
      var _this = this;
      _classCallCheck4(this, StaggeredMotion2);
      _React$Component.call(this, props);
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyles = null;
      this.clearUnreadPropStyle = function(unreadPropStyles) {
        var _state = _this.state;
        var currentStyles = _state.currentStyles;
        var currentVelocities = _state.currentVelocities;
        var lastIdealStyles = _state.lastIdealStyles;
        var lastIdealVelocities = _state.lastIdealVelocities;
        var someDirty = false;
        for (var i = 0; i < unreadPropStyles.length; i++) {
          var unreadPropStyle = unreadPropStyles[i];
          var dirty = false;
          for (var key in unreadPropStyle) {
            if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
              continue;
            }
            var styleValue2 = unreadPropStyle[key];
            if (typeof styleValue2 === "number") {
              if (!dirty) {
                dirty = true;
                someDirty = true;
                currentStyles[i] = _extends13({}, currentStyles[i]);
                currentVelocities[i] = _extends13({}, currentVelocities[i]);
                lastIdealStyles[i] = _extends13({}, lastIdealStyles[i]);
                lastIdealVelocities[i] = _extends13({}, lastIdealVelocities[i]);
              }
              currentStyles[i][key] = styleValue2;
              currentVelocities[i][key] = 0;
              lastIdealStyles[i][key] = styleValue2;
              lastIdealVelocities[i][key] = 0;
            }
          }
        }
        if (someDirty) {
          _this.setState({currentStyles, currentVelocities, lastIdealStyles, lastIdealVelocities});
        }
      };
      this.startAnimationIfNecessary = function() {
        _this.animationID = _raf2["default"](function(timestamp) {
          var destStyles = _this.props.styles(_this.state.lastIdealStyles);
          if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
            _this.animationID = null;
            _this.accumulatedTime = 0;
            return;
          }
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var newLastIdealStyles = [];
          var newLastIdealVelocities = [];
          var newCurrentStyles = [];
          var newCurrentVelocities = [];
          for (var i = 0; i < destStyles.length; i++) {
            var destStyle = destStyles[i];
            var newCurrentStyle = {};
            var newCurrentVelocity = {};
            var newLastIdealStyle = {};
            var newLastIdealVelocity = {};
            for (var key in destStyle) {
              if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
                continue;
              }
              var styleValue2 = destStyle[key];
              if (typeof styleValue2 === "number") {
                newCurrentStyle[key] = styleValue2;
                newCurrentVelocity[key] = 0;
                newLastIdealStyle[key] = styleValue2;
                newLastIdealVelocity[key] = 0;
              } else {
                var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
                var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
                for (var j2 = 0; j2 < framesToCatchUp; j2++) {
                  var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
                  newLastIdealStyleValue = _stepper[0];
                  newLastIdealVelocityValue = _stepper[1];
                }
                var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
                var nextIdealX = _stepper2[0];
                var nextIdealV = _stepper2[1];
                newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                newLastIdealStyle[key] = newLastIdealStyleValue;
                newLastIdealVelocity[key] = newLastIdealVelocityValue;
              }
            }
            newCurrentStyles[i] = newCurrentStyle;
            newCurrentVelocities[i] = newCurrentVelocity;
            newLastIdealStyles[i] = newLastIdealStyle;
            newLastIdealVelocities[i] = newLastIdealVelocity;
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyles: newCurrentStyles,
            currentVelocities: newCurrentVelocities,
            lastIdealStyles: newLastIdealStyles,
            lastIdealVelocities: newLastIdealVelocities
          });
          _this.unreadPropStyles = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    StaggeredMotion2.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyles3 = _props.defaultStyles;
      var styles2 = _props.styles;
      var currentStyles = defaultStyles3 || styles2().map(_stripStyle2["default"]);
      var currentVelocities = currentStyles.map(function(currentStyle) {
        return _mapToZero2["default"](currentStyle);
      });
      return {
        currentStyles,
        currentVelocities,
        lastIdealStyles: currentStyles,
        lastIdealVelocities: currentVelocities
      };
    };
    StaggeredMotion2.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    StaggeredMotion2.prototype.componentWillReceiveProps = function componentWillReceiveProps2(props) {
      if (this.unreadPropStyles != null) {
        this.clearUnreadPropStyle(this.unreadPropStyles);
      }
      this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    StaggeredMotion2.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    StaggeredMotion2.prototype.render = function render2() {
      var renderedChildren = this.props.children(this.state.currentStyles);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return StaggeredMotion2;
  }(_react2["default"].Component);
  exports["default"] = StaggeredMotion;
  module.exports = exports["default"];
});
var mergeDiff_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = mergeDiff;
  function mergeDiff(prev, next, onRemove2) {
    var prevKeyIndex = {};
    for (var i = 0; i < prev.length; i++) {
      prevKeyIndex[prev[i].key] = i;
    }
    var nextKeyIndex = {};
    for (var i = 0; i < next.length; i++) {
      nextKeyIndex[next[i].key] = i;
    }
    var ret = [];
    for (var i = 0; i < next.length; i++) {
      ret[i] = next[i];
    }
    for (var i = 0; i < prev.length; i++) {
      if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {
        var fill = onRemove2(i, prev[i]);
        if (fill != null) {
          ret.push(fill);
        }
      }
    }
    return ret.sort(function(a3, b10) {
      var nextOrderA = nextKeyIndex[a3.key];
      var nextOrderB = nextKeyIndex[b10.key];
      var prevOrderA = prevKeyIndex[a3.key];
      var prevOrderB = prevKeyIndex[b10.key];
      if (nextOrderA != null && nextOrderB != null) {
        return nextKeyIndex[a3.key] - nextKeyIndex[b10.key];
      } else if (prevOrderA != null && prevOrderB != null) {
        return prevKeyIndex[a3.key] - prevKeyIndex[b10.key];
      } else if (nextOrderA != null) {
        for (var i2 = 0; i2 < next.length; i2++) {
          var pivot = next[i2].key;
          if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
            continue;
          }
          if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
            return -1;
          } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
            return 1;
          }
        }
        return 1;
      }
      for (var i2 = 0; i2 < next.length; i2++) {
        var pivot = next[i2].key;
        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
          continue;
        }
        if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
          return 1;
        } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
          return -1;
        }
      }
      return -1;
    });
  }
  module.exports = exports["default"];
});
var TransitionMotion_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass4 = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits4(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _mapToZero2 = _interopRequireDefault(mapToZero_1);
  var _stripStyle2 = _interopRequireDefault(stripStyle_1);
  var _stepper4 = _interopRequireDefault(stepper_1);
  var _mergeDiff2 = _interopRequireDefault(mergeDiff_1);
  var _performanceNow2 = _interopRequireDefault(performanceNow3);
  var _raf2 = _interopRequireDefault(raf_1);
  var _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);
  var _react2 = _interopRequireDefault(react);
  var _propTypes2 = _interopRequireDefault(propTypes);
  var msPerFrame = 1e3 / 60;
  function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
    var cUnreadPropStyles = unreadPropStyles;
    if (cUnreadPropStyles == null) {
      return mergedPropsStyles.map(function(mergedPropsStyle, i) {
        return {
          key: mergedPropsStyle.key,
          data: mergedPropsStyle.data,
          style: plainStyles[i]
        };
      });
    }
    return mergedPropsStyles.map(function(mergedPropsStyle, i) {
      for (var j2 = 0; j2 < cUnreadPropStyles.length; j2++) {
        if (cUnreadPropStyles[j2].key === mergedPropsStyle.key) {
          return {
            key: cUnreadPropStyles[j2].key,
            data: cUnreadPropStyles[j2].data,
            style: plainStyles[i]
          };
        }
      }
      return {key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i]};
    });
  }
  function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
    if (mergedPropsStyles.length !== destStyles.length) {
      return false;
    }
    for (var i = 0; i < mergedPropsStyles.length; i++) {
      if (mergedPropsStyles[i].key !== destStyles[i].key) {
        return false;
      }
    }
    for (var i = 0; i < mergedPropsStyles.length; i++) {
      if (!_shouldStopAnimation2["default"](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
        return false;
      }
    }
    return true;
  }
  function mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
    var newMergedPropsStyles = _mergeDiff2["default"](oldMergedPropsStyles, destStyles, function(oldIndex, oldMergedPropsStyle) {
      var leavingStyle = willLeave(oldMergedPropsStyle);
      if (leavingStyle == null) {
        didLeave({key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data});
        return null;
      }
      if (_shouldStopAnimation2["default"](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
        didLeave({key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data});
        return null;
      }
      return {key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle};
    });
    var newCurrentStyles = [];
    var newCurrentVelocities = [];
    var newLastIdealStyles = [];
    var newLastIdealVelocities = [];
    for (var i = 0; i < newMergedPropsStyles.length; i++) {
      var newMergedPropsStyleCell = newMergedPropsStyles[i];
      var foundOldIndex = null;
      for (var j2 = 0; j2 < oldMergedPropsStyles.length; j2++) {
        if (oldMergedPropsStyles[j2].key === newMergedPropsStyleCell.key) {
          foundOldIndex = j2;
          break;
        }
      }
      if (foundOldIndex == null) {
        var plainStyle = willEnter(newMergedPropsStyleCell);
        newCurrentStyles[i] = plainStyle;
        newLastIdealStyles[i] = plainStyle;
        var velocity = _mapToZero2["default"](newMergedPropsStyleCell.style);
        newCurrentVelocities[i] = velocity;
        newLastIdealVelocities[i] = velocity;
      } else {
        newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
        newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
        newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
        newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
      }
    }
    return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
  }
  var TransitionMotion = function(_React$Component) {
    _inherits4(TransitionMotion2, _React$Component);
    _createClass4(TransitionMotion2, null, [{
      key: "propTypes",
      value: {
        defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
          key: _propTypes2["default"].string.isRequired,
          data: _propTypes2["default"].any,
          style: _propTypes2["default"].objectOf(_propTypes2["default"].number).isRequired
        })),
        styles: _propTypes2["default"].oneOfType([_propTypes2["default"].func, _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
          key: _propTypes2["default"].string.isRequired,
          data: _propTypes2["default"].any,
          style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired
        }))]).isRequired,
        children: _propTypes2["default"].func.isRequired,
        willEnter: _propTypes2["default"].func,
        willLeave: _propTypes2["default"].func,
        didLeave: _propTypes2["default"].func
      },
      enumerable: true
    }, {
      key: "defaultProps",
      value: {
        willEnter: function willEnter(styleThatEntered) {
          return _stripStyle2["default"](styleThatEntered.style);
        },
        willLeave: function willLeave() {
          return null;
        },
        didLeave: function didLeave() {
        }
      },
      enumerable: true
    }]);
    function TransitionMotion2(props) {
      var _this = this;
      _classCallCheck4(this, TransitionMotion2);
      _React$Component.call(this, props);
      this.unmounting = false;
      this.animationID = null;
      this.prevTime = 0;
      this.accumulatedTime = 0;
      this.unreadPropStyles = null;
      this.clearUnreadPropStyle = function(unreadPropStyles) {
        var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
        var mergedPropsStyles = _mergeAndSync[0];
        var currentStyles = _mergeAndSync[1];
        var currentVelocities = _mergeAndSync[2];
        var lastIdealStyles = _mergeAndSync[3];
        var lastIdealVelocities = _mergeAndSync[4];
        for (var i = 0; i < unreadPropStyles.length; i++) {
          var unreadPropStyle = unreadPropStyles[i].style;
          var dirty = false;
          for (var key in unreadPropStyle) {
            if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
              continue;
            }
            var styleValue2 = unreadPropStyle[key];
            if (typeof styleValue2 === "number") {
              if (!dirty) {
                dirty = true;
                currentStyles[i] = _extends13({}, currentStyles[i]);
                currentVelocities[i] = _extends13({}, currentVelocities[i]);
                lastIdealStyles[i] = _extends13({}, lastIdealStyles[i]);
                lastIdealVelocities[i] = _extends13({}, lastIdealVelocities[i]);
                mergedPropsStyles[i] = {
                  key: mergedPropsStyles[i].key,
                  data: mergedPropsStyles[i].data,
                  style: _extends13({}, mergedPropsStyles[i].style)
                };
              }
              currentStyles[i][key] = styleValue2;
              currentVelocities[i][key] = 0;
              lastIdealStyles[i][key] = styleValue2;
              lastIdealVelocities[i][key] = 0;
              mergedPropsStyles[i].style[key] = styleValue2;
            }
          }
        }
        _this.setState({
          currentStyles,
          currentVelocities,
          mergedPropsStyles,
          lastIdealStyles,
          lastIdealVelocities
        });
      };
      this.startAnimationIfNecessary = function() {
        if (_this.unmounting) {
          return;
        }
        _this.animationID = _raf2["default"](function(timestamp) {
          if (_this.unmounting) {
            return;
          }
          var propStyles = _this.props.styles;
          var destStyles = typeof propStyles === "function" ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;
          if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
            _this.animationID = null;
            _this.accumulatedTime = 0;
            return;
          }
          var currentTime = timestamp || _performanceNow2["default"]();
          var timeDelta = currentTime - _this.prevTime;
          _this.prevTime = currentTime;
          _this.accumulatedTime = _this.accumulatedTime + timeDelta;
          if (_this.accumulatedTime > msPerFrame * 10) {
            _this.accumulatedTime = 0;
          }
          if (_this.accumulatedTime === 0) {
            _this.animationID = null;
            _this.startAnimationIfNecessary();
            return;
          }
          var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
          var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
          var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
          var newMergedPropsStyles = _mergeAndSync2[0];
          var newCurrentStyles = _mergeAndSync2[1];
          var newCurrentVelocities = _mergeAndSync2[2];
          var newLastIdealStyles = _mergeAndSync2[3];
          var newLastIdealVelocities = _mergeAndSync2[4];
          for (var i = 0; i < newMergedPropsStyles.length; i++) {
            var newMergedPropsStyle = newMergedPropsStyles[i].style;
            var newCurrentStyle = {};
            var newCurrentVelocity = {};
            var newLastIdealStyle = {};
            var newLastIdealVelocity = {};
            for (var key in newMergedPropsStyle) {
              if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {
                continue;
              }
              var styleValue2 = newMergedPropsStyle[key];
              if (typeof styleValue2 === "number") {
                newCurrentStyle[key] = styleValue2;
                newCurrentVelocity[key] = 0;
                newLastIdealStyle[key] = styleValue2;
                newLastIdealVelocity[key] = 0;
              } else {
                var newLastIdealStyleValue = newLastIdealStyles[i][key];
                var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
                for (var j2 = 0; j2 < framesToCatchUp; j2++) {
                  var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
                  newLastIdealStyleValue = _stepper[0];
                  newLastIdealVelocityValue = _stepper[1];
                }
                var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue2.val, styleValue2.stiffness, styleValue2.damping, styleValue2.precision);
                var nextIdealX = _stepper2[0];
                var nextIdealV = _stepper2[1];
                newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                newLastIdealStyle[key] = newLastIdealStyleValue;
                newLastIdealVelocity[key] = newLastIdealVelocityValue;
              }
            }
            newLastIdealStyles[i] = newLastIdealStyle;
            newLastIdealVelocities[i] = newLastIdealVelocity;
            newCurrentStyles[i] = newCurrentStyle;
            newCurrentVelocities[i] = newCurrentVelocity;
          }
          _this.animationID = null;
          _this.accumulatedTime -= framesToCatchUp * msPerFrame;
          _this.setState({
            currentStyles: newCurrentStyles,
            currentVelocities: newCurrentVelocities,
            lastIdealStyles: newLastIdealStyles,
            lastIdealVelocities: newLastIdealVelocities,
            mergedPropsStyles: newMergedPropsStyles
          });
          _this.unreadPropStyles = null;
          _this.startAnimationIfNecessary();
        });
      };
      this.state = this.defaultState();
    }
    TransitionMotion2.prototype.defaultState = function defaultState() {
      var _props = this.props;
      var defaultStyles3 = _props.defaultStyles;
      var styles2 = _props.styles;
      var willEnter = _props.willEnter;
      var willLeave = _props.willLeave;
      var didLeave = _props.didLeave;
      var destStyles = typeof styles2 === "function" ? styles2(defaultStyles3) : styles2;
      var oldMergedPropsStyles = void 0;
      if (defaultStyles3 == null) {
        oldMergedPropsStyles = destStyles;
      } else {
        oldMergedPropsStyles = defaultStyles3.map(function(defaultStyleCell) {
          for (var i = 0; i < destStyles.length; i++) {
            if (destStyles[i].key === defaultStyleCell.key) {
              return destStyles[i];
            }
          }
          return defaultStyleCell;
        });
      }
      var oldCurrentStyles = defaultStyles3 == null ? destStyles.map(function(s4) {
        return _stripStyle2["default"](s4.style);
      }) : defaultStyles3.map(function(s4) {
        return _stripStyle2["default"](s4.style);
      });
      var oldCurrentVelocities = defaultStyles3 == null ? destStyles.map(function(s4) {
        return _mapToZero2["default"](s4.style);
      }) : defaultStyles3.map(function(s4) {
        return _mapToZero2["default"](s4.style);
      });
      var _mergeAndSync3 = mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, oldCurrentVelocities);
      var mergedPropsStyles = _mergeAndSync3[0];
      var currentStyles = _mergeAndSync3[1];
      var currentVelocities = _mergeAndSync3[2];
      var lastIdealStyles = _mergeAndSync3[3];
      var lastIdealVelocities = _mergeAndSync3[4];
      return {
        currentStyles,
        currentVelocities,
        lastIdealStyles,
        lastIdealVelocities,
        mergedPropsStyles
      };
    };
    TransitionMotion2.prototype.componentDidMount = function componentDidMount() {
      this.prevTime = _performanceNow2["default"]();
      this.startAnimationIfNecessary();
    };
    TransitionMotion2.prototype.componentWillReceiveProps = function componentWillReceiveProps2(props) {
      if (this.unreadPropStyles) {
        this.clearUnreadPropStyle(this.unreadPropStyles);
      }
      var styles2 = props.styles;
      if (typeof styles2 === "function") {
        this.unreadPropStyles = styles2(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
      } else {
        this.unreadPropStyles = styles2;
      }
      if (this.animationID == null) {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      }
    };
    TransitionMotion2.prototype.componentWillUnmount = function componentWillUnmount() {
      this.unmounting = true;
      if (this.animationID != null) {
        _raf2["default"].cancel(this.animationID);
        this.animationID = null;
      }
    };
    TransitionMotion2.prototype.render = function render2() {
      var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
      var renderedChildren = this.props.children(hydratedStyles);
      return renderedChildren && _react2["default"].Children.only(renderedChildren);
    };
    return TransitionMotion2;
  }(_react2["default"].Component);
  exports["default"] = TransitionMotion;
  module.exports = exports["default"];
});
var presets = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = {
    noWobble: {stiffness: 170, damping: 26},
    gentle: {stiffness: 120, damping: 14},
    wobbly: {stiffness: 180, damping: 12},
    stiff: {stiffness: 210, damping: 20}
  };
  module.exports = exports["default"];
});
var spring_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports["default"] = spring;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var _presets2 = _interopRequireDefault(presets);
  var defaultConfig = _extends13({}, _presets2["default"].noWobble, {
    precision: 0.01
  });
  function spring(val, config4) {
    return _extends13({}, defaultConfig, config4, {val});
  }
  module.exports = exports["default"];
});
var reorderKeys_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports["default"] = reorderKeys;
  function reorderKeys() {
  }
  module.exports = exports["default"];
});
var reactMotion = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  function _interopRequire(obj) {
    return obj && obj.__esModule ? obj["default"] : obj;
  }
  exports.Motion = _interopRequire(Motion_1);
  exports.StaggeredMotion = _interopRequire(StaggeredMotion_1);
  exports.TransitionMotion = _interopRequire(TransitionMotion_1);
  exports.spring = _interopRequire(spring_1);
  exports.presets = _interopRequire(presets);
  exports.stripStyle = _interopRequire(stripStyle_1);
  exports.reorderKeys = _interopRequire(reorderKeys_1);
});
var _createClass3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends9 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _objectWithoutProperties3(obj, keys4) {
  var target = {};
  for (var i in obj) {
    if (keys4.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target[i] = obj[i];
  }
  return target;
}
var ANIMATION_PROPTYPES = propTypes.oneOfType([propTypes.string, propTypes.shape({
  stiffness: propTypes.number,
  nonAnimatedProps: propTypes.arrayOf(propTypes.string),
  damping: propTypes.number
}), propTypes.bool]);
var propTypes2 = {
  animatedProps: propTypes.arrayOf(propTypes.string).isRequired,
  animation: ANIMATION_PROPTYPES,
  onStart: propTypes.func,
  onEnd: propTypes.func
};
function getAnimationStyle() {
  var animationStyle = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : reactMotion.presets.noWobble;
  if (typeof animationStyle === "string") {
    return reactMotion.presets[animationStyle] || reactMotion.presets.noWobble;
  }
  var damping = animationStyle.damping, stiffness = animationStyle.stiffness;
  return _extends9({
    damping: damping || reactMotion.presets.noWobble.damping,
    stiffness: stiffness || reactMotion.presets.noWobble.stiffness
  }, animationStyle);
}
function extractAnimatedPropValues(props) {
  var animatedProps2 = props.animatedProps, otherProps = _objectWithoutProperties3(props, ["animatedProps"]);
  return animatedProps2.reduce(function(result, animatedPropName) {
    if (otherProps.hasOwnProperty(animatedPropName)) {
      result[animatedPropName] = otherProps[animatedPropName];
    }
    return result;
  }, {});
}
var Animation = function(_PureComponent) {
  _inherits3(Animation3, _PureComponent);
  function Animation3(props) {
    _classCallCheck3(this, Animation3);
    var _this = _possibleConstructorReturn3(this, (Animation3.__proto__ || Object.getPrototypeOf(Animation3)).call(this, props));
    _this._motionEndHandler = function() {
      if (_this.props.onEnd) {
        _this.props.onEnd();
      }
    };
    _this._renderChildren = function(_ref) {
      var i = _ref.i;
      var children2 = _this.props.children;
      var interpolator = _this._interpolator;
      var child = react.Children.only(children2);
      var interpolatedProps = interpolator ? interpolator(i) : interpolator;
      var data3 = interpolatedProps && interpolatedProps.data || null;
      if (data3 && child.props._data) {
        data3 = data3.map(function(row, index4) {
          var correspondingCell = child.props._data[index4];
          return _extends9({}, row, {
            parent: correspondingCell.parent,
            children: correspondingCell.children
          });
        });
      }
      return react.cloneElement(child, _extends9({}, child.props, interpolatedProps, {
        data: data3 || child.props.data || null,
        _animation: Math.random()
      }));
    };
    _this._updateInterpolator(props);
    return _this;
  }
  _createClass3(Animation3, [{
    key: "componentWillUpdate",
    value: function componentWillUpdate2(props) {
      this._updateInterpolator(this.props, props);
      if (props.onStart) {
        props.onStart();
      }
    }
  }, {
    key: "_updateInterpolator",
    value: function _updateInterpolator(oldProps, newProps) {
      this._interpolator = interpolateValue(extractAnimatedPropValues(oldProps), newProps ? extractAnimatedPropValues(newProps) : null);
    }
  }, {
    key: "render",
    value: function render2() {
      var animationStyle = getAnimationStyle(this.props.animation);
      var defaultStyle3 = {i: 0};
      var style = {i: reactMotion.spring(1, animationStyle)};
      var key = Math.random();
      return react.createElement(reactMotion.Motion, _extends9({defaultStyle: defaultStyle3, style, key}, {onRest: this._motionEndHandler}), this._renderChildren);
    }
  }]);
  return Animation3;
}(react.PureComponent);
Animation.propTypes = propTypes2;
Animation.displayName = "Animation";
var AnimationPropType = ANIMATION_PROPTYPES;
function ascending4(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function bisector3(compare) {
  if (compare.length === 1)
    compare = ascendingComparator3(compare);
  return {
    left: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      }
      return lo;
    },
    right: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) > 0)
          hi2 = mid;
        else
          lo = mid + 1;
      }
      return lo;
    }
  };
}
function ascendingComparator3(f3) {
  return function(d2, x5) {
    return ascending4(f3(d2), x5);
  };
}
var ascendingBisect3 = bisector3(ascending4);
var bisectRight3 = ascendingBisect3.right;
function extent2(values2, valueof) {
  var n3 = values2.length, i = -1, value2, min5, max6;
  if (valueof == null) {
    while (++i < n3) {
      if ((value2 = values2[i]) != null && value2 >= value2) {
        min5 = max6 = value2;
        while (++i < n3) {
          if ((value2 = values2[i]) != null) {
            if (min5 > value2)
              min5 = value2;
            if (max6 < value2)
              max6 = value2;
          }
        }
      }
    }
  } else {
    while (++i < n3) {
      if ((value2 = valueof(values2[i], i, values2)) != null && value2 >= value2) {
        min5 = max6 = value2;
        while (++i < n3) {
          if ((value2 = valueof(values2[i], i, values2)) != null) {
            if (min5 > value2)
              min5 = value2;
            if (max6 < value2)
              max6 = value2;
          }
        }
      }
    }
  }
  return [min5, max6];
}
function range6(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n3 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n3 < 3 ? 1 : +step;
  var i = -1, n3 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range7 = new Array(n3);
  while (++i < n3) {
    range7[i] = start2 + i * step;
  }
  return range7;
}
var e103 = Math.sqrt(50);
var e53 = Math.sqrt(10);
var e23 = Math.sqrt(2);
function ticks3(start2, stop, count2) {
  var reverse3, i = -1, n3, ticks4, step;
  stop = +stop, start2 = +start2, count2 = +count2;
  if (start2 === stop && count2 > 0)
    return [start2];
  if (reverse3 = stop < start2)
    n3 = start2, start2 = stop, stop = n3;
  if ((step = tickIncrement3(start2, stop, count2)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    start2 = Math.ceil(start2 / step);
    stop = Math.floor(stop / step);
    ticks4 = new Array(n3 = Math.ceil(stop - start2 + 1));
    while (++i < n3)
      ticks4[i] = (start2 + i) * step;
  } else {
    start2 = Math.floor(start2 * step);
    stop = Math.ceil(stop * step);
    ticks4 = new Array(n3 = Math.ceil(start2 - stop + 1));
    while (++i < n3)
      ticks4[i] = (start2 - i) / step;
  }
  if (reverse3)
    ticks4.reverse();
  return ticks4;
}
function tickIncrement3(start2, stop, count2) {
  var step = (stop - start2) / Math.max(0, count2), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e103 ? 10 : error >= e53 ? 5 : error >= e23 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e103 ? 10 : error >= e53 ? 5 : error >= e23 ? 2 : 1);
}
function tickStep3(start2, stop, count2) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e103)
    step1 *= 10;
  else if (error >= e53)
    step1 *= 5;
  else if (error >= e23)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}
var array4 = Array.prototype;
var map5 = array4.map;
var slice$12 = array4.slice;
var implicit3 = {name: "implicit"};
function ordinal3(range7) {
  var index4 = map2(), domain = [], unknown = implicit3;
  range7 = range7 == null ? [] : slice$12.call(range7);
  function scale(d2) {
    var key = d2 + "", i = index4.get(key);
    if (!i) {
      if (unknown !== implicit3)
        return unknown;
      index4.set(key, i = domain.push(d2));
    }
    return range7[(i - 1) % range7.length];
  }
  scale.domain = function(_2) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index4 = map2();
    var i = -1, n3 = _2.length, d2, key;
    while (++i < n3)
      if (!index4.has(key = (d2 = _2[i]) + ""))
        index4.set(key, domain.push(d2));
    return scale;
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice$12.call(_2), scale) : range7.slice();
  };
  scale.unknown = function(_2) {
    return arguments.length ? (unknown = _2, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal3().domain(domain).range(range7).unknown(unknown);
  };
  return scale;
}
function band3() {
  var scale = ordinal3().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, range$13 = [0, 1], step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n3 = domain().length, reverse3 = range$13[1] < range$13[0], start2 = range$13[reverse3 - 0], stop = range$13[1 - reverse3];
    step = (stop - start2) / Math.max(1, n3 - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start2 += (stop - start2 - step * (n3 - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
    var values2 = range6(n3).map(function(i) {
      return start2 + step * i;
    });
    return ordinalRange(reverse3 ? values2.reverse() : values2);
  }
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.range = function(_2) {
    return arguments.length ? (range$13 = [+_2[0], +_2[1]], rescale()) : range$13.slice();
  };
  scale.rangeRound = function(_2) {
    return range$13 = [+_2[0], +_2[1]], round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_2) {
    return arguments.length ? (round2 = !!_2, rescale()) : round2;
  };
  scale.padding = function(_2) {
    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _2)), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_2) {
    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _2)), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_2) {
    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _2)), rescale()) : paddingOuter;
  };
  scale.align = function(_2) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _2)), rescale()) : align;
  };
  scale.copy = function() {
    return band3().domain(domain()).range(range$13).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return rescale();
}
function pointish3(scale) {
  var copy5 = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;
  scale.copy = function() {
    return pointish3(copy5());
  };
  return scale;
}
function point7() {
  return pointish3(band3().paddingInner(1));
}
function constant$2(x5) {
  return function() {
    return x5;
  };
}
function number5(x5) {
  return +x5;
}
var unit4 = [0, 1];
function deinterpolateLinear2(a3, b10) {
  return (b10 -= a3 = +a3) ? function(x5) {
    return (x5 - a3) / b10;
  } : constant$2(b10);
}
function deinterpolateClamp2(deinterpolate3) {
  return function(a3, b10) {
    var d2 = deinterpolate3(a3 = +a3, b10 = +b10);
    return function(x5) {
      return x5 <= a3 ? 0 : x5 >= b10 ? 1 : d2(x5);
    };
  };
}
function reinterpolateClamp2(reinterpolate4) {
  return function(a3, b10) {
    var r3 = reinterpolate4(a3 = +a3, b10 = +b10);
    return function(t4) {
      return t4 <= 0 ? a3 : t4 >= 1 ? b10 : r3(t4);
    };
  };
}
function bimap3(domain, range7, deinterpolate3, reinterpolate4) {
  var d0 = domain[0], d1 = domain[1], r0 = range7[0], r1 = range7[1];
  if (d1 < d0)
    d0 = deinterpolate3(d1, d0), r0 = reinterpolate4(r1, r0);
  else
    d0 = deinterpolate3(d0, d1), r0 = reinterpolate4(r0, r1);
  return function(x5) {
    return r0(d0(x5));
  };
}
function polymap3(domain, range7, deinterpolate3, reinterpolate4) {
  var j2 = Math.min(domain.length, range7.length) - 1, d2 = new Array(j2), r3 = new Array(j2), i = -1;
  if (domain[j2] < domain[0]) {
    domain = domain.slice().reverse();
    range7 = range7.slice().reverse();
  }
  while (++i < j2) {
    d2[i] = deinterpolate3(domain[i], domain[i + 1]);
    r3[i] = reinterpolate4(range7[i], range7[i + 1]);
  }
  return function(x5) {
    var i2 = bisectRight3(domain, x5, 1, j2) - 1;
    return r3[i2](d2[i2](x5));
  };
}
function copy4(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());
}
function continuous3(deinterpolate3, reinterpolate4) {
  var domain = unit4, range7 = unit4, interpolate3 = interpolateValue, clamp = false, piecewise3, output, input;
  function rescale() {
    piecewise3 = Math.min(domain.length, range7.length) > 2 ? polymap3 : bimap3;
    output = input = null;
    return scale;
  }
  function scale(x5) {
    return (output || (output = piecewise3(domain, range7, clamp ? deinterpolateClamp2(deinterpolate3) : deinterpolate3, interpolate3)))(+x5);
  }
  scale.invert = function(y7) {
    return (input || (input = piecewise3(range7, domain, deinterpolateLinear2, clamp ? reinterpolateClamp2(reinterpolate4) : reinterpolate4)))(+y7);
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain = map5.call(_2, number5), rescale()) : domain.slice();
  };
  scale.range = function(_2) {
    return arguments.length ? (range7 = slice$12.call(_2), rescale()) : range7.slice();
  };
  scale.rangeRound = function(_2) {
    return range7 = slice$12.call(_2), interpolate3 = interpolateRound, rescale();
  };
  scale.clamp = function(_2) {
    return arguments.length ? (clamp = !!_2, rescale()) : clamp;
  };
  scale.interpolate = function(_2) {
    return arguments.length ? (interpolate3 = _2, rescale()) : interpolate3;
  };
  return rescale();
}
function formatDecimal3(x5) {
  return Math.abs(x5 = Math.round(x5)) >= 1e21 ? x5.toLocaleString("en").replace(/,/g, "") : x5.toString(10);
}
function formatDecimalParts3(x5, p3) {
  if ((i = (x5 = p3 ? x5.toExponential(p3 - 1) : x5.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x5.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x5.slice(i + 1)
  ];
}
function exponent4(x5) {
  return x5 = formatDecimalParts3(Math.abs(x5)), x5 ? x5[1] : NaN;
}
function formatGroup3(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t4 = [], j2 = 0, g2 = grouping[0], length = 0;
    while (i > 0 && g2 > 0) {
      if (length + g2 + 1 > width)
        g2 = Math.max(1, width - length);
      t4.push(value2.substring(i -= g2, i + g2));
      if ((length += g2 + 1) > width)
        break;
      g2 = grouping[j2 = (j2 + 1) % grouping.length];
    }
    return t4.reverse().join(thousands);
  };
}
function formatNumerals3(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re4 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier3(specifier) {
  if (!(match2 = re4.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier3({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier3.prototype = FormatSpecifier3.prototype;
function FormatSpecifier3(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier3.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim3(s4) {
  out:
    for (var n3 = s4.length, i = 1, i0 = -1, i1; i < n3; ++i) {
      switch (s4[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s4[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
}
var prefixExponent3;
function formatPrefixAuto3(x5, p3) {
  var d2 = formatDecimalParts3(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1], i = exponent6 - (prefixExponent3 = Math.max(-8, Math.min(8, Math.floor(exponent6 / 3))) * 3) + 1, n3 = coefficient.length;
  return i === n3 ? coefficient : i > n3 ? coefficient + new Array(i - n3 + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts3(x5, Math.max(0, p3 + i - 1))[0];
}
function formatRounded3(x5, p3) {
  var d2 = formatDecimalParts3(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1];
  return exponent6 < 0 ? "0." + new Array(-exponent6).join("0") + coefficient : coefficient.length > exponent6 + 1 ? coefficient.slice(0, exponent6 + 1) + "." + coefficient.slice(exponent6 + 1) : coefficient + new Array(exponent6 - coefficient.length + 2).join("0");
}
var formatTypes3 = {
  "%": function(x5, p3) {
    return (x5 * 100).toFixed(p3);
  },
  b: function(x5) {
    return Math.round(x5).toString(2);
  },
  c: function(x5) {
    return x5 + "";
  },
  d: formatDecimal3,
  e: function(x5, p3) {
    return x5.toExponential(p3);
  },
  f: function(x5, p3) {
    return x5.toFixed(p3);
  },
  g: function(x5, p3) {
    return x5.toPrecision(p3);
  },
  o: function(x5) {
    return Math.round(x5).toString(8);
  },
  p: function(x5, p3) {
    return formatRounded3(x5 * 100, p3);
  },
  r: formatRounded3,
  s: formatPrefixAuto3,
  X: function(x5) {
    return Math.round(x5).toString(16).toUpperCase();
  },
  x: function(x5) {
    return Math.round(x5).toString(16);
  }
};
function identity10(x5) {
  return x5;
}
var map$13 = Array.prototype.map;
var prefixes3 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale4(locale6) {
  var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity10 : formatGroup3(map$13.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity10 : formatNumerals3(map$13.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus2 = locale6.minus === void 0 ? "-" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier3(specifier);
    var fill = specifier.fill, align = specifier.align, sign5 = specifier.sign, symbol2 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma2 = specifier.comma, precision = specifier.precision, trim = specifier.trim, type3 = specifier.type;
    if (type3 === "n")
      comma2 = true, type3 = "g";
    else if (!formatTypes3[type3])
      precision === void 0 && (precision = 12), trim = true, type3 = "g";
    if (zero3 || fill === "0" && align === "=")
      zero3 = true, fill = "0", align = "=";
    var prefix3 = symbol2 === "$" ? currencyPrefix : symbol2 === "#" && /[boxX]/.test(type3) ? "0" + type3.toLowerCase() : "", suffix2 = symbol2 === "$" ? currencySuffix : /[%p]/.test(type3) ? percent : "";
    var formatType = formatTypes3[type3], maybeSuffix = /[defgprs%]/.test(type3);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type3) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format6(value2) {
      var valuePrefix = prefix3, valueSuffix = suffix2, i, n3, c5;
      if (type3 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim)
          value2 = formatTrim3(value2);
        if (valueNegative && +value2 === 0 && sign5 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign5 === "(" ? sign5 : minus2 : sign5 === "-" || sign5 === "(" ? "" : sign5) + valuePrefix;
        valueSuffix = (type3 === "s" ? prefixes3[8 + prefixExponent3 / 3] : "") + valueSuffix + (valueNegative && sign5 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n3 = value2.length;
          while (++i < n3) {
            if (c5 = value2.charCodeAt(i), 48 > c5 || c5 > 57) {
              valueSuffix = (c5 === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma2 && !zero3)
        value2 = group(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding2 = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma2 && zero3)
        value2 = group(padding2 + value2, padding2.length ? width - valueSuffix.length : Infinity), padding2 = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding2;
          break;
        case "=":
          value2 = valuePrefix + padding2 + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding2.slice(0, length = padding2.length >> 1) + valuePrefix + value2 + valueSuffix + padding2.slice(length);
          break;
        default:
          value2 = padding2 + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format6.toString = function() {
      return specifier + "";
    };
    return format6;
  }
  function formatPrefix4(specifier, value2) {
    var f3 = newFormat((specifier = formatSpecifier3(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent4(value2) / 3))) * 3, k6 = Math.pow(10, -e3), prefix3 = prefixes3[8 + e3 / 3];
    return function(value3) {
      return f3(k6 * value3) + prefix3;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix4
  };
}
var locale4;
var format4;
var formatPrefix3;
defaultLocale4({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});
function defaultLocale4(definition) {
  locale4 = formatLocale4(definition);
  format4 = locale4.format;
  formatPrefix3 = locale4.formatPrefix;
  return locale4;
}
function precisionFixed3(step) {
  return Math.max(0, -exponent4(Math.abs(step)));
}
function precisionPrefix3(step, value2) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent4(value2) / 3))) * 3 - exponent4(Math.abs(step)));
}
function precisionRound3(step, max6) {
  step = Math.abs(step), max6 = Math.abs(max6) - step;
  return Math.max(0, exponent4(max6) - exponent4(step)) + 1;
}
function tickFormat3(domain, count2, specifier) {
  var start2 = domain[0], stop = domain[domain.length - 1], step = tickStep3(start2, stop, count2 == null ? 10 : count2), precision;
  specifier = formatSpecifier3(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value2 = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix3(step, value2)))
        specifier.precision = precision;
      return formatPrefix3(specifier, value2);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound3(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed3(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format4(specifier);
}
function linearish3(scale) {
  var domain = scale.domain;
  scale.ticks = function(count2) {
    var d2 = domain();
    return ticks3(d2[0], d2[d2.length - 1], count2 == null ? 10 : count2);
  };
  scale.tickFormat = function(count2, specifier) {
    return tickFormat3(domain(), count2, specifier);
  };
  scale.nice = function(count2) {
    if (count2 == null)
      count2 = 10;
    var d2 = domain(), i0 = 0, i1 = d2.length - 1, start2 = d2[i0], stop = d2[i1], step;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    step = tickIncrement3(start2, stop, count2);
    if (step > 0) {
      start2 = Math.floor(start2 / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = tickIncrement3(start2, stop, count2);
    } else if (step < 0) {
      start2 = Math.ceil(start2 * step) / step;
      stop = Math.floor(stop * step) / step;
      step = tickIncrement3(start2, stop, count2);
    }
    if (step > 0) {
      d2[i0] = Math.floor(start2 / step) * step;
      d2[i1] = Math.ceil(stop / step) * step;
      domain(d2);
    } else if (step < 0) {
      d2[i0] = Math.ceil(start2 * step) / step;
      d2[i1] = Math.floor(stop * step) / step;
      domain(d2);
    }
    return scale;
  };
  return scale;
}
function linear4() {
  var scale = continuous3(deinterpolateLinear2, reinterpolate);
  scale.copy = function() {
    return copy4(scale, linear4());
  };
  return linearish3(scale);
}
function nice3(domain, interval3) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x03 = domain[i0], x14 = domain[i1], t4;
  if (x14 < x03) {
    t4 = i0, i0 = i1, i1 = t4;
    t4 = x03, x03 = x14, x14 = t4;
  }
  domain[i0] = interval3.floor(x03);
  domain[i1] = interval3.ceil(x14);
  return domain;
}
function deinterpolate2(a3, b10) {
  return (b10 = Math.log(b10 / a3)) ? function(x5) {
    return Math.log(x5 / a3) / b10;
  } : constant$2(b10);
}
function reinterpolate3(a3, b10) {
  return a3 < 0 ? function(t4) {
    return -Math.pow(-b10, t4) * Math.pow(-a3, 1 - t4);
  } : function(t4) {
    return Math.pow(b10, t4) * Math.pow(a3, 1 - t4);
  };
}
function pow103(x5) {
  return isFinite(x5) ? +("1e" + x5) : x5 < 0 ? 0 : x5;
}
function powp3(base) {
  return base === 10 ? pow103 : base === Math.E ? Math.exp : function(x5) {
    return Math.pow(base, x5);
  };
}
function logp3(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function(x5) {
    return Math.log(x5) / base;
  });
}
function reflect3(f3) {
  return function(x5) {
    return -f3(-x5);
  };
}
function log5() {
  var scale = continuous3(deinterpolate2, reinterpolate3).domain([1, 10]), domain = scale.domain, base = 10, logs = logp3(10), pows = powp3(10);
  function rescale() {
    logs = logp3(base), pows = powp3(base);
    if (domain()[0] < 0)
      logs = reflect3(logs), pows = reflect3(pows);
    return scale;
  }
  scale.base = function(_2) {
    return arguments.length ? (base = +_2, rescale()) : base;
  };
  scale.domain = function(_2) {
    return arguments.length ? (domain(_2), rescale()) : domain();
  };
  scale.ticks = function(count2) {
    var d2 = domain(), u2 = d2[0], v3 = d2[d2.length - 1], r3;
    if (r3 = v3 < u2)
      i = u2, u2 = v3, v3 = i;
    var i = logs(u2), j2 = logs(v3), p3, k6, t4, n3 = count2 == null ? 10 : +count2, z3 = [];
    if (!(base % 1) && j2 - i < n3) {
      i = Math.round(i) - 1, j2 = Math.round(j2) + 1;
      if (u2 > 0)
        for (; i < j2; ++i) {
          for (k6 = 1, p3 = pows(i); k6 < base; ++k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
      else
        for (; i < j2; ++i) {
          for (k6 = base - 1, p3 = pows(i); k6 >= 1; --k6) {
            t4 = p3 * k6;
            if (t4 < u2)
              continue;
            if (t4 > v3)
              break;
            z3.push(t4);
          }
        }
    } else {
      z3 = ticks3(i, j2, Math.min(j2 - i, n3)).map(pows);
    }
    return r3 ? z3.reverse() : z3;
  };
  scale.tickFormat = function(count2, specifier) {
    if (specifier == null)
      specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function")
      specifier = format4(specifier);
    if (count2 === Infinity)
      return specifier;
    if (count2 == null)
      count2 = 10;
    var k6 = Math.max(1, base * count2 / scale.ticks().length);
    return function(d2) {
      var i = d2 / pows(Math.round(logs(d2)));
      if (i * base < base - 0.5)
        i *= base;
      return i <= k6 ? specifier(d2) : "";
    };
  };
  scale.nice = function() {
    return domain(nice3(domain(), {
      floor: function(x5) {
        return pows(Math.floor(logs(x5)));
      },
      ceil: function(x5) {
        return pows(Math.ceil(logs(x5)));
      }
    }));
  };
  scale.copy = function() {
    return copy4(scale, log5().base(base));
  };
  return scale;
}
function localDate3(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date6.setFullYear(d2.y);
    return date6;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate3(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date6.setUTCFullYear(d2.y);
    return date6;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate3(y7, m3, d2) {
  return {y: y7, m: m3, d: d2, H: 0, M: 0, S: 0, L: 0};
}
function formatLocale$12(locale6) {
  var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
  var periodRe = formatRe3(locale_periods), periodLookup = formatLookup3(locale_periods), weekdayRe = formatRe3(locale_weekdays), weekdayLookup = formatLookup3(locale_weekdays), shortWeekdayRe = formatRe3(locale_shortWeekdays), shortWeekdayLookup = formatLookup3(locale_shortWeekdays), monthRe = formatRe3(locale_months), monthLookup = formatLookup3(locale_months), shortMonthRe = formatRe3(locale_shortMonths), shortMonthLookup = formatLookup3(locale_shortMonths);
  var formats = {
    a: formatShortWeekday,
    A: formatWeekday,
    b: formatShortMonth,
    B: formatMonth,
    c: null,
    d: formatDayOfMonth3,
    e: formatDayOfMonth3,
    f: formatMicroseconds3,
    g: formatYearISO3,
    G: formatFullYearISO3,
    H: formatHour243,
    I: formatHour123,
    j: formatDayOfYear3,
    L: formatMilliseconds3,
    m: formatMonthNumber3,
    M: formatMinutes3,
    p: formatPeriod,
    q: formatQuarter,
    Q: formatUnixTimestamp3,
    s: formatUnixTimestampSeconds3,
    S: formatSeconds3,
    u: formatWeekdayNumberMonday3,
    U: formatWeekNumberSunday3,
    V: formatWeekNumberISO3,
    w: formatWeekdayNumberSunday3,
    W: formatWeekNumberMonday3,
    x: null,
    X: null,
    y: formatYear4,
    Y: formatFullYear3,
    Z: formatZone3,
    "%": formatLiteralPercent3
  };
  var utcFormats = {
    a: formatUTCShortWeekday,
    A: formatUTCWeekday,
    b: formatUTCShortMonth,
    B: formatUTCMonth,
    c: null,
    d: formatUTCDayOfMonth3,
    e: formatUTCDayOfMonth3,
    f: formatUTCMicroseconds3,
    g: formatUTCYearISO3,
    G: formatUTCFullYearISO3,
    H: formatUTCHour243,
    I: formatUTCHour123,
    j: formatUTCDayOfYear3,
    L: formatUTCMilliseconds3,
    m: formatUTCMonthNumber3,
    M: formatUTCMinutes3,
    p: formatUTCPeriod,
    q: formatUTCQuarter,
    Q: formatUnixTimestamp3,
    s: formatUnixTimestampSeconds3,
    S: formatUTCSeconds3,
    u: formatUTCWeekdayNumberMonday3,
    U: formatUTCWeekNumberSunday3,
    V: formatUTCWeekNumberISO3,
    w: formatUTCWeekdayNumberSunday3,
    W: formatUTCWeekNumberMonday3,
    x: null,
    X: null,
    y: formatUTCYear3,
    Y: formatUTCFullYear3,
    Z: formatUTCZone3,
    "%": formatLiteralPercent3
  };
  var parses = {
    a: parseShortWeekday,
    A: parseWeekday,
    b: parseShortMonth,
    B: parseMonth,
    c: parseLocaleDateTime,
    d: parseDayOfMonth3,
    e: parseDayOfMonth3,
    f: parseMicroseconds3,
    g: parseYear3,
    G: parseFullYear3,
    H: parseHour243,
    I: parseHour243,
    j: parseDayOfYear3,
    L: parseMilliseconds3,
    m: parseMonthNumber3,
    M: parseMinutes3,
    p: parsePeriod,
    q: parseQuarter3,
    Q: parseUnixTimestamp3,
    s: parseUnixTimestampSeconds3,
    S: parseSeconds3,
    u: parseWeekdayNumberMonday3,
    U: parseWeekNumberSunday3,
    V: parseWeekNumberISO3,
    w: parseWeekdayNumberSunday3,
    W: parseWeekNumberMonday3,
    x: parseLocaleDate,
    X: parseLocaleTime,
    y: parseYear3,
    Y: parseFullYear3,
    Z: parseZone3,
    "%": parseLiteralPercent3
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date6) {
      var string2 = [], i = -1, j2 = 0, n3 = specifier.length, c5, pad6, format6;
      if (!(date6 instanceof Date))
        date6 = new Date(+date6);
      while (++i < n3) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j2, i));
          if ((pad6 = pads3[c5 = specifier.charAt(++i)]) != null)
            c5 = specifier.charAt(++i);
          else
            pad6 = c5 === "e" ? " " : "0";
          if (format6 = formats2[c5])
            c5 = format6(date6, pad6);
          string2.push(c5);
          j2 = i + 1;
        }
      }
      string2.push(specifier.slice(j2, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z4) {
    return function(string2) {
      var d2 = newDate3(1900, void 0, 1), i = parseSpecifier(d2, specifier, string2 += "", 0), week, day$1;
      if (i != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z4 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate3(newDate3(d2.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate3(newDate3(d2.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
          week = day.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day$1 = "Z" in d2 ? utcDate3(newDate3(d2.y, 0, 1)).getUTCDay() : localDate3(newDate3(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day$1 + 5) % 7 : d2.w + d2.U * 7 - (day$1 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate3(d2);
      }
      return localDate3(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j2) {
    var i = 0, n3 = specifier.length, m3 = string2.length, c5, parse2;
    while (i < n3) {
      if (j2 >= m3)
        return -1;
      c5 = specifier.charCodeAt(i++);
      if (c5 === 37) {
        c5 = specifier.charAt(i++);
        parse2 = parses[c5 in pads3 ? specifier.charAt(i++) : c5];
        if (!parse2 || (j2 = parse2(d2, string2, j2)) < 0)
          return -1;
      } else if (c5 != string2.charCodeAt(j2++)) {
        return -1;
      }
    }
    return j2;
  }
  function parsePeriod(d2, string2, i) {
    var n3 = periodRe.exec(string2.slice(i));
    return n3 ? (d2.p = periodLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i) {
    var n3 = shortWeekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = shortWeekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseWeekday(d2, string2, i) {
    var n3 = weekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = weekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i) {
    var n3 = shortMonthRe.exec(string2.slice(i));
    return n3 ? (d2.m = shortMonthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseMonth(d2, string2, i) {
    var n3 = monthRe.exec(string2.slice(i));
    return n3 ? (d2.m = monthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i) {
    return parseSpecifier(d2, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d2, string2, i) {
    return parseSpecifier(d2, locale_date, string2, i);
  }
  function parseLocaleTime(d2, string2, i) {
    return parseSpecifier(d2, locale_time, string2, i);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f3 = newFormat(specifier += "", formats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    parse: function(specifier) {
      var p3 = newParse(specifier += "", false);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    },
    utcFormat: function(specifier) {
      var f3 = newFormat(specifier += "", utcFormats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    utcParse: function(specifier) {
      var p3 = newParse(specifier += "", true);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    }
  };
}
var pads3 = {"-": "", _: " ", "0": "0"};
var numberRe3 = /^\s*\d+/;
var percentRe3 = /^%/;
var requoteRe3 = /[\\^$*+?|[\]().{}]/g;
function pad4(value2, fill, width) {
  var sign5 = value2 < 0 ? "-" : "", string2 = (sign5 ? -value2 : value2) + "", length = string2.length;
  return sign5 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote3(s4) {
  return s4.replace(requoteRe3, "\\$&");
}
function formatRe3(names) {
  return new RegExp("^(?:" + names.map(requote3).join("|") + ")", "i");
}
function formatLookup3(names) {
  var map7 = {}, i = -1, n3 = names.length;
  while (++i < n3)
    map7[names[i].toLowerCase()] = i;
  return map7;
}
function parseWeekdayNumberSunday3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 1));
  return n3 ? (d2.w = +n3[0], i + n3[0].length) : -1;
}
function parseWeekdayNumberMonday3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 1));
  return n3 ? (d2.u = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberSunday3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.U = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberISO3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.V = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberMonday3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.W = +n3[0], i + n3[0].length) : -1;
}
function parseFullYear3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 4));
  return n3 ? (d2.y = +n3[0], i + n3[0].length) : -1;
}
function parseYear3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.y = +n3[0] + (+n3[0] > 68 ? 1900 : 2e3), i + n3[0].length) : -1;
}
function parseZone3(d2, string2, i) {
  var n3 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n3 ? (d2.Z = n3[1] ? 0 : -(n3[2] + (n3[3] || "00")), i + n3[0].length) : -1;
}
function parseQuarter3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 1));
  return n3 ? (d2.q = n3[0] * 3 - 3, i + n3[0].length) : -1;
}
function parseMonthNumber3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.m = n3[0] - 1, i + n3[0].length) : -1;
}
function parseDayOfMonth3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseDayOfYear3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 3));
  return n3 ? (d2.m = 0, d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseHour243(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.H = +n3[0], i + n3[0].length) : -1;
}
function parseMinutes3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.M = +n3[0], i + n3[0].length) : -1;
}
function parseSeconds3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 2));
  return n3 ? (d2.S = +n3[0], i + n3[0].length) : -1;
}
function parseMilliseconds3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 3));
  return n3 ? (d2.L = +n3[0], i + n3[0].length) : -1;
}
function parseMicroseconds3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i, i + 6));
  return n3 ? (d2.L = Math.floor(n3[0] / 1e3), i + n3[0].length) : -1;
}
function parseLiteralPercent3(d2, string2, i) {
  var n3 = percentRe3.exec(string2.slice(i, i + 1));
  return n3 ? i + n3[0].length : -1;
}
function parseUnixTimestamp3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i));
  return n3 ? (d2.Q = +n3[0], i + n3[0].length) : -1;
}
function parseUnixTimestampSeconds3(d2, string2, i) {
  var n3 = numberRe3.exec(string2.slice(i));
  return n3 ? (d2.s = +n3[0], i + n3[0].length) : -1;
}
function formatDayOfMonth3(d2, p3) {
  return pad4(d2.getDate(), p3, 2);
}
function formatHour243(d2, p3) {
  return pad4(d2.getHours(), p3, 2);
}
function formatHour123(d2, p3) {
  return pad4(d2.getHours() % 12 || 12, p3, 2);
}
function formatDayOfYear3(d2, p3) {
  return pad4(1 + day.count(year(d2), d2), p3, 3);
}
function formatMilliseconds3(d2, p3) {
  return pad4(d2.getMilliseconds(), p3, 3);
}
function formatMicroseconds3(d2, p3) {
  return formatMilliseconds3(d2, p3) + "000";
}
function formatMonthNumber3(d2, p3) {
  return pad4(d2.getMonth() + 1, p3, 2);
}
function formatMinutes3(d2, p3) {
  return pad4(d2.getMinutes(), p3, 2);
}
function formatSeconds3(d2, p3) {
  return pad4(d2.getSeconds(), p3, 2);
}
function formatWeekdayNumberMonday3(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday3(d2, p3) {
  return pad4(sunday.count(year(d2) - 1, d2), p3, 2);
}
function dISO3(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO3(d2, p3) {
  d2 = dISO3(d2);
  return pad4(thursday.count(year(d2), d2) + (year(d2).getDay() === 4), p3, 2);
}
function formatWeekdayNumberSunday3(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday3(d2, p3) {
  return pad4(monday.count(year(d2) - 1, d2), p3, 2);
}
function formatYear4(d2, p3) {
  return pad4(d2.getFullYear() % 100, p3, 2);
}
function formatYearISO3(d2, p3) {
  d2 = dISO3(d2);
  return pad4(d2.getFullYear() % 100, p3, 2);
}
function formatFullYear3(d2, p3) {
  return pad4(d2.getFullYear() % 1e4, p3, 4);
}
function formatFullYearISO3(d2, p3) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad4(d2.getFullYear() % 1e4, p3, 4);
}
function formatZone3(d2) {
  var z3 = d2.getTimezoneOffset();
  return (z3 > 0 ? "-" : (z3 *= -1, "+")) + pad4(z3 / 60 | 0, "0", 2) + pad4(z3 % 60, "0", 2);
}
function formatUTCDayOfMonth3(d2, p3) {
  return pad4(d2.getUTCDate(), p3, 2);
}
function formatUTCHour243(d2, p3) {
  return pad4(d2.getUTCHours(), p3, 2);
}
function formatUTCHour123(d2, p3) {
  return pad4(d2.getUTCHours() % 12 || 12, p3, 2);
}
function formatUTCDayOfYear3(d2, p3) {
  return pad4(1 + utcDay.count(utcYear(d2), d2), p3, 3);
}
function formatUTCMilliseconds3(d2, p3) {
  return pad4(d2.getUTCMilliseconds(), p3, 3);
}
function formatUTCMicroseconds3(d2, p3) {
  return formatUTCMilliseconds3(d2, p3) + "000";
}
function formatUTCMonthNumber3(d2, p3) {
  return pad4(d2.getUTCMonth() + 1, p3, 2);
}
function formatUTCMinutes3(d2, p3) {
  return pad4(d2.getUTCMinutes(), p3, 2);
}
function formatUTCSeconds3(d2, p3) {
  return pad4(d2.getUTCSeconds(), p3, 2);
}
function formatUTCWeekdayNumberMonday3(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday3(d2, p3) {
  return pad4(utcSunday.count(utcYear(d2) - 1, d2), p3, 2);
}
function UTCdISO3(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO3(d2, p3) {
  d2 = UTCdISO3(d2);
  return pad4(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p3, 2);
}
function formatUTCWeekdayNumberSunday3(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday3(d2, p3) {
  return pad4(utcMonday.count(utcYear(d2) - 1, d2), p3, 2);
}
function formatUTCYear3(d2, p3) {
  return pad4(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCYearISO3(d2, p3) {
  d2 = UTCdISO3(d2);
  return pad4(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCFullYear3(d2, p3) {
  return pad4(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCFullYearISO3(d2, p3) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad4(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCZone3() {
  return "+0000";
}
function formatLiteralPercent3() {
  return "%";
}
function formatUnixTimestamp3(d2) {
  return +d2;
}
function formatUnixTimestampSeconds3(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale$12;
var timeFormat3;
var utcFormat3;
defaultLocale$12({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale$12(definition) {
  locale$12 = formatLocale$12(definition);
  timeFormat3 = locale$12.format;
  locale$12.parse;
  utcFormat3 = locale$12.utcFormat;
  locale$12.utcParse;
  return locale$12;
}
var durationSecond5 = 1e3;
var durationMinute5 = durationSecond5 * 60;
var durationHour5 = durationMinute5 * 60;
var durationDay5 = durationHour5 * 24;
var durationWeek5 = durationDay5 * 7;
var durationMonth3 = durationDay5 * 30;
var durationYear3 = durationDay5 * 365;
function date5(t4) {
  return new Date(t4);
}
function number$14(t4) {
  return t4 instanceof Date ? +t4 : +new Date(+t4);
}
function calendar3(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6) {
  var scale = continuous3(deinterpolateLinear2, reinterpolate), invert2 = scale.invert, domain = scale.domain;
  var formatMillisecond = format6(".%L"), formatSecond = format6(":%S"), formatMinute = format6("%I:%M"), formatHour = format6("%I %p"), formatDay = format6("%a %d"), formatWeek = format6("%b %d"), formatMonth = format6("%B"), formatYear6 = format6("%Y");
  var tickIntervals = [
    [second3, 1, durationSecond5],
    [second3, 5, 5 * durationSecond5],
    [second3, 15, 15 * durationSecond5],
    [second3, 30, 30 * durationSecond5],
    [minute3, 1, durationMinute5],
    [minute3, 5, 5 * durationMinute5],
    [minute3, 15, 15 * durationMinute5],
    [minute3, 30, 30 * durationMinute5],
    [hour3, 1, durationHour5],
    [hour3, 3, 3 * durationHour5],
    [hour3, 6, 6 * durationHour5],
    [hour3, 12, 12 * durationHour5],
    [day3, 1, durationDay5],
    [day3, 2, 2 * durationDay5],
    [week, 1, durationWeek5],
    [month3, 1, durationMonth3],
    [month3, 3, 3 * durationMonth3],
    [year3, 1, durationYear3]
  ];
  function tickFormat4(date6) {
    return (second3(date6) < date6 ? formatMillisecond : minute3(date6) < date6 ? formatSecond : hour3(date6) < date6 ? formatMinute : day3(date6) < date6 ? formatHour : month3(date6) < date6 ? week(date6) < date6 ? formatDay : formatWeek : year3(date6) < date6 ? formatMonth : formatYear6)(date6);
  }
  function tickInterval(interval3, start2, stop, step) {
    if (interval3 == null)
      interval3 = 10;
    if (typeof interval3 === "number") {
      var target = Math.abs(stop - start2) / interval3, i = bisector3(function(i2) {
        return i2[2];
      }).right(tickIntervals, target);
      if (i === tickIntervals.length) {
        step = tickStep3(start2 / durationYear3, stop / durationYear3, interval3);
        interval3 = year3;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval3 = i[0];
      } else {
        step = Math.max(tickStep3(start2, stop, interval3), 1);
        interval3 = millisecond3;
      }
    }
    return step == null ? interval3 : interval3.every(step);
  }
  scale.invert = function(y7) {
    return new Date(invert2(y7));
  };
  scale.domain = function(_2) {
    return arguments.length ? domain(map5.call(_2, number$14)) : domain().map(date5);
  };
  scale.ticks = function(interval3, step) {
    var d2 = domain(), t04 = d2[0], t14 = d2[d2.length - 1], r3 = t14 < t04, t4;
    if (r3)
      t4 = t04, t04 = t14, t14 = t4;
    t4 = tickInterval(interval3, t04, t14, step);
    t4 = t4 ? t4.range(t04, t14 + 1) : [];
    return r3 ? t4.reverse() : t4;
  };
  scale.tickFormat = function(count2, specifier) {
    return specifier == null ? tickFormat4 : format6(specifier);
  };
  scale.nice = function(interval3, step) {
    var d2 = domain();
    return (interval3 = tickInterval(interval3, d2[0], d2[d2.length - 1], step)) ? domain(nice3(d2, interval3)) : scale;
  };
  scale.copy = function() {
    return copy4(scale, calendar3(year3, month3, week, day3, hour3, minute3, second3, millisecond3, format6));
  };
  return scale;
}
function scaleTime() {
  return calendar3(year, month, sunday, day, hour, minute, second, millisecond, timeFormat3).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]);
}
function scaleUtc() {
  return calendar3(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, utcFormat3).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]);
}
function colors3(s4) {
  return s4.match(/.{6}/g).map(function(x5) {
    return "#" + x5;
  });
}
colors3("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
colors3("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
colors3("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
colors3("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
cubehelixLong(cubehelix(300, 0.5, 0), cubehelix(-240, 0.5, 1));
cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
cubehelix();
function ramp3(range7) {
  var n3 = range7.length;
  return function(t4) {
    return range7[Math.max(0, Math.min(n3 - 1, Math.floor(t4 * n3)))];
  };
}
ramp3(colors3("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
ramp3(colors3("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
ramp3(colors3("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
ramp3(colors3("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
var _slicedToArray3 = function() {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e2 = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e2 = err;
    } finally {
      try {
        if (!_n && _i["return"])
          _i["return"]();
      } finally {
        if (_d)
          throw _e2;
      }
    }
    return _arr;
  }
  return function(arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
var _React$version$split = react.version.split(".");
var _React$version$split2 = _slicedToArray3(_React$version$split, 2);
var major = _React$version$split2[0];
var minor = _React$version$split2[1];
var versionHigherThanThirteen = Number(minor) > 13 || Number(major) > 13;
var isReactDOMSupported = function isReactDOMSupported2() {
  return versionHigherThanThirteen;
};
var getDOMNode = function getDOMNode2(ref) {
  if (!isReactDOMSupported()) {
    return ref && ref.getDOMNode();
  }
  return ref;
};
var USED_MESSAGES = {};
var HIDDEN_PROCESSES = {
  test: true,
  production: true
};
function warning(message) {
  var onlyShowMessageOnce = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  if (global.process && HIDDEN_PROCESSES["production"]) {
    return;
  }
  if (!onlyShowMessageOnce || !USED_MESSAGES[message]) {
    console.warn(message);
    USED_MESSAGES[message] = true;
  }
}
function getUniquePropertyValues(arr, accessor) {
  var setOfValues = new Set(arr.map(accessor));
  return Array.from(setOfValues);
}
function addValueToArray(arr, value2) {
  var result = [].concat(arr);
  if (result[0] > value2) {
    result[0] = value2;
  }
  if (result[result.length - 1] < value2) {
    result[result.length - 1] = value2;
  }
  return result;
}
function transformValueToString(value2) {
  return Object.prototype.toString.call(value2) === "[object Date]" ? value2.toDateString() : value2;
}
var _extends$17 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _slicedToArray$12 = function() {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e2 = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e2 = err;
    } finally {
      try {
        if (!_n && _i["return"])
          _i["return"]();
      } finally {
        if (_d)
          throw _e2;
      }
    }
    return _arr;
  }
  return function(arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
var _SCALE_FUNCTIONS;
function _toConsumableArray3(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
function _defineProperty5(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var LINEAR_SCALE_TYPE = "linear";
var ORDINAL_SCALE_TYPE = "ordinal";
var CATEGORY_SCALE_TYPE = "category";
var LITERAL_SCALE_TYPE = "literal";
var LOG_SCALE_TYPE = "log";
var TIME_SCALE_TYPE = "time";
var TIME_UTC_SCALE_TYPE = "time-utc";
var SCALE_FUNCTIONS = (_SCALE_FUNCTIONS = {}, _defineProperty5(_SCALE_FUNCTIONS, LINEAR_SCALE_TYPE, linear4), _defineProperty5(_SCALE_FUNCTIONS, ORDINAL_SCALE_TYPE, point7), _defineProperty5(_SCALE_FUNCTIONS, CATEGORY_SCALE_TYPE, ordinal3), _defineProperty5(_SCALE_FUNCTIONS, LITERAL_SCALE_TYPE, literalScale), _defineProperty5(_SCALE_FUNCTIONS, LOG_SCALE_TYPE, log5), _defineProperty5(_SCALE_FUNCTIONS, TIME_SCALE_TYPE, scaleTime), _defineProperty5(_SCALE_FUNCTIONS, TIME_UTC_SCALE_TYPE, scaleUtc), _SCALE_FUNCTIONS);
var XYPLOT_ATTR = ["color", "fill", "opacity", "stroke"];
function toTitleCase(str) {
  return "" + str[0].toUpperCase() + str.slice(1);
}
function _getSmallestDistanceIndex(values2, scaleObject) {
  var scaleFn = getScaleFnFromScaleObject(scaleObject);
  var result = 0;
  if (scaleFn) {
    var nextValue = void 0;
    var currentValue = scaleFn(values2[0]);
    var distance = Infinity;
    var nextDistance = void 0;
    for (var i = 1; i < values2.length; i++) {
      nextValue = scaleFn(values2[i]);
      nextDistance = Math.abs(nextValue - currentValue);
      if (nextDistance < distance) {
        distance = nextDistance;
        result = i;
      }
      currentValue = nextValue;
    }
  }
  return result;
}
function addInvertFunctionToOrdinalScaleObject(scale) {
  if (scale.invert) {
    return;
  }
  scale.invert = function invert2(value2) {
    var _scale$range = scale.range(), _scale$range2 = _slicedToArray$12(_scale$range, 2), lower2 = _scale$range2[0], upper = _scale$range2[1];
    var start2 = Math.min(lower2, upper);
    var stop = Math.max(lower2, upper);
    if (value2 < start2 + scale.padding() * scale.step()) {
      return scale.domain()[0];
    }
    if (value2 > stop - scale.padding() * scale.step()) {
      return scale.domain()[scale.domain().length - 1];
    }
    var index4 = Math.floor((value2 - start2 - scale.padding() * scale.step()) / scale.step());
    return scale.domain()[index4];
  };
}
function getScaleFnFromScaleObject(scaleObject) {
  if (!scaleObject) {
    return null;
  }
  var type3 = scaleObject.type, domain = scaleObject.domain, range7 = scaleObject.range;
  var modDomain = domain[0] === domain[1] ? domain[0] === 0 ? [-1, 0] : [-domain[0], domain[0]] : domain;
  if (type3 === LITERAL_SCALE_TYPE) {
    return literalScale(range7[0]);
  }
  var scale = SCALE_FUNCTIONS[type3]().domain(modDomain).range(range7);
  if (type3 === ORDINAL_SCALE_TYPE) {
    scale.padding(0.5);
    addInvertFunctionToOrdinalScaleObject(scale);
  }
  return scale;
}
function getDomainByAccessor(allData, accessor, accessor0, type3) {
  var domain = void 0;
  var values2 = allData.reduce(function(data3, d2) {
    var value2 = accessor(d2);
    var value0 = accessor0(d2);
    if (_isDefined(value2)) {
      data3.push(value2);
    }
    if (_isDefined(value0)) {
      data3.push(value0);
    }
    return data3;
  }, []);
  if (!values2.length) {
    return [];
  }
  if (type3 !== ORDINAL_SCALE_TYPE && type3 !== CATEGORY_SCALE_TYPE) {
    domain = extent2(values2);
  } else {
    domain = set(values2).values();
  }
  return domain;
}
function _createScaleObjectForValue(attr, value2, type3, accessor, accessor0) {
  if (type3 === LITERAL_SCALE_TYPE) {
    return {
      type: LITERAL_SCALE_TYPE,
      domain: [],
      range: [value2],
      distance: 0,
      attr,
      baseValue: void 0,
      isValue: true,
      accessor,
      accessor0
    };
  }
  if (typeof value2 === "undefined") {
    return null;
  }
  return {
    type: CATEGORY_SCALE_TYPE,
    range: [value2],
    domain: [],
    distance: 0,
    attr,
    baseValue: void 0,
    isValue: true,
    accessor,
    accessor0
  };
}
function _createScaleObjectForFunction(_ref) {
  var domain = _ref.domain, range7 = _ref.range, type3 = _ref.type, distance = _ref.distance, attr = _ref.attr, baseValue = _ref.baseValue, accessor = _ref.accessor, accessor0 = _ref.accessor0;
  return {
    domain,
    range: range7,
    type: type3,
    distance,
    attr,
    baseValue,
    isValue: false,
    accessor,
    accessor0
  };
}
function _collectScaleObjectFromProps(props, attr) {
  var value2 = props[attr], fallbackValue = props["_" + attr + "Value"], range7 = props[attr + "Range"], _props$ = props[attr + "Distance"], distance = _props$ === void 0 ? 0 : _props$, baseValue = props[attr + "BaseValue"], _props$2 = props[attr + "Type"], type3 = _props$2 === void 0 ? LINEAR_SCALE_TYPE : _props$2, noFallBack = props[attr + "NoFallBack"], _props$3 = props["get" + toTitleCase(attr)], accessor = _props$3 === void 0 ? function(d2) {
    return d2[attr];
  } : _props$3, _props$4 = props["get" + toTitleCase(attr) + "0"], accessor0 = _props$4 === void 0 ? function(d2) {
    return d2[attr + "0"];
  } : _props$4;
  var domain = props[attr + "Domain"];
  if (!noFallBack && typeof value2 !== "undefined") {
    return _createScaleObjectForValue(attr, value2, props[attr + "Type"], accessor, accessor0);
  }
  if (typeof baseValue !== "undefined") {
    domain = addValueToArray(domain, baseValue);
  }
  if (!range7 || !domain || !domain.length) {
    return _createScaleObjectForValue(attr, fallbackValue, props[attr + "Type"], accessor, accessor0);
  }
  return _createScaleObjectForFunction({
    domain,
    range: range7,
    type: type3,
    distance,
    attr,
    baseValue,
    accessor,
    accessor0
  });
}
function _computeLeftDomainAdjustment(values2) {
  if (values2.length > 1) {
    return (values2[1] - values2[0]) / 2;
  }
  if (values2.length === 1) {
    return values2[0] - 0.5;
  }
  return 0;
}
function _computeRightDomainAdjustment(values2) {
  if (values2.length > 1) {
    return (values2[values2.length - 1] - values2[values2.length - 2]) / 2;
  }
  if (values2.length === 1) {
    return values2[0] - 0.5;
  }
  return 0;
}
function _computeScaleDistance(values2, domain, bestDistIndex, scaleFn) {
  if (values2.length > 1) {
    var i = Math.max(bestDistIndex, 1);
    return Math.abs(scaleFn(values2[i]) - scaleFn(values2[i - 1]));
  }
  if (values2.length === 1) {
    return Math.abs(scaleFn(domain[1]) - scaleFn(domain[0]));
  }
  return 0;
}
function _normalizeValues(data3, values2, accessor0, type3) {
  if (type3 === TIME_SCALE_TYPE && values2.length === 1) {
    var attr0 = accessor0(data3[0]);
    return [attr0].concat(_toConsumableArray3(values2));
  }
  return values2;
}
function _getScaleDistanceAndAdjustedDomain(data3, scaleObject) {
  var domain = scaleObject.domain, type3 = scaleObject.type, accessor = scaleObject.accessor, accessor0 = scaleObject.accessor0;
  var uniqueValues = getUniquePropertyValues(data3, accessor);
  var values2 = _normalizeValues(data3, uniqueValues, accessor0, type3);
  var index4 = _getSmallestDistanceIndex(values2, scaleObject);
  var adjustedDomain = [].concat(domain);
  adjustedDomain[0] -= _computeLeftDomainAdjustment(values2);
  adjustedDomain[domain.length - 1] += _computeRightDomainAdjustment(values2);
  if (type3 === LOG_SCALE_TYPE && domain[0] <= 0) {
    adjustedDomain[0] = Math.min(domain[1] / 10, 1);
  }
  var adjustedScaleFn = getScaleFnFromScaleObject(_extends$17({}, scaleObject, {
    domain: adjustedDomain
  }));
  var distance = _computeScaleDistance(values2, adjustedDomain, index4, adjustedScaleFn);
  return {
    domain0: adjustedDomain[0],
    domainN: adjustedDomain[adjustedDomain.length - 1],
    distance
  };
}
function _isScaleAdjustmentPossible(props, scaleObject) {
  var attr = scaleObject.attr;
  var _props$_adjustBy = props._adjustBy, adjustBy = _props$_adjustBy === void 0 ? [] : _props$_adjustBy, _props$_adjustWhat = props._adjustWhat, adjustWhat = _props$_adjustWhat === void 0 ? [] : _props$_adjustWhat;
  return adjustWhat.length && adjustBy.length && adjustBy.indexOf(attr) !== -1;
}
function _adjustContinuousScale(props, scaleObject) {
  var allSeriesData = props._allData, _props$_adjustWhat2 = props._adjustWhat, adjustWhat = _props$_adjustWhat2 === void 0 ? [] : _props$_adjustWhat2;
  var domainLength = scaleObject.domain.length;
  var domain = scaleObject.domain;
  var scaleDomain0 = domain[0];
  var scaleDomainN = domain[domainLength - 1];
  var scaleDistance = scaleObject.distance;
  allSeriesData.forEach(function(data3, index4) {
    if (adjustWhat.indexOf(index4) === -1) {
      return;
    }
    if (data3 && data3.length) {
      var _getScaleDistanceAndA = _getScaleDistanceAndAdjustedDomain(data3, scaleObject), domain0 = _getScaleDistanceAndA.domain0, domainN = _getScaleDistanceAndA.domainN, distance = _getScaleDistanceAndA.distance;
      scaleDomain0 = Math.min(scaleDomain0, domain0);
      scaleDomainN = Math.max(scaleDomainN, domainN);
      scaleDistance = Math.max(scaleDistance, distance);
    }
  });
  scaleObject.domain = [scaleDomain0].concat(_toConsumableArray3(domain.slice(1, -1)), [scaleDomainN]);
  scaleObject.distance = scaleDistance;
  return scaleObject;
}
function _adjustCategoricalScale(scaleObject) {
  var scaleFn = getScaleFnFromScaleObject(scaleObject);
  var domain = scaleObject.domain, range7 = scaleObject.range;
  if (domain.length > 1) {
    scaleObject.distance = Math.abs(scaleFn(domain[1]) - scaleFn(domain[0]));
  } else {
    scaleObject.distance = Math.abs(range7[1] - range7[0]);
  }
  return scaleObject;
}
function getScaleObjectFromProps(props, attr) {
  var scaleObject = _collectScaleObjectFromProps(props, attr);
  if (!scaleObject) {
    return null;
  }
  if (!_isScaleAdjustmentPossible(props, scaleObject)) {
    return scaleObject;
  }
  var type3 = scaleObject.type;
  if (type3 === ORDINAL_SCALE_TYPE || type3 === CATEGORY_SCALE_TYPE) {
    return _adjustCategoricalScale(scaleObject);
  }
  return _adjustContinuousScale(props, scaleObject);
}
function getAttributeScale(props, attr) {
  var scaleObject = getScaleObjectFromProps(props, attr);
  return getScaleFnFromScaleObject(scaleObject);
}
function _getAttrValue(d2, accessor) {
  return accessor(d2.data ? d2.data : d2);
}
function _isDefined(value2) {
  return typeof value2 !== "undefined";
}
function _padDomain(domain, padding2) {
  if (!domain) {
    return domain;
  }
  if (isNaN(parseFloat(domain[0])) || isNaN(parseFloat(domain[1]))) {
    return domain;
  }
  var _domain = _slicedToArray$12(domain, 2), min5 = _domain[0], max6 = _domain[1];
  var domainPadding = (max6 - min5) * (padding2 * 0.01);
  return [min5 - domainPadding, max6 + domainPadding];
}
function getAttributeFunctor(props, attr) {
  var scaleObject = getScaleObjectFromProps(props, attr);
  if (scaleObject) {
    var scaleFn = getScaleFnFromScaleObject(scaleObject);
    return function(d2) {
      return scaleFn(_getAttrValue(d2, scaleObject.accessor));
    };
  }
  return null;
}
function getAttr0Functor(props, attr) {
  var scaleObject = getScaleObjectFromProps(props, attr);
  if (scaleObject) {
    var domain = scaleObject.domain;
    var _scaleObject$baseValu = scaleObject.baseValue, baseValue = _scaleObject$baseValu === void 0 ? domain[0] : _scaleObject$baseValu;
    var scaleFn = getScaleFnFromScaleObject(scaleObject);
    return function(d2) {
      var value2 = _getAttrValue(d2, scaleObject.accessor0);
      return scaleFn(_isDefined(value2) ? value2 : baseValue);
    };
  }
  return null;
}
function getAttributeValue(props, attr) {
  var scaleObject = getScaleObjectFromProps(props, attr);
  if (scaleObject) {
    if (!scaleObject.isValue && props["_" + attr + "Value"] === void 0) {
      warning("[React-vis] Cannot use data defined " + attr + " for this series type. Using fallback value instead.");
    }
    return props["_" + attr + "Value"] || scaleObject.range[0];
  }
  return null;
}
function getScalePropTypesByAttribute(attr) {
  var _ref2;
  return _ref2 = {}, _defineProperty5(_ref2, "_" + attr + "Value", propTypes.any), _defineProperty5(_ref2, attr + "Domain", propTypes.array), _defineProperty5(_ref2, "get" + toTitleCase(attr), propTypes.func), _defineProperty5(_ref2, "get" + toTitleCase(attr) + "0", propTypes.func), _defineProperty5(_ref2, attr + "Range", propTypes.array), _defineProperty5(_ref2, attr + "Type", propTypes.oneOf(Object.keys(SCALE_FUNCTIONS))), _defineProperty5(_ref2, attr + "Distance", propTypes.number), _defineProperty5(_ref2, attr + "BaseValue", propTypes.any), _ref2;
}
function extractScalePropsFromProps(props, attributes) {
  var result = {};
  Object.keys(props).forEach(function(key) {
    var attr = attributes.find(function(a3) {
      var isPlainSet = key.indexOf(a3) === 0;
      var isUnderscoreSet = key.indexOf("_" + a3) === 0;
      var usesGet = key.indexOf("get" + toTitleCase(a3)) === 0;
      return isPlainSet || isUnderscoreSet || usesGet;
    });
    if (!attr) {
      return;
    }
    result[key] = props[key];
  });
  return result;
}
function getMissingScaleProps(props, data3, attributes) {
  var result = {};
  attributes.forEach(function(attr) {
    if (!props["get" + toTitleCase(attr)]) {
      result["get" + toTitleCase(attr)] = function(d2) {
        return d2[attr];
      };
    }
    if (!props["get" + toTitleCase(attr) + "0"]) {
      result["get" + toTitleCase(attr) + "0"] = function(d2) {
        return d2[attr + "0"];
      };
    }
    if (!props[attr + "Domain"]) {
      result[attr + "Domain"] = getDomainByAccessor(data3, props["get" + toTitleCase(attr)] || result["get" + toTitleCase(attr)], props["get" + toTitleCase(attr) + "0"] || result["get" + toTitleCase(attr) + "0"], props[attr + "Type"]);
      if (props[attr + "Padding"]) {
        result[attr + "Domain"] = _padDomain(result[attr + "Domain"], props[attr + "Padding"]);
      }
    }
  });
  return result;
}
function literalScale(defaultValue) {
  function scale(d2) {
    if (d2 === void 0) {
      return defaultValue;
    }
    return d2;
  }
  function response() {
    return scale;
  }
  scale.domain = response;
  scale.range = response;
  scale.unknown = response;
  scale.copy = response;
  return scale;
}
function getFontColorFromBackground(background3) {
  if (background3) {
    return hsl(background3).l > 0.57 ? "#222" : "#fff";
  }
  return null;
}
function getXYPlotValues(props, children2) {
  var XYPlotScales = XYPLOT_ATTR.reduce(function(prev, attr) {
    var domain = props[attr + "Domain"], range7 = props[attr + "Range"], type3 = props[attr + "Type"];
    if (domain && range7 && type3) {
      return _extends$17({}, prev, _defineProperty5({}, attr, SCALE_FUNCTIONS[type3]().domain(domain).range(range7)));
    }
    return prev;
  }, {});
  return children2.map(function(child) {
    return XYPLOT_ATTR.reduce(function(prev, attr) {
      if (child.props && child.props[attr] !== void 0) {
        var scaleInput = child.props[attr];
        var scale = XYPlotScales[attr];
        var fallbackValue = scale ? scale(scaleInput) : scaleInput;
        return _extends$17({}, prev, _defineProperty5({}, "_" + attr + "Value", fallbackValue));
      }
      return prev;
    }, {});
  });
}
var OPTIONAL_SCALE_PROPS = ["Padding"];
var OPTIONAL_SCALE_PROPS_REGS = OPTIONAL_SCALE_PROPS.map(function(str) {
  return new RegExp(str + "$", "i");
});
function getOptionalScaleProps(props) {
  return Object.keys(props).reduce(function(acc, prop) {
    var propIsNotOptional = OPTIONAL_SCALE_PROPS_REGS.every(function(reg) {
      return !prop.match(reg);
    });
    if (propIsNotOptional) {
      return acc;
    }
    acc[prop] = props[prop];
    return acc;
  }, {});
}
var _createClass$13 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$27 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$13(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$13(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var propTypes$1 = _extends$27({}, getScalePropTypesByAttribute("x"), getScalePropTypesByAttribute("y"), getScalePropTypesByAttribute("size"), getScalePropTypesByAttribute("opacity"), getScalePropTypesByAttribute("color"), {
  width: propTypes.number,
  height: propTypes.number,
  data: propTypes.arrayOf(propTypes.oneOfType([propTypes.object, propTypes.array])),
  onValueMouseOver: propTypes.func,
  onValueMouseOut: propTypes.func,
  onValueClick: propTypes.func,
  onValueRightClick: propTypes.func,
  onSeriesMouseOver: propTypes.func,
  onSeriesMouseOut: propTypes.func,
  onSeriesClick: propTypes.func,
  onSeriesRightClick: propTypes.func,
  onNearestX: propTypes.func,
  onNearestXY: propTypes.func,
  style: propTypes.object,
  animation: AnimationPropType,
  stack: propTypes.bool
});
var defaultProps2 = {
  className: "",
  stack: false,
  style: {}
};
var AbstractSeries = function(_PureComponent) {
  _inherits$13(AbstractSeries2, _PureComponent);
  function AbstractSeries2() {
    var _ref;
    var _temp, _this, _ret;
    _classCallCheck$13(this, AbstractSeries2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn$13(this, (_ref = AbstractSeries2.__proto__ || Object.getPrototypeOf(AbstractSeries2)).call.apply(_ref, [this].concat(args))), _this), _this._seriesClickHandler = function(event) {
      var onSeriesClick = _this.props.onSeriesClick;
      if (onSeriesClick) {
        onSeriesClick({event});
      }
    }, _this._seriesMouseOutHandler = function(event) {
      var onSeriesMouseOut = _this.props.onSeriesMouseOut;
      if (onSeriesMouseOut) {
        onSeriesMouseOut({event});
      }
    }, _this._seriesMouseOverHandler = function(event) {
      var onSeriesMouseOver = _this.props.onSeriesMouseOver;
      if (onSeriesMouseOver) {
        onSeriesMouseOver({event});
      }
    }, _this._seriesRightClickHandler = function(event) {
      var onSeriesRightClick = _this.props.onSeriesRightClick;
      if (onSeriesRightClick) {
        onSeriesRightClick({event});
      }
    }, _this._valueClickHandler = function(d2, event) {
      var _this$props = _this.props, onValueClick = _this$props.onValueClick, onSeriesClick = _this$props.onSeriesClick;
      if (onValueClick) {
        onValueClick(d2, {event});
      }
      if (onSeriesClick) {
        onSeriesClick({event});
      }
    }, _this._valueMouseOutHandler = function(d2, event) {
      var _this$props2 = _this.props, onValueMouseOut = _this$props2.onValueMouseOut, onSeriesMouseOut = _this$props2.onSeriesMouseOut;
      if (onValueMouseOut) {
        onValueMouseOut(d2, {event});
      }
      if (onSeriesMouseOut) {
        onSeriesMouseOut({event});
      }
    }, _this._valueMouseOverHandler = function(d2, event) {
      var _this$props3 = _this.props, onValueMouseOver = _this$props3.onValueMouseOver, onSeriesMouseOver = _this$props3.onSeriesMouseOver;
      if (onValueMouseOver) {
        onValueMouseOver(d2, {event});
      }
      if (onSeriesMouseOver) {
        onSeriesMouseOver({event});
      }
    }, _this._valueRightClickHandler = function(d2, event) {
      var _this$props4 = _this.props, onValueRightClick = _this$props4.onValueRightClick, onSeriesRightClick = _this$props4.onSeriesRightClick;
      if (onValueRightClick) {
        onValueRightClick(d2, {event});
      }
      if (onSeriesRightClick) {
        onSeriesRightClick({event});
      }
    }, _temp), _possibleConstructorReturn$13(_this, _ret);
  }
  _createClass$13(AbstractSeries2, [{
    key: "onParentMouseMove",
    value: function onParentMouseMove(event) {
      var _props = this.props, onNearestX = _props.onNearestX, onNearestXY = _props.onNearestXY, data3 = _props.data;
      if (!onNearestX && !onNearestXY || !data3) {
        return;
      }
      if (onNearestXY) {
        this._handleNearestXY(event);
      } else {
        this._handleNearestX(event);
      }
    }
  }, {
    key: "onParentTouchMove",
    value: function onParentTouchMove(e3) {
      e3.preventDefault();
      this.onParentMouseMove(e3);
    }
  }, {
    key: "onParentTouchStart",
    value: function onParentTouchStart(e3) {
      e3.preventDefault();
    }
  }, {
    key: "_getAttr0Functor",
    value: function _getAttr0Functor(attr) {
      return getAttr0Functor(this.props, attr);
    }
  }, {
    key: "_getAttributeFunctor",
    value: function _getAttributeFunctor(attr) {
      return getAttributeFunctor(this.props, attr);
    }
  }, {
    key: "_getAttributeValue",
    value: function _getAttributeValue(attr) {
      return getAttributeValue(this.props, attr);
    }
  }, {
    key: "_getScaleDistance",
    value: function _getScaleDistance(attr) {
      var scaleObject = getScaleObjectFromProps(this.props, attr);
      return scaleObject ? scaleObject.distance : 0;
    }
  }, {
    key: "_getXYCoordinateInContainer",
    value: function _getXYCoordinateInContainer(event) {
      var _props2 = this.props, _props2$marginTop = _props2.marginTop, marginTop = _props2$marginTop === void 0 ? 0 : _props2$marginTop, _props2$marginLeft = _props2.marginLeft, marginLeft = _props2$marginLeft === void 0 ? 0 : _props2$marginLeft;
      var evt = event.nativeEvent, currentTarget = event.currentTarget;
      var rect = currentTarget.getBoundingClientRect();
      var x5 = evt.clientX;
      var y7 = evt.clientY;
      if (evt.type === "touchmove") {
        x5 = evt.touches[0].pageX;
        y7 = evt.touches[0].pageY;
      }
      return {
        x: x5 - rect.left - currentTarget.clientLeft - marginLeft,
        y: y7 - rect.top - currentTarget.clientTop - marginTop
      };
    }
  }, {
    key: "_handleNearestX",
    value: function _handleNearestX(event) {
      var _props3 = this.props, onNearestX = _props3.onNearestX, data3 = _props3.data;
      var minDistance = Number.POSITIVE_INFINITY;
      var value2 = null;
      var valueIndex = null;
      var coordinate = this._getXYCoordinateInContainer(event);
      var xScaleFn = this._getAttributeFunctor("x");
      data3.forEach(function(item, i) {
        var currentCoordinate = xScaleFn(item);
        var newDistance = Math.abs(coordinate.x - currentCoordinate);
        if (newDistance < minDistance) {
          minDistance = newDistance;
          value2 = item;
          valueIndex = i;
        }
      });
      if (!value2) {
        return;
      }
      onNearestX(value2, {
        innerX: xScaleFn(value2),
        index: valueIndex,
        event: event.nativeEvent
      });
    }
  }, {
    key: "_handleNearestXY",
    value: function _handleNearestXY(event) {
      var _props4 = this.props, onNearestXY = _props4.onNearestXY, data3 = _props4.data;
      var coordinate = this._getXYCoordinateInContainer(event);
      var xScaleFn = this._getAttributeFunctor("x");
      var yScaleFn = this._getAttributeFunctor("y");
      var voronoiInstance = d3Voronoi().x(xScaleFn).y(yScaleFn);
      var foundPoint = voronoiInstance(data3).find(coordinate.x, coordinate.y);
      var value2 = foundPoint.data;
      if (!value2) {
        return;
      }
      onNearestXY(value2, {
        innerX: foundPoint[0],
        innerY: foundPoint[1],
        index: foundPoint.index,
        event: event.nativeEvent
      });
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig() {
      return {};
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return true;
    }
  }]);
  return AbstractSeries2;
}(react.PureComponent);
AbstractSeries.displayName = "AbstractSeries";
AbstractSeries.propTypes = propTypes$1;
AbstractSeries.defaultProps = defaultProps2;
var DISCRETE_COLOR_RANGE = ["#12939A", "#79C7E3", "#1A3177", "#FF9833", "#EF5D28"];
var EXTENDED_DISCRETE_COLOR_RANGE = ["#19CDD7", "#DDB27C", "#88572C", "#FF991F", "#F15C17", "#223F9A", "#DA70BF", "#125C77", "#4DC19C", "#776E57", "#12939A", "#17B8BE", "#F6D18A", "#B7885E", "#FFCB99", "#F89570", "#829AE3", "#E79FD5", "#1E96BE", "#89DAC1", "#B3AD9E"];
var CONTINUOUS_COLOR_RANGE = ["#EF5D28", "#FF9833"];
var SIZE_RANGE = [1, 10];
var OPACITY_TYPE = "literal";
var DEFAULT_OPACITY = 1;
var DEFAULT_SIZE = 5;
var DEFAULT_COLOR = DISCRETE_COLOR_RANGE[0];
var _extends$35 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _defineProperty$13(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function isSeriesChild(child) {
  var prototype = child.type.prototype;
  return prototype instanceof AbstractSeries;
}
function getSeriesChildren(children2) {
  return react.Children.toArray(children2).filter(function(child) {
    return child && isSeriesChild(child);
  });
}
function collectSeriesTypesInfo(children2) {
  var result = {};
  children2.filter(isSeriesChild).forEach(function(child) {
    var displayName = child.type.displayName;
    var cluster = child.props.cluster;
    if (!result[displayName]) {
      result[displayName] = {
        sameTypeTotal: 0,
        sameTypeIndex: 0,
        clusters: new Set()
      };
    }
    result[displayName].clusters.add(cluster);
    result[displayName].sameTypeTotal++;
  });
  return result;
}
function seriesHasAngleRadius() {
  var data3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  if (!data3) {
    return false;
  }
  return data3.some(function(row) {
    return row.radius && row.angle;
  });
}
function prepareData(data3) {
  if (!seriesHasAngleRadius(data3)) {
    return data3;
  }
  return data3.map(function(row) {
    return _extends$35({}, row, {
      x: row.radius * Math.cos(row.angle),
      y: row.radius * Math.sin(row.angle)
    });
  });
}
function getStackedData3(children2, attr) {
  var areSomeSeriesStacked = children2.some(function(series) {
    return series && series.props.stack;
  });
  var latestAttrPositions = {};
  return children2.reduce(function(accumulator, series, seriesIndex) {
    if (!series) {
      accumulator.push(null);
      return accumulator;
    }
    var seriesType = series.type.displayName;
    var _series$props = series.props, data3 = _series$props.data, _series$props$cluster = _series$props.cluster, cluster = _series$props$cluster === void 0 ? "default" : _series$props$cluster, stack3 = _series$props.stack;
    var preppedData = prepareData(data3);
    if (!attr || !preppedData || !preppedData.length || areSomeSeriesStacked && !stack3) {
      accumulator.push(preppedData);
      return accumulator;
    }
    var attr0 = attr + "0";
    var baseAttr = attr === "y" ? "x" : "y";
    accumulator.push(preppedData.map(function(d2, dIndex) {
      var _extends22, _latestAttrPositions$2;
      if (!latestAttrPositions[cluster]) {
        latestAttrPositions[cluster] = {};
      }
      if (!latestAttrPositions[cluster][seriesType]) {
        latestAttrPositions[cluster][seriesType] = {};
      }
      var prevD = latestAttrPositions[cluster][seriesType][d2[baseAttr]];
      if (!prevD) {
        var _latestAttrPositions$;
        latestAttrPositions[cluster][seriesType][d2[baseAttr]] = (_latestAttrPositions$ = {}, _defineProperty$13(_latestAttrPositions$, attr0, d2[attr0]), _defineProperty$13(_latestAttrPositions$, attr, d2[attr]), _latestAttrPositions$);
        return _extends$35({}, d2);
      }
      var nextD = _extends$35({}, d2, (_extends22 = {}, _defineProperty$13(_extends22, attr0, prevD[attr]), _defineProperty$13(_extends22, attr, prevD[attr] + d2[attr] - (d2[attr0] || 0)), _extends22));
      latestAttrPositions[cluster][seriesType][d2[baseAttr]] = (_latestAttrPositions$2 = {}, _defineProperty$13(_latestAttrPositions$2, attr0, nextD[attr0]), _defineProperty$13(_latestAttrPositions$2, attr, nextD[attr]), _latestAttrPositions$2);
      return nextD;
    }));
    return accumulator;
  }, []);
}
function getSeriesPropsFromChildren(children2) {
  var result = [];
  var seriesTypesInfo = collectSeriesTypesInfo(children2);
  var seriesIndex = 0;
  var _opacityValue = DEFAULT_OPACITY;
  children2.forEach(function(child) {
    var props = void 0;
    if (isSeriesChild(child)) {
      var seriesTypeInfo = seriesTypesInfo[child.type.displayName];
      var _colorValue = DISCRETE_COLOR_RANGE[seriesIndex % DISCRETE_COLOR_RANGE.length];
      props = _extends$35({}, seriesTypeInfo, {
        seriesIndex,
        _colorValue,
        _opacityValue
      });
      seriesTypeInfo.sameTypeIndex++;
      seriesIndex++;
      if (child.props.cluster) {
        props.cluster = child.props.cluster;
        props.clusters = Array.from(seriesTypeInfo.clusters);
        props.sameTypeTotal = props.clusters.length;
        props.sameTypeIndex = props.clusters.indexOf(child.props.cluster);
      }
    }
    result.push(props);
  });
  return result;
}
var ANIMATED_SERIES_PROPS = ["xRange", "xDomain", "x", "yRange", "yDomain", "y", "colorRange", "colorDomain", "color", "opacityRange", "opacityDomain", "opacity", "strokeRange", "strokeDomain", "stroke", "fillRange", "fillDomain", "fill", "width", "height", "marginLeft", "marginTop", "marginRight", "marginBottom", "data", "angleDomain", "angleRange", "angle", "radiusDomain", "radiusRange", "radius", "innerRadiusDomain", "innerRadiusRange", "innerRadius"];
function getStackParams(props) {
  var _stackBy = props._stackBy, valuePosAttr = props.valuePosAttr, cluster = props.cluster;
  var _props$sameTypeTotal = props.sameTypeTotal, sameTypeTotal = _props$sameTypeTotal === void 0 ? 1 : _props$sameTypeTotal, _props$sameTypeIndex = props.sameTypeIndex, sameTypeIndex = _props$sameTypeIndex === void 0 ? 0 : _props$sameTypeIndex;
  if (_stackBy === valuePosAttr && !cluster) {
    sameTypeTotal = 1;
    sameTypeIndex = 0;
  }
  return {sameTypeTotal, sameTypeIndex};
}
var _createClass$23 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$45 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$23(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$23(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$23(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName = "rv-xy-plot__series rv-xy-plot__series--arc";
var ATTRIBUTES = ["radius", "angle"];
var defaultProps$1 = _extends$45({}, AbstractSeries.defaultProps, {
  center: {x: 0, y: 0},
  arcClassName: "",
  className: "",
  style: {},
  padAngle: 0
});
function modifyRow(row) {
  var radius = row.radius, angle = row.angle, angle0 = row.angle0;
  var truedAngle = -1 * angle + Math.PI / 2;
  var truedAngle0 = -1 * angle0 + Math.PI / 2;
  return _extends$45({}, row, {
    x: radius * Math.cos(truedAngle),
    y: radius * Math.sin(truedAngle),
    angle: truedAngle,
    angle0: truedAngle0
  });
}
var ArcSeries = function(_AbstractSeries) {
  _inherits$23(ArcSeries2, _AbstractSeries);
  function ArcSeries2(props) {
    _classCallCheck$23(this, ArcSeries2);
    var _this = _possibleConstructorReturn$23(this, (ArcSeries2.__proto__ || Object.getPrototypeOf(ArcSeries2)).call(this, props));
    var scaleProps = _this._getAllScaleProps(props);
    _this.state = {scaleProps};
    return _this;
  }
  _createClass$23(ArcSeries2, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps2(nextProps) {
      this.setState({scaleProps: this._getAllScaleProps(nextProps)});
    }
  }, {
    key: "_getAllScaleProps",
    value: function _getAllScaleProps(props) {
      var defaultScaleProps = this._getDefaultScaleProps(props);
      var userScaleProps = extractScalePropsFromProps(props, ATTRIBUTES);
      var missingScaleProps = getMissingScaleProps(_extends$45({}, defaultScaleProps, userScaleProps), props.data, ATTRIBUTES);
      return _extends$45({}, defaultScaleProps, userScaleProps, missingScaleProps);
    }
  }, {
    key: "_getDefaultScaleProps",
    value: function _getDefaultScaleProps(props) {
      var innerWidth = props.innerWidth, innerHeight = props.innerHeight;
      var radius = Math.min(innerWidth / 2, innerHeight / 2);
      return {
        radiusRange: [0, radius],
        _radiusValue: radius,
        angleType: "literal"
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, arcClassName = _props.arcClassName, animation = _props.animation, className = _props.className, center3 = _props.center, data3 = _props.data, disableSeries = _props.disableSeries, hideSeries = _props.hideSeries, marginLeft = _props.marginLeft, marginTop = _props.marginTop, padAngle = _props.padAngle, style = _props.style;
      if (!data3) {
        return null;
      }
      if (animation) {
        var cloneData = data3.map(function(d2) {
          return _extends$45({}, d2);
        });
        return react.createElement("g", {className: "rv-xy-plot__series--arc__animation-wrapper"}, react.createElement(Animation, _extends$45({}, this.props, {
          animatedProps: ANIMATED_SERIES_PROPS,
          data: cloneData
        }), react.createElement(ArcSeries2, _extends$45({}, this.props, {
          animation: null,
          disableSeries: true,
          data: cloneData
        }))), react.createElement(ArcSeries2, _extends$45({}, this.props, {
          animation: null,
          hideSeries: true,
          style: {stroke: "red"}
        })));
      }
      var scaleProps = this.state.scaleProps;
      var radiusDomain = scaleProps.radiusDomain;
      var radius = getAttributeFunctor(scaleProps, "radius");
      var radius0 = getAttr0Functor(scaleProps, "radius");
      var angle = getAttributeFunctor(scaleProps, "angle");
      var angle0 = getAttr0Functor(scaleProps, "angle");
      var fill = this._getAttributeFunctor("fill") || this._getAttributeFunctor("color");
      var stroke = this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color");
      var opacity = this._getAttributeFunctor("opacity");
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      return react.createElement("g", {
        className: predefinedClassName + " " + className,
        onMouseOver: this._seriesMouseOverHandler,
        onMouseOut: this._seriesMouseOutHandler,
        onClick: this._seriesClickHandler,
        onContextMenu: this._seriesRightClickHandler,
        opacity: hideSeries ? 0 : 1,
        pointerEvents: disableSeries ? "none" : "all",
        transform: "translate(" + (marginLeft + x5(center3)) + "," + (marginTop + y7(center3)) + ")"
      }, data3.map(function(row, i) {
        var noRadius = radiusDomain[1] === radiusDomain[0];
        var arcArg = {
          innerRadius: noRadius ? 0 : radius0(row),
          outerRadius: radius(row),
          startAngle: angle0(row) || 0,
          endAngle: angle(row)
        };
        var arcedData = arcBuilder().padAngle(padAngle);
        var rowStyle = row.style || {};
        var rowClassName = row.className || "";
        return react.createElement("path", {
          style: _extends$45({
            opacity: opacity && opacity(row),
            stroke: stroke && stroke(row),
            fill: fill && fill(row)
          }, style, rowStyle),
          onClick: function onClick(e3) {
            return _this2._valueClickHandler(modifyRow(row), e3);
          },
          onContextMenu: function onContextMenu(e3) {
            return _this2._valueRightClickHandler(modifyRow(row), e3);
          },
          onMouseOver: function onMouseOver(e3) {
            return _this2._valueMouseOverHandler(modifyRow(row), e3);
          },
          onMouseOut: function onMouseOut(e3) {
            return _this2._valueMouseOutHandler(modifyRow(row), e3);
          },
          key: i,
          className: predefinedClassName + "-path " + arcClassName + " " + rowClassName,
          d: arcedData(arcArg)
        });
      }));
    }
  }]);
  return ArcSeries2;
}(AbstractSeries);
ArcSeries.propTypes = _extends$45({}, AbstractSeries.propTypes, getScalePropTypesByAttribute("radius"), getScalePropTypesByAttribute("angle"), {
  center: propTypes.shape({
    x: propTypes.number,
    y: propTypes.number
  }),
  arcClassName: propTypes.string,
  padAngle: propTypes.oneOfType([propTypes.func, propTypes.number])
});
ArcSeries.defaultProps = defaultProps$1;
ArcSeries.displayName = "ArcSeries";
var _extends$54 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$33 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$33(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$33(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$33(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$1 = "rv-xy-plot__series rv-xy-plot__series--line";
var AreaSeries = function(_AbstractSeries) {
  _inherits$33(AreaSeries2, _AbstractSeries);
  function AreaSeries2() {
    _classCallCheck$33(this, AreaSeries2);
    return _possibleConstructorReturn$33(this, (AreaSeries2.__proto__ || Object.getPrototypeOf(AreaSeries2)).apply(this, arguments));
  }
  _createClass$33(AreaSeries2, [{
    key: "_renderArea",
    value: function _renderArea(data3, x5, y03, y7, curve, getNull4) {
      var area3 = d3Area();
      if (curve !== null) {
        if (typeof curve === "string" && d3Shape[curve]) {
          area3 = area3.curve(d3Shape[curve]);
        } else if (typeof curve === "function") {
          area3 = area3.curve(curve);
        }
      }
      area3 = area3.defined(getNull4);
      area3 = area3.x(x5).y0(y03).y1(y7);
      return area3(data3);
    }
  }, {
    key: "render",
    value: function render2() {
      var _props = this.props, animation = _props.animation, className = _props.className, curve = _props.curve, data3 = _props.data, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style;
      if (this.props.nullAccessor) {
        warning("nullAccessor has been renamed to getNull", true);
      }
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$54({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(AreaSeries2, _extends$54({}, this.props, {animation: null})));
      }
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var y03 = this._getAttr0Functor("y");
      var stroke = this._getAttributeValue("stroke") || this._getAttributeValue("color");
      var fill = this._getAttributeValue("fill") || this._getAttributeValue("color");
      var newOpacity = this._getAttributeValue("opacity");
      var opacity = Number.isFinite(newOpacity) ? newOpacity : DEFAULT_OPACITY;
      var getNull4 = this.props.nullAccessor || this.props.getNull;
      var d2 = this._renderArea(data3, x5, y03, y7, curve, getNull4);
      return react.createElement("path", {
        d: d2,
        className: predefinedClassName$1 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")",
        onMouseOver: this._seriesMouseOverHandler,
        onMouseOut: this._seriesMouseOutHandler,
        onClick: this._seriesClickHandler,
        onContextMenu: this._seriesRightClickHandler,
        style: _extends$54({
          opacity,
          stroke,
          fill
        }, style)
      });
    }
  }]);
  return AreaSeries2;
}(AbstractSeries);
AreaSeries.displayName = "AreaSeries";
AreaSeries.propTypes = _extends$54({}, AbstractSeries.propTypes, {
  getNull: propTypes.func
});
AreaSeries.defaultProps = _extends$54({}, AbstractSeries.defaultProps, {
  getNull: function getNull() {
    return true;
  }
});
({
  style: propTypes.shape({
    bottom: propTypes.object,
    left: propTypes.object,
    right: propTypes.object,
    top: propTypes.object
  }),
  marginTop: propTypes.number,
  marginBottom: propTypes.number,
  marginLeft: propTypes.number,
  marginRight: propTypes.number,
  innerWidth: propTypes.number,
  innerHeight: propTypes.number
});
var _createClass$43 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$43(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$43(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$43(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ChartLabel = function(_React$PureComponent) {
  _inherits$43(ChartLabel2, _React$PureComponent);
  function ChartLabel2() {
    _classCallCheck$43(this, ChartLabel2);
    return _possibleConstructorReturn$43(this, (ChartLabel2.__proto__ || Object.getPrototypeOf(ChartLabel2)).apply(this, arguments));
  }
  _createClass$43(ChartLabel2, [{
    key: "render",
    value: function render2() {
      var _props = this.props, innerHeight = _props.innerHeight, innerWidth = _props.innerWidth, marginBottom = _props.marginBottom, marginLeft = _props.marginLeft, marginRight = _props.marginRight, marginTop = _props.marginTop, className = _props.className, includeMargin = _props.includeMargin, style = _props.style, text2 = _props.text, xPercent = _props.xPercent, yPercent = _props.yPercent;
      var width = innerWidth + (includeMargin ? marginLeft + marginRight : 0);
      var height = innerHeight + (includeMargin ? marginTop + marginBottom : 0);
      var xPos = width * xPercent + (includeMargin ? 0 : marginLeft);
      var yPos = height * yPercent + (includeMargin ? marginLeft : 0);
      return react.createElement("g", {
        transform: "translate(" + xPos + ", " + yPos + ")",
        className: "rv-xy-plot__axis__title " + className
      }, react.createElement("text", style, text2));
    }
  }], [{
    key: "requiresSVG",
    get: function get4() {
      return true;
    }
  }]);
  return ChartLabel2;
}(react.PureComponent);
ChartLabel.displayName = "ChartLabel";
ChartLabel.propTypes = {
  className: propTypes.string,
  includeMargin: propTypes.bool,
  style: propTypes.object,
  text: propTypes.string.isRequired,
  xPercent: propTypes.number.isRequired,
  yPercent: propTypes.number.isRequired
};
ChartLabel.defaultProps = {
  className: "",
  includeMargin: true,
  text: "",
  xPercent: 0,
  yPercent: 0,
  style: {}
};
var ORIENTATION = {
  TOP: "top",
  LEFT: "left",
  RIGHT: "right",
  BOTTOM: "bottom",
  VERTICAL: "vertical",
  HORIZONTAL: "horizontal"
};
var DIRECTION = {
  VERTICAL: "vertical",
  HORIZONTAL: "horizontal"
};
function getTicksTotalFromSize(size) {
  if (size < 700) {
    if (size > 300) {
      return 10;
    }
    return 5;
  }
  return 20;
}
function getTickValues(scale, tickTotal, tickValues) {
  return !tickValues ? scale.ticks ? scale.ticks(tickTotal) : scale.domain() : tickValues;
}
function generateFit(axisStart, axisEnd) {
  if (axisStart.x === axisEnd.x) {
    return {
      left: axisStart.y,
      right: axisEnd.y,
      slope: 0,
      offset: axisStart.x
    };
  }
  var slope = (axisStart.y - axisEnd.y) / (axisStart.x - axisEnd.x);
  return {
    left: axisStart.x,
    right: axisEnd.x,
    slope,
    offset: axisStart.y - slope * axisStart.x
  };
}
function generatePoints(_ref) {
  var axisStart = _ref.axisStart, axisEnd = _ref.axisEnd, numberOfTicks = _ref.numberOfTicks, axisDomain = _ref.axisDomain;
  var _generateFit = generateFit(axisStart, axisEnd), left2 = _generateFit.left, right2 = _generateFit.right, slope = _generateFit.slope, offset = _generateFit.offset;
  var pointSlope = (right2 - left2) / numberOfTicks;
  var axisScale = linear4().domain([left2, right2]).range(axisDomain);
  var slopeVertical = axisStart.x === axisEnd.x;
  return {
    slope: slopeVertical ? Infinity : slope,
    points: range6(left2, right2 + pointSlope, pointSlope).map(function(val) {
      if (slopeVertical) {
        return {y: val, x: slope * val + offset, text: axisScale(val)};
      }
      return {x: val, y: slope * val + offset, text: axisScale(val)};
    }).slice(0, numberOfTicks + 1)
  };
}
function getAxisAngle2(axisStart, axisEnd) {
  if (axisStart.x === axisEnd.x) {
    return axisEnd.y > axisStart.y ? Math.PI / 2 : 3 * Math.PI / 2;
  }
  return Math.atan((axisEnd.y - axisStart.y) / (axisEnd.x - axisStart.x));
}
var _extends$63 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$53 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$53(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$53(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$53(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var animatedProps = ["xRange", "yRange", "xDomain", "yDomain", "width", "height", "marginLeft", "marginTop", "marginRight", "marginBottom", "tickTotal"];
var CircularGridLines = function(_PureComponent) {
  _inherits$53(CircularGridLines2, _PureComponent);
  function CircularGridLines2() {
    _classCallCheck$53(this, CircularGridLines2);
    return _possibleConstructorReturn$53(this, (CircularGridLines2.__proto__ || Object.getPrototypeOf(CircularGridLines2)).apply(this, arguments));
  }
  _createClass$53(CircularGridLines2, [{
    key: "_getDefaultProps",
    value: function _getDefaultProps() {
      var _props = this.props, innerWidth = _props.innerWidth, innerHeight = _props.innerHeight, marginTop = _props.marginTop, marginLeft = _props.marginLeft;
      return {
        left: marginLeft,
        top: marginTop,
        width: innerWidth,
        height: innerHeight,
        style: {},
        tickTotal: getTicksTotalFromSize(Math.min(innerWidth, innerHeight))
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var _props2 = this.props, animation = _props2.animation, centerX = _props2.centerX, centerY = _props2.centerY;
      if (animation) {
        return react.createElement(Animation, _extends$63({}, this.props, {animatedProps}), react.createElement(CircularGridLines2, _extends$63({}, this.props, {animation: null})));
      }
      var props = _extends$63({}, this._getDefaultProps(), this.props);
      var tickTotal = props.tickTotal, tickValues = props.tickValues, marginLeft = props.marginLeft, marginTop = props.marginTop, rRange = props.rRange, style = props.style;
      var xScale = getAttributeScale(props, "x");
      var yScale = getAttributeScale(props, "y");
      var values2 = getTickValues(xScale, tickTotal, tickValues);
      return react.createElement("g", {
        transform: "translate(" + (xScale(centerX) + marginLeft) + "," + (yScale(centerY) + marginTop) + ")",
        className: "rv-xy-plot__circular-grid-lines"
      }, values2.reduce(function(res, value2, index4) {
        var radius = xScale(value2);
        if (rRange && (radius < rRange[0] || radius > rRange[1])) {
          return res;
        }
        return res.concat([react.createElement("circle", _extends$63({cx: 0, cy: 0, r: radius}, {
          key: index4,
          className: "rv-xy-plot__circular-grid-lines__line",
          style
        }))]);
      }, []));
    }
  }]);
  return CircularGridLines2;
}(react.PureComponent);
CircularGridLines.displayName = "CircularGridLines";
CircularGridLines.propTypes = {
  centerX: propTypes.number,
  centerY: propTypes.number,
  width: propTypes.number,
  height: propTypes.number,
  top: propTypes.number,
  left: propTypes.number,
  rRange: propTypes.arrayOf(propTypes.number),
  style: propTypes.object,
  tickValues: propTypes.arrayOf(propTypes.number),
  tickTotal: propTypes.number,
  animation: AnimationPropType,
  marginTop: propTypes.number,
  marginBottom: propTypes.number,
  marginLeft: propTypes.number,
  marginRight: propTypes.number,
  innerWidth: propTypes.number,
  innerHeight: propTypes.number
};
CircularGridLines.defaultProps = {
  centerX: 0,
  centerY: 0
};
CircularGridLines.requiresSVG = true;
function ascending$1(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function bisector$1(compare) {
  if (compare.length === 1)
    compare = ascendingComparator$1(compare);
  return {
    left: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      }
      return lo;
    },
    right: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) > 0)
          hi2 = mid;
        else
          lo = mid + 1;
      }
      return lo;
    }
  };
}
function ascendingComparator$1(f3) {
  return function(d2, x5) {
    return ascending$1(f3(d2), x5);
  };
}
bisector$1(ascending$1);
function extent$1(values2, valueof) {
  var n3 = values2.length, i = -1, value2, min5, max6;
  if (valueof == null) {
    while (++i < n3) {
      if ((value2 = values2[i]) != null && value2 >= value2) {
        min5 = max6 = value2;
        while (++i < n3) {
          if ((value2 = values2[i]) != null) {
            if (min5 > value2)
              min5 = value2;
            if (max6 < value2)
              max6 = value2;
          }
        }
      }
    }
  } else {
    while (++i < n3) {
      if ((value2 = valueof(values2[i], i, values2)) != null && value2 >= value2) {
        min5 = max6 = value2;
        while (++i < n3) {
          if ((value2 = valueof(values2[i], i, values2)) != null) {
            if (min5 > value2)
              min5 = value2;
            if (max6 < value2)
              max6 = value2;
          }
        }
      }
    }
  }
  return [min5, max6];
}
function range$12(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n3 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n3 < 3 ? 1 : +step;
  var i = -1, n3 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range7 = new Array(n3);
  while (++i < n3) {
    range7[i] = start2 + i * step;
  }
  return range7;
}
var e10$1 = Math.sqrt(50);
var e5$1 = Math.sqrt(10);
var e2$1 = Math.sqrt(2);
function tickStep$1(start2, stop, count2) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10$1)
    step1 *= 10;
  else if (error >= e5$1)
    step1 *= 5;
  else if (error >= e2$1)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}
function thresholdSturges(values2) {
  return Math.ceil(Math.log(values2.length) / Math.LN2) + 1;
}
function max5(values2, valueof) {
  var n3 = values2.length, i = -1, value2, max6;
  if (valueof == null) {
    while (++i < n3) {
      if ((value2 = values2[i]) != null && value2 >= value2) {
        max6 = value2;
        while (++i < n3) {
          if ((value2 = values2[i]) != null && value2 > max6) {
            max6 = value2;
          }
        }
      }
    }
  } else {
    while (++i < n3) {
      if ((value2 = valueof(values2[i], i, values2)) != null && value2 >= value2) {
        max6 = value2;
        while (++i < n3) {
          if ((value2 = valueof(values2[i], i, values2)) != null && value2 > max6) {
            max6 = value2;
          }
        }
      }
    }
  }
  return max6;
}
var array$12 = Array.prototype;
var slice$22 = array$12.slice;
function ascending$2(a3, b10) {
  return a3 - b10;
}
function area2(ring) {
  var i = 0, n3 = ring.length, area3 = ring[n3 - 1][1] * ring[0][0] - ring[n3 - 1][0] * ring[0][1];
  while (++i < n3)
    area3 += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  return area3;
}
function constant$32(x5) {
  return function() {
    return x5;
  };
}
function contains(ring, hole) {
  var i = -1, n3 = hole.length, c5;
  while (++i < n3)
    if (c5 = ringContains(ring, hole[i]))
      return c5;
  return 0;
}
function ringContains(ring, point8) {
  var x5 = point8[0], y7 = point8[1], contains2 = -1;
  for (var i = 0, n3 = ring.length, j2 = n3 - 1; i < n3; j2 = i++) {
    var pi9 = ring[i], xi2 = pi9[0], yi2 = pi9[1], pj2 = ring[j2], xj2 = pj2[0], yj2 = pj2[1];
    if (segmentContains(pi9, pj2, point8))
      return 0;
    if (yi2 > y7 !== yj2 > y7 && x5 < (xj2 - xi2) * (y7 - yi2) / (yj2 - yi2) + xi2)
      contains2 = -contains2;
  }
  return contains2;
}
function segmentContains(a3, b10, c5) {
  var i;
  return collinear(a3, b10, c5) && within(a3[i = +(a3[0] === b10[0])], c5[i], b10[i]);
}
function collinear(a3, b10, c5) {
  return (b10[0] - a3[0]) * (c5[1] - a3[1]) === (c5[0] - a3[0]) * (b10[1] - a3[1]);
}
function within(p3, q2, r3) {
  return p3 <= q2 && q2 <= r3 || r3 <= q2 && q2 <= p3;
}
function noop7() {
}
var cases = [
  [],
  [[[1, 1.5], [0.5, 1]]],
  [[[1.5, 1], [1, 1.5]]],
  [[[1.5, 1], [0.5, 1]]],
  [[[1, 0.5], [1.5, 1]]],
  [[[1, 1.5], [0.5, 1]], [[1, 0.5], [1.5, 1]]],
  [[[1, 0.5], [1, 1.5]]],
  [[[1, 0.5], [0.5, 1]]],
  [[[0.5, 1], [1, 0.5]]],
  [[[1, 1.5], [1, 0.5]]],
  [[[0.5, 1], [1, 0.5]], [[1.5, 1], [1, 1.5]]],
  [[[1.5, 1], [1, 0.5]]],
  [[[0.5, 1], [1.5, 1]]],
  [[[1, 1.5], [1.5, 1]]],
  [[[0.5, 1], [1, 1.5]]],
  []
];
function contours() {
  var dx = 1, dy = 1, threshold3 = thresholdSturges, smooth = smoothLinear;
  function contours2(values2) {
    var tz = threshold3(values2);
    if (!Array.isArray(tz)) {
      var domain = extent$1(values2), start2 = domain[0], stop = domain[1];
      tz = tickStep$1(start2, stop, tz);
      tz = range$12(Math.floor(start2 / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(ascending$2);
    }
    return tz.map(function(value2) {
      return contour(values2, value2);
    });
  }
  function contour(values2, value2) {
    var polygons = [], holes = [];
    isorings(values2, value2, function(ring) {
      smooth(ring, values2, value2);
      if (area2(ring) > 0)
        polygons.push([ring]);
      else
        holes.push(ring);
    });
    holes.forEach(function(hole) {
      for (var i = 0, n3 = polygons.length, polygon; i < n3; ++i) {
        if (contains((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value2,
      coordinates: polygons
    };
  }
  function isorings(values2, value2, callback) {
    var fragmentByStart = new Array(), fragmentByEnd = new Array(), x5, y7, t04, t14, t23, t33;
    x5 = y7 = -1;
    t14 = values2[0] >= value2;
    cases[t14 << 1].forEach(stitch);
    while (++x5 < dx - 1) {
      t04 = t14, t14 = values2[x5 + 1] >= value2;
      cases[t04 | t14 << 1].forEach(stitch);
    }
    cases[t14 << 0].forEach(stitch);
    while (++y7 < dy - 1) {
      x5 = -1;
      t14 = values2[y7 * dx + dx] >= value2;
      t23 = values2[y7 * dx] >= value2;
      cases[t14 << 1 | t23 << 2].forEach(stitch);
      while (++x5 < dx - 1) {
        t04 = t14, t14 = values2[y7 * dx + dx + x5 + 1] >= value2;
        t33 = t23, t23 = values2[y7 * dx + x5 + 1] >= value2;
        cases[t04 | t14 << 1 | t23 << 2 | t33 << 3].forEach(stitch);
      }
      cases[t14 | t23 << 3].forEach(stitch);
    }
    x5 = -1;
    t23 = values2[y7 * dx] >= value2;
    cases[t23 << 2].forEach(stitch);
    while (++x5 < dx - 1) {
      t33 = t23, t23 = values2[y7 * dx + x5 + 1] >= value2;
      cases[t23 << 2 | t33 << 3].forEach(stitch);
    }
    cases[t23 << 3].forEach(stitch);
    function stitch(line2) {
      var start2 = [line2[0][0] + x5, line2[0][1] + y7], end = [line2[1][0] + x5, line2[1][1] + y7], startIndex = index4(start2), endIndex = index4(end), f3, g2;
      if (f3 = fragmentByEnd[startIndex]) {
        if (g2 = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f3.end];
          delete fragmentByStart[g2.start];
          if (f3 === g2) {
            f3.ring.push(end);
            callback(f3.ring);
          } else {
            fragmentByStart[f3.start] = fragmentByEnd[g2.end] = {start: f3.start, end: g2.end, ring: f3.ring.concat(g2.ring)};
          }
        } else {
          delete fragmentByEnd[f3.end];
          f3.ring.push(end);
          fragmentByEnd[f3.end = endIndex] = f3;
        }
      } else if (f3 = fragmentByStart[endIndex]) {
        if (g2 = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f3.start];
          delete fragmentByEnd[g2.end];
          if (f3 === g2) {
            f3.ring.push(end);
            callback(f3.ring);
          } else {
            fragmentByStart[g2.start] = fragmentByEnd[f3.end] = {start: g2.start, end: f3.end, ring: g2.ring.concat(f3.ring)};
          }
        } else {
          delete fragmentByStart[f3.start];
          f3.ring.unshift(start2);
          fragmentByStart[f3.start = startIndex] = f3;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start2, end]};
      }
    }
  }
  function index4(point8) {
    return point8[0] * 2 + point8[1] * (dx + 1) * 4;
  }
  function smoothLinear(ring, values2, value2) {
    ring.forEach(function(point8) {
      var x5 = point8[0], y7 = point8[1], xt = x5 | 0, yt = y7 | 0, v0, v1 = values2[yt * dx + xt];
      if (x5 > 0 && x5 < dx && xt === x5) {
        v0 = values2[yt * dx + xt - 1];
        point8[0] = x5 + (value2 - v0) / (v1 - v0) - 0.5;
      }
      if (y7 > 0 && y7 < dy && yt === y7) {
        v0 = values2[(yt - 1) * dx + xt];
        point8[1] = y7 + (value2 - v0) / (v1 - v0) - 0.5;
      }
    });
  }
  contours2.contour = contour;
  contours2.size = function(_2) {
    if (!arguments.length)
      return [dx, dy];
    var _0 = Math.ceil(_2[0]), _1 = Math.ceil(_2[1]);
    if (!(_0 > 0) || !(_1 > 0))
      throw new Error("invalid size");
    return dx = _0, dy = _1, contours2;
  };
  contours2.thresholds = function(_2) {
    return arguments.length ? (threshold3 = typeof _2 === "function" ? _2 : Array.isArray(_2) ? constant$32(slice$22.call(_2)) : constant$32(_2), contours2) : threshold3;
  };
  contours2.smooth = function(_2) {
    return arguments.length ? (smooth = _2 ? smoothLinear : noop7, contours2) : smooth === smoothLinear;
  };
  return contours2;
}
function blurX(source, target, r3) {
  var n3 = source.width, m3 = source.height, w3 = (r3 << 1) + 1;
  for (var j2 = 0; j2 < m3; ++j2) {
    for (var i = 0, sr = 0; i < n3 + r3; ++i) {
      if (i < n3) {
        sr += source.data[i + j2 * n3];
      }
      if (i >= r3) {
        if (i >= w3) {
          sr -= source.data[i - w3 + j2 * n3];
        }
        target.data[i - r3 + j2 * n3] = sr / Math.min(i + 1, n3 - 1 + w3 - i, w3);
      }
    }
  }
}
function blurY(source, target, r3) {
  var n3 = source.width, m3 = source.height, w3 = (r3 << 1) + 1;
  for (var i = 0; i < n3; ++i) {
    for (var j2 = 0, sr = 0; j2 < m3 + r3; ++j2) {
      if (j2 < m3) {
        sr += source.data[i + j2 * n3];
      }
      if (j2 >= r3) {
        if (j2 >= w3) {
          sr -= source.data[i + (j2 - w3) * n3];
        }
        target.data[i + (j2 - r3) * n3] = sr / Math.min(j2 + 1, m3 - 1 + w3 - j2, w3);
      }
    }
  }
}
function defaultX(d2) {
  return d2[0];
}
function defaultY(d2) {
  return d2[1];
}
function defaultWeight() {
  return 1;
}
function contourDensity() {
  var x5 = defaultX, y7 = defaultY, weight = defaultWeight, dx = 960, dy = 500, r3 = 20, k6 = 2, o = r3 * 3, n3 = dx + o * 2 >> k6, m3 = dy + o * 2 >> k6, threshold3 = constant$32(20);
  function density(data3) {
    var values0 = new Float32Array(n3 * m3), values1 = new Float32Array(n3 * m3);
    data3.forEach(function(d2, i, data4) {
      var xi2 = +x5(d2, i, data4) + o >> k6, yi2 = +y7(d2, i, data4) + o >> k6, wi2 = +weight(d2, i, data4);
      if (xi2 >= 0 && xi2 < n3 && yi2 >= 0 && yi2 < m3) {
        values0[xi2 + yi2 * n3] += wi2;
      }
    });
    blurX({width: n3, height: m3, data: values0}, {width: n3, height: m3, data: values1}, r3 >> k6);
    blurY({width: n3, height: m3, data: values1}, {width: n3, height: m3, data: values0}, r3 >> k6);
    blurX({width: n3, height: m3, data: values0}, {width: n3, height: m3, data: values1}, r3 >> k6);
    blurY({width: n3, height: m3, data: values1}, {width: n3, height: m3, data: values0}, r3 >> k6);
    blurX({width: n3, height: m3, data: values0}, {width: n3, height: m3, data: values1}, r3 >> k6);
    blurY({width: n3, height: m3, data: values1}, {width: n3, height: m3, data: values0}, r3 >> k6);
    var tz = threshold3(values0);
    if (!Array.isArray(tz)) {
      var stop = max5(values0);
      tz = tickStep$1(0, stop, tz);
      tz = range$12(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }
    return contours().thresholds(tz).size([n3, m3])(values0).map(transform);
  }
  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k6);
    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }
  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }
  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  }
  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k6) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k6) - o;
  }
  function resize() {
    o = r3 * 3;
    n3 = dx + o * 2 >> k6;
    m3 = dy + o * 2 >> k6;
    return density;
  }
  density.x = function(_2) {
    return arguments.length ? (x5 = typeof _2 === "function" ? _2 : constant$32(+_2), density) : x5;
  };
  density.y = function(_2) {
    return arguments.length ? (y7 = typeof _2 === "function" ? _2 : constant$32(+_2), density) : y7;
  };
  density.weight = function(_2) {
    return arguments.length ? (weight = typeof _2 === "function" ? _2 : constant$32(+_2), density) : weight;
  };
  density.size = function(_2) {
    if (!arguments.length)
      return [dx, dy];
    var _0 = Math.ceil(_2[0]), _1 = Math.ceil(_2[1]);
    if (!(_0 >= 0) && !(_0 >= 0))
      throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };
  density.cellSize = function(_2) {
    if (!arguments.length)
      return 1 << k6;
    if (!((_2 = +_2) >= 1))
      throw new Error("invalid cell size");
    return k6 = Math.floor(Math.log(_2) / Math.LN2), resize();
  };
  density.thresholds = function(_2) {
    return arguments.length ? (threshold3 = typeof _2 === "function" ? _2 : Array.isArray(_2) ? constant$32(slice$22.call(_2)) : constant$32(_2), density) : threshold3;
  };
  density.bandwidth = function(_2) {
    if (!arguments.length)
      return Math.sqrt(r3 * (r3 + 1));
    if (!((_2 = +_2) >= 0))
      throw new Error("invalid bandwidth");
    return r3 = Math.round((Math.sqrt(4 * _2 * _2 + 1) - 1) / 2), resize();
  };
  return density;
}
function adder() {
  return new Adder2();
}
function Adder2() {
  this.reset();
}
Adder2.prototype = {
  constructor: Adder2,
  reset: function() {
    this.s = this.t = 0;
  },
  add: function(y7) {
    add3(temp, y7, this.t);
    add3(this, temp.s, this.s);
    if (this.s)
      this.t += temp.t;
    else
      this.s = temp.t;
  },
  valueOf: function() {
    return this.s;
  }
};
var temp = new Adder2();
function add3(adder2, a3, b10) {
  var x5 = adder2.s = a3 + b10, bv = x5 - a3, av = x5 - bv;
  adder2.t = a3 - av + (b10 - bv);
}
var pi8 = Math.PI;
var tau7 = pi8 * 2;
var abs4 = Math.abs;
var sqrt7 = Math.sqrt;
function noop$1() {
}
function streamGeometry3(geometry, stream2) {
  if (geometry && streamGeometryType3.hasOwnProperty(geometry.type)) {
    streamGeometryType3[geometry.type](geometry, stream2);
  }
}
var streamObjectType3 = {
  Feature: function(object2, stream2) {
    streamGeometry3(object2.geometry, stream2);
  },
  FeatureCollection: function(object2, stream2) {
    var features = object2.features, i = -1, n3 = features.length;
    while (++i < n3)
      streamGeometry3(features[i].geometry, stream2);
  }
};
var streamGeometryType3 = {
  Sphere: function(object2, stream2) {
    stream2.sphere();
  },
  Point: function(object2, stream2) {
    object2 = object2.coordinates;
    stream2.point(object2[0], object2[1], object2[2]);
  },
  MultiPoint: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      object2 = coordinates[i], stream2.point(object2[0], object2[1], object2[2]);
  },
  LineString: function(object2, stream2) {
    streamLine3(object2.coordinates, stream2, 0);
  },
  MultiLineString: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamLine3(coordinates[i], stream2, 0);
  },
  Polygon: function(object2, stream2) {
    streamPolygon3(object2.coordinates, stream2);
  },
  MultiPolygon: function(object2, stream2) {
    var coordinates = object2.coordinates, i = -1, n3 = coordinates.length;
    while (++i < n3)
      streamPolygon3(coordinates[i], stream2);
  },
  GeometryCollection: function(object2, stream2) {
    var geometries = object2.geometries, i = -1, n3 = geometries.length;
    while (++i < n3)
      streamGeometry3(geometries[i], stream2);
  }
};
function streamLine3(coordinates, stream2, closed) {
  var i = -1, n3 = coordinates.length - closed, coordinate;
  stream2.lineStart();
  while (++i < n3)
    coordinate = coordinates[i], stream2.point(coordinate[0], coordinate[1], coordinate[2]);
  stream2.lineEnd();
}
function streamPolygon3(coordinates, stream2) {
  var i = -1, n3 = coordinates.length;
  stream2.polygonStart();
  while (++i < n3)
    streamLine3(coordinates[i], stream2, 1);
  stream2.polygonEnd();
}
function geoStream3(object2, stream2) {
  if (object2 && streamObjectType3.hasOwnProperty(object2.type)) {
    streamObjectType3[object2.type](object2, stream2);
  } else {
    streamGeometry3(object2, stream2);
  }
}
function identity$15(x5) {
  return x5;
}
var areaSum3 = adder();
var areaRingSum3 = adder();
var x003;
var y003;
var x02;
var y02;
var areaStream2 = {
  point: noop$1,
  lineStart: noop$1,
  lineEnd: noop$1,
  polygonStart: function() {
    areaStream2.lineStart = areaRingStart2;
    areaStream2.lineEnd = areaRingEnd2;
  },
  polygonEnd: function() {
    areaStream2.lineStart = areaStream2.lineEnd = areaStream2.point = noop$1;
    areaSum3.add(abs4(areaRingSum3));
    areaRingSum3.reset();
  },
  result: function() {
    var area3 = areaSum3 / 2;
    areaSum3.reset();
    return area3;
  }
};
function areaRingStart2() {
  areaStream2.point = areaPointFirst2;
}
function areaPointFirst2(x5, y7) {
  areaStream2.point = areaPoint2;
  x003 = x02 = x5, y003 = y02 = y7;
}
function areaPoint2(x5, y7) {
  areaRingSum3.add(y02 * x5 - x02 * y7);
  x02 = x5, y02 = y7;
}
function areaRingEnd2() {
  areaPoint2(x003, y003);
}
var x0$13 = Infinity;
var y0$13 = x0$13;
var x13 = -x0$13;
var y13 = x13;
var boundsStream2 = {
  point: boundsPoint2,
  lineStart: noop$1,
  lineEnd: noop$1,
  polygonStart: noop$1,
  polygonEnd: noop$1,
  result: function() {
    var bounds = [[x0$13, y0$13], [x13, y13]];
    x13 = y13 = -(y0$13 = x0$13 = Infinity);
    return bounds;
  }
};
function boundsPoint2(x5, y7) {
  if (x5 < x0$13)
    x0$13 = x5;
  if (x5 > x13)
    x13 = x5;
  if (y7 < y0$13)
    y0$13 = y7;
  if (y7 > y13)
    y13 = y7;
}
var X02 = 0;
var Y02 = 0;
var Z02 = 0;
var X12 = 0;
var Y12 = 0;
var Z12 = 0;
var X23 = 0;
var Y23 = 0;
var Z23 = 0;
var x00$13;
var y00$13;
var x0$23;
var y0$23;
var centroidStream2 = {
  point: centroidPoint2,
  lineStart: centroidLineStart2,
  lineEnd: centroidLineEnd2,
  polygonStart: function() {
    centroidStream2.lineStart = centroidRingStart2;
    centroidStream2.lineEnd = centroidRingEnd2;
  },
  polygonEnd: function() {
    centroidStream2.point = centroidPoint2;
    centroidStream2.lineStart = centroidLineStart2;
    centroidStream2.lineEnd = centroidLineEnd2;
  },
  result: function() {
    var centroid = Z23 ? [X23 / Z23, Y23 / Z23] : Z12 ? [X12 / Z12, Y12 / Z12] : Z02 ? [X02 / Z02, Y02 / Z02] : [NaN, NaN];
    X02 = Y02 = Z02 = X12 = Y12 = Z12 = X23 = Y23 = Z23 = 0;
    return centroid;
  }
};
function centroidPoint2(x5, y7) {
  X02 += x5;
  Y02 += y7;
  ++Z02;
}
function centroidLineStart2() {
  centroidStream2.point = centroidPointFirstLine3;
}
function centroidPointFirstLine3(x5, y7) {
  centroidStream2.point = centroidPointLine3;
  centroidPoint2(x0$23 = x5, y0$23 = y7);
}
function centroidPointLine3(x5, y7) {
  var dx = x5 - x0$23, dy = y7 - y0$23, z3 = sqrt7(dx * dx + dy * dy);
  X12 += z3 * (x0$23 + x5) / 2;
  Y12 += z3 * (y0$23 + y7) / 2;
  Z12 += z3;
  centroidPoint2(x0$23 = x5, y0$23 = y7);
}
function centroidLineEnd2() {
  centroidStream2.point = centroidPoint2;
}
function centroidRingStart2() {
  centroidStream2.point = centroidPointFirstRing3;
}
function centroidRingEnd2() {
  centroidPointRing3(x00$13, y00$13);
}
function centroidPointFirstRing3(x5, y7) {
  centroidStream2.point = centroidPointRing3;
  centroidPoint2(x00$13 = x0$23 = x5, y00$13 = y0$23 = y7);
}
function centroidPointRing3(x5, y7) {
  var dx = x5 - x0$23, dy = y7 - y0$23, z3 = sqrt7(dx * dx + dy * dy);
  X12 += z3 * (x0$23 + x5) / 2;
  Y12 += z3 * (y0$23 + y7) / 2;
  Z12 += z3;
  z3 = y0$23 * x5 - x0$23 * y7;
  X23 += z3 * (x0$23 + x5);
  Y23 += z3 * (y0$23 + y7);
  Z23 += z3 * 3;
  centroidPoint2(x0$23 = x5, y0$23 = y7);
}
function PathContext3(context) {
  this._context = context;
}
PathContext3.prototype = {
  _radius: 4.5,
  pointRadius: function(_2) {
    return this._radius = _2, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._context.closePath();
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x5, y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x5, y7);
        break;
      }
      default: {
        this._context.moveTo(x5 + this._radius, y7);
        this._context.arc(x5, y7, this._radius, 0, tau7);
        break;
      }
    }
  },
  result: noop$1
};
var lengthSum2 = adder();
var lengthRing3;
var x00$23;
var y00$23;
var x0$33;
var y0$33;
var lengthStream2 = {
  point: noop$1,
  lineStart: function() {
    lengthStream2.point = lengthPointFirst2;
  },
  lineEnd: function() {
    if (lengthRing3)
      lengthPoint2(x00$23, y00$23);
    lengthStream2.point = noop$1;
  },
  polygonStart: function() {
    lengthRing3 = true;
  },
  polygonEnd: function() {
    lengthRing3 = null;
  },
  result: function() {
    var length = +lengthSum2;
    lengthSum2.reset();
    return length;
  }
};
function lengthPointFirst2(x5, y7) {
  lengthStream2.point = lengthPoint2;
  x00$23 = x0$33 = x5, y00$23 = y0$33 = y7;
}
function lengthPoint2(x5, y7) {
  x0$33 -= x5, y0$33 -= y7;
  lengthSum2.add(sqrt7(x0$33 * x0$33 + y0$33 * y0$33));
  x0$33 = x5, y0$33 = y7;
}
function PathString3() {
  this._string = [];
}
PathString3.prototype = {
  _radius: 4.5,
  _circle: circle3(4.5),
  pointRadius: function(_2) {
    if ((_2 = +_2) !== this._radius)
      this._radius = _2, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0)
      this._string.push("Z");
    this._point = NaN;
  },
  point: function(x5, y7) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x5, ",", y7);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x5, ",", y7);
        break;
      }
      default: {
        if (this._circle == null)
          this._circle = circle3(this._radius);
        this._string.push("M", x5, ",", y7, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};
function circle3(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
function geoPath(projection2, context) {
  var pointRadius = 4.5, projectionStream, contextStream;
  function path3(object2) {
    if (object2) {
      if (typeof pointRadius === "function")
        contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream3(object2, projectionStream(contextStream));
    }
    return contextStream.result();
  }
  path3.area = function(object2) {
    geoStream3(object2, projectionStream(areaStream2));
    return areaStream2.result();
  };
  path3.measure = function(object2) {
    geoStream3(object2, projectionStream(lengthStream2));
    return lengthStream2.result();
  };
  path3.bounds = function(object2) {
    geoStream3(object2, projectionStream(boundsStream2));
    return boundsStream2.result();
  };
  path3.centroid = function(object2) {
    geoStream3(object2, projectionStream(centroidStream2));
    return centroidStream2.result();
  };
  path3.projection = function(_2) {
    return arguments.length ? (projectionStream = _2 == null ? (projection2 = null, identity$15) : (projection2 = _2).stream, path3) : projection2;
  };
  path3.context = function(_2) {
    if (!arguments.length)
      return context;
    contextStream = _2 == null ? (context = null, new PathString3()) : new PathContext3(context = _2);
    if (typeof pointRadius !== "function")
      contextStream.pointRadius(pointRadius);
    return path3;
  };
  path3.pointRadius = function(_2) {
    if (!arguments.length)
      return pointRadius;
    pointRadius = typeof _2 === "function" ? _2 : (contextStream.pointRadius(+_2), +_2);
    return path3;
  };
  return path3.projection(projection2).context(context);
}
var _extends$72 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$63 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$63(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$63(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$63(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$2 = "rv-xy-plot__series rv-xy-plot__series--contour";
function getDomain2(data3) {
  return data3.reduce(function(acc, row) {
    return {
      min: Math.min(acc.min, row.value),
      max: Math.max(acc.max, row.value)
    };
  }, {min: Infinity, max: -Infinity});
}
var ContourSeries = function(_AbstractSeries) {
  _inherits$63(ContourSeries2, _AbstractSeries);
  function ContourSeries2() {
    _classCallCheck$63(this, ContourSeries2);
    return _possibleConstructorReturn$63(this, (ContourSeries2.__proto__ || Object.getPrototypeOf(ContourSeries2)).apply(this, arguments));
  }
  _createClass$63(ContourSeries2, [{
    key: "render",
    value: function render2() {
      var _props = this.props, animation = _props.animation, bandwidth = _props.bandwidth, className = _props.className, colorRange = _props.colorRange, data3 = _props.data, innerHeight = _props.innerHeight, innerWidth = _props.innerWidth, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style;
      if (!data3 || !innerWidth || !innerHeight) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$72({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(ContourSeries2, _extends$72({}, this.props, {animation: null})));
      }
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var contouredData = contourDensity().x(function(d2) {
        return x5(d2);
      }).y(function(d2) {
        return y7(d2);
      }).size([innerWidth, innerHeight]).bandwidth(bandwidth)(data3);
      var geo = geoPath();
      var _getDomain = getDomain2(contouredData), min5 = _getDomain.min, max6 = _getDomain.max;
      var colorScale3 = linear4().domain([min5, max6]).range(colorRange || CONTINUOUS_COLOR_RANGE);
      return react.createElement("g", {
        className: predefinedClassName$2 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, contouredData.map(function(polygon, index4) {
        return react.createElement("path", {
          className: "rv-xy-plot__series--contour-line",
          key: "rv-xy-plot__series--contour-line-" + index4,
          d: geo(polygon),
          style: _extends$72({
            fill: colorScale3(polygon.value)
          }, style)
        });
      }));
    }
  }]);
  return ContourSeries2;
}(AbstractSeries);
ContourSeries.propTypes = _extends$72({}, AbstractSeries.propTypes, {
  animation: propTypes.bool,
  bandwidth: propTypes.number,
  className: propTypes.string,
  marginLeft: propTypes.number,
  marginTop: propTypes.number,
  style: propTypes.object
});
ContourSeries.defaultProps = _extends$72({}, AbstractSeries.defaultProps, {
  bandwidth: 40,
  style: {}
});
var _extends$82 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$73 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$73(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$73(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$73(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function defaultTitleFormat(values2) {
  var value2 = getFirstNonEmptyValue(values2);
  if (value2) {
    return {
      title: "x",
      value: transformValueToString(value2.x)
    };
  }
}
function defaultItemsFormat(values2) {
  return values2.map(function(v3, i) {
    if (v3) {
      return {value: v3.y, title: i};
    }
  });
}
function getFirstNonEmptyValue(values2) {
  return (values2 || []).find(function(v3) {
    return Boolean(v3);
  });
}
var Crosshair = function(_PureComponent) {
  _inherits$73(Crosshair3, _PureComponent);
  function Crosshair3() {
    _classCallCheck$73(this, Crosshair3);
    return _possibleConstructorReturn$73(this, (Crosshair3.__proto__ || Object.getPrototypeOf(Crosshair3)).apply(this, arguments));
  }
  _createClass$73(Crosshair3, [{
    key: "_renderCrosshairItems",
    value: function _renderCrosshairItems() {
      var _props = this.props, values2 = _props.values, itemsFormat = _props.itemsFormat;
      var items = itemsFormat(values2);
      if (!items) {
        return null;
      }
      return items.filter(function(i) {
        return i;
      }).map(function renderValue(item, i) {
        return react.createElement("div", {className: "rv-crosshair__item", key: "item" + i}, react.createElement("span", {className: "rv-crosshair__item__title"}, item.title), ": ", react.createElement("span", {className: "rv-crosshair__item__value"}, item.value));
      });
    }
  }, {
    key: "_renderCrosshairTitle",
    value: function _renderCrosshairTitle() {
      var _props2 = this.props, values2 = _props2.values, titleFormat = _props2.titleFormat, style = _props2.style;
      var titleItem = titleFormat(values2);
      if (!titleItem) {
        return null;
      }
      return react.createElement("div", {className: "rv-crosshair__title", key: "title", style: style.title}, react.createElement("span", {className: "rv-crosshair__title__title"}, titleItem.title), ": ", react.createElement("span", {className: "rv-crosshair__title__value"}, titleItem.value));
    }
  }, {
    key: "render",
    value: function render2() {
      var _props3 = this.props, children2 = _props3.children, className = _props3.className, values2 = _props3.values, marginTop = _props3.marginTop, marginLeft = _props3.marginLeft, innerWidth = _props3.innerWidth, innerHeight = _props3.innerHeight, style = _props3.style;
      var value2 = getFirstNonEmptyValue(values2);
      if (!value2) {
        return null;
      }
      var x5 = getAttributeFunctor(this.props, "x");
      var innerLeft = x5(value2);
      var _props$orientation = this.props.orientation, orientation = _props$orientation === void 0 ? innerLeft > innerWidth / 2 ? "left" : "right" : _props$orientation;
      var left2 = marginLeft + innerLeft;
      var top2 = marginTop;
      var innerClassName = "rv-crosshair__inner rv-crosshair__inner--" + orientation;
      return react.createElement("div", {
        className: "rv-crosshair " + className,
        style: {left: left2 + "px", top: top2 + "px"}
      }, react.createElement("div", {
        className: "rv-crosshair__line",
        style: _extends$82({height: innerHeight + "px"}, style.line)
      }), react.createElement("div", {className: innerClassName}, children2 ? children2 : react.createElement("div", {className: "rv-crosshair__inner__content", style: style.box}, react.createElement("div", null, this._renderCrosshairTitle(), this._renderCrosshairItems()))));
    }
  }], [{
    key: "defaultProps",
    get: function get4() {
      return {
        titleFormat: defaultTitleFormat,
        itemsFormat: defaultItemsFormat,
        style: {
          line: {},
          title: {},
          box: {}
        }
      };
    }
  }, {
    key: "propTypes",
    get: function get4() {
      return {
        className: propTypes.string,
        values: propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.object])),
        series: propTypes.object,
        innerWidth: propTypes.number,
        innerHeight: propTypes.number,
        marginLeft: propTypes.number,
        marginTop: propTypes.number,
        orientation: propTypes.oneOf(["left", "right"]),
        itemsFormat: propTypes.func,
        titleFormat: propTypes.func,
        style: propTypes.shape({
          line: propTypes.object,
          title: propTypes.object,
          box: propTypes.object
        })
      };
    }
  }]);
  return Crosshair3;
}(react.PureComponent);
Crosshair.displayName = "Crosshair";
var _createClass$83 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$92 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$83(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$83(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$83(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _toConsumableArray$13(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
var predefinedClassName$3 = "rv-xy-plot__series rv-xy-plot__series--custom-svg-wrapper";
var DEFAULT_STYLE = {
  stroke: "blue",
  fill: "blue"
};
function predefinedComponents(type3) {
  var size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  var style = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : DEFAULT_STYLE;
  switch (type3) {
    case "diamond":
      return react.createElement("polygon", {
        style,
        points: "0 0 " + size / 2 + " " + size / 2 + " 0 " + size + " " + -size / 2 + " " + size / 2 + " 0 0"
      });
    case "star":
      var starPoints = [].concat(_toConsumableArray$13(new Array(5))).map(function(c5, index4) {
        var angle = index4 / 5 * Math.PI * 2;
        var innerAngle = angle + Math.PI / 10;
        var outerAngle = angle - Math.PI / 10;
        var innerRadius = size / 2.61;
        return "\n        " + Math.cos(outerAngle) * size + " " + Math.sin(outerAngle) * size + "\n        " + Math.cos(innerAngle) * innerRadius + " " + Math.sin(innerAngle) * innerRadius + "\n      ";
      }).join(" ");
      return react.createElement("polygon", {
        points: starPoints,
        x: "0",
        y: "0",
        height: size,
        width: size,
        style
      });
    case "square":
      return react.createElement("rect", {
        x: "" + -size / 2,
        y: "" + -size / 2,
        height: size,
        width: size,
        style
      });
    default:
    case "circle":
      return react.createElement("circle", {cx: "0", cy: "0", r: size / 2, style});
  }
}
function getInnerComponent(_ref) {
  var customComponent = _ref.customComponent, defaultType = _ref.defaultType, positionInPixels = _ref.positionInPixels;
  _ref.positionFunctions;
  var style = _ref.style, propsSize = _ref.propsSize;
  var size = customComponent.size;
  var aggStyle = _extends$92({}, style, customComponent.style || {});
  var innerComponent = customComponent.customComponent;
  if (!innerComponent && typeof defaultType === "string") {
    return predefinedComponents(defaultType, size || propsSize, aggStyle);
  }
  if (!innerComponent) {
    return defaultType(customComponent, positionInPixels, aggStyle);
  }
  if (typeof innerComponent === "string") {
    return predefinedComponents(innerComponent || defaultType, size, aggStyle);
  }
  return innerComponent(customComponent, positionInPixels, aggStyle);
}
var CustomSVGSeries = function(_AbstractSeries) {
  _inherits$83(CustomSVGSeries2, _AbstractSeries);
  function CustomSVGSeries2() {
    _classCallCheck$83(this, CustomSVGSeries2);
    return _possibleConstructorReturn$83(this, (CustomSVGSeries2.__proto__ || Object.getPrototypeOf(CustomSVGSeries2)).apply(this, arguments));
  }
  _createClass$83(CustomSVGSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, customComponent = _props.customComponent, data3 = _props.data, innerHeight = _props.innerHeight, innerWidth = _props.innerWidth, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style, size = _props.size;
      if (!data3 || !innerWidth || !innerHeight) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$92({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(CustomSVGSeries2, _extends$92({}, this.props, {animation: false})));
      }
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var contents = data3.map(function(seriesComponent, index4) {
        var positionInPixels = {
          x: x5(seriesComponent),
          y: y7(seriesComponent)
        };
        var innerComponent = getInnerComponent({
          customComponent: seriesComponent,
          positionInPixels,
          defaultType: customComponent,
          positionFunctions: {x: x5, y: y7},
          style,
          propsSize: size
        });
        return react.createElement("g", {
          className: "rv-xy-plot__series--custom-svg",
          key: "rv-xy-plot__series--custom-svg-" + index4,
          transform: "translate(" + positionInPixels.x + "," + positionInPixels.y + ")",
          onMouseEnter: function onMouseEnter(e3) {
            return _this2._valueMouseOverHandler(seriesComponent, e3);
          },
          onMouseLeave: function onMouseLeave(e3) {
            return _this2._valueMouseOutHandler(seriesComponent, e3);
          }
        }, innerComponent);
      });
      return react.createElement("g", {
        className: predefinedClassName$3 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, contents);
    }
  }]);
  return CustomSVGSeries2;
}(AbstractSeries);
CustomSVGSeries.propTypes = {
  animation: propTypes.bool,
  className: propTypes.string,
  customComponent: propTypes.oneOfType([propTypes.string, propTypes.func]),
  data: propTypes.arrayOf(propTypes.shape({
    x: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,
    y: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired
  })).isRequired,
  marginLeft: propTypes.number,
  marginTop: propTypes.number,
  style: propTypes.object,
  size: propTypes.number,
  onValueMouseOver: propTypes.func,
  onValueMouseOut: propTypes.func
};
CustomSVGSeries.defaultProps = _extends$92({}, AbstractSeries.defaultProps, {
  animation: false,
  customComponent: "circle",
  style: {},
  size: 2
});
var _extends$a2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function decorativeAxisTick(props) {
  var axisDomain = props.axisDomain, numberOfTicks = props.numberOfTicks, axisStart = props.axisStart, axisEnd = props.axisEnd, tickValue2 = props.tickValue, tickSize = props.tickSize, style = props.style;
  var _generatePoints = generatePoints({
    axisStart,
    axisEnd,
    numberOfTicks,
    axisDomain
  }), points = _generatePoints.points;
  var tickAngle = getAxisAngle2(axisStart, axisEnd) + Math.PI / 2;
  return points.map(function(point8, index4) {
    var tickProps = _extends$a2({
      x1: 0,
      y1: 0,
      x2: tickSize * Math.cos(tickAngle),
      y2: tickSize * Math.sin(tickAngle)
    }, style.ticks);
    var textProps2 = _extends$a2({
      x: tickSize * Math.cos(tickAngle),
      y: tickSize * Math.sin(tickAngle),
      textAnchor: "start"
    }, style.text);
    return react.createElement("g", {
      key: index4,
      transform: "translate(" + point8.x + ", " + point8.y + ")",
      className: "rv-xy-plot__axis__tick"
    }, react.createElement("line", _extends$a2({}, tickProps, {className: "rv-xy-plot__axis__tick__line"})), react.createElement("text", _extends$a2({}, textProps2, {className: "rv-xy-plot__axis__tick__text"}), tickValue2(point8.text)));
  });
}
var _extends$b2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$93 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$93(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$93(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$93(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$4 = "rv-xy-manipulable-axis rv-xy-plot__axis";
var animatedProps$1 = ["xRange", "yRange", "xDomain", "yDomain", "width", "height", "marginLeft", "marginTop", "marginRight", "marginBottom", "tickSize", "tickTotal", "tickSizeInner", "tickSizeOuter"];
var DecorativeAxis = function(_AbstractSeries) {
  _inherits$93(DecorativeAxis2, _AbstractSeries);
  function DecorativeAxis2() {
    _classCallCheck$93(this, DecorativeAxis2);
    return _possibleConstructorReturn$93(this, (DecorativeAxis2.__proto__ || Object.getPrototypeOf(DecorativeAxis2)).apply(this, arguments));
  }
  _createClass$93(DecorativeAxis2, [{
    key: "render",
    value: function render2() {
      var _props = this.props, animation = _props.animation, className = _props.className, marginLeft = _props.marginLeft, marginTop = _props.marginTop, axisStart = _props.axisStart, axisEnd = _props.axisEnd, axisDomain = _props.axisDomain, numberOfTicks = _props.numberOfTicks, tickValue2 = _props.tickValue, tickSize = _props.tickSize, style = _props.style;
      if (animation) {
        return react.createElement(Animation, _extends$b2({}, this.props, {animatedProps: animatedProps$1}), react.createElement(DecorativeAxis2, _extends$b2({}, this.props, {animation: null})));
      }
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      return react.createElement("g", {
        className: predefinedClassName$4 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, react.createElement("line", _extends$b2({}, _extends$b2({
        x1: x5({x: axisStart.x}),
        x2: x5({x: axisEnd.x}),
        y1: y7({y: axisStart.y}),
        y2: y7({y: axisEnd.y})
      }, style.line), {
        className: "rv-xy-plot__axis__line"
      })), react.createElement("g", {className: "rv-xy-manipulable-axis__ticks"}, decorativeAxisTick({
        axisDomain,
        axisEnd: {x: x5(axisEnd), y: y7(axisEnd)},
        axisStart: {x: x5(axisStart), y: y7(axisStart)},
        numberOfTicks,
        tickValue: tickValue2,
        tickSize,
        style
      })));
    }
  }]);
  return DecorativeAxis2;
}(AbstractSeries);
var DEFAULT_FORMAT = format4(".2r");
DecorativeAxis.defaultProps = {
  className: "",
  numberOfTicks: 10,
  tickValue: function tickValue(d2) {
    return DEFAULT_FORMAT(d2);
  },
  tickSize: 5,
  style: {
    line: {
      strokeWidth: 1
    },
    ticks: {
      strokeWidth: 2
    },
    text: {}
  }
};
DecorativeAxis.propTypes = _extends$b2({}, AbstractSeries.propTypes, {
  axisDomain: propTypes.arrayOf(propTypes.number).isRequired,
  axisEnd: propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.string]),
    y: propTypes.oneOfType([propTypes.number, propTypes.string])
  }).isRequired,
  axisStart: propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.string]),
    y: propTypes.oneOfType([propTypes.number, propTypes.string])
  }).isRequired,
  className: propTypes.string,
  numberOfTicks: propTypes.number,
  tickValue: propTypes.func,
  tickSize: propTypes.number,
  style: propTypes.shape({
    line: propTypes.object,
    ticks: propTypes.object,
    text: propTypes.object
  })
});
DecorativeAxis.displayName = "DecorativeAxis";
({
  className: propTypes.string
});
var _extends$c2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$a3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty$23(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$a3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$a3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$a3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VERTICAL = DIRECTION.VERTICAL;
var HORIZONTAL = DIRECTION.HORIZONTAL;
var propTypes$2 = {
  direction: propTypes.oneOf([VERTICAL, HORIZONTAL]),
  attr: propTypes.string.isRequired,
  width: propTypes.number,
  height: propTypes.number,
  top: propTypes.number,
  left: propTypes.number,
  style: propTypes.object,
  tickValues: propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string])),
  tickTotal: propTypes.number,
  animation: AnimationPropType,
  marginTop: propTypes.number,
  marginBottom: propTypes.number,
  marginLeft: propTypes.number,
  marginRight: propTypes.number,
  innerWidth: propTypes.number,
  innerHeight: propTypes.number
};
var defaultProps$2 = {
  direction: VERTICAL
};
var animatedProps$2 = ["xRange", "yRange", "xDomain", "yDomain", "width", "height", "marginLeft", "marginTop", "marginRight", "marginBottom", "tickTotal"];
var GridLines = function(_PureComponent) {
  _inherits$a3(GridLines4, _PureComponent);
  function GridLines4() {
    _classCallCheck$a3(this, GridLines4);
    return _possibleConstructorReturn$a3(this, (GridLines4.__proto__ || Object.getPrototypeOf(GridLines4)).apply(this, arguments));
  }
  _createClass$a3(GridLines4, [{
    key: "_getDefaultProps",
    value: function _getDefaultProps() {
      var _props = this.props, innerWidth = _props.innerWidth, innerHeight = _props.innerHeight, marginTop = _props.marginTop, marginLeft = _props.marginLeft, direction = _props.direction;
      return {
        left: marginLeft,
        top: marginTop,
        width: innerWidth,
        height: innerHeight,
        tickTotal: getTicksTotalFromSize(direction === VERTICAL ? innerWidth : innerHeight)
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var _props2 = this.props, animation = _props2.animation, className = _props2.className;
      if (animation) {
        return react.createElement(Animation, _extends$c2({}, this.props, {animatedProps: animatedProps$2}), react.createElement(GridLines4, _extends$c2({}, this.props, {animation: null})));
      }
      var props = _extends$c2({}, this._getDefaultProps(), this.props);
      var attr = props.attr, direction = props.direction, width = props.width, height = props.height, style = props.style, tickTotal = props.tickTotal, tickValues = props.tickValues, top2 = props.top, left2 = props.left;
      var isVertical2 = direction === VERTICAL;
      var tickXAttr = isVertical2 ? "y" : "x";
      var tickYAttr = isVertical2 ? "x" : "y";
      var length = isVertical2 ? height : width;
      var scale = getAttributeScale(props, attr);
      var values2 = getTickValues(scale, tickTotal, tickValues);
      return react.createElement("g", {
        transform: "translate(" + left2 + "," + top2 + ")",
        className: "rv-xy-plot__grid-lines " + className
      }, values2.map(function(v3, i) {
        var _pathProps;
        var pos = scale(v3);
        var pathProps = (_pathProps = {}, _defineProperty$23(_pathProps, tickYAttr + "1", pos), _defineProperty$23(_pathProps, tickYAttr + "2", pos), _defineProperty$23(_pathProps, tickXAttr + "1", 0), _defineProperty$23(_pathProps, tickXAttr + "2", length), _pathProps);
        return react.createElement("line", _extends$c2({}, pathProps, {
          key: i,
          className: "rv-xy-plot__grid-lines__line",
          style
        }));
      }));
    }
  }]);
  return GridLines4;
}(react.PureComponent);
GridLines.displayName = "GridLines";
GridLines.defaultProps = defaultProps$2;
GridLines.propTypes = propTypes$2;
GridLines.requiresSVG = true;
var _extends$d2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$b3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$b3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$b3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$b3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$5 = "rv-xy-plot__series rv-xy-plot__series--heatmap";
var HeatmapSeries = function(_AbstractSeries) {
  _inherits$b3(HeatmapSeries2, _AbstractSeries);
  function HeatmapSeries2() {
    _classCallCheck$b3(this, HeatmapSeries2);
    return _possibleConstructorReturn$b3(this, (HeatmapSeries2.__proto__ || Object.getPrototypeOf(HeatmapSeries2)).apply(this, arguments));
  }
  _createClass$b3(HeatmapSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, data3 = _props.data, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$d2({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(HeatmapSeries2, _extends$d2({}, this.props, {animation: null})));
      }
      var _rectStyle$style = _extends$d2({rectStyle: {}}, style), rectStyle = _rectStyle$style.rectStyle;
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var opacity = this._getAttributeFunctor("opacity");
      var fill = this._getAttributeFunctor("fill") || this._getAttributeFunctor("color");
      var stroke = this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color");
      var xDistance = this._getScaleDistance("x");
      var yDistance = this._getScaleDistance("y");
      return react.createElement("g", {
        className: predefinedClassName$5 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, data3.map(function(d2, i) {
        var attrs = _extends$d2({
          style: _extends$d2({
            stroke: stroke && stroke(d2),
            fill: fill && fill(d2),
            opacity: opacity && opacity(d2)
          }, style)
        }, rectStyle, {
          x: x5(d2) - xDistance / 2,
          y: y7(d2) - yDistance / 2,
          width: xDistance,
          height: yDistance,
          key: i,
          onClick: function onClick(e3) {
            return _this2._valueClickHandler(d2, e3);
          },
          onContextMenu: function onContextMenu(e3) {
            return _this2._valueRightClickHandler(d2, e3);
          },
          onMouseOver: function onMouseOver(e3) {
            return _this2._valueMouseOverHandler(d2, e3);
          },
          onMouseOut: function onMouseOut(e3) {
            return _this2._valueMouseOutHandler(d2, e3);
          }
        });
        return react.createElement("rect", attrs);
      }));
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = attr === "x" || attr === "y";
      return {isDomainAdjustmentNeeded};
    }
  }]);
  return HeatmapSeries2;
}(AbstractSeries);
HeatmapSeries.propTypes = _extends$d2({}, AbstractSeries.propTypes);
HeatmapSeries.displayName = "HeatmapSeries";
var thirdPi = Math.PI / 3;
var angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];
function pointX(d2) {
  return d2[0];
}
function pointY(d2) {
  return d2[1];
}
function hexbin() {
  var x03 = 0, y03 = 0, x14 = 1, y14 = 1, x5 = pointX, y7 = pointY, r3, dx, dy;
  function hexbin2(points) {
    var binsById = {}, bins = [], i, n3 = points.length;
    for (i = 0; i < n3; ++i) {
      if (isNaN(px = +x5.call(null, point8 = points[i], i, points)) || isNaN(py = +y7.call(null, point8, i, points)))
        continue;
      var point8, px, py, pj2 = Math.round(py = py / dy), pi9 = Math.round(px = px / dx - (pj2 & 1) / 2), py1 = py - pj2;
      if (Math.abs(py1) * 3 > 1) {
        var px1 = px - pi9, pi22 = pi9 + (px < pi9 ? -1 : 1) / 2, pj22 = pj2 + (py < pj2 ? -1 : 1), px2 = px - pi22, py2 = py - pj22;
        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2)
          pi9 = pi22 + (pj2 & 1 ? 1 : -1) / 2, pj2 = pj22;
      }
      var id3 = pi9 + "-" + pj2, bin = binsById[id3];
      if (bin)
        bin.push(point8);
      else {
        bins.push(bin = binsById[id3] = [point8]);
        bin.x = (pi9 + (pj2 & 1) / 2) * dx;
        bin.y = pj2 * dy;
      }
    }
    return bins;
  }
  function hexagon(radius) {
    var x04 = 0, y04 = 0;
    return angles.map(function(angle) {
      var x15 = Math.sin(angle) * radius, y15 = -Math.cos(angle) * radius, dx2 = x15 - x04, dy2 = y15 - y04;
      x04 = x15, y04 = y15;
      return [dx2, dy2];
    });
  }
  hexbin2.hexagon = function(radius) {
    return "m" + hexagon(radius == null ? r3 : +radius).join("l") + "z";
  };
  hexbin2.centers = function() {
    var centers = [], j2 = Math.round(y03 / dy), i = Math.round(x03 / dx);
    for (var y8 = j2 * dy; y8 < y14 + r3; y8 += dy, ++j2) {
      for (var x6 = i * dx + (j2 & 1) * dx / 2; x6 < x14 + dx / 2; x6 += dx) {
        centers.push([x6, y8]);
      }
    }
    return centers;
  };
  hexbin2.mesh = function() {
    var fragment = hexagon(r3).slice(0, 4).join("l");
    return hexbin2.centers().map(function(p3) {
      return "M" + p3 + "m" + fragment;
    }).join("");
  };
  hexbin2.x = function(_2) {
    return arguments.length ? (x5 = _2, hexbin2) : x5;
  };
  hexbin2.y = function(_2) {
    return arguments.length ? (y7 = _2, hexbin2) : y7;
  };
  hexbin2.radius = function(_2) {
    return arguments.length ? (r3 = +_2, dx = r3 * 2 * Math.sin(thirdPi), dy = r3 * 1.5, hexbin2) : r3;
  };
  hexbin2.size = function(_2) {
    return arguments.length ? (x03 = y03 = 0, x14 = +_2[0], y14 = +_2[1], hexbin2) : [x14 - x03, y14 - y03];
  };
  hexbin2.extent = function(_2) {
    return arguments.length ? (x03 = +_2[0][0], y03 = +_2[0][1], x14 = +_2[1][0], y14 = +_2[1][1], hexbin2) : [[x03, y03], [x14, y14]];
  };
  return hexbin2.radius(1);
}
var _extends$e2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$c3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$c3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$c3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$c3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function _toConsumableArray$23(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
var predefinedClassName$6 = "rv-xy-plot__series rv-xy-plot__series--hexbin";
function getColorDomain(_ref, hexes) {
  var countDomain = _ref.countDomain;
  if (countDomain) {
    return countDomain;
  }
  return [0, Math.max.apply(Math, _toConsumableArray$23(hexes.map(function(row) {
    return row.length;
  })))];
}
var HexbinSeries = function(_AbstractSeries) {
  _inherits$c3(HexbinSeries2, _AbstractSeries);
  function HexbinSeries2() {
    _classCallCheck$c3(this, HexbinSeries2);
    return _possibleConstructorReturn$c3(this, (HexbinSeries2.__proto__ || Object.getPrototypeOf(HexbinSeries2)).apply(this, arguments));
  }
  _createClass$c3(HexbinSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, colorRange = _props.colorRange, data3 = _props.data, innerHeight = _props.innerHeight, innerWidth = _props.innerWidth, marginLeft = _props.marginLeft, marginTop = _props.marginTop, radius = _props.radius, sizeHexagonsWithCount = _props.sizeHexagonsWithCount, style = _props.style, xOffset = _props.xOffset, yOffset = _props.yOffset;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$e2({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(HexbinSeries2, _extends$e2({}, this.props, {animation: null})));
      }
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var hex5 = hexbin().x(function(d2) {
        return x5(d2) + xOffset;
      }).y(function(d2) {
        return y7(d2) + yOffset;
      }).radius(radius).size([innerWidth, innerHeight]);
      var hexagonPath = hex5.hexagon();
      var hexes = hex5(data3);
      var countDomain = getColorDomain(this.props, hexes);
      var color3 = linear4().domain(countDomain).range(colorRange);
      var size = linear4().domain(countDomain).range([0, radius]);
      return react.createElement("g", {
        className: predefinedClassName$6 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, hexes.map(function(d2, i) {
        var attrs = {
          style,
          d: sizeHexagonsWithCount ? hex5.hexagon(size(d2.length)) : hexagonPath,
          fill: color3(d2.length),
          transform: "translate(" + d2.x + ", " + d2.y + ")",
          key: i,
          onClick: function onClick(e3) {
            return _this2._valueClickHandler(d2, e3);
          },
          onContextMenu: function onContextMenu(e3) {
            return _this2._valueRightClickHandler(d2, e3);
          },
          onMouseOver: function onMouseOver(e3) {
            return _this2._valueMouseOverHandler(d2, e3);
          },
          onMouseOut: function onMouseOut(e3) {
            return _this2._valueMouseOutHandler(d2, e3);
          }
        };
        return react.createElement("path", attrs);
      }));
    }
  }]);
  return HexbinSeries2;
}(AbstractSeries);
HexbinSeries.propTypes = _extends$e2({}, AbstractSeries.propTypes, {
  radius: propTypes.number
});
HexbinSeries.defaultProps = {
  radius: 20,
  colorRange: CONTINUOUS_COLOR_RANGE,
  xOffset: 0,
  yOffset: 0
};
HexbinSeries.displayName = "HexbinSeries";
var _extends$f2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$d3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$d3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$d3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$d3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function getLocs(evt) {
  var xLoc = evt.type === "touchstart" ? evt.pageX : evt.offsetX;
  var yLoc = evt.type === "touchstart" ? evt.pageY : evt.offsetY;
  return {xLoc, yLoc};
}
var Highlight = function(_AbstractSeries) {
  _inherits$d3(Highlight2, _AbstractSeries);
  function Highlight2() {
    var _ref;
    var _temp, _this, _ret;
    _classCallCheck$d3(this, Highlight2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn$d3(this, (_ref = Highlight2.__proto__ || Object.getPrototypeOf(Highlight2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      dragging: false,
      brushArea: {top: 0, right: 0, bottom: 0, left: 0},
      brushing: false,
      startLocX: 0,
      startLocY: 0,
      dragArea: null
    }, _temp), _possibleConstructorReturn$d3(_this, _ret);
  }
  _createClass$d3(Highlight2, [{
    key: "_getDrawArea",
    value: function _getDrawArea(xLoc, yLoc) {
      var _state = this.state, startLocX = _state.startLocX, startLocY = _state.startLocY;
      var _props = this.props, enableX = _props.enableX, enableY = _props.enableY, highlightWidth = _props.highlightWidth, highlightHeight = _props.highlightHeight, innerWidth = _props.innerWidth, innerHeight = _props.innerHeight, marginLeft = _props.marginLeft, marginRight = _props.marginRight, marginBottom = _props.marginBottom, marginTop = _props.marginTop;
      var plotHeight = innerHeight + marginTop + marginBottom;
      var plotWidth = innerWidth + marginLeft + marginRight;
      var touchWidth = highlightWidth || plotWidth;
      var touchHeight = highlightHeight || plotHeight;
      return {
        bottom: enableY ? Math.max(startLocY, yLoc) : touchHeight,
        right: enableX ? Math.max(startLocX, xLoc) : touchWidth,
        left: enableX ? Math.min(xLoc, startLocX) : 0,
        top: enableY ? Math.min(yLoc, startLocY) : 0
      };
    }
  }, {
    key: "_getDragArea",
    value: function _getDragArea(xLoc, yLoc) {
      var _props2 = this.props, enableX = _props2.enableX, enableY = _props2.enableY;
      var _state2 = this.state, startLocX = _state2.startLocX, startLocY = _state2.startLocY, dragArea = _state2.dragArea;
      return {
        bottom: dragArea.bottom + (enableY ? yLoc - startLocY : 0),
        left: dragArea.left + (enableX ? xLoc - startLocX : 0),
        right: dragArea.right + (enableX ? xLoc - startLocX : 0),
        top: dragArea.top + (enableY ? yLoc - startLocY : 0)
      };
    }
  }, {
    key: "_clickedOutsideDrag",
    value: function _clickedOutsideDrag(xLoc, yLoc) {
      var _props3 = this.props, enableX = _props3.enableX, enableY = _props3.enableY;
      var _state3 = this.state, dragArea = _state3.dragArea, _state3$brushArea = _state3.brushArea, left2 = _state3$brushArea.left, right2 = _state3$brushArea.right, top2 = _state3$brushArea.top, bottom2 = _state3$brushArea.bottom;
      var clickedOutsideDragX = dragArea && (xLoc < left2 || xLoc > right2);
      var clickedOutsideDragY = dragArea && (yLoc < top2 || yLoc > bottom2);
      if (enableX && enableY) {
        return clickedOutsideDragX || clickedOutsideDragY;
      }
      if (enableX) {
        return clickedOutsideDragX;
      }
      if (enableY) {
        return clickedOutsideDragY;
      }
      return true;
    }
  }, {
    key: "_convertAreaToCoordinates",
    value: function _convertAreaToCoordinates(brushArea) {
      var _props4 = this.props, enableX = _props4.enableX, enableY = _props4.enableY, marginLeft = _props4.marginLeft, marginTop = _props4.marginTop;
      var xScale = getAttributeScale(this.props, "x");
      var yScale = getAttributeScale(this.props, "y");
      if (enableX && enableY) {
        return {
          bottom: yScale.invert(brushArea.bottom),
          left: xScale.invert(brushArea.left - marginLeft),
          right: xScale.invert(brushArea.right - marginLeft),
          top: yScale.invert(brushArea.top)
        };
      }
      if (enableY) {
        return {
          bottom: yScale.invert(brushArea.bottom - marginTop),
          top: yScale.invert(brushArea.top - marginTop)
        };
      }
      if (enableX) {
        return {
          left: xScale.invert(brushArea.left - marginLeft),
          right: xScale.invert(brushArea.right - marginLeft)
        };
      }
      return {};
    }
  }, {
    key: "startBrushing",
    value: function startBrushing(e3) {
      var _this2 = this;
      var _props5 = this.props, onBrushStart = _props5.onBrushStart, onDragStart = _props5.onDragStart, drag = _props5.drag;
      var dragArea = this.state.dragArea;
      var _getLocs = getLocs(e3.nativeEvent), xLoc = _getLocs.xLoc, yLoc = _getLocs.yLoc;
      var startArea = function startArea2(dragging, resetDrag) {
        var emptyBrush = {
          bottom: yLoc,
          left: xLoc,
          right: xLoc,
          top: yLoc
        };
        _this2.setState({
          dragging,
          brushArea: dragArea && !resetDrag ? dragArea : emptyBrush,
          brushing: !dragging,
          startLocX: xLoc,
          startLocY: yLoc
        });
      };
      var clickedOutsideDrag = this._clickedOutsideDrag(xLoc, yLoc);
      if (drag && !dragArea || !drag || clickedOutsideDrag) {
        startArea(false, clickedOutsideDrag);
        if (onBrushStart) {
          onBrushStart(e3);
        }
        return;
      }
      if (drag && dragArea) {
        startArea(true, clickedOutsideDrag);
        if (onDragStart) {
          onDragStart(e3);
        }
      }
    }
  }, {
    key: "stopBrushing",
    value: function stopBrushing(e3) {
      var _state4 = this.state, brushing = _state4.brushing, dragging = _state4.dragging, brushArea = _state4.brushArea;
      if (!brushing && !dragging) {
        return;
      }
      var _props6 = this.props, onBrushEnd = _props6.onBrushEnd, onDragEnd = _props6.onDragEnd, drag = _props6.drag;
      var noHorizontal = Math.abs(brushArea.right - brushArea.left) < 5;
      var noVertical = Math.abs(brushArea.top - brushArea.bottom) < 5;
      var isNulled = noVertical || noHorizontal;
      this.setState({
        brushing: false,
        dragging: false,
        brushArea: drag ? brushArea : {top: 0, right: 0, bottom: 0, left: 0},
        startLocX: 0,
        startLocY: 0,
        dragArea: drag && !isNulled && brushArea
      });
      if (brushing && onBrushEnd) {
        onBrushEnd(!isNulled ? this._convertAreaToCoordinates(brushArea) : null);
      }
      if (drag && onDragEnd) {
        onDragEnd(!isNulled ? this._convertAreaToCoordinates(brushArea) : null);
      }
    }
  }, {
    key: "onBrush",
    value: function onBrush(e3) {
      var _props7 = this.props, onBrush2 = _props7.onBrush, onDrag = _props7.onDrag, drag = _props7.drag;
      var _state5 = this.state, brushing = _state5.brushing, dragging = _state5.dragging;
      var _getLocs2 = getLocs(e3.nativeEvent), xLoc = _getLocs2.xLoc, yLoc = _getLocs2.yLoc;
      if (brushing) {
        var brushArea = this._getDrawArea(xLoc, yLoc);
        this.setState({brushArea});
        if (onBrush2) {
          onBrush2(this._convertAreaToCoordinates(brushArea));
        }
      }
      if (drag && dragging) {
        var _brushArea = this._getDragArea(xLoc, yLoc);
        this.setState({brushArea: _brushArea});
        if (onDrag) {
          onDrag(this._convertAreaToCoordinates(_brushArea));
        }
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _this3 = this;
      var _props8 = this.props, color3 = _props8.color, className = _props8.className, highlightHeight = _props8.highlightHeight, highlightWidth = _props8.highlightWidth, highlightX = _props8.highlightX, highlightY = _props8.highlightY, innerWidth = _props8.innerWidth, innerHeight = _props8.innerHeight, marginLeft = _props8.marginLeft, marginRight = _props8.marginRight, marginTop = _props8.marginTop, marginBottom = _props8.marginBottom, opacity = _props8.opacity;
      var _state$brushArea = this.state.brushArea, left2 = _state$brushArea.left, right2 = _state$brushArea.right, top2 = _state$brushArea.top, bottom2 = _state$brushArea.bottom;
      var leftPos = 0;
      if (highlightX) {
        var xScale = getAttributeScale(this.props, "x");
        leftPos = xScale(highlightX);
      }
      var topPos = 0;
      if (highlightY) {
        var yScale = getAttributeScale(this.props, "y");
        topPos = yScale(highlightY);
      }
      var plotWidth = marginLeft + marginRight + innerWidth;
      var plotHeight = marginTop + marginBottom + innerHeight;
      var touchWidth = highlightWidth || plotWidth;
      var touchHeight = highlightHeight || plotHeight;
      return react.createElement("g", {
        transform: "translate(" + leftPos + ", " + topPos + ")",
        className: className + " rv-highlight-container"
      }, react.createElement("rect", {
        className: "rv-mouse-target",
        fill: "black",
        opacity: "0",
        x: "0",
        y: "0",
        width: Math.max(touchWidth, 0),
        height: Math.max(touchHeight, 0),
        onMouseDown: function onMouseDown(e3) {
          return _this3.startBrushing(e3);
        },
        onMouseMove: function onMouseMove(e3) {
          return _this3.onBrush(e3);
        },
        onMouseUp: function onMouseUp(e3) {
          return _this3.stopBrushing(e3);
        },
        onMouseLeave: function onMouseLeave(e3) {
          return _this3.stopBrushing(e3);
        },
        onTouchEnd: function onTouchEnd(e3) {
          e3.preventDefault();
          _this3.stopBrushing(e3);
        },
        onTouchCancel: function onTouchCancel(e3) {
          e3.preventDefault();
          _this3.stopBrushing(e3);
        },
        onContextMenu: function onContextMenu(e3) {
          return e3.preventDefault();
        },
        onContextMenuCapture: function onContextMenuCapture(e3) {
          return e3.preventDefault();
        }
      }), react.createElement("rect", {
        className: "rv-highlight",
        pointerEvents: "none",
        opacity,
        fill: color3,
        x: left2,
        y: top2,
        width: Math.min(Math.max(0, right2 - left2), touchWidth),
        height: Math.min(Math.max(0, bottom2 - top2), touchHeight)
      }));
    }
  }]);
  return Highlight2;
}(AbstractSeries);
Highlight.displayName = "HighlightOverlay";
Highlight.defaultProps = {
  color: "rgb(77, 182, 172)",
  className: "",
  enableX: true,
  enableY: true,
  opacity: 0.3
};
Highlight.propTypes = _extends$f2({}, AbstractSeries.propTypes, {
  enableX: propTypes.bool,
  enableY: propTypes.bool,
  highlightHeight: propTypes.number,
  highlightWidth: propTypes.number,
  highlightX: propTypes.oneOfType([propTypes.string, propTypes.number]),
  highlightY: propTypes.oneOfType([propTypes.string, propTypes.number]),
  onBrushStart: propTypes.func,
  onDragStart: propTypes.func,
  onBrush: propTypes.func,
  onDrag: propTypes.func,
  onBrushEnd: propTypes.func,
  onDragEnd: propTypes.func
});
var _extends$g2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$e3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$e3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$e3(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$e3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ALIGN = {
  AUTO: "auto",
  LEFT: "left",
  RIGHT: "right",
  LEFT_EDGE: "leftEdge",
  RIGHT_EDGE: "rightEdge",
  BOTTOM: "bottom",
  TOP: "top",
  BOTTOM_EDGE: "bottomEdge",
  TOP_EDGE: "topEdge"
};
var ORIENTATION$1 = {
  BOTTOM_LEFT: "bottomleft",
  BOTTOM_RIGHT: "bottomright",
  TOP_LEFT: "topleft",
  TOP_RIGHT: "topright"
};
function defaultFormat(value2) {
  return Object.keys(value2).map(function getProp(key) {
    return {title: key, value: transformValueToString(value2[key])};
  });
}
var Hint = function(_PureComponent) {
  _inherits$e3(Hint2, _PureComponent);
  function Hint2() {
    _classCallCheck$e3(this, Hint2);
    return _possibleConstructorReturn$e3(this, (Hint2.__proto__ || Object.getPrototypeOf(Hint2)).apply(this, arguments));
  }
  _createClass$e3(Hint2, [{
    key: "_getAlign",
    value: function _getAlign(x5, y7) {
      var _props = this.props, innerWidth = _props.innerWidth, innerHeight = _props.innerHeight, orientation = _props.orientation, _props$align = _props.align, horizontal = _props$align.horizontal, vertical = _props$align.vertical;
      var align = orientation ? this._mapOrientationToAlign(orientation) : {horizontal, vertical};
      if (horizontal === ALIGN.AUTO) {
        align.horizontal = x5 > innerWidth / 2 ? ALIGN.LEFT : ALIGN.RIGHT;
      }
      if (vertical === ALIGN.AUTO) {
        align.vertical = y7 > innerHeight / 2 ? ALIGN.TOP : ALIGN.BOTTOM;
      }
      return align;
    }
  }, {
    key: "_getAlignClassNames",
    value: function _getAlignClassNames(align) {
      var orientation = this.props.orientation;
      var orientationClass = orientation ? "rv-hint--orientation-" + orientation : "";
      return orientationClass + " rv-hint--horizontalAlign-" + align.horizontal + "\n     rv-hint--verticalAlign-" + align.vertical;
    }
  }, {
    key: "_getAlignStyle",
    value: function _getAlignStyle(align, x5, y7) {
      return _extends$g2({}, this._getXCSS(align.horizontal, x5), this._getYCSS(align.vertical, y7));
    }
  }, {
    key: "_getCSSBottom",
    value: function _getCSSBottom(y7) {
      if (y7 === void 0 || y7 === null) {
        return {
          bottom: 0
        };
      }
      var _props2 = this.props, innerHeight = _props2.innerHeight, marginBottom = _props2.marginBottom;
      return {
        bottom: marginBottom + innerHeight - y7
      };
    }
  }, {
    key: "_getCSSLeft",
    value: function _getCSSLeft(x5) {
      if (x5 === void 0 || x5 === null) {
        return {
          left: 0
        };
      }
      var marginLeft = this.props.marginLeft;
      return {
        left: marginLeft + x5
      };
    }
  }, {
    key: "_getCSSRight",
    value: function _getCSSRight(x5) {
      if (x5 === void 0 || x5 === null) {
        return {
          right: 0
        };
      }
      var _props3 = this.props, innerWidth = _props3.innerWidth, marginRight = _props3.marginRight;
      return {
        right: marginRight + innerWidth - x5
      };
    }
  }, {
    key: "_getCSSTop",
    value: function _getCSSTop(y7) {
      if (y7 === void 0 || y7 === null) {
        return {
          top: 0
        };
      }
      var marginTop = this.props.marginTop;
      return {
        top: marginTop + y7
      };
    }
  }, {
    key: "_getPositionInfo",
    value: function _getPositionInfo() {
      var _props4 = this.props, value2 = _props4.value, getAlignStyle = _props4.getAlignStyle;
      var x5 = getAttributeFunctor(this.props, "x")(value2);
      var y7 = getAttributeFunctor(this.props, "y")(value2);
      var align = this._getAlign(x5, y7);
      return {
        position: getAlignStyle ? getAlignStyle(align, x5, y7) : this._getAlignStyle(align, x5, y7),
        positionClassName: this._getAlignClassNames(align)
      };
    }
  }, {
    key: "_getXCSS",
    value: function _getXCSS(horizontal, x5) {
      switch (horizontal) {
        case ALIGN.LEFT_EDGE:
          return this._getCSSLeft(null);
        case ALIGN.RIGHT_EDGE:
          return this._getCSSRight(null);
        case ALIGN.LEFT:
          return this._getCSSRight(x5);
        case ALIGN.RIGHT:
        default:
          return this._getCSSLeft(x5);
      }
    }
  }, {
    key: "_getYCSS",
    value: function _getYCSS(verticalAlign, y7) {
      switch (verticalAlign) {
        case ALIGN.TOP_EDGE:
          return this._getCSSTop(null);
        case ALIGN.BOTTOM_EDGE:
          return this._getCSSBottom(null);
        case ALIGN.BOTTOM:
          return this._getCSSTop(y7);
        case ALIGN.TOP:
        default:
          return this._getCSSBottom(y7);
      }
    }
  }, {
    key: "_mapOrientationToAlign",
    value: function _mapOrientationToAlign(orientation) {
      switch (orientation) {
        case ORIENTATION$1.BOTTOM_LEFT:
          return {
            horizontal: ALIGN.LEFT,
            vertical: ALIGN.BOTTOM
          };
        case ORIENTATION$1.BOTTOM_RIGHT:
          return {
            horizontal: ALIGN.RIGHT,
            vertical: ALIGN.BOTTOM
          };
        case ORIENTATION$1.TOP_LEFT:
          return {
            horizontal: ALIGN.LEFT,
            vertical: ALIGN.TOP
          };
        case ORIENTATION$1.TOP_RIGHT:
          return {
            horizontal: ALIGN.RIGHT,
            vertical: ALIGN.TOP
          };
      }
    }
  }, {
    key: "render",
    value: function render2() {
      var _props5 = this.props, value2 = _props5.value, format6 = _props5.format, children2 = _props5.children, style = _props5.style, className = _props5.className;
      var _getPositionInfo2 = this._getPositionInfo(), position = _getPositionInfo2.position, positionClassName = _getPositionInfo2.positionClassName;
      return react.createElement("div", {
        className: "rv-hint " + positionClassName + " " + className,
        style: _extends$g2({}, style, position, {
          position: "absolute"
        })
      }, children2 ? children2 : react.createElement("div", {className: "rv-hint__content", style: style.content}, format6(value2).map(function(formattedProp, i) {
        return react.createElement("div", {key: "rv-hint" + i, style: style.row}, react.createElement("span", {className: "rv-hint__title", style: style.title}, formattedProp.title), ": ", react.createElement("span", {className: "rv-hint__value", style: style.value}, formattedProp.value));
      })));
    }
  }], [{
    key: "defaultProps",
    get: function get4() {
      return {
        format: defaultFormat,
        align: {
          horizontal: ALIGN.AUTO,
          vertical: ALIGN.AUTO
        },
        style: {}
      };
    }
  }, {
    key: "propTypes",
    get: function get4() {
      return {
        marginTop: propTypes.number,
        marginLeft: propTypes.number,
        innerWidth: propTypes.number,
        innerHeight: propTypes.number,
        scales: propTypes.object,
        value: propTypes.object,
        format: propTypes.func,
        style: propTypes.object,
        className: propTypes.string,
        align: propTypes.shape({
          horizontal: propTypes.oneOf([ALIGN.AUTO, ALIGN.LEFT, ALIGN.RIGHT, ALIGN.LEFT_EDGE, ALIGN.RIGHT_EDGE]),
          vertical: propTypes.oneOf([ALIGN.AUTO, ALIGN.BOTTOM, ALIGN.TOP, ALIGN.BOTTOM_EDGE, ALIGN.TOP_EDGE])
        }),
        getAlignStyle: propTypes.func,
        orientation: propTypes.oneOf([ORIENTATION$1.BOTTOM_LEFT, ORIENTATION$1.BOTTOM_RIGHT, ORIENTATION$1.TOP_LEFT, ORIENTATION$1.TOP_RIGHT])
      };
    }
  }]);
  return Hint2;
}(react.PureComponent);
Hint.displayName = "Hint";
Hint.ORIENTATION = ORIENTATION$1;
Hint.ALIGN = ALIGN;
var _extends$h2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$f3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty$33(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$f3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$f2(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$f2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$7 = "rv-xy-plot__series rv-xy-plot__series--bar";
var BarSeries = function(_AbstractSeries) {
  _inherits$f2(BarSeries2, _AbstractSeries);
  function BarSeries2() {
    _classCallCheck$f3(this, BarSeries2);
    return _possibleConstructorReturn$f2(this, (BarSeries2.__proto__ || Object.getPrototypeOf(BarSeries2)).apply(this, arguments));
  }
  _createClass$f3(BarSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, data3 = _props.data, linePosAttr = _props.linePosAttr, lineSizeAttr = _props.lineSizeAttr, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style, valuePosAttr = _props.valuePosAttr, valueSizeAttr = _props.valueSizeAttr, barWidth = _props.barWidth;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$h2({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(BarSeries2, _extends$h2({}, this.props, {animation: null})));
      }
      var _getStackParams = getStackParams(this.props), sameTypeTotal = _getStackParams.sameTypeTotal, sameTypeIndex = _getStackParams.sameTypeIndex;
      var distance = this._getScaleDistance(linePosAttr);
      var lineFunctor = this._getAttributeFunctor(linePosAttr);
      var valueFunctor = this._getAttributeFunctor(valuePosAttr);
      var value0Functor = this._getAttr0Functor(valuePosAttr);
      var fillFunctor = this._getAttributeFunctor("fill") || this._getAttributeFunctor("color");
      var strokeFunctor = this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color");
      var opacityFunctor = this._getAttributeFunctor("opacity");
      var halfSpace = distance / 2 * barWidth;
      return react.createElement("g", {
        className: predefinedClassName$7 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, data3.map(function(d2, i) {
        var _attrs;
        var totalSpaceAvailable = halfSpace * 2;
        var totalSpaceCenter = lineFunctor(d2);
        var totalSpaceStartingPoint = totalSpaceCenter - halfSpace;
        var spaceTakenByInterBarsPixels = (sameTypeTotal - 1) / sameTypeTotal;
        var spacePerBar = totalSpaceAvailable / sameTypeTotal - spaceTakenByInterBarsPixels;
        var barStartingPoint = totalSpaceStartingPoint + spacePerBar * sameTypeIndex + sameTypeIndex;
        var attrs = (_attrs = {
          style: _extends$h2({
            opacity: opacityFunctor && opacityFunctor(d2),
            stroke: strokeFunctor && strokeFunctor(d2),
            fill: fillFunctor && fillFunctor(d2)
          }, style)
        }, _defineProperty$33(_attrs, linePosAttr, barStartingPoint), _defineProperty$33(_attrs, lineSizeAttr, spacePerBar), _defineProperty$33(_attrs, valuePosAttr, Math.min(value0Functor(d2), valueFunctor(d2))), _defineProperty$33(_attrs, valueSizeAttr, Math.abs(-value0Functor(d2) + valueFunctor(d2))), _defineProperty$33(_attrs, "onClick", function onClick(e3) {
          return _this2._valueClickHandler(d2, e3);
        }), _defineProperty$33(_attrs, "onContextMenu", function onContextMenu(e3) {
          return _this2._valueRightClickHandler(d2, e3);
        }), _defineProperty$33(_attrs, "onMouseOver", function onMouseOver(e3) {
          return _this2._valueMouseOverHandler(d2, e3);
        }), _defineProperty$33(_attrs, "onMouseOut", function onMouseOut(e3) {
          return _this2._valueMouseOutHandler(d2, e3);
        }), _defineProperty$33(_attrs, "key", i), _attrs);
        return react.createElement("rect", attrs);
      }));
    }
  }], [{
    key: "propTypes",
    get: function get4() {
      return _extends$h2({}, AbstractSeries.propTypes, {
        linePosAttr: propTypes.string,
        valuePosAttr: propTypes.string,
        lineSizeAttr: propTypes.string,
        valueSizeAttr: propTypes.string,
        cluster: propTypes.string,
        barWidth: propTypes.number
      });
    }
  }, {
    key: "defaultProps",
    get: function get4() {
      return {
        barWidth: 0.85
      };
    }
  }]);
  return BarSeries2;
}(AbstractSeries);
BarSeries.displayName = "BarSeries";
var _extends$i2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$g2 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$g2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$g2(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$g2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalBarSeries = function(_AbstractSeries) {
  _inherits$g2(HorizontalBarSeries2, _AbstractSeries);
  function HorizontalBarSeries2() {
    _classCallCheck$g2(this, HorizontalBarSeries2);
    return _possibleConstructorReturn$g2(this, (HorizontalBarSeries2.__proto__ || Object.getPrototypeOf(HorizontalBarSeries2)).apply(this, arguments));
  }
  _createClass$g2(HorizontalBarSeries2, [{
    key: "render",
    value: function render2() {
      return react.createElement(BarSeries, _extends$i2({}, this.props, {
        linePosAttr: "y",
        valuePosAttr: "x",
        lineSizeAttr: "height",
        valueSizeAttr: "width"
      }));
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = attr === "y";
      var zeroBaseValue = attr === "x";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }]);
  return HorizontalBarSeries2;
}(AbstractSeries);
HorizontalBarSeries.displayName = "HorizontalBarSeries";
var _extends$j2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$h2 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$h2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$h(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$h(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function getScaleDistance(props, attr) {
  var scaleObject = getScaleObjectFromProps(props, attr);
  return scaleObject ? scaleObject.distance : 0;
}
var BarSeriesCanvas = function(_AbstractSeries) {
  _inherits$h(BarSeriesCanvas2, _AbstractSeries);
  function BarSeriesCanvas2() {
    _classCallCheck$h2(this, BarSeriesCanvas2);
    return _possibleConstructorReturn$h(this, (BarSeriesCanvas2.__proto__ || Object.getPrototypeOf(BarSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$h2(BarSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      var data3 = props.data, linePosAttr = props.linePosAttr, lineSizeAttr = props.lineSizeAttr, valuePosAttr = props.valuePosAttr, marginTop = props.marginTop, marginBottom = props.marginBottom;
      if (!data3 || data3.length === 0) {
        return;
      }
      var distance = getScaleDistance(props, linePosAttr);
      var line2 = getAttributeFunctor(props, linePosAttr);
      var value2 = getAttributeFunctor(props, valuePosAttr);
      var value0 = getAttr0Functor(props, valuePosAttr);
      var fill = getAttributeFunctor(props, "fill") || getAttributeFunctor(props, "color");
      var stroke = getAttributeFunctor(props, "stroke") || getAttributeFunctor(props, "color");
      var opacity = getAttributeFunctor(props, "opacity");
      var halfSpace = distance / 2 * 0.85;
      var totalSpaceAvailable = halfSpace * 2;
      var _getStackParams = getStackParams(props), sameTypeTotal = _getStackParams.sameTypeTotal, sameTypeIndex = _getStackParams.sameTypeIndex;
      data3.forEach(function(row) {
        var totalSpaceCenter = line2(row);
        var totalSpaceStartingPoint = totalSpaceCenter - halfSpace;
        var spaceTakenByInterBarsPixels = (sameTypeTotal - 1) / sameTypeTotal;
        var lineSize = totalSpaceAvailable / sameTypeTotal - spaceTakenByInterBarsPixels;
        var fillColor = rgb(fill(row));
        var strokeColor = rgb(stroke(row));
        var rowOpacity = opacity(row) || DEFAULT_OPACITY;
        var linePos = totalSpaceStartingPoint + lineSize * sameTypeIndex + sameTypeIndex;
        var valuePos = Math.min(value0(row), value2(row));
        var x5 = valuePosAttr === "x" ? valuePos : linePos;
        var y7 = valuePosAttr === "y" ? valuePos : linePos;
        var valueSize = Math.abs(-value0(row) + value2(row));
        var height = lineSizeAttr === "height" ? lineSize : valueSize;
        var width = lineSizeAttr === "width" ? lineSize : valueSize;
        ctx2.beginPath();
        ctx2.rect(x5 + marginBottom, y7 + marginTop, width, height);
        ctx2.fillStyle = "rgba(" + fillColor.r + ", " + fillColor.g + ", " + fillColor.b + ", " + rowOpacity + ")";
        ctx2.fill();
        ctx2.strokeStyle = "rgba(" + strokeColor.r + ", " + strokeColor.g + ", " + strokeColor.b + ", " + rowOpacity + ")";
        ctx2.stroke();
      });
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return BarSeriesCanvas2;
}(AbstractSeries);
BarSeriesCanvas.displayName = "BarSeriesCanvas";
BarSeriesCanvas.defaultProps = _extends$j2({}, AbstractSeries.defaultProps, {
  linePosAttr: propTypes.string.isRequired,
  valuePosAttr: propTypes.string.isRequired,
  lineSizeAttr: propTypes.string.isRequired,
  valueSizeAttr: propTypes.string.isRequired
});
BarSeriesCanvas.propTypes = _extends$j2({}, AbstractSeries.propTypes);
var _extends$k2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$i = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$i(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$i(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$i(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalBarSeriesCanvas = function(_AbstractSeries) {
  _inherits$i(HorizontalBarSeriesCanvas2, _AbstractSeries);
  function HorizontalBarSeriesCanvas2() {
    _classCallCheck$i(this, HorizontalBarSeriesCanvas2);
    return _possibleConstructorReturn$i(this, (HorizontalBarSeriesCanvas2.__proto__ || Object.getPrototypeOf(HorizontalBarSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$i(HorizontalBarSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = attr === "y";
      var zeroBaseValue = attr === "x";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }, {
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      BarSeriesCanvas.renderLayer(_extends$k2({}, props, {
        linePosAttr: "y",
        valuePosAttr: "x",
        lineSizeAttr: "height",
        valueSizeAttr: "width"
      }), ctx2);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return HorizontalBarSeriesCanvas2;
}(AbstractSeries);
HorizontalBarSeriesCanvas.displayName = "HorizontalBarSeriesCanvas";
HorizontalBarSeriesCanvas.propTypes = _extends$k2({}, AbstractSeries.propTypes);
var _extends$l = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var HORIZONTAL$1 = DIRECTION.HORIZONTAL;
_extends$l({}, GridLines.propTypes, {
  direction: propTypes.oneOf([HORIZONTAL$1])
});
var _extends$m = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$j = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty$43(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$j(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$j(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$j(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$8 = "rv-xy-plot__series rv-xy-plot__series--rect";
var RectSeries = function(_AbstractSeries) {
  _inherits$j(RectSeries2, _AbstractSeries);
  function RectSeries2() {
    _classCallCheck$j(this, RectSeries2);
    return _possibleConstructorReturn$j(this, (RectSeries2.__proto__ || Object.getPrototypeOf(RectSeries2)).apply(this, arguments));
  }
  _createClass$j(RectSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, data3 = _props.data, linePosAttr = _props.linePosAttr, lineSizeAttr = _props.lineSizeAttr, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style, valuePosAttr = _props.valuePosAttr, valueSizeAttr = _props.valueSizeAttr;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$m({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(RectSeries2, _extends$m({}, this.props, {animation: null})));
      }
      var lineFunctor = this._getAttributeFunctor(linePosAttr);
      var line0Functor = this._getAttr0Functor(linePosAttr);
      var valueFunctor = this._getAttributeFunctor(valuePosAttr);
      var value0Functor = this._getAttr0Functor(valuePosAttr);
      var fillFunctor = this._getAttributeFunctor("fill") || this._getAttributeFunctor("color");
      var strokeFunctor = this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color");
      var opacityFunctor = this._getAttributeFunctor("opacity");
      return react.createElement("g", {
        className: predefinedClassName$8 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, data3.map(function(d2, i) {
        var _attrs;
        var attrs = (_attrs = {
          style: _extends$m({
            opacity: opacityFunctor && opacityFunctor(d2),
            stroke: strokeFunctor && strokeFunctor(d2),
            fill: fillFunctor && fillFunctor(d2)
          }, style)
        }, _defineProperty$43(_attrs, linePosAttr, line0Functor(d2)), _defineProperty$43(_attrs, lineSizeAttr, Math.abs(lineFunctor(d2) - line0Functor(d2))), _defineProperty$43(_attrs, valuePosAttr, Math.min(value0Functor(d2), valueFunctor(d2))), _defineProperty$43(_attrs, valueSizeAttr, Math.abs(-value0Functor(d2) + valueFunctor(d2))), _defineProperty$43(_attrs, "onClick", function onClick(e3) {
          return _this2._valueClickHandler(d2, e3);
        }), _defineProperty$43(_attrs, "onContextMenu", function onContextMenu(e3) {
          return _this2._valueRightClickHandler(d2, e3);
        }), _defineProperty$43(_attrs, "onMouseOver", function onMouseOver(e3) {
          return _this2._valueMouseOverHandler(d2, e3);
        }), _defineProperty$43(_attrs, "onMouseOut", function onMouseOut(e3) {
          return _this2._valueMouseOutHandler(d2, e3);
        }), _defineProperty$43(_attrs, "key", i), _attrs);
        return react.createElement("rect", attrs);
      }));
    }
  }], [{
    key: "propTypes",
    get: function get4() {
      return _extends$m({}, AbstractSeries.propTypes, {
        linePosAttr: propTypes.string,
        valuePosAttr: propTypes.string,
        lineSizeAttr: propTypes.string,
        valueSizeAttr: propTypes.string
      });
    }
  }]);
  return RectSeries2;
}(AbstractSeries);
RectSeries.displayName = "RectSeries";
var _extends$n = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$k = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$k(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$k(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$k(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalRectSeries = function(_AbstractSeries) {
  _inherits$k(HorizontalRectSeries2, _AbstractSeries);
  function HorizontalRectSeries2() {
    _classCallCheck$k(this, HorizontalRectSeries2);
    return _possibleConstructorReturn$k(this, (HorizontalRectSeries2.__proto__ || Object.getPrototypeOf(HorizontalRectSeries2)).apply(this, arguments));
  }
  _createClass$k(HorizontalRectSeries2, [{
    key: "render",
    value: function render2() {
      return react.createElement(RectSeries, _extends$n({}, this.props, {
        linePosAttr: "y",
        valuePosAttr: "x",
        lineSizeAttr: "height",
        valueSizeAttr: "width"
      }));
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = false;
      var zeroBaseValue = attr === "x";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }]);
  return HorizontalRectSeries2;
}(AbstractSeries);
HorizontalRectSeries.displayName = "HorizontalRectSeries";
var _extends$o = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$l = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$l(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$l(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$l(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var RectSeriesCanvas = function(_AbstractSeries) {
  _inherits$l(RectSeriesCanvas2, _AbstractSeries);
  function RectSeriesCanvas2() {
    _classCallCheck$l(this, RectSeriesCanvas2);
    return _possibleConstructorReturn$l(this, (RectSeriesCanvas2.__proto__ || Object.getPrototypeOf(RectSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$l(RectSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      var data3 = props.data, linePosAttr = props.linePosAttr, lineSizeAttr = props.lineSizeAttr, marginLeft = props.marginLeft, marginTop = props.marginTop, valuePosAttr = props.valuePosAttr;
      if (!data3 || data3.length === 0) {
        return;
      }
      var line2 = getAttributeFunctor(props, linePosAttr);
      var line0 = getAttr0Functor(props, linePosAttr);
      var value2 = getAttributeFunctor(props, valuePosAttr);
      var value0 = getAttr0Functor(props, valuePosAttr);
      var fill = getAttributeFunctor(props, "fill") || getAttributeFunctor(props, "color");
      var stroke = getAttributeFunctor(props, "stroke") || getAttributeFunctor(props, "color");
      var opacity = getAttributeFunctor(props, "opacity");
      data3.forEach(function(row) {
        var fillColor = rgb(fill(row));
        var strokeColor = rgb(stroke(row));
        var rowOpacity = opacity(row) || DEFAULT_OPACITY;
        var linePos = line0(row);
        var valuePos = Math.min(value0(row), value2(row));
        var x5 = valuePosAttr === "x" ? valuePos : linePos;
        var y7 = valuePosAttr === "y" ? valuePos : linePos;
        var lineSize = Math.abs(line2(row) - line0(row));
        var valueSize = Math.abs(-value0(row) + value2(row));
        var height = lineSizeAttr === "height" ? lineSize : valueSize;
        var width = lineSizeAttr === "width" ? lineSize : valueSize;
        ctx2.beginPath();
        ctx2.rect(x5 + marginLeft, y7 + marginTop, width, height);
        ctx2.fillStyle = "rgba(" + fillColor.r + ", " + fillColor.g + ", " + fillColor.b + ", " + rowOpacity + ")";
        ctx2.fill();
        ctx2.strokeStyle = "rgba(" + strokeColor.r + ", " + strokeColor.g + ", " + strokeColor.b + ", " + rowOpacity + ")";
        ctx2.stroke();
      });
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return RectSeriesCanvas2;
}(AbstractSeries);
RectSeriesCanvas.displayName = "RectSeriesCanvas";
RectSeriesCanvas.defaultProps = _extends$o({}, AbstractSeries.defaultProps, {
  linePosAttr: propTypes.string.isRequired,
  valuePosAttr: propTypes.string.isRequired,
  lineSizeAttr: propTypes.string.isRequired,
  valueSizeAttr: propTypes.string.isRequired
});
RectSeriesCanvas.propTypes = _extends$o({}, AbstractSeries.propTypes);
var _extends$p = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$m = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$m(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$m(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$m(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalRectSeriesCanvas = function(_AbstractSeries) {
  _inherits$m(HorizontalRectSeriesCanvas2, _AbstractSeries);
  function HorizontalRectSeriesCanvas2() {
    _classCallCheck$m(this, HorizontalRectSeriesCanvas2);
    return _possibleConstructorReturn$m(this, (HorizontalRectSeriesCanvas2.__proto__ || Object.getPrototypeOf(HorizontalRectSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$m(HorizontalRectSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = false;
      var zeroBaseValue = attr === "x";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }, {
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      RectSeriesCanvas.renderLayer(_extends$p({}, props, {
        linePosAttr: "y",
        valuePosAttr: "x",
        lineSizeAttr: "height",
        valueSizeAttr: "width"
      }), ctx2);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return HorizontalRectSeriesCanvas2;
}(AbstractSeries);
HorizontalRectSeriesCanvas.displayName = "HorizontalRectSeriesCanvas";
HorizontalRectSeriesCanvas.propTypes = _extends$p({}, AbstractSeries.propTypes);
var _extends$q = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$n = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$n(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$n(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$n(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$9 = "rv-xy-plot__series rv-xy-plot__series--label";
var getTextAnchor2 = function getTextAnchor3(labelAnchorX, leftOfMiddle) {
  return labelAnchorX ? labelAnchorX : leftOfMiddle ? "start" : "end";
};
var getDominantBaseline = function getDominantBaseline2(labelAnchorY, aboveMiddle) {
  return labelAnchorY ? labelAnchorY : aboveMiddle ? "text-before-edge" : "text-after-edge";
};
var LabelSeries = function(_AbstractSeries) {
  _inherits$n(LabelSeries2, _AbstractSeries);
  function LabelSeries2() {
    _classCallCheck$n(this, LabelSeries2);
    return _possibleConstructorReturn$n(this, (LabelSeries2.__proto__ || Object.getPrototypeOf(LabelSeries2)).apply(this, arguments));
  }
  _createClass$n(LabelSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, allowOffsetToBeReversed = _props.allowOffsetToBeReversed, className = _props.className, data3 = _props.data, _data = _props._data, getLabel5 = _props.getLabel, marginLeft = _props.marginLeft, marginTop = _props.marginTop, rotation2 = _props.rotation, style = _props.style, xRange = _props.xRange, yRange = _props.yRange, labelAnchorX = _props.labelAnchorX, labelAnchorY = _props.labelAnchorY;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$q({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(LabelSeries2, _extends$q({}, this.props, {animation: null, _data: data3})));
      }
      var xFunctor = this._getAttributeFunctor("x");
      var yFunctor = this._getAttributeFunctor("y");
      return react.createElement("g", {
        className: predefinedClassName$9 + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")",
        style
      }, data3.reduce(function(res, d2, i) {
        var markStyle = d2.style, xOffset = d2.xOffset, yOffset = d2.yOffset;
        if (!getLabel5(d2)) {
          return res;
        }
        var xVal = xFunctor(d2);
        var yVal = yFunctor(d2);
        var leftOfMiddle = xVal < (xRange[1] - xRange[0]) / 2;
        var aboveMiddle = yVal < Math.abs(yRange[1] - yRange[0]) / 2;
        var x5 = xVal + (allowOffsetToBeReversed && leftOfMiddle ? -1 : 1) * (xOffset || 0);
        var y7 = yVal + (allowOffsetToBeReversed && aboveMiddle ? -1 : 1) * (yOffset || 0);
        var hasRotationValueSet = d2.rotation === 0 || d2.rotation;
        var labelRotation = hasRotationValueSet ? d2.rotation : rotation2;
        var attrs = _extends$q({
          dominantBaseline: getDominantBaseline(labelAnchorY, aboveMiddle),
          className: "rv-xy-plot__series--label-text",
          key: i,
          onClick: function onClick(e3) {
            return _this2._valueClickHandler(d2, e3);
          },
          onContextMenu: function onContextMenu(e3) {
            return _this2._valueRightClickHandler(d2, e3);
          },
          onMouseOver: function onMouseOver(e3) {
            return _this2._valueMouseOverHandler(d2, e3);
          },
          onMouseOut: function onMouseOut(e3) {
            return _this2._valueMouseOutHandler(d2, e3);
          },
          textAnchor: getTextAnchor2(labelAnchorX, leftOfMiddle),
          x: x5,
          y: y7,
          transform: "rotate(" + labelRotation + "," + x5 + "," + y7 + ")"
        }, markStyle);
        var textContent = getLabel5(_data ? _data[i] : d2);
        return res.concat([react.createElement("text", attrs, textContent)]);
      }, []));
    }
  }]);
  return LabelSeries2;
}(AbstractSeries);
LabelSeries.propTypes = {
  animation: propTypes.bool,
  allowOffsetToBeReversed: propTypes.bool,
  className: propTypes.string,
  data: propTypes.arrayOf(propTypes.shape({
    x: propTypes.oneOfType([propTypes.number, propTypes.string]),
    y: propTypes.oneOfType([propTypes.number, propTypes.string]),
    angle: propTypes.number,
    radius: propTypes.number,
    label: propTypes.string,
    xOffset: propTypes.number,
    yOffset: propTypes.number,
    style: propTypes.object
  })).isRequired,
  marginLeft: propTypes.number,
  marginTop: propTypes.number,
  rotation: propTypes.number,
  style: propTypes.object,
  xRange: propTypes.arrayOf(propTypes.number),
  yRange: propTypes.arrayOf(propTypes.number),
  labelAnchorX: propTypes.string,
  labelAnchorY: propTypes.string
};
LabelSeries.defaultProps = _extends$q({}, AbstractSeries.defaultProps, {
  animation: false,
  rotation: 0,
  getLabel: function getLabel3(d2) {
    return d2.label;
  }
});
LabelSeries.displayName = "LabelSeries";
var _extends$r = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$o = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$o(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$o(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$o(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$a = "rv-xy-plot__series rv-xy-plot__series--line";
var STROKE_STYLES = {
  dashed: "6, 2",
  solid: null
};
var LineSeries = function(_AbstractSeries) {
  _inherits$o(LineSeries2, _AbstractSeries);
  function LineSeries2() {
    _classCallCheck$o(this, LineSeries2);
    return _possibleConstructorReturn$o(this, (LineSeries2.__proto__ || Object.getPrototypeOf(LineSeries2)).apply(this, arguments));
  }
  _createClass$o(LineSeries2, [{
    key: "_renderLine",
    value: function _renderLine(data3, x5, y7, curve, getNull4) {
      var line2 = d3Line();
      if (curve !== null) {
        if (typeof curve === "string" && d3Shape[curve]) {
          line2 = line2.curve(d3Shape[curve]);
        } else if (typeof curve === "function") {
          line2 = line2.curve(curve);
        }
      }
      line2 = line2.defined(getNull4);
      line2 = line2.x(x5).y(y7);
      return line2(data3);
    }
  }, {
    key: "render",
    value: function render2() {
      var _props = this.props, animation = _props.animation, className = _props.className, data3 = _props.data;
      if (this.props.nullAccessor) {
        warning("nullAccessor has been renamed to getNull", true);
      }
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$r({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(LineSeries2, _extends$r({}, this.props, {animation: null})));
      }
      var _props2 = this.props, curve = _props2.curve, marginLeft = _props2.marginLeft, marginTop = _props2.marginTop, strokeDasharray2 = _props2.strokeDasharray, strokeStyle = _props2.strokeStyle, strokeWidth = _props2.strokeWidth, style = _props2.style;
      var x5 = this._getAttributeFunctor("x");
      var y7 = this._getAttributeFunctor("y");
      var stroke = this._getAttributeValue("stroke") || this._getAttributeValue("color");
      var newOpacity = this._getAttributeValue("opacity");
      var opacity = Number.isFinite(newOpacity) ? newOpacity : DEFAULT_OPACITY;
      var getNull4 = this.props.nullAccessor || this.props.getNull;
      var d2 = this._renderLine(data3, x5, y7, curve, getNull4);
      return react.createElement("path", {
        d: d2,
        className: predefinedClassName$a + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")",
        onMouseOver: this._seriesMouseOverHandler,
        onMouseOut: this._seriesMouseOutHandler,
        onClick: this._seriesClickHandler,
        onContextMenu: this._seriesRightClickHandler,
        style: _extends$r({
          opacity,
          strokeDasharray: STROKE_STYLES[strokeStyle] || strokeDasharray2,
          strokeWidth,
          stroke
        }, style)
      });
    }
  }]);
  return LineSeries2;
}(AbstractSeries);
LineSeries.displayName = "LineSeries";
LineSeries.propTypes = _extends$r({}, AbstractSeries.propTypes, {
  strokeStyle: propTypes.oneOf(Object.keys(STROKE_STYLES)),
  curve: propTypes.oneOfType([propTypes.string, propTypes.func]),
  getNull: propTypes.func
});
LineSeries.defaultProps = _extends$r({}, AbstractSeries.defaultProps, {
  strokeStyle: "solid",
  style: {},
  opacity: 1,
  curve: null,
  className: "",
  getNull: function getNull2() {
    return true;
  }
});
var _extends$s = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$p = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$p(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$p(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$p(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$b = "rv-xy-plot__series rv-xy-plot__series--mark";
var DEFAULT_STROKE_WIDTH = 1;
var MarkSeries = function(_AbstractSeries) {
  _inherits$p(MarkSeries2, _AbstractSeries);
  function MarkSeries2() {
    _classCallCheck$p(this, MarkSeries2);
    return _possibleConstructorReturn$p(this, (MarkSeries2.__proto__ || Object.getPrototypeOf(MarkSeries2)).apply(this, arguments));
  }
  _createClass$p(MarkSeries2, [{
    key: "_renderCircle",
    value: function _renderCircle(d2, i, strokeWidth, style, scalingFunctions) {
      var _this2 = this;
      var fill = scalingFunctions.fill, opacity = scalingFunctions.opacity, size = scalingFunctions.size, stroke = scalingFunctions.stroke, x5 = scalingFunctions.x, y7 = scalingFunctions.y;
      var attrs = {
        r: size ? size(d2) : DEFAULT_SIZE,
        cx: x5(d2),
        cy: y7(d2),
        style: _extends$s({
          opacity: opacity ? opacity(d2) : DEFAULT_OPACITY,
          stroke: stroke && stroke(d2),
          fill: fill && fill(d2),
          strokeWidth: strokeWidth || DEFAULT_STROKE_WIDTH
        }, style),
        key: i,
        onClick: function onClick(e3) {
          return _this2._valueClickHandler(d2, e3);
        },
        onContextMenu: function onContextMenu(e3) {
          return _this2._valueRightClickHandler(d2, e3);
        },
        onMouseOver: function onMouseOver(e3) {
          return _this2._valueMouseOverHandler(d2, e3);
        },
        onMouseOut: function onMouseOut(e3) {
          return _this2._valueMouseOutHandler(d2, e3);
        }
      };
      return react.createElement("circle", attrs);
    }
  }, {
    key: "render",
    value: function render2() {
      var _this3 = this;
      var _props = this.props, animation = _props.animation, className = _props.className, data3 = _props.data, marginLeft = _props.marginLeft, marginTop = _props.marginTop, strokeWidth = _props.strokeWidth, style = _props.style;
      if (this.props.nullAccessor) {
        warning("nullAccessor has been renamed to getNull", true);
      }
      var getNull4 = this.props.nullAccessor || this.props.getNull;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$s({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(MarkSeries2, _extends$s({}, this.props, {animation: null})));
      }
      var scalingFunctions = {
        fill: this._getAttributeFunctor("fill") || this._getAttributeFunctor("color"),
        opacity: this._getAttributeFunctor("opacity"),
        size: this._getAttributeFunctor("size"),
        stroke: this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color"),
        x: this._getAttributeFunctor("x"),
        y: this._getAttributeFunctor("y")
      };
      return react.createElement("g", {
        className: predefinedClassName$b + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, data3.map(function(d2, i) {
        return getNull4(d2) && _this3._renderCircle(d2, i, strokeWidth, style, scalingFunctions);
      }));
    }
  }]);
  return MarkSeries2;
}(AbstractSeries);
MarkSeries.displayName = "MarkSeries";
MarkSeries.propTypes = _extends$s({}, AbstractSeries.propTypes, {
  getNull: propTypes.func,
  strokeWidth: propTypes.number
});
MarkSeries.defaultProps = {
  getNull: function getNull3() {
    return true;
  }
};
var _createClass$q = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$t = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$q(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$q(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$q(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var propTypes$3 = _extends$t({}, LineSeries.propTypes, {
  lineStyle: propTypes.object,
  markStyle: propTypes.object
});
var LineMarkSeries = function(_AbstractSeries) {
  _inherits$q(LineMarkSeries2, _AbstractSeries);
  function LineMarkSeries2() {
    _classCallCheck$q(this, LineMarkSeries2);
    return _possibleConstructorReturn$q(this, (LineMarkSeries2.__proto__ || Object.getPrototypeOf(LineMarkSeries2)).apply(this, arguments));
  }
  _createClass$q(LineMarkSeries2, [{
    key: "render",
    value: function render2() {
      var _props = this.props, lineStyle = _props.lineStyle, markStyle = _props.markStyle, style = _props.style;
      return react.createElement("g", {className: "rv-xy-plot__series rv-xy-plot__series--linemark"}, react.createElement(LineSeries, _extends$t({}, this.props, {style: _extends$t({}, style, lineStyle)})), react.createElement(MarkSeries, _extends$t({}, this.props, {style: _extends$t({}, style, markStyle)})));
    }
  }], [{
    key: "defaultProps",
    get: function get4() {
      return _extends$t({}, LineSeries.defaultProps, {
        lineStyle: {},
        markStyle: {}
      });
    }
  }]);
  return LineMarkSeries2;
}(AbstractSeries);
LineMarkSeries.displayName = "LineMarkSeries";
LineMarkSeries.propTypes = propTypes$3;
var _extends$u = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$r = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$r(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$r(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$r(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var MarkSeriesCanvas = function(_AbstractSeries) {
  _inherits$r(MarkSeriesCanvas2, _AbstractSeries);
  function MarkSeriesCanvas2() {
    _classCallCheck$r(this, MarkSeriesCanvas2);
    return _possibleConstructorReturn$r(this, (MarkSeriesCanvas2.__proto__ || Object.getPrototypeOf(MarkSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$r(MarkSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      var data3 = props.data, marginLeft = props.marginLeft, marginTop = props.marginTop;
      var x5 = getAttributeFunctor(props, "x");
      var y7 = getAttributeFunctor(props, "y");
      var size = getAttributeFunctor(props, "size") || function(p3) {
        return DEFAULT_SIZE;
      };
      var fill = getAttributeFunctor(props, "fill") || getAttributeFunctor(props, "color");
      var stroke = getAttributeFunctor(props, "stroke") || getAttributeFunctor(props, "color");
      var opacity = getAttributeFunctor(props, "opacity");
      data3.forEach(function(row) {
        var fillColor = rgb(fill(row));
        var strokeColor = rgb(stroke(row));
        var rowOpacity = opacity(row) || DEFAULT_OPACITY;
        ctx2.beginPath();
        ctx2.arc(x5(row) + marginLeft, y7(row) + marginTop, size(row), 0, 2 * Math.PI);
        ctx2.fillStyle = "rgba(" + fillColor.r + ", " + fillColor.g + ", " + fillColor.b + ", " + rowOpacity + ")";
        ctx2.fill();
        ctx2.strokeStyle = "rgba(" + strokeColor.r + ", " + strokeColor.g + ", " + strokeColor.b + ", " + rowOpacity + ")";
        ctx2.stroke();
      });
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return MarkSeriesCanvas2;
}(AbstractSeries);
MarkSeriesCanvas.displayName = "MarkSeriesCanvas";
MarkSeriesCanvas.propTypes = _extends$u({}, AbstractSeries.propTypes);
var _extends$v = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$s = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$s(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$s(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$s(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var LineSeriesCanvas = function(_AbstractSeries) {
  _inherits$s(LineSeriesCanvas2, _AbstractSeries);
  function LineSeriesCanvas2() {
    _classCallCheck$s(this, LineSeriesCanvas2);
    return _possibleConstructorReturn$s(this, (LineSeriesCanvas2.__proto__ || Object.getPrototypeOf(LineSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$s(LineSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return react.createElement("div", null);
    }
  }], [{
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      var curve = props.curve, data3 = props.data, marginLeft = props.marginLeft, marginTop = props.marginTop, strokeWidth = props.strokeWidth, strokeDasharray2 = props.strokeDasharray;
      if (!data3 || data3.length === 0) {
        return;
      }
      var x5 = getAttributeFunctor(props, "x");
      var y7 = getAttributeFunctor(props, "y");
      var stroke = getAttributeValue(props, "stroke") || getAttributeValue(props, "color");
      var strokeColor = rgb(stroke);
      var newOpacity = getAttributeValue(props, "opacity");
      var opacity = Number.isFinite(newOpacity) ? newOpacity : DEFAULT_OPACITY;
      var line2 = d3Line().x(function(row) {
        return x5(row) + marginLeft;
      }).y(function(row) {
        return y7(row) + marginTop;
      });
      if (typeof curve === "string" && d3Shape[curve]) {
        line2 = line2.curve(d3Shape[curve]);
      } else if (typeof curve === "function") {
        line2 = line2.curve(curve);
      }
      ctx2.beginPath();
      ctx2.strokeStyle = "rgba(" + strokeColor.r + ", " + strokeColor.g + ", " + strokeColor.b + ", " + opacity + ")";
      ctx2.lineWidth = strokeWidth;
      if (strokeDasharray2) {
        ctx2.setLineDash(strokeDasharray2);
      }
      line2.context(ctx2)(data3);
      ctx2.stroke();
      ctx2.closePath();
      ctx2.lineWidth = 1;
      ctx2.setLineDash([]);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return LineSeriesCanvas2;
}(AbstractSeries);
LineSeriesCanvas.displayName = "LineSeriesCanvas";
LineSeriesCanvas.defaultProps = _extends$v({}, AbstractSeries.defaultProps, {
  strokeWidth: 2
});
LineSeriesCanvas.propTypes = _extends$v({}, AbstractSeries.propTypes, {
  strokeWidth: propTypes.number
});
var _extends$w = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$t = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$t(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$t(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$t(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var LineMarkSeriesCanvas = function(_AbstractSeries) {
  _inherits$t(LineMarkSeriesCanvas2, _AbstractSeries);
  function LineMarkSeriesCanvas2() {
    _classCallCheck$t(this, LineMarkSeriesCanvas2);
    return _possibleConstructorReturn$t(this, (LineMarkSeriesCanvas2.__proto__ || Object.getPrototypeOf(LineMarkSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$t(LineMarkSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      LineSeriesCanvas.renderLayer(props, ctx2);
      MarkSeriesCanvas.renderLayer(props, ctx2);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return LineMarkSeriesCanvas2;
}(AbstractSeries);
LineMarkSeriesCanvas.displayName = "LineMarkSeriesCanvas";
LineMarkSeriesCanvas.propTypes = _extends$w({}, AbstractSeries.propTypes);
var _extends$x = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$u = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$u(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$u(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$u(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$c = "rv-xy-plot__series rv-xy-plot__series--polygon";
var DEFAULT_COLOR$1 = "#12939A";
var generatePath = function generatePath2(data3, xFunctor, yFunctor) {
  return data3.reduce(function(res, row, i) {
    return res + " " + (i ? "L" : "M") + xFunctor(row) + " " + yFunctor(row);
  }, "") + " Z";
};
var PolygonSeries = function(_AbstractSeries) {
  _inherits$u(PolygonSeries2, _AbstractSeries);
  function PolygonSeries2() {
    _classCallCheck$u(this, PolygonSeries2);
    return _possibleConstructorReturn$u(this, (PolygonSeries2.__proto__ || Object.getPrototypeOf(PolygonSeries2)).apply(this, arguments));
  }
  _createClass$u(PolygonSeries2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, animation = _props.animation, color3 = _props.color, className = _props.className, data3 = _props.data, marginLeft = _props.marginLeft, marginTop = _props.marginTop, style = _props.style;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$x({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(PolygonSeries2, _extends$x({}, this.props, {animation: null})));
      }
      var xFunctor = this._getAttributeFunctor("x");
      var yFunctor = this._getAttributeFunctor("y");
      return react.createElement("path", {
        className: predefinedClassName$c + " " + className,
        onMouseOver: function onMouseOver(e3) {
          return _this2._seriesMouseOverHandler(data3, e3);
        },
        onMouseOut: function onMouseOut(e3) {
          return _this2._seriesMouseOutHandler(data3, e3);
        },
        onClick: this._seriesClickHandler,
        onContextMenu: this._seriesRightClickHandler,
        fill: color3 || DEFAULT_COLOR$1,
        style,
        d: generatePath(data3, xFunctor, yFunctor),
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      });
    }
  }], [{
    key: "propTypes",
    get: function get4() {
      return _extends$x({}, AbstractSeries.propTypes);
    }
  }]);
  return PolygonSeries2;
}(AbstractSeries);
PolygonSeries.displayName = "PolygonSeries";
var _extends$y = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$v = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$v(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$v(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$v(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VerticalBarSeries = function(_AbstractSeries) {
  _inherits$v(VerticalBarSeries2, _AbstractSeries);
  function VerticalBarSeries2() {
    _classCallCheck$v(this, VerticalBarSeries2);
    return _possibleConstructorReturn$v(this, (VerticalBarSeries2.__proto__ || Object.getPrototypeOf(VerticalBarSeries2)).apply(this, arguments));
  }
  _createClass$v(VerticalBarSeries2, [{
    key: "render",
    value: function render2() {
      return react.createElement(BarSeries, _extends$y({}, this.props, {
        linePosAttr: "x",
        valuePosAttr: "y",
        lineSizeAttr: "width",
        valueSizeAttr: "height"
      }));
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = attr === "x";
      var zeroBaseValue = attr === "y";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }]);
  return VerticalBarSeries2;
}(AbstractSeries);
VerticalBarSeries.displayName = "VerticalBarSeries";
var _extends$z = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$w = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$w(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$w(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$w(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalBarSeriesCanvas$1 = function(_AbstractSeries) {
  _inherits$w(HorizontalBarSeriesCanvas2, _AbstractSeries);
  function HorizontalBarSeriesCanvas2() {
    _classCallCheck$w(this, HorizontalBarSeriesCanvas2);
    return _possibleConstructorReturn$w(this, (HorizontalBarSeriesCanvas2.__proto__ || Object.getPrototypeOf(HorizontalBarSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$w(HorizontalBarSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = attr === "x";
      var zeroBaseValue = attr === "y";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }, {
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      BarSeriesCanvas.renderLayer(_extends$z({}, props, {
        linePosAttr: "x",
        valuePosAttr: "y",
        lineSizeAttr: "width",
        valueSizeAttr: "height"
      }), ctx2);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return HorizontalBarSeriesCanvas2;
}(AbstractSeries);
HorizontalBarSeriesCanvas$1.displayName = "HorizontalBarSeriesCanvas";
HorizontalBarSeriesCanvas$1.propTypes = _extends$z({}, AbstractSeries.propTypes);
var _extends$A = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var VERTICAL$1 = DIRECTION.VERTICAL;
_extends$A({}, GridLines.propTypes, {
  direction: propTypes.oneOf([VERTICAL$1])
});
var _extends$B = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$x = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$x(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$x(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$x(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var VerticalRectSeries = function(_AbstractSeries) {
  _inherits$x(VerticalRectSeries2, _AbstractSeries);
  function VerticalRectSeries2() {
    _classCallCheck$x(this, VerticalRectSeries2);
    return _possibleConstructorReturn$x(this, (VerticalRectSeries2.__proto__ || Object.getPrototypeOf(VerticalRectSeries2)).apply(this, arguments));
  }
  _createClass$x(VerticalRectSeries2, [{
    key: "render",
    value: function render2() {
      return react.createElement(RectSeries, _extends$B({}, this.props, {
        linePosAttr: "x",
        valuePosAttr: "y",
        lineSizeAttr: "width",
        valueSizeAttr: "height"
      }));
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = false;
      var zeroBaseValue = attr === "y";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }]);
  return VerticalRectSeries2;
}(AbstractSeries);
VerticalRectSeries.displayName = "VerticalRectSeries";
var _extends$C = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$y = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$y(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$y(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$y(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var HorizontalRectSeriesCanvas$1 = function(_AbstractSeries) {
  _inherits$y(HorizontalRectSeriesCanvas2, _AbstractSeries);
  function HorizontalRectSeriesCanvas2() {
    _classCallCheck$y(this, HorizontalRectSeriesCanvas2);
    return _possibleConstructorReturn$y(this, (HorizontalRectSeriesCanvas2.__proto__ || Object.getPrototypeOf(HorizontalRectSeriesCanvas2)).apply(this, arguments));
  }
  _createClass$y(HorizontalRectSeriesCanvas2, [{
    key: "render",
    value: function render2() {
      return null;
    }
  }], [{
    key: "getParentConfig",
    value: function getParentConfig(attr) {
      var isDomainAdjustmentNeeded = false;
      var zeroBaseValue = attr === "y";
      return {
        isDomainAdjustmentNeeded,
        zeroBaseValue
      };
    }
  }, {
    key: "renderLayer",
    value: function renderLayer(props, ctx2) {
      RectSeriesCanvas.renderLayer(_extends$C({}, props, {
        linePosAttr: "x",
        valuePosAttr: "y",
        lineSizeAttr: "width",
        valueSizeAttr: "height"
      }), ctx2);
    }
  }, {
    key: "requiresSVG",
    get: function get4() {
      return false;
    }
  }, {
    key: "isCanvas",
    get: function get4() {
      return true;
    }
  }]);
  return HorizontalRectSeriesCanvas2;
}(AbstractSeries);
HorizontalRectSeriesCanvas$1.displayName = "HorizontalRectSeriesCanvas";
HorizontalRectSeriesCanvas$1.propTypes = _extends$C({}, AbstractSeries.propTypes);
({
  className: propTypes.string,
  extent: propTypes.arrayOf(propTypes.arrayOf(propTypes.number)),
  nodes: propTypes.arrayOf(propTypes.object).isRequired,
  onBlur: propTypes.func,
  onClick: propTypes.func,
  onHover: propTypes.func,
  onMouseDown: propTypes.func,
  onMouseUp: propTypes.func,
  x: propTypes.func,
  y: propTypes.func
});
var _createClass$z = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$D = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$z(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$z(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$z(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$d = "rv-xy-plot__series rv-xy-plot__series--whisker";
var DEFAULT_STROKE_WIDTH$1 = 1;
var DEFAULT_CROSS_BAR_WIDTH = 6;
var renderWhiskerMark = function renderWhiskerMark2(whiskerMarkProps) {
  return function(d2, i) {
    var crossBarWidth = whiskerMarkProps.crossBarWidth, opacityFunctor = whiskerMarkProps.opacityFunctor, sizeFunctor = whiskerMarkProps.sizeFunctor, strokeFunctor = whiskerMarkProps.strokeFunctor, strokeWidth = whiskerMarkProps.strokeWidth, style = whiskerMarkProps.style, valueClickHandler = whiskerMarkProps.valueClickHandler, valueMouseOutHandler = whiskerMarkProps.valueMouseOutHandler, valueMouseOverHandler = whiskerMarkProps.valueMouseOverHandler, valueRightClickHandler = whiskerMarkProps.valueRightClickHandler, xFunctor = whiskerMarkProps.xFunctor, yFunctor = whiskerMarkProps.yFunctor;
    var r3 = sizeFunctor ? sizeFunctor(d2) : 0;
    var cx = xFunctor(d2);
    var cy = yFunctor(d2);
    var positiveXVariance = xFunctor({x: d2.x + d2.xVariance / 2});
    var negativeXVariance = xFunctor({x: d2.x - d2.xVariance / 2});
    var positiveYVariance = yFunctor({y: d2.y + d2.yVariance / 2});
    var negativeYVariance = yFunctor({y: d2.y - d2.yVariance / 2});
    var hasXWhiskers = positiveXVariance && cx + r3 < positiveXVariance;
    var hasYWhiskers = positiveYVariance && cy - r3 > positiveYVariance;
    if (!hasXWhiskers && !hasYWhiskers) {
      return null;
    }
    var styleAttr = _extends$D({
      opacity: opacityFunctor ? opacityFunctor(d2) : DEFAULT_OPACITY,
      stroke: strokeFunctor && strokeFunctor(d2),
      strokeWidth: strokeWidth || DEFAULT_STROKE_WIDTH$1
    }, style);
    var crossBarExtension = crossBarWidth / 2;
    var rightLineAttrs = {
      x1: cx + r3,
      y1: cy,
      x2: positiveXVariance,
      y2: cy,
      style: styleAttr
    };
    var leftLineAttrs = {
      x1: cx - r3,
      y1: cy,
      x2: negativeXVariance,
      y2: cy,
      style: styleAttr
    };
    var rightCrossBarAttrs = {
      x1: positiveXVariance,
      y1: cy - crossBarExtension,
      x2: positiveXVariance,
      y2: cy + crossBarExtension,
      style: styleAttr
    };
    var leftCrossBarAttrs = {
      x1: negativeXVariance,
      y1: cy - crossBarExtension,
      x2: negativeXVariance,
      y2: cy + crossBarExtension,
      style: styleAttr
    };
    var upperLineAttrs = {
      x1: cx,
      y1: cy - r3,
      x2: cx,
      y2: positiveYVariance,
      style: styleAttr
    };
    var lowerLineAttrs = {
      x1: cx,
      y1: cy + r3,
      x2: cx,
      y2: negativeYVariance,
      style: styleAttr
    };
    var upperCrossBarAttrs = {
      x1: cx - crossBarExtension,
      y1: positiveYVariance,
      x2: cx + crossBarExtension,
      y2: positiveYVariance,
      style: styleAttr
    };
    var lowerCrossBarAttrs = {
      x1: cx - crossBarExtension,
      y1: negativeYVariance,
      x2: cx + crossBarExtension,
      y2: negativeYVariance,
      style: styleAttr
    };
    return react.createElement("g", {
      className: "mark-whiskers",
      key: i,
      onClick: function onClick(e3) {
        return valueClickHandler(d2, e3);
      },
      onContextMenu: function onContextMenu(e3) {
        return valueRightClickHandler(d2, e3);
      },
      onMouseOver: function onMouseOver(e3) {
        return valueMouseOverHandler(d2, e3);
      },
      onMouseOut: function onMouseOut(e3) {
        return valueMouseOutHandler(d2, e3);
      }
    }, hasXWhiskers ? react.createElement("g", {className: "x-whiskers"}, react.createElement("line", rightLineAttrs), react.createElement("line", leftLineAttrs), react.createElement("line", rightCrossBarAttrs), react.createElement("line", leftCrossBarAttrs)) : null, hasYWhiskers ? react.createElement("g", {className: "y-whiskers"}, react.createElement("line", upperLineAttrs), react.createElement("line", lowerLineAttrs), react.createElement("line", upperCrossBarAttrs), react.createElement("line", lowerCrossBarAttrs)) : null);
  };
};
var WhiskerSeries = function(_AbstractSeries) {
  _inherits$z(WhiskerSeries2, _AbstractSeries);
  function WhiskerSeries2() {
    _classCallCheck$z(this, WhiskerSeries2);
    return _possibleConstructorReturn$z(this, (WhiskerSeries2.__proto__ || Object.getPrototypeOf(WhiskerSeries2)).apply(this, arguments));
  }
  _createClass$z(WhiskerSeries2, [{
    key: "render",
    value: function render2() {
      var _props = this.props, animation = _props.animation, className = _props.className, crossBarWidth = _props.crossBarWidth, data3 = _props.data, marginLeft = _props.marginLeft, marginTop = _props.marginTop, strokeWidth = _props.strokeWidth, style = _props.style;
      if (!data3) {
        return null;
      }
      if (animation) {
        return react.createElement(Animation, _extends$D({}, this.props, {animatedProps: ANIMATED_SERIES_PROPS}), react.createElement(WhiskerSeries2, _extends$D({}, this.props, {animation: null})));
      }
      var whiskerMarkProps = {
        crossBarWidth,
        opacityFunctor: this._getAttributeFunctor("opacity"),
        sizeFunctor: this._getAttributeFunctor("size"),
        strokeFunctor: this._getAttributeFunctor("stroke") || this._getAttributeFunctor("color"),
        strokeWidth,
        style,
        xFunctor: this._getAttributeFunctor("x"),
        yFunctor: this._getAttributeFunctor("y"),
        valueClickHandler: this._valueClickHandler,
        valueRightClickHandler: this._valueRightClickHandler,
        valueMouseOverHandler: this._valueMouseOverHandler,
        valueMouseOutHandler: this._valueMouseOutHandler
      };
      return react.createElement("g", {
        className: predefinedClassName$d + " " + className,
        transform: "translate(" + marginLeft + "," + marginTop + ")"
      }, data3.map(renderWhiskerMark(whiskerMarkProps)));
    }
  }]);
  return WhiskerSeries2;
}(AbstractSeries);
WhiskerSeries.displayName = "WhiskerSeries";
WhiskerSeries.propTypes = _extends$D({}, AbstractSeries.propTypes, {
  strokeWidth: propTypes.number
});
WhiskerSeries.defaultProps = _extends$D({}, AbstractSeries.defaultProps, {
  crossBarWidth: DEFAULT_CROSS_BAR_WIDTH,
  size: 0,
  strokeWidth: DEFAULT_STROKE_WIDTH$1
});
var keys3 = createCommonjsModule(function(module, exports) {
  exports = module.exports = typeof Object.keys === "function" ? Object.keys : shim;
  exports.shim = shim;
  function shim(obj) {
    var keys4 = [];
    for (var key in obj)
      keys4.push(key);
    return keys4;
  }
});
var is_arguments = createCommonjsModule(function(module, exports) {
  var supportsArgumentsClass = function() {
    return Object.prototype.toString.call(arguments);
  }() == "[object Arguments]";
  exports = module.exports = supportsArgumentsClass ? supported : unsupported;
  exports.supported = supported;
  function supported(object2) {
    return Object.prototype.toString.call(object2) == "[object Arguments]";
  }
  exports.unsupported = unsupported;
  function unsupported(object2) {
    return object2 && typeof object2 == "object" && typeof object2.length == "number" && Object.prototype.hasOwnProperty.call(object2, "callee") && !Object.prototype.propertyIsEnumerable.call(object2, "callee") || false;
  }
});
var deepEqual_1 = createCommonjsModule(function(module) {
  var pSlice = Array.prototype.slice;
  var deepEqual = module.exports = function(actual, expected, opts) {
    if (!opts)
      opts = {};
    if (actual === expected) {
      return true;
    } else if (actual instanceof Date && expected instanceof Date) {
      return actual.getTime() === expected.getTime();
    } else if (!actual || !expected || typeof actual != "object" && typeof expected != "object") {
      return opts.strict ? actual === expected : actual == expected;
    } else {
      return objEquiv(actual, expected, opts);
    }
  };
  function isUndefinedOrNull(value2) {
    return value2 === null || value2 === void 0;
  }
  function isBuffer(x5) {
    if (!x5 || typeof x5 !== "object" || typeof x5.length !== "number")
      return false;
    if (typeof x5.copy !== "function" || typeof x5.slice !== "function") {
      return false;
    }
    if (x5.length > 0 && typeof x5[0] !== "number")
      return false;
    return true;
  }
  function objEquiv(a3, b10, opts) {
    var i, key;
    if (isUndefinedOrNull(a3) || isUndefinedOrNull(b10))
      return false;
    if (a3.prototype !== b10.prototype)
      return false;
    if (is_arguments(a3)) {
      if (!is_arguments(b10)) {
        return false;
      }
      a3 = pSlice.call(a3);
      b10 = pSlice.call(b10);
      return deepEqual(a3, b10, opts);
    }
    if (isBuffer(a3)) {
      if (!isBuffer(b10)) {
        return false;
      }
      if (a3.length !== b10.length)
        return false;
      for (i = 0; i < a3.length; i++) {
        if (a3[i] !== b10[i])
          return false;
      }
      return true;
    }
    try {
      var ka4 = keys3(a3), kb2 = keys3(b10);
    } catch (e3) {
      return false;
    }
    if (ka4.length != kb2.length)
      return false;
    ka4.sort();
    kb2.sort();
    for (i = ka4.length - 1; i >= 0; i--) {
      if (ka4[i] != kb2[i])
        return false;
    }
    for (i = ka4.length - 1; i >= 0; i--) {
      key = ka4[i];
      if (!deepEqual(a3[key], b10[key], opts))
        return false;
    }
    return typeof a3 === typeof b10;
  }
});
var _extends$E = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function getInnerDimensions(props, defaultMargins) {
  var margin = props.margin, width = props.width, height = props.height;
  var marginProps = _extends$E({}, defaultMargins, typeof margin === "number" ? {
    left: margin,
    right: margin,
    top: margin,
    bottom: margin
  } : margin);
  var _marginProps$left = marginProps.left, marginLeft = _marginProps$left === void 0 ? 0 : _marginProps$left, _marginProps$top = marginProps.top, marginTop = _marginProps$top === void 0 ? 0 : _marginProps$top, _marginProps$right = marginProps.right, marginRight = _marginProps$right === void 0 ? 0 : _marginProps$right, _marginProps$bottom = marginProps.bottom, marginBottom = _marginProps$bottom === void 0 ? 0 : _marginProps$bottom;
  return {
    marginLeft,
    marginTop,
    marginRight,
    marginBottom,
    innerHeight: height - marginBottom - marginTop,
    innerWidth: width - marginLeft - marginRight
  };
}
var MarginPropType = propTypes.oneOfType([propTypes.shape({
  left: propTypes.number,
  top: propTypes.number,
  right: propTypes.number,
  bottom: propTypes.number
}), propTypes.number]);
var DEFAULT_MARGINS = {
  left: 40,
  right: 10,
  top: 10,
  bottom: 40
};
var _createClass$A = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$F = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$A(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$A(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$A(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var MAX_DRAWS = 30;
function engageDrawLoop(ctx2, height, width, layers) {
  var drawIteration = 0;
  var drawCycle = setInterval(function() {
    if (!ctx2) {
      clearInterval(drawCycle);
      return;
    }
    drawLayers(ctx2, height, width, layers, drawIteration);
    if (drawIteration > MAX_DRAWS) {
      clearInterval(drawCycle);
    }
    drawIteration += 1;
  }, 1);
}
function drawLayers(ctx2, height, width, layers, drawIteration) {
  ctx2.clearRect(0, 0, width, height);
  layers.forEach(function(layer) {
    var interpolator = layer.interpolator, newProps = layer.newProps, animation = layer.animation;
    var interpolatedProps = animation ? interpolator ? interpolator(drawIteration / MAX_DRAWS) : interpolator : function() {
      return {};
    };
    layer.renderLayer(_extends$F({}, newProps, interpolatedProps), ctx2);
  });
}
function buildLayers(newChildren, oldChildren) {
  return newChildren.map(function(child, index4) {
    var oldProps = oldChildren[index4] ? oldChildren[index4].props : {};
    var newProps = child.props;
    var oldAnimatedProps = extractAnimatedPropValues(_extends$F({}, oldProps, {
      animatedProps: ANIMATED_SERIES_PROPS
    }));
    var newAnimatedProps = newProps ? extractAnimatedPropValues(_extends$F({}, newProps, {
      animatedProps: ANIMATED_SERIES_PROPS
    })) : null;
    var interpolator = interpolateValue(oldAnimatedProps, newAnimatedProps);
    return {
      renderLayer: child.type.renderLayer,
      newProps: child.props,
      animation: child.props.animation,
      interpolator
    };
  });
}
var CanvasWrapper = function(_Component) {
  _inherits$A(CanvasWrapper2, _Component);
  function CanvasWrapper2() {
    _classCallCheck$A(this, CanvasWrapper2);
    return _possibleConstructorReturn$A(this, (CanvasWrapper2.__proto__ || Object.getPrototypeOf(CanvasWrapper2)).apply(this, arguments));
  }
  _createClass$A(CanvasWrapper2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var ctx2 = this.canvas.getContext("2d");
      if (!ctx2) {
        return;
      }
      var pixelRatio = this.props.pixelRatio;
      if (!ctx2) {
        return;
      }
      ctx2.scale(pixelRatio, pixelRatio);
      this.drawChildren(null, this.props, ctx2);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps) {
      this.drawChildren(oldProps, this.props, this.canvas.getContext("2d"));
    }
  }, {
    key: "drawChildren",
    value: function drawChildren(oldProps, newProps, ctx2) {
      var children2 = newProps.children, innerHeight = newProps.innerHeight, innerWidth = newProps.innerWidth, marginBottom = newProps.marginBottom, marginLeft = newProps.marginLeft, marginRight = newProps.marginRight, marginTop = newProps.marginTop;
      if (!ctx2) {
        return;
      }
      var childrenShouldAnimate = children2.find(function(child) {
        return child.props.animation;
      });
      var height = innerHeight + marginTop + marginBottom;
      var width = innerWidth + marginLeft + marginRight;
      var layers = buildLayers(newProps.children, oldProps ? oldProps.children : []);
      if (!childrenShouldAnimate) {
        drawLayers(ctx2, height, width, layers);
        return;
      }
      engageDrawLoop(ctx2, height, width, layers);
    }
  }, {
    key: "render",
    value: function render2() {
      var _this2 = this;
      var _props = this.props, innerHeight = _props.innerHeight, innerWidth = _props.innerWidth, marginBottom = _props.marginBottom, marginLeft = _props.marginLeft, marginRight = _props.marginRight, marginTop = _props.marginTop, pixelRatio = _props.pixelRatio;
      var height = innerHeight + marginTop + marginBottom;
      var width = innerWidth + marginLeft + marginRight;
      return react.createElement("div", {style: {left: 0, top: 0}, className: "rv-xy-canvas"}, react.createElement("canvas", {
        className: "rv-xy-canvas-element",
        height: height * pixelRatio,
        width: width * pixelRatio,
        style: {
          height: height + "px",
          width: width + "px"
        },
        ref: function ref(_ref) {
          return _this2.canvas = _ref;
        }
      }), this.props.children);
    }
  }], [{
    key: "defaultProps",
    get: function get4() {
      return {
        pixelRatio: window && window.devicePixelRatio || 1
      };
    }
  }]);
  return CanvasWrapper2;
}(react.Component);
CanvasWrapper.displayName = "CanvasWrapper";
CanvasWrapper.propTypes = {
  marginBottom: propTypes.number.isRequired,
  marginLeft: propTypes.number.isRequired,
  marginRight: propTypes.number.isRequired,
  marginTop: propTypes.number.isRequired,
  innerHeight: propTypes.number.isRequired,
  innerWidth: propTypes.number.isRequired,
  pixelRatio: propTypes.number.isRequired
};
var _createClass$B = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$G = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _toConsumableArray$33(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
function _defineProperty$53(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$B(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$B(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$B(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ATTRIBUTES$1 = ["x", "y", "radius", "angle", "color", "fill", "stroke", "opacity", "size"];
function cleanseData(data3) {
  return data3.map(function(series) {
    if (!Array.isArray(series)) {
      return series;
    }
    return series.map(function(row) {
      return _extends$G({}, row, {parent: null});
    });
  });
}
function checkIfMixinsAreEqual(nextScaleMixins, scaleMixins, hasTreeStructure) {
  var newMixins = _extends$G({}, nextScaleMixins, {
    _allData: hasTreeStructure ? cleanseData(nextScaleMixins._allData) : nextScaleMixins._allData
  });
  var oldMixins = _extends$G({}, scaleMixins, {
    _allData: hasTreeStructure ? cleanseData(scaleMixins._allData) : scaleMixins._allData
  });
  return deepEqual_1(newMixins, oldMixins);
}
var XYPlot = function(_React$Component) {
  _inherits$B(XYPlot2, _React$Component);
  _createClass$B(XYPlot2, null, [{
    key: "defaultProps",
    get: function get4() {
      return {
        className: ""
      };
    }
  }, {
    key: "propTypes",
    get: function get4() {
      return {
        animation: AnimationPropType,
        className: propTypes.string,
        dontCheckIfEmpty: propTypes.bool,
        height: propTypes.number.isRequired,
        margin: MarginPropType,
        onClick: propTypes.func,
        onDoubleClick: propTypes.func,
        onMouseDown: propTypes.func,
        onMouseUp: propTypes.func,
        onMouseEnter: propTypes.func,
        onMouseLeave: propTypes.func,
        onMouseMove: propTypes.func,
        onTouchStart: propTypes.func,
        onTouchMove: propTypes.func,
        onTouchEnd: propTypes.func,
        onTouchCancel: propTypes.func,
        onWheel: propTypes.func,
        stackBy: propTypes.oneOf(ATTRIBUTES$1),
        style: propTypes.object,
        width: propTypes.number.isRequired
      };
    }
  }]);
  function XYPlot2(props) {
    _classCallCheck$B(this, XYPlot2);
    var _this = _possibleConstructorReturn$B(this, (XYPlot2.__proto__ || Object.getPrototypeOf(XYPlot2)).call(this, props));
    _initialiseProps.call(_this);
    var stackBy = props.stackBy;
    var children2 = getSeriesChildren(props.children);
    var data3 = getStackedData3(children2, stackBy);
    _this.state = {
      scaleMixins: _this._getScaleMixins(data3, props),
      data: data3
    };
    return _this;
  }
  _createClass$B(XYPlot2, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps2(nextProps) {
      var children2 = getSeriesChildren(nextProps.children);
      var nextData = getStackedData3(children2, nextProps.stackBy);
      var scaleMixins = this.state.scaleMixins;
      var nextScaleMixins = this._getScaleMixins(nextData, nextProps);
      if (!checkIfMixinsAreEqual(nextScaleMixins, scaleMixins, nextProps.hasTreeStructure)) {
        this.setState({
          scaleMixins: nextScaleMixins,
          data: nextData
        });
      }
    }
  }, {
    key: "_getClonedChildComponents",
    value: function _getClonedChildComponents() {
      var _this2 = this;
      var props = this.props;
      var animation = this.props.animation;
      var _state = this.state, scaleMixins = _state.scaleMixins, data3 = _state.data;
      var dimensions = getInnerDimensions(this.props, DEFAULT_MARGINS);
      var children2 = react.Children.toArray(this.props.children);
      var seriesProps = getSeriesPropsFromChildren(children2);
      var XYPlotValues = getXYPlotValues(props, children2);
      return children2.map(function(child, index4) {
        var dataProps2 = null;
        if (seriesProps[index4]) {
          var seriesIndex = seriesProps[index4].seriesIndex;
          dataProps2 = {data: data3[seriesIndex]};
        }
        return react.cloneElement(child, _extends$G({}, dimensions, {
          animation
        }, dataProps2 && child.type.prototype && child.type.prototype.render ? {
          ref: function ref(_ref) {
            return _this2["series" + seriesProps[index4].seriesIndex] = _ref;
          }
        } : {}, seriesProps[index4], scaleMixins, child.props, XYPlotValues[index4], dataProps2));
      });
    }
  }, {
    key: "_getDefaultScaleProps",
    value: function _getDefaultScaleProps(props) {
      var _getInnerDimensions = getInnerDimensions(props, DEFAULT_MARGINS), innerWidth = _getInnerDimensions.innerWidth, innerHeight = _getInnerDimensions.innerHeight;
      var colorRanges = ["color", "fill", "stroke"].reduce(function(acc, attr) {
        var range7 = props[attr + "Type"] === "category" ? EXTENDED_DISCRETE_COLOR_RANGE : CONTINUOUS_COLOR_RANGE;
        return _extends$G({}, acc, _defineProperty$53({}, attr + "Range", range7));
      }, {});
      return _extends$G({
        xRange: [0, innerWidth],
        yRange: [innerHeight, 0]
      }, colorRanges, {
        opacityType: OPACITY_TYPE,
        sizeRange: SIZE_RANGE
      });
    }
  }, {
    key: "_getScaleMixins",
    value: function _getScaleMixins(data3, props) {
      var _ref2;
      var filteredData = data3.filter(function(d2) {
        return d2;
      });
      var allData = (_ref2 = []).concat.apply(_ref2, _toConsumableArray$33(filteredData));
      var defaultScaleProps = this._getDefaultScaleProps(props);
      var optionalScaleProps = getOptionalScaleProps(props);
      var userScaleProps = extractScalePropsFromProps(props, ATTRIBUTES$1);
      var missingScaleProps = getMissingScaleProps(_extends$G({}, defaultScaleProps, optionalScaleProps, userScaleProps), allData, ATTRIBUTES$1);
      var children2 = getSeriesChildren(props.children);
      var zeroBaseProps = {};
      var adjustBy = new Set();
      var adjustWhat = new Set();
      children2.forEach(function(child, index4) {
        if (!child || !data3[index4]) {
          return;
        }
        ATTRIBUTES$1.forEach(function(attr) {
          var _child$type$getParent = child.type.getParentConfig(attr, child.props), isDomainAdjustmentNeeded = _child$type$getParent.isDomainAdjustmentNeeded, zeroBaseValue = _child$type$getParent.zeroBaseValue;
          if (isDomainAdjustmentNeeded) {
            adjustBy.add(attr);
            adjustWhat.add(index4);
          }
          if (zeroBaseValue) {
            var specifiedDomain = props[attr + "Domain"];
            zeroBaseProps[attr + "BaseValue"] = specifiedDomain ? specifiedDomain[0] : 0;
          }
        });
      });
      return _extends$G({}, defaultScaleProps, zeroBaseProps, userScaleProps, missingScaleProps, {
        _allData: data3,
        _adjustBy: Array.from(adjustBy),
        _adjustWhat: Array.from(adjustWhat),
        _stackBy: props.stackBy
      });
    }
  }, {
    key: "_isPlotEmpty",
    value: function _isPlotEmpty() {
      var data3 = this.state.data;
      return !data3 || !data3.length || !data3.some(function(series) {
        return series && series.some(function(d2) {
          return d2;
        });
      });
    }
  }, {
    key: "renderCanvasComponents",
    value: function renderCanvasComponents(components, props) {
      var componentsToRender = components.filter(function(c5) {
        return c5 && !c5.type.requiresSVG && c5.type.isCanvas;
      });
      if (componentsToRender.length === 0) {
        return null;
      }
      var _componentsToRender$ = componentsToRender[0].props, marginLeft = _componentsToRender$.marginLeft, marginTop = _componentsToRender$.marginTop, marginBottom = _componentsToRender$.marginBottom, marginRight = _componentsToRender$.marginRight, innerHeight = _componentsToRender$.innerHeight, innerWidth = _componentsToRender$.innerWidth;
      return react.createElement(CanvasWrapper, {
        innerHeight,
        innerWidth,
        marginLeft,
        marginTop,
        marginBottom,
        marginRight
      }, componentsToRender);
    }
  }, {
    key: "render",
    value: function render2() {
      var _props = this.props, className = _props.className, dontCheckIfEmpty = _props.dontCheckIfEmpty, style = _props.style, width = _props.width, height = _props.height;
      if (!dontCheckIfEmpty && this._isPlotEmpty()) {
        return react.createElement("div", {
          className: "rv-xy-plot " + className,
          style: _extends$G({
            width: width + "px",
            height: height + "px"
          }, this.props.style)
        });
      }
      var components = this._getClonedChildComponents();
      return react.createElement("div", {
        style: {
          width: width + "px",
          height: height + "px"
        },
        className: "rv-xy-plot " + className
      }, react.createElement("svg", {
        className: "rv-xy-plot__inner",
        width,
        height,
        style,
        onClick: this._clickHandler,
        onDoubleClick: this._doubleClickHandler,
        onMouseDown: this._mouseDownHandler,
        onMouseUp: this._mouseUpHandler,
        onMouseMove: this._mouseMoveHandler,
        onMouseLeave: this._mouseLeaveHandler,
        onMouseEnter: this._mouseEnterHandler,
        onTouchStart: this._mouseDownHandler,
        onTouchMove: this._touchMoveHandler,
        onTouchEnd: this._touchEndHandler,
        onTouchCancel: this._touchCancelHandler,
        onWheel: this._wheelHandler
      }, components.filter(function(c5) {
        return c5 && c5.type.requiresSVG;
      })), this.renderCanvasComponents(components, this.props), components.filter(function(c5) {
        return c5 && !c5.type.requiresSVG && !c5.type.isCanvas;
      }));
    }
  }]);
  return XYPlot2;
}(react.Component);
var _initialiseProps = function _initialiseProps2() {
  var _this3 = this;
  this._clickHandler = function(event) {
    var onClick = _this3.props.onClick;
    if (onClick) {
      onClick(event);
    }
  };
  this._doubleClickHandler = function(event) {
    var onDoubleClick = _this3.props.onDoubleClick;
    if (onDoubleClick) {
      onDoubleClick(event);
    }
  };
  this._mouseDownHandler = function(event) {
    var _props2 = _this3.props, onMouseDown = _props2.onMouseDown, children2 = _props2.children;
    if (onMouseDown) {
      onMouseDown(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentMouseDown) {
        component.onParentMouseDown(event);
      }
    });
  };
  this._mouseEnterHandler = function(event) {
    var _props3 = _this3.props, onMouseEnter = _props3.onMouseEnter, children2 = _props3.children;
    if (onMouseEnter) {
      onMouseEnter(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentMouseEnter) {
        component.onParentMouseEnter(event);
      }
    });
  };
  this._mouseLeaveHandler = function(event) {
    var _props4 = _this3.props, onMouseLeave = _props4.onMouseLeave, children2 = _props4.children;
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentMouseLeave) {
        component.onParentMouseLeave(event);
      }
    });
  };
  this._mouseMoveHandler = function(event) {
    var _props5 = _this3.props, onMouseMove = _props5.onMouseMove, children2 = _props5.children;
    if (onMouseMove) {
      onMouseMove(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentMouseMove) {
        component.onParentMouseMove(event);
      }
    });
  };
  this._mouseUpHandler = function(event) {
    var _props6 = _this3.props, onMouseUp = _props6.onMouseUp, children2 = _props6.children;
    if (onMouseUp) {
      onMouseUp(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentMouseUp) {
        component.onParentMouseUp(event);
      }
    });
  };
  this._touchCancelHandler = function(event) {
    var onTouchCancel = _this3.props.onTouchCancel;
    if (onTouchCancel) {
      onTouchCancel(event);
    }
  };
  this._touchEndHandler = function(event) {
    var onTouchEnd = _this3.props.onTouchEnd;
    if (onTouchEnd) {
      onTouchEnd(event);
    }
  };
  this._touchMoveHandler = function(event) {
    var _props7 = _this3.props, onTouchMove = _props7.onTouchMove, children2 = _props7.children;
    if (onTouchMove) {
      onTouchMove(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentTouchMove) {
        component.onParentTouchMove(event);
      }
    });
  };
  this._touchStartHandler = function(event) {
    var _props8 = _this3.props, onTouchStart = _props8.onTouchStart, children2 = _props8.children;
    if (onTouchStart) {
      onTouchStart(event);
    }
    var seriesChildren = getSeriesChildren(children2);
    seriesChildren.forEach(function(child, index4) {
      var component = _this3["series" + index4];
      if (component && component.onParentTouchStart) {
        component.onParentTouchStart(event);
      }
    });
  };
  this._wheelHandler = function(event) {
    var onWheel = _this3.props.onWheel;
    if (onWheel) {
      onWheel(event);
    }
  };
};
XYPlot.displayName = "XYPlot";
var _extends$H = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var LEFT = ORIENTATION.LEFT;
var RIGHT = ORIENTATION.RIGHT;
var TOP = ORIENTATION.TOP;
var BOTTOM = ORIENTATION.BOTTOM;
var propTypes$4 = {
  height: propTypes.number.isRequired,
  style: propTypes.object,
  orientation: propTypes.oneOf([LEFT, RIGHT, TOP, BOTTOM]).isRequired,
  width: propTypes.number.isRequired
};
var defaultProps$3 = {
  style: {}
};
function AxisLine(_ref) {
  var orientation = _ref.orientation, width = _ref.width, height = _ref.height, style = _ref.style;
  var lineProps = void 0;
  if (orientation === LEFT) {
    lineProps = {
      x1: width,
      x2: width,
      y1: 0,
      y2: height
    };
  } else if (orientation === RIGHT) {
    lineProps = {
      x1: 0,
      x2: 0,
      y1: 0,
      y2: height
    };
  } else if (orientation === TOP) {
    lineProps = {
      x1: 0,
      x2: width,
      y1: height,
      y2: height
    };
  } else {
    lineProps = {
      x1: 0,
      x2: width,
      y1: 0,
      y2: 0
    };
  }
  return react.createElement("line", _extends$H({}, lineProps, {className: "rv-xy-plot__axis__line", style}));
}
AxisLine.defaultProps = defaultProps$3;
AxisLine.displayName = "AxisLine";
AxisLine.propTypes = propTypes$4;
var _extends$I = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$C = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty$63(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$C(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$C(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$C(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var LEFT$1 = ORIENTATION.LEFT;
var RIGHT$1 = ORIENTATION.RIGHT;
var TOP$1 = ORIENTATION.TOP;
var BOTTOM$1 = ORIENTATION.BOTTOM;
var propTypes$5 = {
  height: propTypes.number.isRequired,
  orientation: propTypes.oneOf([LEFT$1, RIGHT$1, TOP$1, BOTTOM$1]).isRequired,
  style: propTypes.object,
  width: propTypes.number.isRequired
};
var defaultProps$4 = {
  style: {}
};
function _getTickFormatFn(scale, tickTotal, tickFormat4) {
  return !tickFormat4 ? scale.tickFormat ? scale.tickFormat(tickTotal) : function(v3) {
    return v3;
  } : tickFormat4;
}
var AxisTicks = function(_React$Component) {
  _inherits$C(AxisTicks2, _React$Component);
  function AxisTicks2() {
    _classCallCheck$C(this, AxisTicks2);
    return _possibleConstructorReturn$C(this, (AxisTicks2.__proto__ || Object.getPrototypeOf(AxisTicks2)).apply(this, arguments));
  }
  _createClass$C(AxisTicks2, [{
    key: "_areTicksWrapped",
    value: function _areTicksWrapped() {
      var orientation = this.props.orientation;
      return orientation === LEFT$1 || orientation === TOP$1;
    }
  }, {
    key: "_getTickContainerPropsGetterFn",
    value: function _getTickContainerPropsGetterFn() {
      if (this._isAxisVertical()) {
        return function(pos) {
          return {transform: "translate(0, " + pos + ")"};
        };
      }
      return function(pos) {
        return {transform: "translate(" + pos + ", 0)"};
      };
    }
  }, {
    key: "_getTickLabelProps",
    value: function _getTickLabelProps() {
      var _props = this.props, orientation = _props.orientation, tickLabelAngle = _props.tickLabelAngle, tickSize = _props.tickSize, _props$tickSizeOuter = _props.tickSizeOuter, tickSizeOuter = _props$tickSizeOuter === void 0 ? tickSize : _props$tickSizeOuter, _props$tickPadding = _props.tickPadding, tickPadding = _props$tickPadding === void 0 ? tickSize : _props$tickPadding;
      var textAnchor = void 0;
      if (orientation === LEFT$1 || orientation === BOTTOM$1 && tickLabelAngle) {
        textAnchor = "end";
      } else if (orientation === RIGHT$1 || orientation === TOP$1 && tickLabelAngle) {
        textAnchor = "start";
      } else {
        textAnchor = "middle";
      }
      var isVertical2 = this._isAxisVertical();
      var wrap = this._areTicksWrapped() ? -1 : 1;
      var labelOffset = wrap * (tickSizeOuter + tickPadding);
      var transform = (isVertical2 ? "translate(" + labelOffset + ", 0)" : "translate(0, " + labelOffset + ")") + (tickLabelAngle ? " rotate(" + tickLabelAngle + ")" : "");
      var dy = orientation === TOP$1 || tickLabelAngle ? "0" : orientation === BOTTOM$1 ? "0.72em" : "0.32em";
      return {
        textAnchor,
        dy,
        transform
      };
    }
  }, {
    key: "_getTickLineProps",
    value: function _getTickLineProps() {
      var _ref;
      var _props2 = this.props, tickSize = _props2.tickSize, _props2$tickSizeOuter = _props2.tickSizeOuter, tickSizeOuter = _props2$tickSizeOuter === void 0 ? tickSize : _props2$tickSizeOuter, _props2$tickSizeInner = _props2.tickSizeInner, tickSizeInner = _props2$tickSizeInner === void 0 ? tickSize : _props2$tickSizeInner;
      var isVertical2 = this._isAxisVertical();
      var tickXAttr = isVertical2 ? "y" : "x";
      var tickYAttr = isVertical2 ? "x" : "y";
      var wrap = this._areTicksWrapped() ? -1 : 1;
      return _ref = {}, _defineProperty$63(_ref, tickXAttr + "1", 0), _defineProperty$63(_ref, tickXAttr + "2", 0), _defineProperty$63(_ref, tickYAttr + "1", -wrap * tickSizeInner), _defineProperty$63(_ref, tickYAttr + "2", wrap * tickSizeOuter), _ref;
    }
  }, {
    key: "_isAxisVertical",
    value: function _isAxisVertical() {
      var orientation = this.props.orientation;
      return orientation === LEFT$1 || orientation === RIGHT$1;
    }
  }, {
    key: "render",
    value: function render2() {
      var _props3 = this.props, attr = _props3.attr, orientation = _props3.orientation, width = _props3.width, height = _props3.height, style = _props3.style, tickFormat4 = _props3.tickFormat, tickTotal = _props3.tickTotal, tickValues = _props3.tickValues;
      var x5 = orientation === LEFT$1 ? width : 0;
      var y7 = orientation === TOP$1 ? height : 0;
      var scale = getAttributeScale(this.props, attr);
      var values2 = getTickValues(scale, tickTotal, tickValues);
      var tickFormatFn = _getTickFormatFn(scale, tickTotal, tickFormat4);
      var translateFn = this._getTickContainerPropsGetterFn();
      var pathProps = this._getTickLineProps();
      var textProps2 = this._getTickLabelProps();
      var ticks4 = values2.map(function(v3, i) {
        var pos = scale(v3);
        var labelNode = tickFormatFn(v3, i, scale, tickTotal);
        var shouldRenderAsOwnNode = react.isValidElement(labelNode) && !["tspan", "textPath"].includes(labelNode.type);
        var shouldAddProps = labelNode && typeof labelNode.type !== "string";
        return react.createElement("g", _extends$I({
          key: i
        }, translateFn(pos, 0), {
          className: "rv-xy-plot__axis__tick",
          style
        }), react.createElement("line", _extends$I({}, pathProps, {
          className: "rv-xy-plot__axis__tick__line",
          style: _extends$I({}, style, style.line)
        })), shouldRenderAsOwnNode ? react.cloneElement(labelNode, shouldAddProps ? _extends$I({}, textProps2, {
          containerWidth: width,
          tickCount: values2.length
        }) : void 0) : react.createElement("text", _extends$I({}, textProps2, {
          className: "rv-xy-plot__axis__tick__text",
          style: _extends$I({}, style, style.text)
        }), labelNode));
      });
      return react.createElement("g", {
        transform: "translate(" + x5 + ", " + y7 + ")",
        className: "rv-xy-plot__axis__ticks"
      }, ticks4);
    }
  }]);
  return AxisTicks2;
}(react.Component);
AxisTicks.defaultProps = defaultProps$4;
AxisTicks.displayName = "AxisTicks";
AxisTicks.propTypes = propTypes$5;
AxisTicks.requiresSVG = true;
var _extends$J = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _defineProperty$73(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var ADJUSTMENT_FOR_TEXT_SIZE = 16;
var MARGIN = 6;
var LEFT$2 = ORIENTATION.LEFT;
var RIGHT$2 = ORIENTATION.RIGHT;
var TOP$2 = ORIENTATION.TOP;
var BOTTOM$2 = ORIENTATION.BOTTOM;
var defaultProps$5 = {
  position: "end"
};
var transformation = function transformation2(width, height) {
  var _ref;
  return _ref = {}, _defineProperty$73(_ref, LEFT$2, {
    end: {
      x: ADJUSTMENT_FOR_TEXT_SIZE,
      y: MARGIN,
      rotation: -90,
      textAnchor: "end"
    },
    middle: {
      x: ADJUSTMENT_FOR_TEXT_SIZE,
      y: height / 2 - MARGIN,
      rotation: -90,
      textAnchor: "middle"
    },
    start: {
      x: ADJUSTMENT_FOR_TEXT_SIZE,
      y: height - MARGIN,
      rotation: -90,
      textAnchor: "start"
    }
  }), _defineProperty$73(_ref, RIGHT$2, {
    end: {
      x: ADJUSTMENT_FOR_TEXT_SIZE * -0.5,
      y: MARGIN,
      rotation: -90,
      textAnchor: "end"
    },
    middle: {
      x: ADJUSTMENT_FOR_TEXT_SIZE * -0.5,
      y: height / 2 - MARGIN,
      rotation: -90,
      textAnchor: "middle"
    },
    start: {
      x: ADJUSTMENT_FOR_TEXT_SIZE * -0.5,
      y: height - MARGIN,
      rotation: -90,
      textAnchor: "start"
    }
  }), _defineProperty$73(_ref, TOP$2, {
    start: {
      x: MARGIN,
      y: ADJUSTMENT_FOR_TEXT_SIZE,
      rotation: 0,
      textAnchor: "start"
    },
    middle: {
      x: width / 2 - MARGIN,
      y: ADJUSTMENT_FOR_TEXT_SIZE,
      rotation: 0,
      textAnchor: "middle"
    },
    end: {
      x: width - MARGIN,
      y: ADJUSTMENT_FOR_TEXT_SIZE,
      rotation: 0,
      textAnchor: "end"
    }
  }), _defineProperty$73(_ref, BOTTOM$2, {
    start: {
      x: MARGIN,
      y: -MARGIN,
      rotation: 0,
      textAnchor: "start"
    },
    middle: {
      x: width / 2 - MARGIN,
      y: -MARGIN,
      rotation: 0,
      textAnchor: "middle"
    },
    end: {
      x: width - MARGIN,
      y: -MARGIN,
      rotation: 0,
      textAnchor: "end"
    }
  }), _ref;
};
var propTypes$6 = {
  width: propTypes.number.isRequired,
  height: propTypes.number.isRequired,
  orientation: propTypes.oneOf([LEFT$2, RIGHT$2, TOP$2, BOTTOM$2]).isRequired,
  style: propTypes.object,
  title: propTypes.string.isRequired
};
function AxisTitle(_ref2) {
  var orientation = _ref2.orientation, position = _ref2.position, width = _ref2.width, height = _ref2.height, style = _ref2.style, title2 = _ref2.title;
  var outerGroupTranslateX = orientation === LEFT$2 ? width : 0;
  var outerGroupTranslateY = orientation === TOP$2 ? height : 0;
  var outerGroupTransform = "translate(" + outerGroupTranslateX + ", " + outerGroupTranslateY + ")";
  var _transformation$orien = transformation(width, height)[orientation][position], x5 = _transformation$orien.x, y7 = _transformation$orien.y, rotation2 = _transformation$orien.rotation, textAnchor = _transformation$orien.textAnchor;
  var innerGroupTransform = "translate(" + x5 + ", " + y7 + ") rotate(" + rotation2 + ")";
  return react.createElement("g", {transform: outerGroupTransform, className: "rv-xy-plot__axis__title"}, react.createElement("g", {style: _extends$J({textAnchor}, style), transform: innerGroupTransform}, react.createElement("text", {style}, title2)));
}
AxisTitle.displayName = "AxisTitle";
AxisTitle.propTypes = propTypes$6;
AxisTitle.defaultProps = defaultProps$5;
var _extends$K = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$D = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$D(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$D(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$D(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var defaultAnimatedProps = ["xRange", "yRange", "xDomain", "yDomain", "width", "height", "marginLeft", "marginTop", "marginRight", "marginBottom", "tickSize", "tickTotal", "tickSizeInner", "tickSizeOuter"];
var LEFT$3 = ORIENTATION.LEFT;
var RIGHT$3 = ORIENTATION.RIGHT;
var TOP$3 = ORIENTATION.TOP;
var BOTTOM$3 = ORIENTATION.BOTTOM;
var propTypes$7 = {
  orientation: propTypes.oneOf([LEFT$3, RIGHT$3, TOP$3, BOTTOM$3]),
  attr: propTypes.string.isRequired,
  attrAxis: propTypes.string,
  width: propTypes.number,
  height: propTypes.number,
  top: propTypes.number,
  left: propTypes.number,
  title: propTypes.string,
  style: propTypes.object,
  className: propTypes.string,
  hideTicks: propTypes.bool,
  hideLine: propTypes.bool,
  on0: propTypes.bool,
  tickLabelAngle: propTypes.number,
  tickSize: propTypes.number,
  tickSizeInner: propTypes.number,
  tickSizeOuter: propTypes.number,
  tickPadding: propTypes.number,
  tickValues: propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string])),
  tickFormat: propTypes.func,
  tickTotal: propTypes.number,
  marginTop: propTypes.number,
  marginBottom: propTypes.number,
  marginLeft: propTypes.number,
  marginRight: propTypes.number,
  innerWidth: propTypes.number,
  innerHeight: propTypes.number
};
var defaultProps$6 = {
  className: "",
  on0: false,
  style: {},
  tickSize: 6,
  tickPadding: 8,
  orientation: BOTTOM$3
};
var predefinedClassName$e = "rv-xy-plot__axis";
var VERTICAL_CLASS_NAME = "rv-xy-plot__axis--vertical";
var HORIZONTAL_CLASS_NAME = "rv-xy-plot__axis--horizontal";
var Axis3 = function(_PureComponent) {
  _inherits$D(Axis6, _PureComponent);
  function Axis6() {
    _classCallCheck$D(this, Axis6);
    return _possibleConstructorReturn$D(this, (Axis6.__proto__ || Object.getPrototypeOf(Axis6)).apply(this, arguments));
  }
  _createClass$D(Axis6, [{
    key: "_getDefaultAxisProps",
    value: function _getDefaultAxisProps() {
      var _props = this.props, innerWidth = _props.innerWidth, innerHeight = _props.innerHeight, marginTop = _props.marginTop, marginBottom = _props.marginBottom, marginLeft = _props.marginLeft, marginRight = _props.marginRight, orientation = _props.orientation;
      if (orientation === BOTTOM$3) {
        return {
          tickTotal: getTicksTotalFromSize(innerWidth),
          top: innerHeight + marginTop,
          left: marginLeft,
          width: innerWidth,
          height: marginBottom
        };
      } else if (orientation === TOP$3) {
        return {
          tickTotal: getTicksTotalFromSize(innerWidth),
          top: 0,
          left: marginLeft,
          width: innerWidth,
          height: marginTop
        };
      } else if (orientation === LEFT$3) {
        return {
          tickTotal: getTicksTotalFromSize(innerHeight),
          top: marginTop,
          left: 0,
          width: marginLeft,
          height: innerHeight
        };
      }
      return {
        tickTotal: getTicksTotalFromSize(innerHeight),
        top: marginTop,
        left: marginLeft + innerWidth,
        width: marginRight,
        height: innerHeight
      };
    }
  }, {
    key: "render",
    value: function render2() {
      var animation = this.props.animation;
      if (animation) {
        var animatedProps2 = animation.nonAnimatedProps ? defaultAnimatedProps.filter(function(prop) {
          return animation.nonAnimatedProps.indexOf(prop) < 0;
        }) : defaultAnimatedProps;
        return react.createElement(Animation, _extends$K({}, this.props, {animatedProps: animatedProps2}), react.createElement(Axis6, _extends$K({}, this.props, {animation: null})));
      }
      var props = _extends$K({}, this._getDefaultAxisProps(), this.props);
      var attrAxis = props.attrAxis, className = props.className, height = props.height, hideLine = props.hideLine, hideTicks = props.hideTicks, left2 = props.left, marginTop = props.marginTop, on0 = props.on0, orientation = props.orientation, position = props.position, style = props.style, title2 = props.title, top2 = props.top, width = props.width;
      var isVertical2 = [LEFT$3, RIGHT$3].indexOf(orientation) > -1;
      var axisClassName = isVertical2 ? VERTICAL_CLASS_NAME : HORIZONTAL_CLASS_NAME;
      var leftPos = left2;
      var topPos = top2;
      if (on0) {
        var scale = getAttributeScale(props, attrAxis);
        if (isVertical2) {
          leftPos = scale(0);
        } else {
          topPos = marginTop + scale(0);
        }
      }
      return react.createElement("g", {
        transform: "translate(" + leftPos + "," + topPos + ")",
        className: predefinedClassName$e + " " + axisClassName + " " + className,
        style
      }, !hideLine && react.createElement(AxisLine, {
        height,
        width,
        orientation,
        style: _extends$K({}, style, style.line)
      }), !hideTicks && react.createElement(AxisTicks, _extends$K({}, props, {style: _extends$K({}, style, style.ticks)})), title2 ? react.createElement(AxisTitle, {
        position,
        title: title2,
        height,
        width,
        style: _extends$K({}, style, style.title),
        orientation
      }) : null);
    }
  }]);
  return Axis6;
}(react.PureComponent);
Axis3.displayName = "Axis";
Axis3.propTypes = propTypes$7;
Axis3.defaultProps = defaultProps$6;
Axis3.requiresSVG = true;
var _extends$L = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var TOP$4 = ORIENTATION.TOP;
var BOTTOM$4 = ORIENTATION.BOTTOM;
var propTypes$8 = _extends$L({}, Axis3.propTypes, {
  orientation: propTypes.oneOf([TOP$4, BOTTOM$4])
});
var defaultProps$7 = {
  orientation: BOTTOM$4,
  attr: "x",
  attrAxis: "y"
};
function XAxis3(props) {
  return react.createElement(Axis3, props);
}
XAxis3.displayName = "XAxis";
XAxis3.propTypes = propTypes$8;
XAxis3.defaultProps = defaultProps$7;
XAxis3.requiresSVG = true;
var _extends$M = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var LEFT$4 = ORIENTATION.LEFT;
var RIGHT$4 = ORIENTATION.RIGHT;
var propTypes$9 = _extends$M({}, Axis3.propTypes, {
  orientation: propTypes.oneOf([LEFT$4, RIGHT$4])
});
var defaultProps$8 = {
  orientation: LEFT$4,
  attr: "y",
  attrAxis: "x"
};
function YAxis3(props) {
  return react.createElement(Axis3, props);
}
YAxis3.displayName = "YAxis";
YAxis3.propTypes = propTypes$9;
YAxis3.defaultProps = defaultProps$8;
YAxis3.requiresSVG = true;
({
  className: propTypes.string,
  height: propTypes.number,
  endColor: propTypes.string,
  endTitle: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,
  midColor: propTypes.string,
  midTitle: propTypes.oneOfType([propTypes.number, propTypes.string]),
  startColor: propTypes.string,
  startTitle: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,
  width: propTypes.number
});
({
  className: propTypes.string,
  circlesTotal: propTypes.number,
  endSize: propTypes.number,
  endTitle: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,
  height: propTypes.number,
  startSize: propTypes.number,
  startTitle: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,
  width: propTypes.number
});
var _extends$N = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var STROKE_STYLES$1 = {
  dashed: "6, 2",
  solid: null
};
function DiscreteColorLegendItem(_ref) {
  var color3 = _ref.color, strokeDasharray2 = _ref.strokeDasharray, strokeStyle = _ref.strokeStyle, strokeWidth = _ref.strokeWidth, disabled = _ref.disabled, onClick = _ref.onClick, orientation = _ref.orientation, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, title2 = _ref.title;
  var className = "rv-discrete-color-legend-item " + orientation;
  if (disabled) {
    className += " disabled";
  }
  if (onClick) {
    className += " clickable";
  }
  var strokeDasharrayStyle = STROKE_STYLES$1[strokeStyle] || strokeDasharray2;
  return react.createElement("div", {className, onClick, onMouseEnter, onMouseLeave}, react.createElement("svg", {className: "rv-discrete-color-legend-item__color", height: 2, width: 14}, react.createElement("path", {
    className: "rv-discrete-color-legend-item__color__path",
    d: "M 0, 1 L 14, 1",
    style: _extends$N({}, strokeWidth ? {strokeWidth} : {}, strokeDasharrayStyle ? {strokeDasharray: strokeDasharrayStyle} : {}, {
      stroke: disabled ? null : color3
    })
  })), react.createElement("span", {className: "rv-discrete-color-legend-item__title"}, title2));
}
DiscreteColorLegendItem.propTypes = {
  color: propTypes.string.isRequired,
  disabled: propTypes.bool,
  title: propTypes.oneOfType([propTypes.string, propTypes.element]).isRequired,
  onClick: propTypes.func,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  orientation: propTypes.oneOf(["vertical", "horizontal"]).isRequired,
  strokeDasharray: propTypes.string,
  strokeWidth: propTypes.number,
  strokeStyle: propTypes.oneOf(Object.keys(STROKE_STYLES$1))
};
DiscreteColorLegendItem.defaultProps = {
  disabled: false,
  strokeStyle: "solid"
};
DiscreteColorLegendItem.displayName = "DiscreteColorLegendItem";
var _extends$O = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function DiscreteColorLegend(_ref) {
  var className = _ref.className, colors5 = _ref.colors, height = _ref.height, items = _ref.items, onItemClick = _ref.onItemClick, onItemMouseEnter = _ref.onItemMouseEnter, onItemMouseLeave = _ref.onItemMouseLeave, orientation = _ref.orientation, style = _ref.style, width = _ref.width;
  return react.createElement("div", {
    className: "rv-discrete-color-legend " + orientation + " " + className,
    style: _extends$O({width, height}, style)
  }, items.map(function(item, i) {
    return react.createElement(DiscreteColorLegendItem, {
      title: item.title ? item.title : item,
      color: item.color ? item.color : colors5[i % colors5.length],
      strokeDasharray: item.strokeDasharray,
      strokeStyle: item.strokeStyle,
      strokeWidth: item.strokeWidth,
      disabled: Boolean(item.disabled),
      orientation,
      key: i,
      onClick: onItemClick ? function(e3) {
        return onItemClick(item, i, e3);
      } : null,
      onMouseEnter: onItemMouseEnter ? function(e3) {
        return onItemMouseEnter(item, i, e3);
      } : null,
      onMouseLeave: onItemMouseEnter ? function(e3) {
        return onItemMouseLeave(item, i, e3);
      } : null
    });
  }));
}
DiscreteColorLegend.displayName = "DiscreteColorLegendItem";
DiscreteColorLegend.propTypes = {
  className: propTypes.string,
  items: propTypes.arrayOf(propTypes.oneOfType([propTypes.shape({
    title: propTypes.oneOfType([propTypes.string, propTypes.element]).isRequired,
    color: propTypes.string,
    disabled: propTypes.bool
  }), propTypes.string.isRequired, propTypes.element])).isRequired,
  onItemClick: propTypes.func,
  onItemMouseEnter: propTypes.func,
  onItemMouseLeave: propTypes.func,
  height: propTypes.number,
  width: propTypes.number,
  orientation: propTypes.oneOf(["vertical", "horizontal"])
};
DiscreteColorLegend.defaultProps = {
  className: "",
  colors: DISCRETE_COLOR_RANGE,
  orientation: "vertical"
};
var _extends$P = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
_extends$P({}, DiscreteColorLegend.propTypes, {
  searchText: propTypes.string,
  onSearchChange: propTypes.func,
  searchPlaceholder: propTypes.string,
  searchFn: propTypes.func
});
var _createClass$E = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$Q = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _defineProperty$83(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck$E(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$E(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$E(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var predefinedClassName$f = "rv-parallel-coordinates-chart";
var DEFAULT_FORMAT$1 = format4(".2r");
function getAxes(props) {
  var animation = props.animation, domains = props.domains, style = props.style, tickFormat4 = props.tickFormat;
  return domains.map(function(domain, index4) {
    var sortedDomain = domain.domain;
    var domainTickFormat = function domainTickFormat2(t4) {
      return domain.tickFormat ? domain.tickFormat(t4) : tickFormat4(t4);
    };
    return react.createElement(DecorativeAxis, {
      animation,
      key: index4 + "-axis",
      axisStart: {x: domain.name, y: 0},
      axisEnd: {x: domain.name, y: 1},
      axisDomain: sortedDomain,
      numberOfTicks: 5,
      tickValue: domainTickFormat,
      style: style.axes
    });
  });
}
function getLabels2(props) {
  var domains = props.domains, style = props.style;
  return domains.map(function(domain, index4) {
    return {
      x: domain.name,
      y: 1.1,
      label: domain.name,
      style
    };
  });
}
function getLines(props) {
  var animation = props.animation, brushFilters = props.brushFilters, colorRange = props.colorRange, domains = props.domains, data3 = props.data, style = props.style, showMarks = props.showMarks;
  var scales = domains.reduce(function(acc, _ref) {
    var domain = _ref.domain, name = _ref.name;
    acc[name] = linear4().domain(domain).range([0, 1]);
    return acc;
  }, {});
  return data3.map(function(row, rowIndex) {
    var withinFilteredRange = true;
    var mappedData = domains.map(function(domain, index4) {
      var getValue2 = domain.getValue, name = domain.name;
      var yVal = scales[name](getValue2 ? getValue2(row) : row[name]);
      var filter2 = brushFilters[name];
      if (filter2 && (yVal < filter2.min || yVal > filter2.max)) {
        withinFilteredRange = false;
      }
      return {x: name, y: yVal};
    });
    var selectedName = predefinedClassName$f + "-line";
    var unselectedName = selectedName + " " + predefinedClassName$f + "-line-unselected";
    var lineProps = {
      animation,
      className: withinFilteredRange ? selectedName : unselectedName,
      key: rowIndex + "-polygon",
      data: mappedData,
      color: row.color || colorRange[rowIndex % colorRange.length],
      style: _extends$Q({}, style.lines, row.style || {})
    };
    if (!withinFilteredRange) {
      lineProps.style = _extends$Q({}, lineProps.style, style.deselectedLineStyle);
    }
    return showMarks ? react.createElement(LineMarkSeries, lineProps) : react.createElement(LineSeries, lineProps);
  });
}
var ParallelCoordinates = function(_Component) {
  _inherits$E(ParallelCoordinates2, _Component);
  function ParallelCoordinates2() {
    var _ref2;
    var _temp, _this, _ret;
    _classCallCheck$E(this, ParallelCoordinates2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn$E(this, (_ref2 = ParallelCoordinates2.__proto__ || Object.getPrototypeOf(ParallelCoordinates2)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      brushFilters: {}
    }, _temp), _possibleConstructorReturn$E(_this, _ret);
  }
  _createClass$E(ParallelCoordinates2, [{
    key: "render",
    value: function render2() {
      var _this2 = this;
      var brushFilters = this.state.brushFilters;
      var _props = this.props, animation = _props.animation, brushing = _props.brushing, className = _props.className, children2 = _props.children, colorRange = _props.colorRange, data3 = _props.data, domains = _props.domains, height = _props.height, hideInnerMostValues = _props.hideInnerMostValues, margin = _props.margin, onMouseLeave = _props.onMouseLeave, onMouseEnter = _props.onMouseEnter, showMarks = _props.showMarks, style = _props.style, tickFormat4 = _props.tickFormat, width = _props.width;
      var axes = getAxes({
        domains,
        animation,
        hideInnerMostValues,
        style,
        tickFormat: tickFormat4
      });
      var lines = getLines({
        animation,
        brushFilters,
        colorRange,
        domains,
        data: data3,
        showMarks,
        style
      });
      var labelSeries = react.createElement(LabelSeries, {
        animation: true,
        key: className,
        className: predefinedClassName$f + "-label",
        data: getLabels2({domains, style: style.labels})
      });
      var _getInnerDimensions = getInnerDimensions(this.props, DEFAULT_MARGINS), marginLeft = _getInnerDimensions.marginLeft, marginRight = _getInnerDimensions.marginRight;
      return react.createElement(XYPlot, {
        height,
        width,
        margin,
        dontCheckIfEmpty: true,
        className: className + " " + predefinedClassName$f,
        onMouseLeave,
        onMouseEnter,
        xType: "ordinal",
        yDomain: [0, 1]
      }, children2, axes.concat(lines).concat(labelSeries), brushing && domains.map(function(d2) {
        var trigger = function trigger2(row) {
          _this2.setState({
            brushFilters: _extends$Q({}, brushFilters, _defineProperty$83({}, d2.name, row ? {min: row.bottom, max: row.top} : null))
          });
        };
        return react.createElement(Highlight, {
          key: d2.name,
          drag: true,
          highlightX: d2.name,
          onBrushEnd: trigger,
          onDragEnd: trigger,
          highlightWidth: (width - marginLeft - marginRight) / domains.length,
          enableX: false
        });
      }));
    }
  }]);
  return ParallelCoordinates2;
}(react.Component);
ParallelCoordinates.displayName = "ParallelCoordinates";
ParallelCoordinates.propTypes = {
  animation: AnimationPropType,
  brushing: propTypes.bool,
  className: propTypes.string,
  colorType: propTypes.string,
  colorRange: propTypes.arrayOf(propTypes.string),
  data: propTypes.arrayOf(propTypes.object).isRequired,
  domains: propTypes.arrayOf(propTypes.shape({
    name: propTypes.string.isRequired,
    domain: propTypes.arrayOf(propTypes.number).isRequired,
    tickFormat: propTypes.func
  })).isRequired,
  height: propTypes.number.isRequired,
  margin: MarginPropType,
  style: propTypes.shape({
    axes: propTypes.object,
    labels: propTypes.object,
    lines: propTypes.object
  }),
  showMarks: propTypes.bool,
  tickFormat: propTypes.func,
  width: propTypes.number.isRequired
};
ParallelCoordinates.defaultProps = {
  className: "",
  colorType: "category",
  colorRange: DISCRETE_COLOR_RANGE,
  style: {
    axes: {
      line: {},
      ticks: {},
      text: {}
    },
    labels: {
      fontSize: 10,
      textAnchor: "middle"
    },
    lines: {
      strokeWidth: 1,
      strokeOpacity: 1
    },
    deselectedLineStyle: {
      strokeOpacity: 0.1
    }
  },
  tickFormat: DEFAULT_FORMAT$1
};
format4(".2r");
({
  animation: AnimationPropType,
  className: propTypes.string,
  colorType: propTypes.string,
  colorRange: propTypes.arrayOf(propTypes.string),
  data: propTypes.arrayOf(propTypes.object).isRequired,
  domains: propTypes.arrayOf(propTypes.shape({
    name: propTypes.string.isRequired,
    domain: propTypes.arrayOf(propTypes.number).isRequired,
    tickFormat: propTypes.func
  })).isRequired,
  height: propTypes.number.isRequired,
  hideInnerMostValues: propTypes.bool,
  margin: MarginPropType,
  startingAngle: propTypes.number,
  style: propTypes.shape({
    axes: propTypes.object,
    labels: propTypes.object,
    polygons: propTypes.object
  }),
  tickFormat: propTypes.func,
  width: propTypes.number.isRequired,
  renderAxesOverPolygons: propTypes.bool,
  onValueMouseOver: propTypes.func,
  onValueMouseOut: propTypes.func,
  onSeriesMouseOver: propTypes.func,
  onSeriesMouseOut: propTypes.func
});
({
  animation: AnimationPropType,
  className: propTypes.string,
  colorType: propTypes.string,
  data: propTypes.arrayOf(propTypes.shape({
    angle: propTypes.number,
    className: propTypes.string,
    label: propTypes.string,
    radius: propTypes.number,
    style: propTypes.object
  })).isRequired,
  getAngle: propTypes.func,
  getAngle0: propTypes.func,
  padAngle: propTypes.oneOfType([propTypes.func, propTypes.number]),
  getRadius: propTypes.func,
  getRadius0: propTypes.func,
  getLabel: propTypes.func,
  height: propTypes.number.isRequired,
  labelsAboveChildren: propTypes.bool,
  labelsStyle: propTypes.object,
  margin: MarginPropType,
  onValueClick: propTypes.func,
  onValueMouseOver: propTypes.func,
  onValueMouseOut: propTypes.func,
  showLabels: propTypes.bool,
  style: propTypes.object,
  subLabel: propTypes.func,
  width: propTypes.number.isRequired
});
function ascending$3(a3, b10) {
  return a3 < b10 ? -1 : a3 > b10 ? 1 : a3 >= b10 ? 0 : NaN;
}
function bisector$2(compare) {
  if (compare.length === 1)
    compare = ascendingComparator$2(compare);
  return {
    left: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      }
      return lo;
    },
    right: function(a3, x5, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a3.length;
      while (lo < hi2) {
        var mid = lo + hi2 >>> 1;
        if (compare(a3[mid], x5) > 0)
          hi2 = mid;
        else
          lo = mid + 1;
      }
      return lo;
    }
  };
}
function ascendingComparator$2(f3) {
  return function(d2, x5) {
    return ascending$3(f3(d2), x5);
  };
}
bisector$2(ascending$3);
({
  align: propTypes.oneOf(["justify", "left", "right", "center"]),
  className: propTypes.string,
  hasVoronoi: propTypes.bool,
  height: propTypes.number.isRequired,
  hideLabels: propTypes.bool,
  labelRotation: propTypes.number,
  layout: propTypes.number,
  links: propTypes.arrayOf(propTypes.shape({
    source: propTypes.oneOfType([propTypes.number, propTypes.object]).isRequired,
    target: propTypes.oneOfType([propTypes.number, propTypes.object]).isRequired
  })).isRequired,
  margin: MarginPropType,
  nodePadding: propTypes.number,
  nodes: propTypes.arrayOf(propTypes.object).isRequired,
  nodeWidth: propTypes.number,
  onValueMouseOver: propTypes.func,
  onValueClick: propTypes.func,
  onValueMouseOut: propTypes.func,
  onLinkClick: propTypes.func,
  onLinkMouseOver: propTypes.func,
  onLinkMouseOut: propTypes.func,
  style: propTypes.shape({
    links: propTypes.object,
    rects: propTypes.object,
    labels: propTypes.object
  }),
  width: propTypes.number.isRequired
});
({
  animation: AnimationPropType,
  getAngle: propTypes.func,
  getAngle0: propTypes.func,
  className: propTypes.string,
  colorType: propTypes.string,
  data: propTypes.object.isRequired,
  height: propTypes.number.isRequired,
  hideRootNode: propTypes.bool,
  getLabel: propTypes.func,
  onValueClick: propTypes.func,
  onValueMouseOver: propTypes.func,
  onValueMouseOut: propTypes.func,
  getSize: propTypes.func,
  width: propTypes.number.isRequired,
  padAngle: propTypes.oneOfType([propTypes.func, propTypes.number])
});
var _extends$R = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var ANIMATED_PROPS = ["colorRange", "colorDomain", "color", "opacityRange", "opacityDomain", "opacity", "x0", "x1", "y0", "y1", "r"];
function TreemapLeaf(props) {
  var animation = props.animation, getLabel5 = props.getLabel, mode = props.mode, node = props.node, onLeafClick = props.onLeafClick, onLeafMouseOver = props.onLeafMouseOver, onLeafMouseOut = props.onLeafMouseOut, r3 = props.r, scales = props.scales, x03 = props.x0, x14 = props.x1, y03 = props.y0, y14 = props.y1, style = props.style;
  if (animation) {
    return react.createElement(Animation, _extends$R({}, props, {animatedProps: ANIMATED_PROPS}), react.createElement(TreemapLeaf, _extends$R({}, props, {animation: null})));
  }
  var useCirclePacking = mode === "circlePack";
  var background3 = scales.color(node);
  var opacity = scales.opacity(node);
  var color3 = getFontColorFromBackground(background3);
  var data3 = node.data;
  var title2 = getLabel5(data3);
  var leafStyle = _extends$R({
    top: useCirclePacking ? y03 - r3 : y03,
    left: useCirclePacking ? x03 - r3 : x03,
    width: useCirclePacking ? r3 * 2 : x14 - x03,
    height: useCirclePacking ? r3 * 2 : y14 - y03,
    background: background3,
    opacity,
    color: color3
  }, style, node.data.style);
  return react.createElement("div", {
    className: "rv-treemap__leaf " + (useCirclePacking ? "rv-treemap__leaf--circle" : ""),
    onMouseEnter: function onMouseEnter(event) {
      return onLeafMouseOver(node, event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return onLeafMouseOut(node, event);
    },
    onClick: function onClick(event) {
      return onLeafClick(node, event);
    },
    style: leafStyle
  }, react.createElement("div", {className: "rv-treemap__leaf__content"}, title2));
}
TreemapLeaf.propTypes = {
  animation: AnimationPropType,
  height: propTypes.number.isRequired,
  mode: propTypes.string,
  node: propTypes.object.isRequired,
  onLeafClick: propTypes.func,
  onLeafMouseOver: propTypes.func,
  onLeafMouseOut: propTypes.func,
  scales: propTypes.object.isRequired,
  width: propTypes.number.isRequired,
  r: propTypes.number.isRequired,
  x0: propTypes.number.isRequired,
  x1: propTypes.number.isRequired,
  y0: propTypes.number.isRequired,
  y1: propTypes.number.isRequired
};
var _extends$S = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function TreemapDOM(props) {
  var animation = props.animation, className = props.className, height = props.height, hideRootNode = props.hideRootNode, getLabel5 = props.getLabel, mode = props.mode, nodes = props.nodes, width = props.width, scales = props.scales, style = props.style;
  var useCirclePacking = mode === "circlePack";
  return react.createElement("div", {
    className: "rv-treemap " + (useCirclePacking ? "rv-treemap-circle-packed" : "") + " " + className,
    style: {height, width}
  }, nodes.map(function(node, index4) {
    if (hideRootNode && !index4) {
      return null;
    }
    var nodeProps = _extends$S({
      animation,
      node,
      getLabel: getLabel5
    }, props, {
      x0: useCirclePacking ? node.x : node.x0,
      x1: useCirclePacking ? node.x : node.x1,
      y0: useCirclePacking ? node.y : node.y0,
      y1: useCirclePacking ? node.y : node.y1,
      r: useCirclePacking ? node.r : 1,
      scales,
      style
    });
    return react.createElement(TreemapLeaf, _extends$S({}, nodeProps, {key: "leaf-" + index4}));
  }));
}
TreemapDOM.displayName = "TreemapDOM";
var _extends$T = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$F = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck$F(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$F(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$F(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var MARGIN_ADJUST = 1.2;
var TreemapSVG = function(_React$Component) {
  _inherits$F(TreemapSVG2, _React$Component);
  function TreemapSVG2() {
    _classCallCheck$F(this, TreemapSVG2);
    return _possibleConstructorReturn$F(this, (TreemapSVG2.__proto__ || Object.getPrototypeOf(TreemapSVG2)).apply(this, arguments));
  }
  _createClass$F(TreemapSVG2, [{
    key: "getCircularNodes",
    value: function getCircularNodes() {
      var _props = this.props, animation = _props.animation, hideRootNode = _props.hideRootNode, nodes = _props.nodes, onLeafMouseOver = _props.onLeafMouseOver, onLeafMouseOut = _props.onLeafMouseOut, onLeafClick = _props.onLeafClick, scales = _props.scales, style = _props.style;
      var _nodes$reduce = nodes.reduce(function(acc, node, index4) {
        if (!index4 && hideRootNode) {
          return acc;
        }
        var x5 = node.x, y7 = node.y, r3 = node.r;
        return {
          maxY: Math.max(y7 + r3, acc.maxY),
          minY: Math.min(y7 - r3, acc.minY),
          maxX: Math.max(x5 + MARGIN_ADJUST * r3, acc.maxX),
          minX: Math.min(x5 - MARGIN_ADJUST * r3, acc.minX),
          rows: acc.rows.concat([{
            x: x5,
            y: y7,
            size: r3,
            color: scales.color(node)
          }])
        };
      }, {
        rows: [],
        maxY: -Infinity,
        minY: Infinity,
        maxX: -Infinity,
        minX: Infinity
      }), rows = _nodes$reduce.rows, minY = _nodes$reduce.minY, maxY = _nodes$reduce.maxY, minX = _nodes$reduce.minX, maxX = _nodes$reduce.maxX;
      return {
        updatedNodes: react.createElement(MarkSeries, {
          animation,
          className: "rv-treemap__leaf rv-treemap__leaf--circle",
          onSeriesMouseEnter: onLeafMouseOver,
          onSeriesMouseLeave: onLeafMouseOut,
          onSeriesClick: onLeafClick,
          data: rows,
          colorType: "literal",
          getColor: function getColor2(d2) {
            return d2.color;
          },
          sizeType: "literal",
          getSize: function getSize2(d2) {
            return d2.size;
          },
          style
        }),
        minY,
        maxY,
        minX,
        maxX
      };
    }
  }, {
    key: "getNonCircularNodes",
    value: function getNonCircularNodes() {
      var _props2 = this.props, animation = _props2.animation, hideRootNode = _props2.hideRootNode, nodes = _props2.nodes, onLeafMouseOver = _props2.onLeafMouseOver, onLeafMouseOut = _props2.onLeafMouseOut, onLeafClick = _props2.onLeafClick, scales = _props2.scales, style = _props2.style;
      var color3 = scales.color;
      return nodes.reduce(function(acc, node, index4) {
        if (!index4 && hideRootNode) {
          return acc;
        }
        var x03 = node.x0, x14 = node.x1, y14 = node.y1, y03 = node.y0;
        var x5 = x03;
        var y7 = y03;
        var nodeHeight = y14 - y03;
        var nodeWidth = x14 - x03;
        acc.maxY = Math.max(y7 + nodeHeight, acc.maxY);
        acc.minY = Math.min(y7, acc.minY);
        acc.maxX = Math.max(x5 + nodeWidth, acc.maxX);
        acc.minX = Math.min(x5, acc.minX);
        var data3 = [{x: x5, y: y7}, {x: x5, y: y7 + nodeHeight}, {x: x5 + nodeWidth, y: y7 + nodeHeight}, {x: x5 + nodeWidth, y: y7}];
        acc.updatedNodes = acc.updatedNodes.concat([react.createElement(PolygonSeries, {
          animation,
          className: "rv-treemap__leaf",
          key: index4,
          color: color3(node),
          type: "literal",
          onSeriesMouseEnter: onLeafMouseOver,
          onSeriesMouseLeave: onLeafMouseOut,
          onSeriesClick: onLeafClick,
          data: data3,
          style: _extends$T({}, style, node.style)
        })]);
        return acc;
      }, {
        updatedNodes: [],
        maxY: -Infinity,
        minY: Infinity,
        maxX: -Infinity,
        minX: Infinity
      });
    }
  }, {
    key: "render",
    value: function render2() {
      var _props3 = this.props, className = _props3.className, height = _props3.height, mode = _props3.mode, nodes = _props3.nodes, width = _props3.width;
      var useCirclePacking = mode === "circlePack";
      var _ref = useCirclePacking ? this.getCircularNodes() : this.getNonCircularNodes(), minY = _ref.minY, maxY = _ref.maxY, minX = _ref.minX, maxX = _ref.maxX, updatedNodes = _ref.updatedNodes;
      var labels = nodes.reduce(function(acc, node) {
        if (!node.data.title) {
          return acc;
        }
        return acc.concat(_extends$T({}, node.data, {
          x: node.x0 || node.x,
          y: node.y0 || node.y,
          label: "" + node.data.title
        }));
      }, []);
      return react.createElement(XYPlot, _extends$T({
        className: "rv-treemap " + (useCirclePacking ? "rv-treemap-circle-packed" : "") + " " + className,
        width,
        height,
        yDomain: [maxY, minY],
        xDomain: [minX, maxX],
        colorType: "literal",
        hasTreeStructure: true
      }, this.props), updatedNodes, react.createElement(LabelSeries, {data: labels}));
    }
  }]);
  return TreemapSVG2;
}(react.Component);
TreemapSVG.displayName = "TreemapSVG";
var _createClass$G = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends$U = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function _classCallCheck$G(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$G(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$G(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var TREEMAP_TILE_MODES = {
  squarify: treemapSquarify,
  resquarify: treemapResquarify,
  slice: treemapSlice2,
  dice: treemapDice2,
  slicedice: treemapSliceDice,
  binary: treemapBinary
};
var TREEMAP_LAYOUT_MODES = ["circlePack", "partition", "partition-pivot"];
var NOOP = function NOOP2(d2) {
  return d2;
};
var ATTRIBUTES$2 = ["opacity", "color"];
var DEFAULT_MARGINS$1 = {
  left: 40,
  right: 10,
  top: 10,
  bottom: 40
};
function _getScaleFns(props) {
  var data3 = props.data;
  var allData = data3.children || [];
  var compatibleProps = _extends$U({}, props, getMissingScaleProps(props, allData, ATTRIBUTES$2), {
    _allData: allData
  });
  return {
    opacity: getAttributeFunctor(compatibleProps, "opacity"),
    color: getAttributeFunctor(compatibleProps, "color")
  };
}
var Treemap = function(_React$Component) {
  _inherits$G(Treemap2, _React$Component);
  function Treemap2(props) {
    _classCallCheck$G(this, Treemap2);
    var _this = _possibleConstructorReturn$G(this, (Treemap2.__proto__ || Object.getPrototypeOf(Treemap2)).call(this, props));
    _this.state = _extends$U({
      scales: _getScaleFns(props)
    }, getInnerDimensions(props, props.margin));
    return _this;
  }
  _createClass$G(Treemap2, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps2(props) {
      this.setState(_extends$U({
        scales: _getScaleFns(props)
      }, getInnerDimensions(props, props.margin)));
    }
  }, {
    key: "_getNodesToRender",
    value: function _getNodesToRender() {
      var _state = this.state, innerWidth = _state.innerWidth, innerHeight = _state.innerHeight;
      var _props = this.props, data3 = _props.data, mode = _props.mode, padding2 = _props.padding, sortFunction2 = _props.sortFunction, getSize2 = _props.getSize;
      if (!data3) {
        return [];
      }
      if (mode === "partition" || mode === "partition-pivot") {
        var partitionFunction = partition().size(mode === "partition-pivot" ? [innerHeight, innerWidth] : [innerWidth, innerHeight]).padding(padding2);
        var _structuredInput = hierarchy2(data3).sum(getSize2).sort(function(a3, b10) {
          return sortFunction2(a3, b10, getSize2);
        });
        var mappedNodes = partitionFunction(_structuredInput).descendants();
        if (mode === "partition-pivot") {
          return mappedNodes.map(function(node) {
            return _extends$U({}, node, {
              x0: node.y0,
              x1: node.y1,
              y0: node.x0,
              y1: node.x1
            });
          });
        }
        return mappedNodes;
      }
      if (mode === "circlePack") {
        var packingFunction = pack().size([innerWidth, innerHeight]).padding(padding2);
        var _structuredInput2 = hierarchy2(data3).sum(getSize2).sort(function(a3, b10) {
          return sortFunction2(a3, b10, getSize2);
        });
        return packingFunction(_structuredInput2).descendants();
      }
      var tileFn = TREEMAP_TILE_MODES[mode];
      var treemapingFunction = treemap().tile(tileFn).size([innerWidth, innerHeight]).padding(padding2);
      var structuredInput = hierarchy2(data3).sum(getSize2).sort(function(a3, b10) {
        return sortFunction2(a3, b10, getSize2);
      });
      return treemapingFunction(structuredInput).descendants();
    }
  }, {
    key: "render",
    value: function render2() {
      var renderMode = this.props.renderMode;
      var scales = this.state.scales;
      var nodes = this._getNodesToRender();
      var TreemapElement = renderMode === "SVG" ? TreemapSVG : TreemapDOM;
      return react.createElement(TreemapElement, _extends$U({}, this.props, {nodes, scales}));
    }
  }]);
  return Treemap2;
}(react.Component);
Treemap.displayName = "Treemap";
Treemap.propTypes = {
  animation: AnimationPropType,
  className: propTypes.string,
  data: propTypes.object.isRequired,
  height: propTypes.number.isRequired,
  hideRootNode: propTypes.bool,
  margin: MarginPropType,
  mode: propTypes.oneOf(Object.keys(TREEMAP_TILE_MODES).concat(TREEMAP_LAYOUT_MODES)),
  onLeafClick: propTypes.func,
  onLeafMouseOver: propTypes.func,
  onLeafMouseOut: propTypes.func,
  useCirclePacking: propTypes.bool,
  padding: propTypes.number.isRequired,
  sortFunction: propTypes.func,
  width: propTypes.number.isRequired,
  getSize: propTypes.func,
  getColor: propTypes.func
};
Treemap.defaultProps = {
  className: "",
  colorRange: CONTINUOUS_COLOR_RANGE,
  _colorValue: DEFAULT_COLOR,
  data: {
    children: []
  },
  hideRootNode: false,
  margin: DEFAULT_MARGINS$1,
  mode: "squarify",
  onLeafClick: NOOP,
  onLeafMouseOver: NOOP,
  onLeafMouseOut: NOOP,
  opacityType: OPACITY_TYPE,
  _opacityValue: DEFAULT_OPACITY,
  padding: 1,
  sortFunction: function sortFunction(a3, b10, accessor) {
    if (!accessor) {
      return 0;
    }
    return accessor(a3) - accessor(b10);
  },
  getSize: function getSize(d2) {
    return d2.size;
  },
  getColor: function getColor(d2) {
    return d2.color;
  },
  getLabel: function getLabel4(d2) {
    return d2.title;
  }
};
var win;
if (typeof window !== "undefined") {
  win = window;
} else if (typeof commonjsGlobal !== "undefined") {
  win = commonjsGlobal;
} else if (typeof self !== "undefined") {
  win = self;
} else {
  win = {};
}
var window_1 = win;
var _extends$V = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$H = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _objectWithoutProperties$13(obj, keys4) {
  var target = {};
  for (var i in obj) {
    if (keys4.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target[i] = obj[i];
  }
  return target;
}
function _classCallCheck$H(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$H(self2, call2) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
}
function _inherits$H(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, enumerable: false, writable: true, configurable: true}});
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var CONTAINER_REF = "container";
var resizeSubscribers = [];
var DEBOUNCE_DURATION = 100;
var timeoutId = null;
function debounceEmitResize() {
  window_1.clearTimeout(timeoutId);
  timeoutId = window_1.setTimeout(emitResize, DEBOUNCE_DURATION);
}
function emitResize() {
  resizeSubscribers.forEach(function(cb2) {
    return cb2();
  });
}
function subscribeToDebouncedResize(cb2) {
  resizeSubscribers.push(cb2);
  if (resizeSubscribers.length === 1) {
    window_1.addEventListener("resize", debounceEmitResize);
  }
  return function unsubscribe() {
    removeSubscriber(cb2);
    if (resizeSubscribers.length === 0) {
      window_1.clearTimeout(timeoutId);
      window_1.removeEventListener("resize", debounceEmitResize);
    }
  };
}
function removeSubscriber(cb2) {
  var index4 = resizeSubscribers.indexOf(cb2);
  if (index4 > -1) {
    resizeSubscribers.splice(index4, 1);
  }
}
function getDisplayName3(Component) {
  return Component.displayName || Component.name || "Component";
}
function makeFlexible(Component, isWidthFlexible, isHeightFlexible) {
  var ResultClass = function(_React$Component) {
    _inherits$H(ResultClass2, _React$Component);
    _createClass$H(ResultClass2, null, [{
      key: "propTypes",
      get: function get4() {
        var _Component$propTypes = Component.propTypes;
        _Component$propTypes.height;
        _Component$propTypes.width;
        var otherPropTypes = _objectWithoutProperties$13(_Component$propTypes, ["height", "width"]);
        return otherPropTypes;
      }
    }]);
    function ResultClass2(props) {
      _classCallCheck$H(this, ResultClass2);
      var _this = _possibleConstructorReturn$H(this, (ResultClass2.__proto__ || Object.getPrototypeOf(ResultClass2)).call(this, props));
      _this._onResize = function() {
        var containerElement = getDOMNode(_this[CONTAINER_REF]);
        var offsetHeight = containerElement.offsetHeight, offsetWidth = containerElement.offsetWidth;
        var newHeight = _this.state.height === offsetHeight ? {} : {height: offsetHeight};
        var newWidth = _this.state.width === offsetWidth ? {} : {width: offsetWidth};
        _this.setState(_extends$V({}, newHeight, newWidth));
      };
      _this.state = {
        height: 0,
        width: 0
      };
      return _this;
    }
    _createClass$H(ResultClass2, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._onResize();
        this.cancelSubscription = subscribeToDebouncedResize(this._onResize);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps2() {
        this._onResize();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.cancelSubscription();
      }
    }, {
      key: "render",
      value: function render2() {
        var _this2 = this;
        var _state = this.state, height = _state.height, width = _state.width;
        var props = _extends$V({}, this.props, {
          animation: height === 0 && width === 0 ? null : this.props.animation
        });
        var updatedDimensions = _extends$V({}, isHeightFlexible ? {height} : {}, isWidthFlexible ? {width} : {});
        return react.createElement("div", {
          ref: function ref(_ref) {
            return _this2[CONTAINER_REF] = _ref;
          },
          style: {width: "100%", height: "100%"}
        }, react.createElement(Component, _extends$V({}, updatedDimensions, props)));
      }
    }]);
    return ResultClass2;
  }(react.Component);
  ResultClass.displayName = "Flexible" + getDisplayName3(Component);
  return ResultClass;
}
function makeHeightFlexible(component) {
  return makeFlexible(component, false, true);
}
function makeVisFlexible(component) {
  return makeFlexible(component, true, true);
}
function makeWidthFlexible(component) {
  return makeFlexible(component, true, false);
}
makeWidthFlexible(XYPlot);
makeHeightFlexible(XYPlot);
makeVisFlexible(XYPlot);

// dist/components/reactvis.js
var COLORS = [
  "#19CDD7",
  "#DDB27C",
  "#88572C",
  "#FF991F",
  "#F15C17",
  "#223F9A",
  "#DA70BF",
  "#125C77",
  "#4DC19C",
  "#776E57",
  "#12939A",
  "#17B8BE",
  "#F6D18A",
  "#B7885E",
  "#FFCB99",
  "#F89570",
  "#829AE3",
  "#E79FD5",
  "#1E96BE",
  "#89DAC1",
  "#B3AD9E"
];
var PI = Math.PI;
function updateData() {
  const divider = Math.floor(Math.random() * 8 + 3);
  const newData = [...new Array(5)].map((row, index4) => {
    return {
      color: index4,
      radius0: Math.random() > 0.8 ? Math.random() + 1 : 0,
      radius: Math.random() * 3 + 1,
      angle: (index4 + 1) * PI / divider,
      angle0: index4 * PI / divider
    };
  });
  return newData.concat([
    {angle0: 0, angle: PI * 2 * Math.random(), radius: 1.1, radius0: 0.8}
  ]);
}
function updateLittleData() {
  const portion = Math.random();
  return [
    {
      angle0: 0,
      angle: portion * PI * 2,
      radius0: 0,
      radius: 10,
      color: COLORS[13]
    },
    {
      angle0: portion * PI * 2,
      angle: 2 * PI,
      radius0: 0,
      radius: 10,
      color: COLORS[12]
    }
  ];
}
var PieReactVis = class extends react.Component {
  constructor() {
    super(...arguments);
    __publicField(this, "state", {
      data: updateData(),
      littleData: updateLittleData(),
      value: false
    });
  }
  render() {
    return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("button", {
      style: {margin: "1rem"},
      onClick: () => this.setState({
        data: updateData(),
        littleData: updateLittleData()
      })
    }, "UPDATE"), /* @__PURE__ */ react.createElement(XYPlot, {
      xDomain: [-5, 5],
      yDomain: [-5, 5],
      width: 310,
      height: 310,
      className: "react-vis-pie"
    }, /* @__PURE__ */ react.createElement(XAxis3, {
      hideLine: true,
      title: "X"
    }), /* @__PURE__ */ react.createElement(YAxis3, {
      title: "Y"
    }), /* @__PURE__ */ react.createElement(ArcSeries, {
      animation: true,
      radiusDomain: [0, 4],
      data: this.state.data.map((row) => {
        if (this.state.value && this.state.value.color === row.color) {
          return {...row, style: {stroke: "black", strokeWidth: "5px"}};
        }
        return row;
      }),
      colorRange: COLORS,
      onValueMouseOver: (row) => this.setState({value: row}),
      onSeriesMouseOut: () => this.setState({value: false}),
      colorType: "category"
    }), /* @__PURE__ */ react.createElement(ArcSeries, {
      animation: true,
      radiusType: "literal",
      center: {x: -2, y: 2},
      data: this.state.littleData,
      colorType: "literal"
    })));
  }
};
var reactvis_default = PieReactVis;

// snowpack/pkg/@nivo/bullet.js
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var useLayoutEffect2 = typeof window !== "undefined" && window.document && window.document.createElement ? react.useLayoutEffect : react.useEffect;
var requestAnimationFrame$1 = function(fn) {
  return (0, requestAnimationFrame$2)(fn);
};
var FrameLoop = function() {
  function FrameLoop2(raf2) {
    if (raf2 === void 0) {
      raf2 = requestAnimationFrame$1;
    }
    var idle = true;
    var writing = false;
    var lastTime = 0;
    var animations = [];
    var priority = 0;
    var startQueue = new Set();
    var frameQueue = new Set();
    var writeQueue = new Set();
    var start2 = function(animation) {
      var index4 = animations.indexOf(animation);
      if (index4 < 0) {
        index4 = animations.findIndex(function(other) {
          return other.priority > animation.priority;
        });
        animations.splice(~index4 ? index4 : animations.length, 0, animation);
      }
    };
    var loop = function() {
      if (idle)
        return;
      try {
        advance();
        raf2(loop);
      } catch (e3) {
        console.error(e3);
      }
    };
    var kickoff = function() {
      if (idle) {
        idle = false;
        if (lastTime == 0) {
          lastTime = now4();
          raf2(loop);
        }
      }
    };
    var timeoutQueue = [];
    this.setTimeout = function(handler, ms) {
      var time3 = now4() + ms;
      var cancel2 = function() {
        var index5 = timeoutQueue.findIndex(function(t4) {
          return t4.cancel == cancel2;
        });
        if (index5 >= 0) {
          timeoutQueue.splice(index5, 1);
        }
      };
      var index4 = findIndex2(timeoutQueue, function(t4) {
        return t4.time > time3;
      });
      var timeout3 = {time: time3, handler, cancel: cancel2};
      timeoutQueue.splice(index4, 0, timeout3);
      kickoff();
      return timeout3;
    };
    var advance = this.advance = function() {
      var time3 = now4();
      if (startQueue.size) {
        startQueue.forEach(start2);
        startQueue.clear();
      }
      if (timeoutQueue.length) {
        batchedUpdates(function() {
          var count2 = findIndex2(timeoutQueue, function(t4) {
            return t4.time > time3;
          });
          timeoutQueue.splice(0, count2).forEach(function(t4) {
            return t4.handler();
          });
        });
      }
      if (time3 > lastTime) {
        var dt_1 = Math.min(64, time3 - lastTime);
        lastTime = time3;
        batchedUpdates(function() {
          if (animations.length) {
            willAdvance(animations);
            animations = animations.filter(function(animation) {
              priority = animation.priority;
              if (!animation.idle) {
                animation.advance(dt_1);
              }
              return !animation.idle;
            });
            priority = 0;
          }
          if (frameQueue.size) {
            frameQueue.forEach(function(onFrame) {
              return onFrame(time3);
            });
            frameQueue.clear();
          }
          if (writeQueue.size) {
            writing = true;
            writeQueue.forEach(function(write) {
              return write(time3);
            });
            writeQueue.clear();
            writing = false;
          }
        });
      }
    };
    this.start = function(animation) {
      if (priority > animation.priority) {
        startQueue.add(animation);
      } else {
        start2(animation);
        kickoff();
      }
    };
    this.onFrame = function(cb2) {
      frameQueue.add(cb2);
      kickoff();
    };
    this.onWrite = function(cb2) {
      if (writing)
        cb2(lastTime);
      else
        writeQueue.add(cb2);
    };
    if (typeof process !== "undefined" && false) {
      var dispose_1 = function() {
        idle = true;
        startQueue.clear();
        timeoutQueue.length = 0;
      };
      Object.defineProperties(this, {
        _animations: {get: function() {
          return animations;
        }},
        _dispose: {get: function() {
          return dispose_1;
        }}
      });
    }
  }
  return FrameLoop2;
}();
function findIndex2(arr, test) {
  var index4 = arr.findIndex(test);
  return index4 < 0 ? arr.length : index4;
}
var noop8 = function() {
};
var defineHidden = function(obj, key, value2) {
  return Object.defineProperty(obj, key, {value: value2, writable: true, configurable: true});
};
var is = {
  arr: Array.isArray,
  obj: function(a3) {
    return !!a3 && a3.constructor.name === "Object";
  },
  fun: function(a3) {
    return typeof a3 === "function";
  },
  str: function(a3) {
    return typeof a3 === "string";
  },
  num: function(a3) {
    return typeof a3 === "number";
  },
  und: function(a3) {
    return a3 === void 0;
  }
};
function isEqual2(a3, b10) {
  if (is.arr(a3)) {
    if (!is.arr(b10) || a3.length !== b10.length)
      return false;
    for (var i = 0; i < a3.length; i++) {
      if (a3[i] !== b10[i])
        return false;
    }
    return true;
  }
  return a3 === b10;
}
var isAnimatedString = function(value2) {
  return is.str(value2) && (value2[0] == "#" || /\d/.test(value2) || !!(colorNames && colorNames[value2]));
};
var each = function(obj, cb2, ctx2) {
  if (is.fun(obj.forEach)) {
    obj.forEach(cb2, ctx2);
  } else {
    Object.keys(obj).forEach(function(key) {
      return cb2.call(ctx2, obj[key], key);
    });
  }
};
var toArray = function(a3) {
  return is.und(a3) ? [] : is.arr(a3) ? a3 : [a3];
};
function flush(queue2, iterator) {
  if (queue2.size) {
    var items = Array.from(queue2);
    queue2.clear();
    each(items, iterator);
  }
}
var createStringInterpolator;
var frameLoop = new FrameLoop();
var to;
var now4 = function() {
  return performance.now();
};
var colorNames = null;
var skipAnimation = false;
var requestAnimationFrame$2 = typeof window !== "undefined" ? window.requestAnimationFrame : function() {
  return -1;
};
var batchedUpdates = function(callback) {
  return callback();
};
var willAdvance = noop8;
var assign2 = function(globals) {
  var _a;
  return _a = Object.assign({
    to,
    now: now4,
    frameLoop,
    colorNames,
    skipAnimation,
    createStringInterpolator,
    requestAnimationFrame: requestAnimationFrame$2,
    batchedUpdates,
    willAdvance
  }, pluckDefined(globals)), to = _a.to, now4 = _a.now, frameLoop = _a.frameLoop, colorNames = _a.colorNames, skipAnimation = _a.skipAnimation, createStringInterpolator = _a.createStringInterpolator, requestAnimationFrame$2 = _a.requestAnimationFrame, batchedUpdates = _a.batchedUpdates, willAdvance = _a.willAdvance, _a;
};
function pluckDefined(globals) {
  var defined4 = {};
  for (var key in globals) {
    if (globals[key] !== void 0)
      defined4[key] = globals[key];
  }
  return defined4;
}
var useOnce = function(effect) {
  return react.useEffect(effect, []);
};
var useForceUpdate = function() {
  var update = react.useState(0)[1];
  var unmounted = react.useRef(false);
  useOnce(function() {
    return function() {
      unmounted.current = true;
    };
  });
  return function() {
    if (!unmounted.current) {
      update({});
    }
  };
};
function usePrev(value2) {
  var prevRef = react.useRef(void 0);
  react.useEffect(function() {
    prevRef.current = value2;
  });
  return prevRef.current;
}
var createInterpolator = function(range7, output, extrapolate) {
  if (is.fun(range7)) {
    return range7;
  }
  if (is.arr(range7)) {
    return createInterpolator({
      range: range7,
      output,
      extrapolate
    });
  }
  if (is.str(range7.output[0])) {
    return createStringInterpolator(range7);
  }
  var config4 = range7;
  var outputRange = config4.output;
  var inputRange = config4.range || [0, 1];
  var extrapolateLeft = config4.extrapolateLeft || config4.extrapolate || "extend";
  var extrapolateRight = config4.extrapolateRight || config4.extrapolate || "extend";
  var easing = config4.easing || function(t4) {
    return t4;
  };
  return function(input) {
    var range8 = findRange(input, inputRange);
    return interpolate2(input, inputRange[range8], inputRange[range8 + 1], outputRange[range8], outputRange[range8 + 1], easing, extrapolateLeft, extrapolateRight, config4.map);
  };
};
function interpolate2(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map7) {
  var result = map7 ? map7(input) : input;
  if (result < inputMin) {
    if (extrapolateLeft === "identity")
      return result;
    else if (extrapolateLeft === "clamp")
      result = inputMin;
  }
  if (result > inputMax) {
    if (extrapolateRight === "identity")
      return result;
    else if (extrapolateRight === "clamp")
      result = inputMax;
  }
  if (outputMin === outputMax)
    return outputMin;
  if (inputMin === inputMax)
    return input <= inputMin ? outputMin : outputMax;
  if (inputMin === -Infinity)
    result = -result;
  else if (inputMax === Infinity)
    result = result - inputMin;
  else
    result = (result - inputMin) / (inputMax - inputMin);
  result = easing(result);
  if (outputMin === -Infinity)
    result = -result;
  else if (outputMax === Infinity)
    result = result + outputMin;
  else
    result = result * (outputMax - outputMin) + outputMin;
  return result;
}
function findRange(input, inputRange) {
  for (var i = 1; i < inputRange.length - 1; ++i)
    if (inputRange[i] >= input)
      break;
  return i - 1;
}
var $config = Symbol.for("FluidValue:config");
function getFluidValue(arg) {
  var config4 = getFluidConfig(arg);
  return config4 ? config4.get() : arg;
}
function getFluidConfig(arg) {
  if (arg)
    return arg[$config];
}
function setFluidConfig(target, config4) {
  Object.defineProperty(target, $config, {
    value: config4,
    configurable: true
  });
}
var FluidValue = function() {
  function FluidValue2() {
    setFluidConfig(this, this);
  }
  return FluidValue2;
}();
var $node = Symbol.for("Animated:node");
var isAnimated = (value2) => !!value2 && value2[$node] === value2;
var getAnimated = (owner) => owner && owner[$node];
var setAnimated = (owner, node) => defineHidden(owner, $node, node);
var getPayload = (owner) => owner && owner[$node] && owner[$node].getPayload();
var Animated = class {
  constructor() {
    this.payload = void 0;
    setAnimated(this, this);
  }
  getPayload() {
    return this.payload || [];
  }
};
var AnimatedValue = class extends Animated {
  constructor(_value) {
    super();
    this._value = _value;
    this.done = true;
    this.elapsedTime = void 0;
    this.lastPosition = void 0;
    this.lastVelocity = void 0;
    this.v0 = void 0;
    if (is.num(this._value)) {
      this.lastPosition = this._value;
    }
  }
  static create(from, _to) {
    return new AnimatedValue(from);
  }
  getPayload() {
    return [this];
  }
  getValue() {
    return this._value;
  }
  setValue(value2, step) {
    if (is.num(value2)) {
      this.lastPosition = value2;
      if (step) {
        value2 = Math.round(value2 / step) * step;
        if (this.done) {
          this.lastPosition = value2;
        }
      }
    }
    if (this._value === value2) {
      return false;
    }
    this._value = value2;
    return true;
  }
  reset() {
    const {
      done
    } = this;
    this.done = false;
    if (is.num(this._value)) {
      this.elapsedTime = 0;
      this.lastPosition = this._value;
      if (done)
        this.lastVelocity = null;
      this.v0 = null;
    }
  }
};
var AnimatedString = class extends AnimatedValue {
  constructor(from, to2) {
    super(0);
    this._value = void 0;
    this._string = null;
    this._toString = void 0;
    this._toString = createInterpolator({
      output: [from, to2]
    });
  }
  static create(from, to2 = from) {
    if (is.str(from) && is.str(to2)) {
      return new AnimatedString(from, to2);
    }
    throw TypeError('Expected "from" and "to" to be strings');
  }
  getValue() {
    let value2 = this._string;
    return value2 == null ? this._string = this._toString(this._value) : value2;
  }
  setValue(value2) {
    if (!is.num(value2)) {
      this._string = value2;
      this._value = 1;
    } else if (super.setValue(value2)) {
      this._string = null;
    } else {
      return false;
    }
    return true;
  }
  reset(goal) {
    if (goal) {
      this._toString = createInterpolator({
        output: [this.getValue(), goal]
      });
    }
    this._value = 0;
    super.reset();
  }
};
var TreeContext = {
  current: null
};
var AnimatedObject = class extends Animated {
  constructor(source = null) {
    super();
    this.source = void 0;
    this.setValue(source);
  }
  getValue(animated2) {
    if (!this.source)
      return null;
    const values2 = {};
    each(this.source, (source, key) => {
      if (isAnimated(source)) {
        values2[key] = source.getValue(animated2);
      } else {
        const config4 = getFluidConfig(source);
        if (config4) {
          values2[key] = config4.get();
        } else if (!animated2) {
          values2[key] = source;
        }
      }
    });
    return values2;
  }
  setValue(source) {
    this.source = source;
    this.payload = this._makePayload(source);
  }
  reset() {
    if (this.payload) {
      each(this.payload, (node) => node.reset());
    }
  }
  _makePayload(source) {
    if (source) {
      const payload = new Set();
      each(source, this._addToPayload, payload);
      return Array.from(payload);
    }
  }
  _addToPayload(source) {
    const config4 = getFluidConfig(source);
    if (config4 && TreeContext.current) {
      TreeContext.current.dependencies.add(source);
    }
    const payload = getPayload(source);
    if (payload) {
      each(payload, (node) => this.add(node));
    }
  }
};
var AnimatedArray = class extends AnimatedObject {
  constructor(from, to2) {
    super(null);
    this.source = void 0;
    super.setValue(this._makeAnimated(from, to2));
  }
  static create(from, to2) {
    return new AnimatedArray(from, to2);
  }
  getValue() {
    return this.source.map((node) => node.getValue());
  }
  setValue(newValue) {
    const payload = this.getPayload();
    if (newValue && newValue.length == payload.length) {
      each(payload, (node, i) => node.setValue(newValue[i]));
    } else {
      this.source = this._makeAnimated(newValue);
      this.payload = this._makePayload(this.source);
    }
  }
  _makeAnimated(from, to2 = from) {
    return from ? from.map((from2, i) => (isAnimatedString(from2) ? AnimatedString : AnimatedValue).create(from2, to2[i])) : [];
  }
};
var AnimatedProps = class extends AnimatedObject {
  constructor(update) {
    super(null);
    this.update = update;
    this.dirty = false;
  }
  setValue(props, context) {
    if (!props)
      return;
    if (context) {
      TreeContext.current = context;
      if (props.style) {
        const {
          createAnimatedStyle
        } = context.host;
        props = _extends(_extends({}, props), {}, {
          style: createAnimatedStyle(props.style)
        });
      }
    }
    super.setValue(props);
    TreeContext.current = null;
  }
  onParentChange({
    type: type3
  }) {
    if (!this.dirty && type3 === "change") {
      this.dirty = true;
      frameLoop.onFrame(() => {
        this.dirty = false;
        this.update();
      });
    }
  }
};
var withAnimated = (Component, host2) => react.forwardRef((rawProps, ref) => {
  const instanceRef = react.useRef(null);
  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;
  const forceUpdate = useForceUpdate();
  const props = new AnimatedProps(() => {
    const instance = instanceRef.current;
    if (hasInstance && !instance) {
      return;
    }
    const didUpdate = instance ? host2.applyAnimatedValues(instance, props.getValue(true)) : false;
    if (didUpdate === false) {
      forceUpdate();
    }
  });
  const dependencies = new Set();
  props.setValue(rawProps, {
    dependencies,
    host: host2
  });
  useLayoutEffect2(() => {
    each(dependencies, (dep) => dep.addChild(props));
    return () => each(dependencies, (dep) => dep.removeChild(props));
  });
  return /* @__PURE__ */ react.createElement(Component, _extends({}, host2.getComponentProps(props.getValue()), {
    ref: hasInstance && ((value2) => {
      instanceRef.current = updateRef(ref, value2);
    })
  }));
});
function updateRef(ref, value2) {
  if (ref) {
    if (is.fun(ref))
      ref(value2);
    else
      ref.current = value2;
  }
  return value2;
}
var cacheKey = Symbol.for("AnimatedComponent");
var createHost = (components, {
  applyAnimatedValues: applyAnimatedValues2 = () => false,
  createAnimatedStyle = (style) => new AnimatedObject(style),
  getComponentProps = (props) => props
} = {}) => {
  const hostConfig = {
    applyAnimatedValues: applyAnimatedValues2,
    createAnimatedStyle,
    getComponentProps
  };
  const animated2 = (Component) => {
    const displayName = getDisplayName4(Component) || "Anonymous";
    if (is.str(Component)) {
      Component = withAnimated(Component, hostConfig);
    } else {
      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));
    }
    Component.displayName = "Animated(" + displayName + ")";
    return Component;
  };
  each(components, (Component, key) => {
    if (!is.str(key)) {
      key = getDisplayName4(Component);
    }
    animated2[key] = animated2(Component);
  });
  return {
    animated: animated2
  };
};
var getDisplayName4 = (arg) => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }
  return true;
}
function useMemoOne(getResult, inputs) {
  var initial = react.useState(function() {
    return {
      inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = react.useRef(true);
  var committed = react.useRef(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
  var cache = useCache ? committed.current : {
    inputs,
    result: getResult()
  };
  react.useEffect(function() {
    isFirstRun.current = false;
    committed.current = cache;
  }, [cache]);
  return cache.result;
}
var prefix2 = "react-spring: ";
var flagInterpolate = false;
function deprecateInterpolate() {
  if (!flagInterpolate) {
    flagInterpolate = true;
    console.warn(prefix2 + 'The "interpolate" function is deprecated in v10 (use "to" instead)');
  }
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var __assign = function() {
  __assign = Object.assign || function __assign2(t4) {
    for (var s4, i = 1, n3 = arguments.length; i < n3; i++) {
      s4 = arguments[i];
      for (var p3 in s4)
        if (Object.prototype.hasOwnProperty.call(s4, p3))
          t4[p3] = s4[p3];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
var NUMBER = "[-+]?\\d*\\.?\\d+";
var PERCENTAGE = NUMBER + "%";
function call() {
  var parts = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    parts[_i] = arguments[_i];
  }
  return "\\(\\s*(" + parts.join(")\\s*,\\s*(") + ")\\s*\\)";
}
var rgb3 = new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER));
var rgba3 = new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER));
var hsl4 = new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE));
var hsla3 = new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));
var hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
var hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
var hex6 = /^#([0-9a-fA-F]{6})$/;
var hex8 = /^#([0-9a-fA-F]{8})$/;
function normalizeColor(color3) {
  var match2;
  if (typeof color3 === "number") {
    return color3 >>> 0 === color3 && color3 >= 0 && color3 <= 4294967295 ? color3 : null;
  }
  if (match2 = hex6.exec(color3))
    return parseInt(match2[1] + "ff", 16) >>> 0;
  if (colorNames && colorNames[color3] !== void 0) {
    return colorNames[color3];
  }
  if (match2 = rgb3.exec(color3)) {
    return (parse255(match2[1]) << 24 | parse255(match2[2]) << 16 | parse255(match2[3]) << 8 | 255) >>> 0;
  }
  if (match2 = rgba3.exec(color3)) {
    return (parse255(match2[1]) << 24 | parse255(match2[2]) << 16 | parse255(match2[3]) << 8 | parse1(match2[4])) >>> 0;
  }
  if (match2 = hex3.exec(color3)) {
    return parseInt(match2[1] + match2[1] + match2[2] + match2[2] + match2[3] + match2[3] + "ff", 16) >>> 0;
  }
  if (match2 = hex8.exec(color3))
    return parseInt(match2[1], 16) >>> 0;
  if (match2 = hex4.exec(color3)) {
    return parseInt(match2[1] + match2[1] + match2[2] + match2[2] + match2[3] + match2[3] + match2[4] + match2[4], 16) >>> 0;
  }
  if (match2 = hsl4.exec(color3)) {
    return (hslToRgb(parse360(match2[1]), parsePercentage(match2[2]), parsePercentage(match2[3])) | 255) >>> 0;
  }
  if (match2 = hsla3.exec(color3)) {
    return (hslToRgb(parse360(match2[1]), parsePercentage(match2[2]), parsePercentage(match2[3])) | parse1(match2[4])) >>> 0;
  }
  return null;
}
function hue2rgb(h2, c5, x5) {
  if (h2 < 60)
    return [c5, x5, 0];
  if (h2 < 120)
    return [x5, c5, 0];
  if (h2 < 180)
    return [0, c5, x5];
  if (h2 < 240)
    return [0, x5, c5];
  if (h2 < 300)
    return [x5, 0, c5];
  return [c5, 0, x5];
}
function hslToRgb(h2, s4, l3) {
  var C5 = (1 - Math.abs(2 * l3 - 1)) * s4;
  var X5 = C5 * (1 - Math.abs(h2 / 60 % 2 - 1));
  var M5 = l3 - C5 / 2;
  var _a = hue2rgb(h2, C5, X5), R1 = _a[0], G1 = _a[1], B1 = _a[2];
  return Math.round((R1 + M5) * 255) << 24 | Math.round((G1 + M5) * 255) << 16 | Math.round((B1 + M5) * 255) << 8;
}
function parse255(str) {
  var int2 = parseInt(str, 10);
  if (int2 < 0)
    return 0;
  if (int2 > 255)
    return 255;
  return int2;
}
function parse360(str) {
  var int2 = parseFloat(str);
  return (int2 % 360 + 360) % 360 / 360;
}
function parse1(str) {
  var num = parseFloat(str);
  if (num < 0)
    return 0;
  if (num > 1)
    return 255;
  return Math.round(num * 255);
}
function parsePercentage(str) {
  var int2 = parseFloat(str);
  if (int2 < 0)
    return 0;
  if (int2 > 100)
    return 1;
  return int2 / 100;
}
function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null)
    return input;
  int32Color = int32Color || 0;
  var r3 = (int32Color & 4278190080) >>> 24;
  var g2 = (int32Color & 16711680) >>> 16;
  var b10 = (int32Color & 65280) >>> 8;
  var a3 = (int32Color & 255) / 255;
  return "rgba(" + r3 + ", " + g2 + ", " + b10 + ", " + a3 + ")";
}
var numberRegex = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
var colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi;
var colorNamesRegex;
var rgbaRegex = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi;
var rgbaRound = function(_2, p1, p22, p3, p4) {
  return "rgba(" + Math.round(p1) + ", " + Math.round(p22) + ", " + Math.round(p3) + ", " + p4 + ")";
};
var createStringInterpolator$1 = function(config4) {
  if (!colorNamesRegex)
    colorNamesRegex = colorNames ? new RegExp("(" + Object.keys(colorNames).join("|") + ")", "g") : /^\b$/;
  var output = config4.output.map(function(value2) {
    return getFluidValue(value2).replace(colorRegex, colorToRgba).replace(colorNamesRegex, colorToRgba);
  });
  var keyframes = output.map(function(value2) {
    return value2.match(numberRegex).map(Number);
  });
  var outputRanges = keyframes[0].map(function(_2, i) {
    return keyframes.map(function(values2) {
      if (!(i in values2)) {
        throw Error('The arity of each "output" value must be equal');
      }
      return values2[i];
    });
  });
  var interpolators = outputRanges.map(function(output2) {
    return createInterpolator(__assign(__assign({}, config4), {output: output2}));
  });
  return function(input) {
    var i = 0;
    return output[0].replace(numberRegex, function() {
      return String(interpolators[i++](input));
    }).replace(rgbaRegex, rgbaRound);
  };
};
var config3 = {
  default: {
    tension: 170,
    friction: 26
  },
  gentle: {
    tension: 120,
    friction: 14
  },
  wobbly: {
    tension: 180,
    friction: 12
  },
  stiff: {
    tension: 210,
    friction: 20
  },
  slow: {
    tension: 280,
    friction: 60
  },
  molasses: {
    tension: 280,
    friction: 120
  }
};
var linear5 = (t4) => t4;
var defaults3 = _extends(_extends({}, config3.default), {}, {
  mass: 1,
  damping: 1,
  easing: linear5,
  clamp: false
});
var AnimationConfig = class {
  constructor() {
    this.tension = void 0;
    this.friction = void 0;
    this.frequency = void 0;
    this.damping = void 0;
    this.mass = void 0;
    this.velocity = 0;
    this.restVelocity = void 0;
    this.precision = void 0;
    this.progress = void 0;
    this.duration = void 0;
    this.easing = void 0;
    this.clamp = void 0;
    this.bounce = void 0;
    this.decay = void 0;
    this.round = void 0;
    Object.assign(this, defaults3);
  }
};
function mergeConfig(config4, newConfig, defaultConfig) {
  if (defaultConfig) {
    defaultConfig = _extends({}, defaultConfig);
    sanitizeConfig(defaultConfig, newConfig);
    newConfig = _extends(_extends({}, defaultConfig), newConfig);
  }
  sanitizeConfig(config4, newConfig);
  Object.assign(config4, newConfig);
  for (const key in defaults3) {
    if (config4[key] == null) {
      config4[key] = defaults3[key];
    }
  }
  let {
    mass,
    frequency,
    damping
  } = config4;
  if (!is.und(frequency)) {
    if (frequency < 0.01)
      frequency = 0.01;
    if (damping < 0)
      damping = 0;
    config4.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;
    config4.friction = 4 * Math.PI * damping * mass / frequency;
  }
  return config4;
}
function sanitizeConfig(config4, props) {
  if (!is.und(props.decay)) {
    config4.duration = void 0;
  } else {
    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);
    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {
      config4.duration = void 0;
      config4.decay = void 0;
    }
    if (isTensionConfig) {
      config4.frequency = void 0;
    }
  }
}
var emptyArray = [];
var Animation2 = class {
  constructor() {
    this.changed = false;
    this.values = emptyArray;
    this.toValues = null;
    this.fromValues = emptyArray;
    this.to = void 0;
    this.from = void 0;
    this.config = new AnimationConfig();
    this.immediate = false;
    this.onStart = void 0;
    this.onChange = void 0;
    this.onRest = [];
  }
};
var useMemo2 = (create, deps) => useMemoOne(create, deps || [{}]);
function callProp(value2, ...args) {
  return is.fun(value2) ? value2(...args) : value2;
}
var matchProp = (value2, key) => value2 === true || !!(key && value2 && (is.fun(value2) ? value2(key) : toArray(value2).includes(key)));
var getProps2 = (props, i, arg) => props && (is.fun(props) ? props(i, arg) : is.arr(props) ? props[i] : _extends({}, props));
var hasDefaultProp = (props, key) => !is.und(getDefaultProp(props, key));
var getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : void 0;
var getDefaultProps = (props, omitKeys = [], defaults4 = {}) => {
  let keys4 = DEFAULT_PROPS;
  if (props.default && props.default !== true) {
    props = props.default;
    keys4 = Object.keys(props);
  }
  for (const key of keys4) {
    const value2 = props[key];
    if (!is.und(value2) && !omitKeys.includes(key)) {
      defaults4[key] = value2;
    }
  }
  return defaults4;
};
var mergeDefaultProps = (defaults4, props, omitKeys) => getDefaultProps(props, omitKeys, defaults4);
var DEFAULT_PROPS = ["pause", "cancel", "config", "immediate", "onDelayEnd", "onProps", "onStart", "onChange", "onRest"];
var RESERVED_PROPS = {
  config: 1,
  from: 1,
  to: 1,
  ref: 1,
  loop: 1,
  reset: 1,
  pause: 1,
  cancel: 1,
  reverse: 1,
  immediate: 1,
  default: 1,
  delay: 1,
  onDelayEnd: 1,
  onProps: 1,
  onStart: 1,
  onChange: 1,
  onRest: 1,
  items: 1,
  trail: 1,
  sort: 1,
  expires: 1,
  initial: 1,
  enter: 1,
  update: 1,
  leave: 1,
  children: 1,
  keys: 1,
  callId: 1,
  parentId: 1
};
function getForwardProps(props) {
  const forward = {};
  let count2 = 0;
  each(props, (value2, prop) => {
    if (!RESERVED_PROPS[prop]) {
      forward[prop] = value2;
      count2++;
    }
  });
  if (count2) {
    return forward;
  }
}
function inferTo(props) {
  const to2 = getForwardProps(props);
  if (to2) {
    const out = {
      to: to2
    };
    each(props, (val, key) => key in to2 || (out[key] = val));
    return out;
  }
  return _extends({}, props);
}
function computeGoal(value2) {
  const config4 = getFluidConfig(value2);
  return config4 ? computeGoal(config4.get()) : is.arr(value2) ? value2.map(computeGoal) : isAnimatedString(value2) ? createStringInterpolator({
    range: [0, 1],
    output: [value2, value2]
  })(1) : value2;
}
function scheduleProps(callId, {
  key,
  props,
  state,
  actions
}) {
  return new Promise((resolve, reject) => {
    let delay;
    let timeout3;
    let pause = false;
    let cancel2 = matchProp(props.cancel, key);
    if (cancel2) {
      onStart();
    } else {
      delay = callProp(props.delay || 0, key);
      pause = matchProp(props.pause, key);
      if (pause) {
        state.resumeQueue.add(onResume);
        actions.pause();
      } else {
        actions.resume();
        onResume();
      }
    }
    function onPause() {
      state.resumeQueue.add(onResume);
      timeout3.cancel();
      delay = timeout3.time - now4();
    }
    function onResume() {
      if (delay > 0) {
        state.pauseQueue.add(onPause);
        timeout3 = frameLoop.setTimeout(onStart, delay);
      } else {
        onStart();
      }
    }
    function onStart() {
      state.pauseQueue.delete(onPause);
      if (callId <= (state.cancelId || 0)) {
        cancel2 = true;
      }
      try {
        actions.start(_extends(_extends({}, props), {}, {
          callId,
          delay,
          cancel: cancel2,
          pause
        }), resolve);
      } catch (err) {
        reject(err);
      }
    }
  });
}
var getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some((result) => result.cancelled) ? getCancelledResult(target) : results.every((result) => result.noop) ? getNoopResult(target) : getFinishedResult(target, results.every((result) => result.finished));
var getNoopResult = (target, value2 = target.get()) => ({
  value: value2,
  noop: true,
  finished: true,
  target
});
var getFinishedResult = (target, finished, value2 = target.get()) => ({
  value: value2,
  finished,
  target
});
var getCancelledResult = (target, value2 = target.get()) => ({
  value: value2,
  cancelled: true,
  target
});
async function runAsync(to2, props, state, target) {
  if (props.pause) {
    await new Promise((resume) => {
      state.resumeQueue.add(resume);
    });
  }
  const {
    callId,
    parentId,
    onRest
  } = props;
  const {
    asyncTo: prevTo,
    promise: prevPromise
  } = state;
  if (!parentId && to2 === prevTo && !props.reset) {
    return prevPromise;
  }
  return state.promise = (async () => {
    state.asyncId = callId;
    state.asyncTo = to2;
    const defaultProps4 = getDefaultProps(props, [
      "onRest"
    ]);
    let preventBail;
    let bail;
    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));
    const withBailHandler = (fn) => (...args) => {
      const onError = (err) => {
        if (err instanceof BailSignal) {
          bail(err);
        }
        throw err;
      };
      try {
        return fn(...args).catch(onError);
      } catch (err) {
        onError(err);
      }
    };
    const bailIfEnded = (bailSignal) => {
      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);
      if (bailResult) {
        bailSignal.result = bailResult;
        throw bailSignal;
      }
    };
    const animate = withBailHandler((arg1, arg2) => {
      const bailSignal = new BailSignal();
      bailIfEnded(bailSignal);
      const props2 = is.obj(arg1) ? _extends({}, arg1) : _extends(_extends({}, arg2), {}, {
        to: arg1
      });
      props2.parentId = callId;
      each(defaultProps4, (value2, key) => {
        if (is.und(props2[key])) {
          props2[key] = value2;
        }
      });
      return target.start(props2).then(async (result2) => {
        bailIfEnded(bailSignal);
        if (target.is("PAUSED")) {
          await new Promise((resume) => {
            state.resumeQueue.add(resume);
          });
        }
        return result2;
      });
    });
    let result;
    try {
      let animating;
      if (is.arr(to2)) {
        animating = (async (queue2) => {
          for (const props2 of queue2) {
            await animate(props2);
          }
        })(to2);
      } else if (is.fun(to2)) {
        animating = Promise.resolve(to2(animate, target.stop.bind(target)));
      }
      await Promise.all([animating.then(preventBail), bailPromise]);
      result = getFinishedResult(target, true);
    } catch (err) {
      if (err instanceof BailSignal) {
        result = err.result;
      } else {
        throw err;
      }
    } finally {
      if (callId == state.asyncId) {
        state.asyncId = parentId;
        state.asyncTo = parentId ? prevTo : void 0;
        state.promise = parentId ? prevPromise : void 0;
      }
    }
    if (is.fun(onRest)) {
      batchedUpdates(() => {
        onRest(result);
      });
    }
    return result;
  })();
}
function cancelAsync(state, callId) {
  state.cancelId = callId;
  state.asyncId = state.asyncTo = state.promise = void 0;
}
var BailSignal = class extends Error {
  constructor() {
    super("An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.");
    this.result = void 0;
  }
};
var isFrameValue = (value2) => value2 instanceof FrameValue;
var nextId2 = 1;
var FrameValue = class extends FluidValue {
  constructor(...args) {
    super(...args);
    this.id = nextId2++;
    this.key = void 0;
    this._priority = 0;
    this._children = new Set();
  }
  get priority() {
    return this._priority;
  }
  set priority(priority) {
    if (this._priority != priority) {
      this._priority = priority;
      this._onPriorityChange(priority);
    }
  }
  get() {
    const node = getAnimated(this);
    return node && node.getValue();
  }
  to(...args) {
    return to(this, args);
  }
  interpolate(...args) {
    deprecateInterpolate();
    return to(this, args);
  }
  addChild(child) {
    if (!this._children.size)
      this._attach();
    this._children.add(child);
  }
  removeChild(child) {
    this._children.delete(child);
    if (!this._children.size)
      this._detach();
  }
  onParentChange({
    type: type3
  }) {
    if (this.idle) {
      if (type3 == "start") {
        this._reset();
        this._start();
      }
    } else if (type3 == "reset") {
      this._reset();
    }
  }
  _attach() {
  }
  _detach() {
  }
  _reset() {
    this._emit({
      type: "reset",
      parent: this
    });
  }
  _start() {
    this._emit({
      type: "start",
      parent: this
    });
  }
  _onChange(value2, idle = false) {
    this._emit({
      type: "change",
      parent: this,
      value: value2,
      idle
    });
  }
  _onPriorityChange(priority) {
    if (!this.idle) {
      frameLoop.start(this);
    }
    this._emit({
      type: "priority",
      parent: this,
      priority
    });
  }
  _emit(event) {
    each(Array.from(this._children), (child) => {
      child.onParentChange(event);
    });
  }
};
var CREATED2 = "CREATED";
var IDLE = "IDLE";
var ACTIVE = "ACTIVE";
var PAUSED = "PAUSED";
var DISPOSED = "DISPOSED";
var SpringValue = class extends FrameValue {
  constructor(arg1, arg2) {
    super();
    this.key = void 0;
    this.animation = new Animation2();
    this.queue = void 0;
    this._phase = CREATED2;
    this._state = {
      pauseQueue: new Set(),
      resumeQueue: new Set()
    };
    this._defaultProps = {};
    this._lastCallId = 0;
    this._lastToId = 0;
    if (!is.und(arg1) || !is.und(arg2)) {
      const props = is.obj(arg1) ? _extends({}, arg1) : _extends(_extends({}, arg2), {}, {
        from: arg1
      });
      props.default = true;
      this.start(props);
    }
  }
  get idle() {
    return !this.is(ACTIVE) && !this._state.asyncTo;
  }
  get goal() {
    return getFluidValue(this.animation.to);
  }
  get velocity() {
    const node = getAnimated(this);
    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map((node2) => node2.lastVelocity || 0);
  }
  advance(dt) {
    let idle = true;
    let changed = false;
    const anim = this.animation;
    let {
      config: config4,
      toValues
    } = anim;
    const payload = getPayload(anim.to);
    if (!payload) {
      const toConfig = getFluidConfig(anim.to);
      if (toConfig) {
        toValues = toArray(toConfig.get());
      }
    }
    anim.values.forEach((node, i) => {
      if (node.done)
        return;
      let to2 = payload ? payload[i].lastPosition : toValues[i];
      let finished = anim.immediate;
      let position = to2;
      if (!finished) {
        position = node.lastPosition;
        if (config4.tension <= 0) {
          node.done = true;
          return;
        }
        const elapsed = node.elapsedTime += dt;
        const from = anim.fromValues[i];
        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config4.velocity) ? config4.velocity[i] : config4.velocity;
        let velocity;
        if (!is.und(config4.duration)) {
          let p3 = config4.progress || 0;
          if (config4.duration <= 0)
            p3 = 1;
          else
            p3 += (1 - p3) * Math.min(1, elapsed / config4.duration);
          position = from + config4.easing(p3) * (to2 - from);
          velocity = (position - node.lastPosition) / dt;
          finished = p3 == 1;
        } else if (config4.decay) {
          const decay = config4.decay === true ? 0.998 : config4.decay;
          const e3 = Math.exp(-(1 - decay) * elapsed);
          position = from + v0 / (1 - decay) * (1 - e3);
          finished = Math.abs(node.lastPosition - position) < 0.1;
          velocity = v0 * e3;
        } else {
          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;
          const precision = config4.precision || (from == to2 ? 5e-3 : Math.min(1, Math.abs(to2 - from) * 1e-3));
          const restVelocity = config4.restVelocity || precision / 10;
          const bounceFactor = config4.clamp ? 0 : config4.bounce;
          const canBounce = !is.und(bounceFactor);
          const isGrowing = from == to2 ? node.v0 > 0 : from < to2;
          let isMoving;
          let isBouncing = false;
          const step = 1;
          const numSteps = Math.ceil(dt / step);
          for (let n3 = 0; n3 < numSteps; ++n3) {
            isMoving = Math.abs(velocity) > restVelocity;
            if (!isMoving) {
              finished = Math.abs(to2 - position) <= precision;
              if (finished) {
                break;
              }
            }
            if (canBounce) {
              isBouncing = position == to2 || position > to2 == isGrowing;
              if (isBouncing) {
                velocity = -velocity * bounceFactor;
                position = to2;
              }
            }
            const springForce = -config4.tension * 1e-6 * (position - to2);
            const dampingForce = -config4.friction * 1e-3 * velocity;
            const acceleration = (springForce + dampingForce) / config4.mass;
            velocity = velocity + acceleration * step;
            position = position + velocity * step;
          }
        }
        node.lastVelocity = velocity;
        if (Number.isNaN(position)) {
          console.warn("Got NaN while animating:", this);
          finished = true;
        }
      }
      if (payload && !payload[i].done) {
        finished = false;
      }
      if (finished) {
        node.done = true;
      } else {
        idle = false;
      }
      if (node.setValue(position, config4.round)) {
        changed = true;
      }
    });
    if (idle) {
      this.finish();
    } else if (changed) {
      this._onChange(this.get());
    }
    return idle;
  }
  is(phase) {
    return this._phase == phase;
  }
  set(value2) {
    batchedUpdates(() => {
      this._focus(value2);
      if (this._set(value2)) {
        if (!this.is(ACTIVE)) {
          return this._onChange(this.get(), true);
        }
      }
      this._stop();
    });
    return this;
  }
  pause() {
    checkDisposed(this, "pause");
    if (!this.is(PAUSED)) {
      this._phase = PAUSED;
      flush(this._state.pauseQueue, (onPause) => onPause());
    }
  }
  resume() {
    checkDisposed(this, "resume");
    if (this.is(PAUSED)) {
      this._start();
      flush(this._state.resumeQueue, (onResume) => onResume());
    }
  }
  finish(to2) {
    this.resume();
    if (this.is(ACTIVE)) {
      const anim = this.animation;
      if (!anim.config.decay && is.und(to2)) {
        to2 = anim.to;
      }
      if (!is.und(to2)) {
        this._set(to2);
      }
      batchedUpdates(() => {
        if (!anim.changed) {
          anim.changed = true;
          if (anim.onStart) {
            anim.onStart(this);
          }
        }
        this._stop();
      });
    }
    return this;
  }
  update(props) {
    checkDisposed(this, "update");
    const queue2 = this.queue || (this.queue = []);
    queue2.push(props);
    return this;
  }
  async start(to2, arg2) {
    checkDisposed(this, "start");
    let queue2;
    if (!is.und(to2)) {
      queue2 = [is.obj(to2) ? to2 : _extends(_extends({}, arg2), {}, {
        to: to2
      })];
    } else {
      queue2 = this.queue || [];
      this.queue = [];
    }
    const results = await Promise.all(queue2.map((props) => this._update(props)));
    return getCombinedResult(this, results);
  }
  stop(cancel2) {
    if (!this.is(DISPOSED)) {
      cancelAsync(this._state, this._lastCallId);
      this._focus(this.get());
      batchedUpdates(() => this._stop(cancel2));
    }
    return this;
  }
  reset() {
    this._update({
      reset: true
    });
  }
  dispose() {
    if (!this.is(DISPOSED)) {
      if (this.animation) {
        this.animation.onRest = [];
      }
      this.stop();
      this._phase = DISPOSED;
    }
  }
  onParentChange(event) {
    super.onParentChange(event);
    if (event.type == "change") {
      if (!this.is(ACTIVE)) {
        this._reset();
        if (!this.is(PAUSED)) {
          this._start();
        }
      }
    } else if (event.type == "priority") {
      this.priority = event.priority + 1;
    }
  }
  _prepareNode({
    to: to2,
    from,
    reverse: reverse3
  }) {
    const key = this.key || "";
    to2 = !is.obj(to2) || getFluidConfig(to2) ? to2 : to2[key];
    from = !is.obj(from) || getFluidConfig(from) ? from : from[key];
    const range7 = {
      to: to2,
      from
    };
    if (this.is(CREATED2)) {
      if (reverse3)
        [to2, from] = [from, to2];
      from = getFluidValue(from);
      const node = this._updateNode(is.und(from) ? getFluidValue(to2) : from);
      if (node && !is.und(from)) {
        node.setValue(from);
      }
    }
    return range7;
  }
  _updateNode(value2) {
    let node = getAnimated(this);
    if (!is.und(value2)) {
      const nodeType = this._getNodeType(value2);
      if (!node || node.constructor !== nodeType) {
        setAnimated(this, node = nodeType.create(value2));
      }
    }
    return node;
  }
  _getNodeType(value2) {
    const parentNode = getAnimated(value2);
    return parentNode ? parentNode.constructor : is.arr(value2) ? AnimatedArray : isAnimatedString(value2) ? AnimatedString : AnimatedValue;
  }
  _update(props, isLoop) {
    const defaultProps4 = this._defaultProps;
    const mergeDefaultProp = (key) => {
      const value2 = getDefaultProp(props, key);
      if (!is.und(value2)) {
        defaultProps4[key] = value2;
      }
      if (defaultProps4[key]) {
        props[key] = defaultProps4[key];
      }
    };
    mergeDefaultProp("cancel");
    mergeDefaultProp("pause");
    const range7 = this._prepareNode(props);
    return scheduleProps(++this._lastCallId, {
      key: this.key,
      props,
      state: this._state,
      actions: {
        pause: this.pause.bind(this),
        resume: this.resume.bind(this),
        start: this._merge.bind(this, range7)
      }
    }).then((result) => {
      if (props.loop && result.finished && !(isLoop && result.noop)) {
        const nextProps = createLoopUpdate(props);
        if (nextProps) {
          return this._update(nextProps, true);
        }
      }
      return result;
    });
  }
  _merge(range7, props, resolve) {
    if (props.cancel) {
      this.stop(true);
      return resolve(getCancelledResult(this));
    }
    const {
      key,
      animation: anim
    } = this;
    const defaultProps4 = this._defaultProps;
    const hasToProp = !is.und(range7.to);
    const hasFromProp = !is.und(range7.from);
    if (hasToProp || hasFromProp) {
      if (props.callId > this._lastToId) {
        this._lastToId = props.callId;
      } else {
        return resolve(getCancelledResult(this));
      }
    }
    const get4 = (prop) => !is.und(props[prop]) ? props[prop] : defaultProps4[prop];
    const onDelayEnd = coerceEventProp(get4("onDelayEnd"), key);
    if (onDelayEnd) {
      onDelayEnd(props, this);
    }
    if (props.default) {
      mergeDefaultProps(defaultProps4, props, ["pause", "cancel"]);
    }
    const {
      to: prevTo,
      from: prevFrom
    } = anim;
    let {
      to: to2 = prevTo,
      from = prevFrom
    } = range7;
    if (hasFromProp && !hasToProp) {
      to2 = from;
    }
    if (props.reverse)
      [to2, from] = [from, to2];
    const hasFromChanged = !isEqual2(from, prevFrom);
    if (hasFromChanged) {
      anim.from = from;
    }
    const hasToChanged = !isEqual2(to2, prevTo);
    if (hasToChanged) {
      this._focus(to2);
    }
    const toConfig = getFluidConfig(to2);
    const fromConfig = getFluidConfig(from);
    if (fromConfig) {
      from = fromConfig.get();
    }
    const hasAsyncTo = is.arr(props.to) || is.fun(props.to);
    const {
      config: config4
    } = anim;
    const {
      decay,
      velocity
    } = config4;
    if (props.config && !hasAsyncTo) {
      mergeConfig(config4, callProp(props.config, key), props.config !== defaultProps4.config ? callProp(defaultProps4.config, key) : void 0);
    }
    let node = getAnimated(this);
    if (!node || is.und(to2)) {
      return resolve(getFinishedResult(this, true));
    }
    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);
    const value2 = reset ? from : this.get();
    const goal = computeGoal(to2);
    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);
    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps4.immediate || props.immediate, key));
    if (hasToChanged) {
      if (immediate) {
        node = this._updateNode(goal);
      } else {
        const nodeType = this._getNodeType(to2);
        if (nodeType !== node.constructor) {
          throw Error("Cannot animate between " + node.constructor.name + " and " + nodeType.name + ', as the "to" prop suggests');
        }
      }
    }
    const goalType = node.constructor;
    let started = !!toConfig;
    let finished = false;
    if (!started) {
      const hasValueChanged = reset || this.is(CREATED2) && hasFromChanged;
      if (hasToChanged || hasValueChanged) {
        finished = isEqual2(computeGoal(value2), goal);
        started = !finished;
      }
      if (!isEqual2(config4.decay, decay) || !isEqual2(config4.velocity, velocity)) {
        started = true;
      }
    }
    if (finished && this.is(ACTIVE)) {
      if (anim.changed && !reset) {
        started = true;
      } else if (!started) {
        this._stop();
      }
    }
    if (!hasAsyncTo) {
      if (started || getFluidConfig(prevTo)) {
        anim.values = node.getPayload();
        anim.toValues = toConfig ? null : goalType == AnimatedString ? [1] : toArray(goal);
      }
      anim.immediate = immediate;
      anim.onStart = coerceEventProp(get4("onStart"), key);
      anim.onChange = coerceEventProp(get4("onChange"), key);
      const onRestQueue = anim.onRest;
      const onRest = reset && !props.onRest ? onRestQueue[0] || noop8 : checkFinishedOnRest(coerceEventProp(get4("onRest"), key), this);
      if (started) {
        anim.onRest = [onRest, checkFinishedOnRest(resolve, this)];
        let onRestIndex = reset ? 0 : 1;
        if (onRestIndex < onRestQueue.length) {
          batchedUpdates(() => {
            for (; onRestIndex < onRestQueue.length; onRestIndex++) {
              onRestQueue[onRestIndex]();
            }
          });
        }
      } else if (reset || props.onRest) {
        anim.onRest[0] = onRest;
      }
    }
    const onProps = coerceEventProp(get4("onProps"), key);
    if (onProps) {
      onProps(props, this);
    }
    if (reset) {
      node.setValue(value2);
    }
    if (hasAsyncTo) {
      resolve(runAsync(props.to, props, this._state, this));
    } else if (started) {
      if (reset)
        this._phase = IDLE;
      this._reset();
      this._start();
    } else if (this.is(ACTIVE) && !hasToChanged) {
      anim.onRest.push(checkFinishedOnRest(resolve, this));
    } else {
      resolve(getNoopResult(this, value2));
    }
  }
  _focus(value2) {
    const anim = this.animation;
    if (value2 !== anim.to) {
      let config4 = getFluidConfig(anim.to);
      if (config4) {
        config4.removeChild(this);
      }
      anim.to = value2;
      let priority = 0;
      if (config4 = getFluidConfig(value2)) {
        config4.addChild(this);
        if (isFrameValue(value2)) {
          priority = (value2.priority || 0) + 1;
        }
      }
      this.priority = priority;
    }
  }
  _set(value2) {
    const config4 = getFluidConfig(value2);
    if (config4) {
      value2 = config4.get();
    }
    const node = getAnimated(this);
    const oldValue = node && node.getValue();
    if (node) {
      node.setValue(value2);
    } else {
      this._updateNode(value2);
    }
    return !isEqual2(value2, oldValue);
  }
  _onChange(value2, idle = false) {
    const anim = this.animation;
    if (!anim.changed && !idle) {
      anim.changed = true;
      if (anim.onStart) {
        anim.onStart(this);
      }
    }
    if (anim.onChange) {
      anim.onChange(value2, this);
    }
    super._onChange(value2, idle);
  }
  _reset() {
    const anim = this.animation;
    getAnimated(this).reset(anim.to);
    if (!this.is(ACTIVE)) {
      anim.changed = false;
    }
    if (!anim.immediate) {
      anim.fromValues = anim.values.map((node) => node.lastPosition);
    }
    super._reset();
  }
  _start() {
    if (!this.is(ACTIVE)) {
      this._phase = ACTIVE;
      super._start();
      if (skipAnimation) {
        this.finish();
      } else {
        frameLoop.start(this);
      }
    }
  }
  _stop(cancel2) {
    this.resume();
    if (this.is(ACTIVE)) {
      this._phase = IDLE;
      this._onChange(this.get(), true);
      const anim = this.animation;
      each(anim.values, (node) => {
        node.done = true;
      });
      const onRestQueue = anim.onRest;
      if (onRestQueue.length) {
        anim.onRest = [anim.toValues ? noop8 : onRestQueue[0]];
        if (!anim.changed) {
          onRestQueue[0] = noop8;
        }
        each(onRestQueue, (onRest) => onRest(cancel2));
      }
    }
  }
};
function checkDisposed(spring, name) {
  if (spring.is(DISPOSED)) {
    throw Error('Cannot call "' + name + '" of disposed "' + spring.constructor.name + '" object');
  }
}
function coerceEventProp(prop, key) {
  return is.fun(prop) ? prop : key && prop ? prop[key] : void 0;
}
var checkFinishedOnRest = (onRest, spring) => {
  const {
    to: to2
  } = spring.animation;
  return onRest ? (cancel2) => {
    if (cancel2) {
      onRest(getCancelledResult(spring));
    } else {
      const goal = computeGoal(to2);
      const value2 = computeGoal(spring.get());
      const finished = isEqual2(value2, goal);
      onRest(getFinishedResult(spring, finished));
    }
  } : noop8;
};
function createLoopUpdate(props, loop = props.loop, to2 = props.to) {
  let loopRet = callProp(loop);
  if (loopRet) {
    const overrides = loopRet !== true && inferTo(loopRet);
    const reverse3 = (overrides || props).reverse;
    const reset = !overrides || overrides.reset;
    return createUpdate(_extends(_extends({}, props), {}, {
      loop,
      default: false,
      to: !reverse3 || is.arr(to2) || is.fun(to2) ? to2 : void 0,
      from: reset ? props.from : void 0,
      reset
    }, overrides));
  }
}
function createUpdate(props) {
  const {
    to: to2,
    from
  } = props = inferTo(props);
  const keys4 = new Set();
  if (from) {
    findDefined(from, keys4);
  } else {
    delete props.from;
  }
  if (is.obj(to2)) {
    findDefined(to2, keys4);
  } else if (!to2) {
    delete props.to;
  }
  props.keys = keys4.size ? Array.from(keys4) : null;
  return props;
}
function declareUpdate(props) {
  const update = createUpdate(props);
  if (is.und(update.default)) {
    update.default = getDefaultProps(update, [
      update.immediate === true && "immediate"
    ]);
  }
  return update;
}
function findDefined(values2, keys4) {
  each(values2, (value2, key) => value2 != null && keys4.add(key));
}
var BATCHED_EVENTS = ["onStart", "onChange", "onRest"];
var nextId$1 = 1;
var Controller = class {
  constructor(props, flush2) {
    this.id = nextId$1++;
    this.springs = {};
    this.queue = [];
    this._flush = void 0;
    this._initialProps = void 0;
    this._phase = CREATED2;
    this._lastAsyncId = 0;
    this._active = new Set();
    this._state = {
      pauseQueue: new Set(),
      resumeQueue: new Set()
    };
    this._events = {
      onStart: new Set(),
      onChange: new Set(),
      onRest: new Map()
    };
    this._onFrame = this._onFrame.bind(this);
    if (flush2) {
      this._flush = flush2;
    }
    if (props) {
      this.start(props);
    }
  }
  get idle() {
    return !this._state.asyncTo && Object.values(this.springs).every((spring) => spring.idle);
  }
  is(phase) {
    return this._phase == phase;
  }
  get() {
    const values2 = {};
    this.each((spring, key) => values2[key] = spring.get());
    return values2;
  }
  update(props) {
    if (props)
      this.queue.push(createUpdate(props));
    return this;
  }
  start(props) {
    const queue2 = props ? toArray(props).map(createUpdate) : this.queue;
    if (!props) {
      this.queue = [];
    }
    if (this._flush) {
      return this._flush(this, queue2);
    }
    prepareKeys(this, queue2);
    return flushUpdateQueue(this, queue2);
  }
  stop(keys4) {
    if (is.und(keys4)) {
      this.each((spring) => spring.stop());
      cancelAsync(this._state, this._lastAsyncId);
    } else {
      const springs = this.springs;
      each(toArray(keys4), (key) => springs[key].stop());
    }
    return this;
  }
  pause(keys4) {
    if (is.und(keys4)) {
      this.each((spring) => spring.pause());
    } else {
      const springs = this.springs;
      each(toArray(keys4), (key) => springs[key].pause());
    }
    return this;
  }
  resume(keys4) {
    if (is.und(keys4)) {
      this.each((spring) => spring.resume());
    } else {
      const springs = this.springs;
      each(toArray(keys4), (key) => springs[key].resume());
    }
    return this;
  }
  reset() {
    this.each((spring) => spring.reset());
    return this;
  }
  each(iterator) {
    each(this.springs, iterator);
  }
  dispose() {
    this._state.asyncTo = void 0;
    this.each((spring) => spring.dispose());
    this.springs = {};
  }
  _onFrame() {
    const {
      onStart,
      onChange,
      onRest
    } = this._events;
    const isActive = this._active.size > 0;
    if (isActive && this._phase != ACTIVE) {
      this._phase = ACTIVE;
      flush(onStart, (onStart2) => onStart2(this));
    }
    const values2 = (onChange.size || !isActive && onRest.size) && this.get();
    flush(onChange, (onChange2) => onChange2(values2));
    if (!isActive) {
      this._phase = IDLE;
      flush(onRest, ([onRest2, result]) => {
        result.value = values2;
        onRest2(result);
      });
    }
  }
  onParentChange(event) {
    if (event.type == "change") {
      this._active[event.idle ? "delete" : "add"](event.parent);
      frameLoop.onFrame(this._onFrame);
    }
  }
};
function flushUpdateQueue(ctrl, queue2) {
  return Promise.all(queue2.map((props) => flushUpdate(ctrl, props))).then((results) => getCombinedResult(ctrl, results));
}
function flushUpdate(ctrl, props, isLoop) {
  const {
    to: to2,
    loop,
    onRest
  } = props;
  if (loop) {
    props.loop = false;
  }
  const asyncTo = is.arr(to2) || is.fun(to2) ? to2 : void 0;
  if (asyncTo) {
    props.to = void 0;
    props.onRest = void 0;
  } else {
    each(BATCHED_EVENTS, (key) => {
      const handler = props[key];
      if (is.fun(handler)) {
        const queue2 = ctrl["_events"][key];
        if (queue2 instanceof Set) {
          props[key] = () => queue2.add(handler);
        } else {
          props[key] = ({
            finished,
            cancelled
          }) => {
            const result = queue2.get(handler);
            if (result) {
              if (!finished)
                result.finished = false;
              if (cancelled)
                result.cancelled = true;
            } else {
              queue2.set(handler, {
                value: null,
                finished,
                cancelled
              });
            }
          };
        }
      }
    });
  }
  const keys4 = props.keys || Object.keys(ctrl.springs);
  const promises = keys4.map((key) => ctrl.springs[key].start(props));
  const state = ctrl["_state"];
  if (asyncTo) {
    promises.push(scheduleProps(++ctrl["_lastAsyncId"], {
      props,
      state,
      actions: {
        pause: noop8,
        resume: noop8,
        start(props2, resolve) {
          props2.onRest = onRest;
          if (!props2.cancel) {
            resolve(runAsync(asyncTo, props2, state, ctrl));
          } else if (hasDefaultProp(props2, "cancel")) {
            cancelAsync(state, props2.callId);
          }
        }
      }
    }));
  } else if (!props.keys && props.cancel === true) {
    cancelAsync(state, ctrl["_lastAsyncId"]);
  }
  return Promise.all(promises).then((results) => {
    const result = getCombinedResult(ctrl, results);
    if (loop && result.finished && !(isLoop && result.noop)) {
      const nextProps = createLoopUpdate(props, loop, to2);
      if (nextProps) {
        prepareKeys(ctrl, [nextProps]);
        return flushUpdate(ctrl, nextProps, true);
      }
    }
    return result;
  });
}
function getSprings(ctrl, props) {
  const springs = _extends({}, ctrl.springs);
  if (props) {
    each(toArray(props), (props2) => {
      if (is.und(props2.keys)) {
        props2 = createUpdate(props2);
      }
      if (!is.obj(props2.to)) {
        props2 = _extends(_extends({}, props2), {}, {
          to: void 0
        });
      }
      prepareSprings(springs, props2, (key) => {
        return createSpring(key);
      });
    });
  }
  return springs;
}
function setSprings(ctrl, springs) {
  each(springs, (spring, key) => {
    if (!ctrl.springs[key]) {
      ctrl.springs[key] = spring;
      spring.addChild(ctrl);
    }
  });
}
function createSpring(key, observer) {
  const spring = new SpringValue();
  spring.key = key;
  if (observer) {
    spring.addChild(observer);
  }
  return spring;
}
function prepareSprings(springs, props, create) {
  if (props.keys) {
    each(props.keys, (key) => {
      const spring = springs[key] || (springs[key] = create(key));
      spring["_prepareNode"](props);
    });
  }
}
function prepareKeys(ctrl, queue2) {
  each(queue2, (props) => {
    prepareSprings(ctrl.springs, props, (key) => {
      return createSpring(key, ctrl);
    });
  });
}
var ctx = react.createContext({});
ctx.Provider;
ctx.Consumer;
var useSpringContext = () => react.useContext(ctx);
var SpringHandle = {
  create: (getControllers) => ({
    get controllers() {
      return getControllers();
    },
    update(props) {
      each(getControllers(), (ctrl, i) => {
        ctrl.update(getProps2(props, i, ctrl));
      });
      return this;
    },
    async start(props) {
      const results = await Promise.all(getControllers().map((ctrl, i) => {
        const update = getProps2(props, i, ctrl);
        return ctrl.start(update);
      }));
      return {
        value: results.map((result) => result.value),
        finished: results.every((result) => result.finished)
      };
    },
    stop: (keys4) => each(getControllers(), (ctrl) => ctrl.stop(keys4)),
    pause: (keys4) => each(getControllers(), (ctrl) => ctrl.pause(keys4)),
    resume: (keys4) => each(getControllers(), (ctrl) => ctrl.resume(keys4))
  })
};
function useSprings(length, props, deps) {
  const propsFn = is.fun(props) && props;
  if (propsFn && !deps)
    deps = [];
  const layoutId = react.useRef(0);
  const forceUpdate = useForceUpdate();
  const [state] = react.useState(() => ({
    ctrls: [],
    queue: [],
    flush(ctrl, updates2) {
      const springs2 = getSprings(ctrl, updates2);
      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs2).some((key) => !ctrl.springs[key]);
      return canFlushSync ? flushUpdateQueue(ctrl, updates2) : new Promise((resolve) => {
        setSprings(ctrl, springs2);
        state.queue.push(() => {
          resolve(flushUpdateQueue(ctrl, updates2));
        });
        forceUpdate();
      });
    }
  }));
  const refProp = react.useRef();
  const ctrls = [...state.ctrls];
  const updates = [];
  const prevLength = usePrev(length) || 0;
  const disposed = ctrls.slice(length, prevLength);
  useMemo2(() => {
    ctrls.length = length;
    declareUpdates(prevLength, length);
  }, [length]);
  useMemo2(() => {
    declareUpdates(0, Math.min(prevLength, length));
  }, deps);
  function declareUpdates(startIndex, endIndex) {
    for (let i = startIndex; i < endIndex; i++) {
      const ctrl = ctrls[i] || (ctrls[i] = new Controller(null, state.flush));
      let update = propsFn ? propsFn(i, ctrl) : props[i];
      if (update) {
        update = updates[i] = declareUpdate(update);
        if (i == 0) {
          refProp.current = update.ref;
          update.ref = void 0;
        }
      }
    }
  }
  const api = react.useMemo(() => {
    return SpringHandle.create(() => state.ctrls);
  }, []);
  const springs = ctrls.map((ctrl, i) => getSprings(ctrl, updates[i]));
  const context = useSpringContext();
  useLayoutEffect2(() => {
    layoutId.current++;
    state.ctrls = ctrls;
    if (refProp.current) {
      refProp.current.current = api;
    }
    const {
      queue: queue2
    } = state;
    if (queue2.length) {
      state.queue = [];
      each(queue2, (cb2) => cb2());
    }
    each(disposed, (ctrl) => ctrl.dispose());
    each(ctrls, (ctrl, i) => {
      const values3 = springs[i];
      setSprings(ctrl, values3);
      ctrl.start({
        default: context
      });
      const update = updates[i];
      if (update) {
        if (refProp.current) {
          ctrl.queue.push(update);
        } else {
          ctrl.start(update);
        }
      }
    });
  });
  useOnce(() => () => {
    each(state.ctrls, (ctrl) => ctrl.dispose());
  });
  const values2 = springs.map((x5) => _extends({}, x5));
  return propsFn || arguments.length == 3 ? [values2, api.start, api.stop] : values2;
}
function useSpring(props, deps) {
  const isFn = is.fun(props);
  const [[values2], update, stop] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);
  return isFn || arguments.length == 2 ? [values2, update, stop] : values2;
}
var MOUNT = "mount";
var ENTER = "enter";
var UPDATE = "update";
var LEAVE = "leave";
function useTransition(data3, props, deps) {
  const {
    ref,
    reset,
    sort,
    trail = 0,
    expires = true
  } = props;
  const items = toArray(data3);
  const transitions = [];
  const keys4 = getKeys(items, props);
  const usedTransitions = react.useRef(null);
  const prevTransitions = reset ? null : usedTransitions.current;
  useLayoutEffect2(() => {
    usedTransitions.current = transitions;
  });
  useOnce(() => () => each(usedTransitions.current, (t4) => {
    if (t4.expired) {
      clearTimeout(t4.expirationId);
    }
    t4.ctrl.dispose();
  }));
  const reused = [];
  if (prevTransitions)
    each(prevTransitions, (t4, i) => {
      if (t4.expired) {
        clearTimeout(t4.expirationId);
      } else {
        i = reused[i] = keys4.indexOf(t4.key);
        if (~i)
          transitions[i] = t4;
      }
    });
  each(items, (item, i) => {
    transitions[i] || (transitions[i] = {
      key: keys4[i],
      item,
      phase: MOUNT,
      ctrl: new Controller()
    });
  });
  if (reused.length) {
    let i = -1;
    each(reused, (keyIndex, prevIndex) => {
      const t4 = prevTransitions[prevIndex];
      if (~keyIndex) {
        i = transitions.indexOf(t4);
        transitions[i] = _extends(_extends({}, t4), {}, {
          item: items[keyIndex]
        });
      } else if (props.leave) {
        transitions.splice(++i, 0, t4);
      }
    });
  }
  if (is.fun(sort)) {
    transitions.sort((a3, b10) => sort(a3.item, b10.item));
  }
  let delay = -trail;
  const forceUpdate = useForceUpdate();
  const defaultProps4 = getDefaultProps(props);
  const changes = new Map();
  each(transitions, (t4, i) => {
    const key = t4.key;
    const prevPhase = t4.phase;
    let to2;
    let phase;
    if (prevPhase == MOUNT) {
      to2 = props.enter;
      phase = ENTER;
    } else {
      const isLeave = keys4.indexOf(key) < 0;
      if (prevPhase != LEAVE) {
        if (isLeave) {
          to2 = props.leave;
          phase = LEAVE;
        } else if (to2 = props.update) {
          phase = UPDATE;
        } else
          return;
      } else if (!isLeave) {
        to2 = props.enter;
        phase = ENTER;
      } else
        return;
    }
    to2 = callProp(to2, t4.item, i);
    to2 = is.obj(to2) ? inferTo(to2) : {
      to: to2
    };
    if (!to2.config) {
      const config4 = props.config || defaultProps4.config;
      to2.config = callProp(config4, t4.item, i);
    }
    const payload = _extends(_extends({}, defaultProps4), {}, {
      delay: delay += trail,
      reset: false
    }, to2);
    if (phase == ENTER && is.und(payload.from)) {
      const from = is.und(props.initial) || prevTransitions ? props.from : props.initial;
      payload.from = callProp(from, t4.item, i);
    }
    const {
      onRest
    } = payload;
    payload.onRest = (result) => {
      const transitions2 = usedTransitions.current;
      const t5 = transitions2.find((t6) => t6.key === key);
      if (!t5)
        return;
      if (is.fun(onRest)) {
        onRest(result, t5);
      }
      if (result.cancelled && t5.phase != UPDATE) {
        t5.phase = prevPhase;
        return;
      }
      if (t5.ctrl.idle) {
        const idle = transitions2.every((t6) => t6.ctrl.idle);
        if (t5.phase == LEAVE) {
          const expiry = callProp(expires, t5.item);
          if (expiry !== false) {
            const expiryMs = expiry === true ? 0 : expiry;
            t5.expired = true;
            if (!idle && expiryMs > 0) {
              if (expiryMs <= 2147483647)
                t5.expirationId = setTimeout(forceUpdate, expiryMs);
              return;
            }
          }
        }
        if (idle && transitions2.some((t6) => t6.expired)) {
          forceUpdate();
        }
      }
    };
    const springs = getSprings(t4.ctrl, payload);
    changes.set(t4, {
      phase,
      springs,
      payload
    });
  });
  const context = useSpringContext();
  useLayoutEffect2(() => {
    each(transitions, (t4) => {
      t4.ctrl.start({
        default: context
      });
    });
  }, [context]);
  const api = react.useMemo(() => {
    return SpringHandle.create(() => {
      return usedTransitions.current.map((t4) => t4.ctrl);
    });
  }, []);
  react.useImperativeHandle(ref, () => api);
  useLayoutEffect2(() => {
    each(changes, ({
      phase,
      springs,
      payload
    }, t4) => {
      setSprings(t4.ctrl, springs);
      if (!context.cancel) {
        t4.phase = phase;
        if (phase == ENTER) {
          t4.ctrl.start({
            default: context
          });
        }
        t4.ctrl[ref ? "update" : "start"](payload);
      }
    });
  }, reset ? void 0 : deps);
  const renderTransitions = (render2) => /* @__PURE__ */ react.createElement(react.Fragment, null, transitions.map((t4, i) => {
    const {
      springs
    } = changes.get(t4) || t4.ctrl;
    const elem = render2(_extends({}, springs), t4.item, t4, i);
    return elem && elem.type ? /* @__PURE__ */ react.createElement(elem.type, _extends({}, elem.props, {
      key: is.str(t4.key) || is.num(t4.key) ? t4.key : t4.ctrl.id,
      ref: elem.ref
    })) : elem;
  }));
  return arguments.length == 3 ? [renderTransitions, api.start, api.stop] : renderTransitions;
}
function getKeys(items, {
  key,
  keys: keys4 = key
}) {
  return is.und(keys4) ? items : is.fun(keys4) ? items.map(keys4) : toArray(keys4);
}
var Interpolation = class extends FrameValue {
  constructor(source, args) {
    super();
    this.source = source;
    this.key = void 0;
    this.idle = true;
    this.calc = void 0;
    this.calc = createInterpolator(...args);
    const value2 = this._get();
    const nodeType = is.arr(value2) ? AnimatedArray : AnimatedValue;
    setAnimated(this, nodeType.create(value2));
  }
  advance(_dt) {
    const value2 = this._get();
    const oldValue = this.get();
    if (!isEqual2(value2, oldValue)) {
      getAnimated(this).setValue(value2);
      this._onChange(value2, this.idle);
    }
  }
  _get() {
    const inputs = is.arr(this.source) ? this.source.map((node) => node.get()) : toArray(this.source.get());
    return this.calc(...inputs);
  }
  _reset() {
    each(getPayload(this), (node) => node.reset());
    super._reset();
  }
  _start() {
    this.idle = false;
    super._start();
    if (skipAnimation) {
      this.idle = true;
      this.advance();
    } else {
      frameLoop.start(this);
    }
  }
  _attach() {
    let idle = true;
    let priority = 1;
    each(toArray(this.source), (source) => {
      if (isFrameValue(source)) {
        if (!source.idle)
          idle = false;
        priority = Math.max(priority, source.priority + 1);
      }
      source.addChild(this);
    });
    this.priority = priority;
    if (!idle) {
      this._reset();
      this._start();
    }
  }
  _detach() {
    each(toArray(this.source), (source) => {
      source.removeChild(this);
    });
    this.idle = true;
  }
  onParentChange(event) {
    if (event.type == "start") {
      this.advance();
    } else if (event.type == "change") {
      if (this.idle) {
        this.advance();
      } else if (event.idle) {
        this.idle = toArray(this.source).every((source) => source.idle !== false);
        if (this.idle) {
          this.advance();
          each(getPayload(this), (node) => {
            node.done = true;
          });
        }
      }
    } else if (event.type == "priority") {
      this.priority = toArray(this.source).reduce((max6, source) => Math.max(max6, (source.priority || 0) + 1), 0);
    }
    super.onParentChange(event);
  }
};
var to$1 = (source, ...args) => new Interpolation(source, args);
assign2({
  createStringInterpolator: createStringInterpolator$1,
  to: (source, args) => new Interpolation(source, args)
});
var colors4 = {
  transparent: 0,
  aliceblue: 4042850303,
  antiquewhite: 4209760255,
  aqua: 16777215,
  aquamarine: 2147472639,
  azure: 4043309055,
  beige: 4126530815,
  bisque: 4293182719,
  black: 255,
  blanchedalmond: 4293643775,
  blue: 65535,
  blueviolet: 2318131967,
  brown: 2771004159,
  burlywood: 3736635391,
  burntsienna: 3934150143,
  cadetblue: 1604231423,
  chartreuse: 2147418367,
  chocolate: 3530104575,
  coral: 4286533887,
  cornflowerblue: 1687547391,
  cornsilk: 4294499583,
  crimson: 3692313855,
  cyan: 16777215,
  darkblue: 35839,
  darkcyan: 9145343,
  darkgoldenrod: 3095792639,
  darkgray: 2846468607,
  darkgreen: 6553855,
  darkgrey: 2846468607,
  darkkhaki: 3182914559,
  darkmagenta: 2332068863,
  darkolivegreen: 1433087999,
  darkorange: 4287365375,
  darkorchid: 2570243327,
  darkred: 2332033279,
  darksalmon: 3918953215,
  darkseagreen: 2411499519,
  darkslateblue: 1211993087,
  darkslategray: 793726975,
  darkslategrey: 793726975,
  darkturquoise: 13554175,
  darkviolet: 2483082239,
  deeppink: 4279538687,
  deepskyblue: 12582911,
  dimgray: 1768516095,
  dimgrey: 1768516095,
  dodgerblue: 512819199,
  firebrick: 2988581631,
  floralwhite: 4294635775,
  forestgreen: 579543807,
  fuchsia: 4278255615,
  gainsboro: 3705462015,
  ghostwhite: 4177068031,
  gold: 4292280575,
  goldenrod: 3668254975,
  gray: 2155905279,
  green: 8388863,
  greenyellow: 2919182335,
  grey: 2155905279,
  honeydew: 4043305215,
  hotpink: 4285117695,
  indianred: 3445382399,
  indigo: 1258324735,
  ivory: 4294963455,
  khaki: 4041641215,
  lavender: 3873897215,
  lavenderblush: 4293981695,
  lawngreen: 2096890111,
  lemonchiffon: 4294626815,
  lightblue: 2916673279,
  lightcoral: 4034953471,
  lightcyan: 3774873599,
  lightgoldenrodyellow: 4210742015,
  lightgray: 3553874943,
  lightgreen: 2431553791,
  lightgrey: 3553874943,
  lightpink: 4290167295,
  lightsalmon: 4288707327,
  lightseagreen: 548580095,
  lightskyblue: 2278488831,
  lightslategray: 2005441023,
  lightslategrey: 2005441023,
  lightsteelblue: 2965692159,
  lightyellow: 4294959359,
  lime: 16711935,
  limegreen: 852308735,
  linen: 4210091775,
  magenta: 4278255615,
  maroon: 2147483903,
  mediumaquamarine: 1724754687,
  mediumblue: 52735,
  mediumorchid: 3126187007,
  mediumpurple: 2473647103,
  mediumseagreen: 1018393087,
  mediumslateblue: 2070474495,
  mediumspringgreen: 16423679,
  mediumturquoise: 1221709055,
  mediumvioletred: 3340076543,
  midnightblue: 421097727,
  mintcream: 4127193855,
  mistyrose: 4293190143,
  moccasin: 4293178879,
  navajowhite: 4292783615,
  navy: 33023,
  oldlace: 4260751103,
  olive: 2155872511,
  olivedrab: 1804477439,
  orange: 4289003775,
  orangered: 4282712319,
  orchid: 3664828159,
  palegoldenrod: 4008225535,
  palegreen: 2566625535,
  paleturquoise: 2951671551,
  palevioletred: 3681588223,
  papayawhip: 4293907967,
  peachpuff: 4292524543,
  peru: 3448061951,
  pink: 4290825215,
  plum: 3718307327,
  powderblue: 2967529215,
  purple: 2147516671,
  rebeccapurple: 1714657791,
  red: 4278190335,
  rosybrown: 3163525119,
  royalblue: 1097458175,
  saddlebrown: 2336560127,
  salmon: 4202722047,
  sandybrown: 4104413439,
  seagreen: 780883967,
  seashell: 4294307583,
  sienna: 2689740287,
  silver: 3233857791,
  skyblue: 2278484991,
  slateblue: 1784335871,
  slategray: 1887473919,
  slategrey: 1887473919,
  snow: 4294638335,
  springgreen: 16744447,
  steelblue: 1182971135,
  tan: 3535047935,
  teal: 8421631,
  thistle: 3636451583,
  tomato: 4284696575,
  turquoise: 1088475391,
  violet: 4001558271,
  wheat: 4125012991,
  white: 4294967295,
  whitesmoke: 4126537215,
  yellow: 4294902015,
  yellowgreen: 2597139199
};
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value2) {
  if (value2 == null || typeof value2 === "boolean" || value2 === "")
    return "";
  if (typeof value2 === "number" && value2 !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value2 + "px";
  return ("" + value2).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const _ref = props, {
    style,
    children: children2,
    scrollTop,
    scrollLeft
  } = _ref, attributes = _objectWithoutPropertiesLoose7(_ref, ["style", "children", "scrollTop", "scrollLeft"]);
  const values2 = Object.values(attributes);
  const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n3) => "-" + n3.toLowerCase())));
  frameLoop.onWrite(() => {
    if (children2 !== void 0) {
      instance.textContent = children2;
    }
    for (let name in style) {
      if (style.hasOwnProperty(name)) {
        const value2 = dangerousStyleValue(name, style[name]);
        if (name === "float")
          name = "cssFloat";
        else if (isCustomPropRE.test(name)) {
          instance.style.setProperty(name, value2);
        } else {
          instance.style[name] = value2;
        }
      }
    }
    names.forEach((name, i) => {
      instance.setAttribute(name, values2[i]);
    });
    if (scrollTop !== void 0) {
      instance.scrollTop = scrollTop;
    }
    if (scrollLeft !== void 0) {
      instance.scrollLeft = scrollLeft;
    }
  });
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix3, key) => prefix3 + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes4 = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes4.forEach((prefix3) => acc[prefixKey(prefix3, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value2, unit5) => is.num(value2) && value2 !== 0 ? value2 + unit5 : value2;
var isValueIdentity = (value2, id3) => is.arr(value2) ? value2.every((v3) => isValueIdentity(v3, id3)) : is.num(value2) ? value2 === id3 : parseFloat(value2) === id3;
var AnimatedStyle = class extends AnimatedObject {
  constructor(_ref) {
    let {
      x: x5,
      y: y7,
      z: z3
    } = _ref, style = _objectWithoutPropertiesLoose7(_ref, ["x", "y", "z"]);
    const inputs = [];
    const transforms = [];
    if (x5 || y7 || z3) {
      inputs.push([x5 || 0, y7 || 0, z3 || 0]);
      transforms.push((xyz) => [
        "translate3d(" + xyz.map((v3) => addUnit(v3, "px")).join(",") + ")",
        isValueIdentity(xyz, 0)
      ]);
    }
    each(style, (value2, key) => {
      if (key === "transform") {
        inputs.push([value2 || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value2))
          return;
        const unit5 = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value2));
        transforms.push(key === "rotate3d" ? ([x6, y8, z4, deg]) => ["rotate3d(" + x6 + "," + y8 + "," + z4 + "," + addUnit(deg, unit5) + ")", isValueIdentity(deg, 0)] : (input) => [key + "(" + input.map((v3) => addUnit(v3, unit5)).join(",") + ")", isValueIdentity(input, key.startsWith("scale") ? 1 : 0)]);
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
    this._children = new Set();
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity12 = true;
    each(this.inputs, (input, i) => {
      const arg1 = getFluidValue(input[0]);
      const [t4, id3] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += " " + t4;
      identity12 = identity12 && id3;
    });
    return identity12 ? "none" : transform;
  }
  addChild(child) {
    if (!this._children.size) {
      each(this.inputs, (input) => each(input, (value2) => {
        const config4 = getFluidConfig(value2);
        if (config4)
          config4.addChild(this);
      }));
    }
    this._children.add(child);
  }
  removeChild(child) {
    this._children.delete(child);
    if (!this._children.size) {
      each(this.inputs, (input) => each(input, (value2) => {
        const config4 = getFluidConfig(value2);
        if (config4)
          config4.removeChild(this);
      }));
    }
  }
  onParentChange(event) {
    if (event.type == "change") {
      this._value = null;
    }
    each(this._children, (child) => {
      child.onParentChange(event);
    });
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
assign2({
  colorNames: colors4,
  createStringInterpolator: createStringInterpolator$1,
  batchedUpdates: reactDom.unstable_batchedUpdates
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  getComponentProps: (_ref) => {
    let props = _objectWithoutPropertiesLoose7(_ref, ["scrollTop", "scrollLeft"]);
    return props;
  }
});
var animated = host.animated;
function _defineProperty6(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys2(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty6(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit3(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(n3);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray2(o, minLen);
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray4(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest3();
}
var TOOLTIP_OFFSET = 14;
var tooltipStyle = {
  pointerEvents: "none",
  position: "absolute",
  zIndex: 10,
  top: 0,
  left: 0
};
var translate = function translate2(x5, y7) {
  return "translate(".concat(x5, "px, ").concat(y7, "px)");
};
var TooltipWrapper = react.memo(function(_ref) {
  var _animatedProps$transf;
  var position = _ref.position, anchor = _ref.anchor, children2 = _ref.children;
  var theme = useTheme();
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var _useMeasure = useMeasure(), _useMeasure2 = _slicedToArray4(_useMeasure, 2), measureRef = _useMeasure2[0], bounds = _useMeasure2[1];
  var previousPosition = react.useRef(false);
  var to2 = void 0;
  var immediate = false;
  var hasDimension = bounds.width > 0 && bounds.height > 0;
  var x5 = Math.round(position[0]);
  var y7 = Math.round(position[1]);
  if (hasDimension) {
    if (anchor === "top") {
      x5 -= bounds.width / 2;
      y7 -= bounds.height + TOOLTIP_OFFSET;
    } else if (anchor === "right") {
      x5 += TOOLTIP_OFFSET;
      y7 -= bounds.height / 2;
    } else if (anchor === "bottom") {
      x5 -= bounds.width / 2;
      y7 += TOOLTIP_OFFSET;
    } else if (anchor === "left") {
      x5 -= bounds.width + TOOLTIP_OFFSET;
      y7 -= bounds.height / 2;
    } else if (anchor === "center") {
      x5 -= bounds.width / 2;
      y7 -= bounds.height / 2;
    }
    to2 = {
      transform: translate(x5, y7)
    };
    if (!previousPosition.current) {
      immediate = true;
    }
    previousPosition.current = [x5, y7];
  }
  var animatedProps2 = useSpring({
    to: to2,
    config: springConfig,
    immediate: !animate || immediate
  });
  var style = _objectSpread22(_objectSpread22(_objectSpread22({}, tooltipStyle), theme.tooltip), {}, {
    transform: (_animatedProps$transf = animatedProps2.transform) !== null && _animatedProps$transf !== void 0 ? _animatedProps$transf : translate(x5, y7)
  });
  return react.createElement(animated.div, {
    ref: measureRef,
    style
  }, children2);
});
TooltipWrapper.displayName = "TooltipWrapper";
var Chip = react.memo(function(_ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 12 : _ref$size, color3 = _ref.color, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style;
  return react.createElement("span", {
    style: _objectSpread22({
      display: "block",
      width: size,
      height: size,
      background: color3
    }, style)
  });
});
var BasicTooltip = react.memo(function(_ref) {
  var id3 = _ref.id, _value = _ref.value, format6 = _ref.format, _ref$enableChip = _ref.enableChip, enableChip = _ref$enableChip === void 0 ? false : _ref$enableChip, color3 = _ref.color, renderContent2 = _ref.renderContent;
  var theme = useTheme();
  var formatValue = useValueFormatter(format6);
  var content;
  if (typeof renderContent2 === "function") {
    content = renderContent2();
  } else {
    var value2 = _value;
    if (formatValue !== void 0 && value2 !== void 0) {
      value2 = formatValue(value2);
    }
    content = react.createElement("div", {
      style: theme.tooltip.basic
    }, enableChip && react.createElement(Chip, {
      color: color3,
      style: theme.tooltip.chip
    }), value2 !== void 0 ? react.createElement("span", null, id3, ": ", react.createElement("strong", null, "".concat(value2))) : id3);
  }
  return react.createElement("div", {
    style: theme.tooltip.container
  }, content);
});
var tableStyle = {
  width: "100%",
  borderCollapse: "collapse"
};
var TableTooltip = react.memo(function(_ref) {
  var title2 = _ref.title, _ref$rows = _ref.rows, rows = _ref$rows === void 0 ? [] : _ref$rows, renderContent2 = _ref.renderContent;
  var theme = useTheme();
  if (!rows.length)
    return null;
  var content;
  if (typeof renderContent2 === "function") {
    content = renderContent2();
  } else {
    content = react.createElement("div", null, title2 && title2, react.createElement("table", {
      style: _objectSpread22(_objectSpread22({}, tableStyle), theme.tooltip.table)
    }, react.createElement("tbody", null, rows.map(function(row, i) {
      return react.createElement("tr", {
        key: i
      }, row.map(function(column, j2) {
        return react.createElement("td", {
          key: j2,
          style: theme.tooltip.tableCell
        }, column);
      }));
    }))));
  }
  return react.createElement("div", {
    style: theme.tooltip.container
  }, content);
});
TableTooltip.displayName = "TableTooltip";
var CrosshairLine = react.memo(function(_ref) {
  var x03 = _ref.x0, x14 = _ref.x1, y03 = _ref.y0, y14 = _ref.y1;
  var theme = useTheme();
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var style = react.useMemo(function() {
    return _objectSpread22(_objectSpread22({}, theme.crosshair.line), {}, {
      pointerEvents: "none"
    });
  }, [theme.crosshair.line]);
  var animatedProps2 = useSpring({
    x1: x03,
    x2: x14,
    y1: y03,
    y2: y14,
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(animated.line, Object.assign({}, animatedProps2, {
    fill: "none",
    style
  }));
});
CrosshairLine.displayName = "CrosshairLine";
var Crosshair2 = react.memo(function(_ref) {
  var width = _ref.width, height = _ref.height, type3 = _ref.type, x5 = _ref.x, y7 = _ref.y;
  var xLine;
  var yLine;
  if (type3 === "cross") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: 0,
      y1: height
    };
    yLine = {
      x0: 0,
      x1: width,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "top-left") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: 0,
      y1: y7
    };
    yLine = {
      x0: 0,
      x1: x5,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "top") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: 0,
      y1: y7
    };
  } else if (type3 === "top-right") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: 0,
      y1: y7
    };
    yLine = {
      x0: x5,
      x1: width,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "right") {
    yLine = {
      x0: x5,
      x1: width,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "bottom-right") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: y7,
      y1: height
    };
    yLine = {
      x0: x5,
      x1: width,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "bottom") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: y7,
      y1: height
    };
  } else if (type3 === "bottom-left") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: y7,
      y1: height
    };
    yLine = {
      x0: 0,
      x1: x5,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "left") {
    yLine = {
      x0: 0,
      x1: x5,
      y0: y7,
      y1: y7
    };
  } else if (type3 === "x") {
    xLine = {
      x0: x5,
      x1: x5,
      y0: 0,
      y1: height
    };
  } else if (type3 === "y") {
    yLine = {
      x0: 0,
      x1: width,
      y0: y7,
      y1: y7
    };
  }
  return react.createElement(react.Fragment, null, xLine && react.createElement(CrosshairLine, {
    x0: xLine.x0,
    x1: xLine.x1,
    y0: xLine.y0,
    y1: xLine.y1
  }), yLine && react.createElement(CrosshairLine, {
    x0: yLine.x0,
    x1: yLine.x1,
    y0: yLine.y0,
    y1: yLine.y1
  }));
});
Crosshair2.displayName = "Crosshair";
var defaultActions = {
  showTooltipAt: function showTooltipAt() {
  },
  showTooltipFromEvent: function showTooltipFromEvent() {
  },
  hideTooltip: function hideTooltip() {
  }
};
var TooltipActionsContext = react.createContext(defaultActions);
var hiddenTooltipState = {
  isVisible: false,
  position: [null, null],
  content: null,
  anchor: null
};
var TooltipStateContext = react.createContext(hiddenTooltipState);
var useTooltipHandlers = function useTooltipHandlers2(container) {
  var _useState = react.useState(hiddenTooltipState), _useState2 = _slicedToArray4(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var showTooltipAt2 = react.useCallback(function(content, _ref) {
    var _ref2 = _slicedToArray4(_ref, 2), x5 = _ref2[0], y7 = _ref2[1];
    var anchor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "top";
    setState({
      isVisible: true,
      position: [x5, y7],
      anchor,
      content
    });
  }, [setState]);
  var showTooltipFromEvent2 = react.useCallback(function(content, event) {
    var anchor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "top";
    var bounds = container.current.getBoundingClientRect();
    var x5 = event.clientX - bounds.left;
    var y7 = event.clientY - bounds.top;
    if (anchor === "left" || anchor === "right") {
      if (x5 < bounds.width / 2)
        anchor = "right";
      else
        anchor = "left";
    }
    setState({
      isVisible: true,
      position: [x5, y7],
      anchor,
      content
    });
  }, [container, setState]);
  var hideTooltip2 = react.useCallback(function() {
    setState(hiddenTooltipState);
  }, [setState]);
  var actions = react.useMemo(function() {
    return {
      showTooltipAt: showTooltipAt2,
      showTooltipFromEvent: showTooltipFromEvent2,
      hideTooltip: hideTooltip2
    };
  }, [showTooltipAt2, showTooltipFromEvent2, hideTooltip2]);
  return {
    actions,
    state
  };
};
var useTooltip2 = function useTooltip3() {
  var context = react.useContext(TooltipActionsContext);
  if (context === void 0) {
    throw new Error("useTooltip must be used within a TooltipProvider");
  }
  return context;
};
var useTooltipState = function useTooltipState2() {
  var context = react.useContext(TooltipStateContext);
  if (context === void 0) {
    throw new Error("useTooltipState must be used within a TooltipProvider");
  }
  return context;
};
var isVisibleTooltipState = function isVisibleTooltipState2(state) {
  return state.isVisible === true;
};
var Tooltip2 = function Tooltip3() {
  var state = useTooltipState();
  if (!isVisibleTooltipState(state)) {
    return null;
  }
  return react.createElement(TooltipWrapper, {
    position: state.position,
    anchor: state.anchor
  }, state.content);
};
var TooltipProvider = function TooltipProvider2(_ref) {
  var container = _ref.container, children2 = _ref.children;
  var _useTooltipHandlers = useTooltipHandlers(container), actions = _useTooltipHandlers.actions, state = _useTooltipHandlers.state;
  return react.createElement(TooltipActionsContext.Provider, {
    value: actions
  }, react.createElement(TooltipStateContext.Provider, {
    value: state
  }, children2));
};
function assignMergeValue(object2, key, value2) {
  if (value2 !== void 0 && !eq_1(object2[key], value2) || value2 === void 0 && !(key in object2)) {
    _baseAssignValue(object2, key, value2);
  }
}
var _assignMergeValue = assignMergeValue;
var _cloneBuffer = createCommonjsModule(function(module, exports) {
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer2 = moduleExports ? _root.Buffer : void 0, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
    buffer.copy(result);
    return result;
  }
  module.exports = cloneBuffer;
});
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}
var _cloneArrayBuffer = cloneArrayBuffer;
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var _cloneTypedArray = cloneTypedArray;
function copyArray(source, array5) {
  var index4 = -1, length = source.length;
  array5 || (array5 = Array(length));
  while (++index4 < length) {
    array5[index4] = source[index4];
  }
  return array5;
}
var _copyArray = copyArray;
var objectCreate = Object.create;
var baseCreate = function() {
  function object2() {
  }
  return function(proto2) {
    if (!isObject_1(proto2)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto2);
    }
    object2.prototype = proto2;
    var result = new object2();
    object2.prototype = void 0;
    return result;
  };
}();
var _baseCreate = baseCreate;
function initCloneObject(object2) {
  return typeof object2.constructor == "function" && !_isPrototype(object2) ? _baseCreate(_getPrototype(object2)) : {};
}
var _initCloneObject = initCloneObject;
function safeGet(object2, key) {
  if (key === "constructor" && typeof object2[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object2[key];
}
var _safeGet = safeGet;
function toPlainObject(value2) {
  return _copyObject(value2, keysIn_1(value2));
}
var toPlainObject_1 = toPlainObject;
function baseMergeDeep(object2, source, key, srcIndex, mergeFunc, customizer, stack3) {
  var objValue = _safeGet(object2, key), srcValue = _safeGet(source, key), stacked = stack3.get(srcValue);
  if (stacked) {
    _assignMergeValue(object2, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object2, source, stack3) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_1(srcValue), isBuff = !isArr && isBuffer_1(srcValue), isTyped = !isArr && !isBuff && isTypedArray_1(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_1(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_1(objValue)) {
        newValue = _copyArray(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = _cloneBuffer(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_1(srcValue) || isArguments_1(srcValue)) {
      newValue = objValue;
      if (isArguments_1(objValue)) {
        newValue = toPlainObject_1(objValue);
      } else if (!isObject_1(objValue) || isFunction_1(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack3.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack3);
    stack3["delete"](srcValue);
  }
  _assignMergeValue(object2, key, newValue);
}
var _baseMergeDeep = baseMergeDeep;
function baseMerge(object2, source, srcIndex, customizer, stack3) {
  if (object2 === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack3 || (stack3 = new _Stack());
    if (isObject_1(srcValue)) {
      _baseMergeDeep(object2, source, key, srcIndex, baseMerge, customizer, stack3);
    } else {
      var newValue = customizer ? customizer(_safeGet(object2, key), srcValue, key + "", object2, source, stack3) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      _assignMergeValue(object2, key, newValue);
    }
  }, keysIn_1);
}
var _baseMerge = baseMerge;
var merge2 = _createAssigner(function(object2, source, srcIndex) {
  _baseMerge(object2, source, srcIndex);
});
var merge_1 = merge2;
function set3(object2, path3, value2) {
  return object2 == null ? object2 : _baseSet(object2, path3, value2);
}
var set_1 = set3;
function formatDecimal4(x5) {
  return Math.abs(x5 = Math.round(x5)) >= 1e21 ? x5.toLocaleString("en").replace(/,/g, "") : x5.toString(10);
}
function formatDecimalParts4(x5, p3) {
  if ((i = (x5 = p3 ? x5.toExponential(p3 - 1) : x5.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x5.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x5.slice(i + 1)
  ];
}
function exponent5(x5) {
  return x5 = formatDecimalParts4(Math.abs(x5)), x5 ? x5[1] : NaN;
}
function formatGroup4(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t4 = [], j2 = 0, g2 = grouping[0], length = 0;
    while (i > 0 && g2 > 0) {
      if (length + g2 + 1 > width)
        g2 = Math.max(1, width - length);
      t4.push(value2.substring(i -= g2, i + g2));
      if ((length += g2 + 1) > width)
        break;
      g2 = grouping[j2 = (j2 + 1) % grouping.length];
    }
    return t4.reverse().join(thousands);
  };
}
function formatNumerals4(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re5 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier4(specifier) {
  if (!(match2 = re5.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier4({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier4.prototype = FormatSpecifier4.prototype;
function FormatSpecifier4(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier4.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim4(s4) {
  out:
    for (var n3 = s4.length, i = 1, i0 = -1, i1; i < n3; ++i) {
      switch (s4[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s4[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
}
var prefixExponent4;
function formatPrefixAuto4(x5, p3) {
  var d2 = formatDecimalParts4(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1], i = exponent6 - (prefixExponent4 = Math.max(-8, Math.min(8, Math.floor(exponent6 / 3))) * 3) + 1, n3 = coefficient.length;
  return i === n3 ? coefficient : i > n3 ? coefficient + new Array(i - n3 + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts4(x5, Math.max(0, p3 + i - 1))[0];
}
function formatRounded4(x5, p3) {
  var d2 = formatDecimalParts4(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1];
  return exponent6 < 0 ? "0." + new Array(-exponent6).join("0") + coefficient : coefficient.length > exponent6 + 1 ? coefficient.slice(0, exponent6 + 1) + "." + coefficient.slice(exponent6 + 1) : coefficient + new Array(exponent6 - coefficient.length + 2).join("0");
}
var formatTypes4 = {
  "%": function(x5, p3) {
    return (x5 * 100).toFixed(p3);
  },
  b: function(x5) {
    return Math.round(x5).toString(2);
  },
  c: function(x5) {
    return x5 + "";
  },
  d: formatDecimal4,
  e: function(x5, p3) {
    return x5.toExponential(p3);
  },
  f: function(x5, p3) {
    return x5.toFixed(p3);
  },
  g: function(x5, p3) {
    return x5.toPrecision(p3);
  },
  o: function(x5) {
    return Math.round(x5).toString(8);
  },
  p: function(x5, p3) {
    return formatRounded4(x5 * 100, p3);
  },
  r: formatRounded4,
  s: formatPrefixAuto4,
  X: function(x5) {
    return Math.round(x5).toString(16).toUpperCase();
  },
  x: function(x5) {
    return Math.round(x5).toString(16);
  }
};
function identity11(x5) {
  return x5;
}
var map6 = Array.prototype.map;
var prefixes$1 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale5(locale6) {
  var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity11 : formatGroup4(map6.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity11 : formatNumerals4(map6.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus2 = locale6.minus === void 0 ? "-" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier4(specifier);
    var fill = specifier.fill, align = specifier.align, sign5 = specifier.sign, symbol2 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma2 = specifier.comma, precision = specifier.precision, trim = specifier.trim, type3 = specifier.type;
    if (type3 === "n")
      comma2 = true, type3 = "g";
    else if (!formatTypes4[type3])
      precision === void 0 && (precision = 12), trim = true, type3 = "g";
    if (zero3 || fill === "0" && align === "=")
      zero3 = true, fill = "0", align = "=";
    var prefix3 = symbol2 === "$" ? currencyPrefix : symbol2 === "#" && /[boxX]/.test(type3) ? "0" + type3.toLowerCase() : "", suffix2 = symbol2 === "$" ? currencySuffix : /[%p]/.test(type3) ? percent : "";
    var formatType = formatTypes4[type3], maybeSuffix = /[defgprs%]/.test(type3);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type3) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format6(value2) {
      var valuePrefix = prefix3, valueSuffix = suffix2, i, n3, c5;
      if (type3 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim)
          value2 = formatTrim4(value2);
        if (valueNegative && +value2 === 0 && sign5 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign5 === "(" ? sign5 : minus2 : sign5 === "-" || sign5 === "(" ? "" : sign5) + valuePrefix;
        valueSuffix = (type3 === "s" ? prefixes$1[8 + prefixExponent4 / 3] : "") + valueSuffix + (valueNegative && sign5 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n3 = value2.length;
          while (++i < n3) {
            if (c5 = value2.charCodeAt(i), 48 > c5 || c5 > 57) {
              valueSuffix = (c5 === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma2 && !zero3)
        value2 = group(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding2 = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma2 && zero3)
        value2 = group(padding2 + value2, padding2.length ? width - valueSuffix.length : Infinity), padding2 = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding2;
          break;
        case "=":
          value2 = valuePrefix + padding2 + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding2.slice(0, length = padding2.length >> 1) + valuePrefix + value2 + valueSuffix + padding2.slice(length);
          break;
        default:
          value2 = padding2 + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format6.toString = function() {
      return specifier + "";
    };
    return format6;
  }
  function formatPrefix4(specifier, value2) {
    var f3 = newFormat((specifier = formatSpecifier4(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent5(value2) / 3))) * 3, k6 = Math.pow(10, -e3), prefix3 = prefixes$1[8 + e3 / 3];
    return function(value3) {
      return f3(k6 * value3) + prefix3;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix4
  };
}
var locale5;
var format5;
defaultLocale5({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});
function defaultLocale5(definition) {
  locale5 = formatLocale5(definition);
  format5 = locale5.format;
  locale5.formatPrefix;
  return locale5;
}
function localDate4(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date6.setFullYear(d2.y);
    return date6;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate4(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date6.setUTCFullYear(d2.y);
    return date6;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate4(y7, m3, d2) {
  return {y: y7, m: m3, d: d2, H: 0, M: 0, S: 0, L: 0};
}
function formatLocale$13(locale6) {
  var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
  var periodRe = formatRe4(locale_periods), periodLookup = formatLookup4(locale_periods), weekdayRe = formatRe4(locale_weekdays), weekdayLookup = formatLookup4(locale_weekdays), shortWeekdayRe = formatRe4(locale_shortWeekdays), shortWeekdayLookup = formatLookup4(locale_shortWeekdays), monthRe = formatRe4(locale_months), monthLookup = formatLookup4(locale_months), shortMonthRe = formatRe4(locale_shortMonths), shortMonthLookup = formatLookup4(locale_shortMonths);
  var formats = {
    a: formatShortWeekday,
    A: formatWeekday,
    b: formatShortMonth,
    B: formatMonth,
    c: null,
    d: formatDayOfMonth4,
    e: formatDayOfMonth4,
    f: formatMicroseconds4,
    g: formatYearISO4,
    G: formatFullYearISO4,
    H: formatHour244,
    I: formatHour124,
    j: formatDayOfYear4,
    L: formatMilliseconds4,
    m: formatMonthNumber4,
    M: formatMinutes4,
    p: formatPeriod,
    q: formatQuarter,
    Q: formatUnixTimestamp4,
    s: formatUnixTimestampSeconds4,
    S: formatSeconds4,
    u: formatWeekdayNumberMonday4,
    U: formatWeekNumberSunday4,
    V: formatWeekNumberISO4,
    w: formatWeekdayNumberSunday4,
    W: formatWeekNumberMonday4,
    x: null,
    X: null,
    y: formatYear5,
    Y: formatFullYear4,
    Z: formatZone4,
    "%": formatLiteralPercent4
  };
  var utcFormats = {
    a: formatUTCShortWeekday,
    A: formatUTCWeekday,
    b: formatUTCShortMonth,
    B: formatUTCMonth,
    c: null,
    d: formatUTCDayOfMonth4,
    e: formatUTCDayOfMonth4,
    f: formatUTCMicroseconds4,
    g: formatUTCYearISO4,
    G: formatUTCFullYearISO4,
    H: formatUTCHour244,
    I: formatUTCHour124,
    j: formatUTCDayOfYear4,
    L: formatUTCMilliseconds4,
    m: formatUTCMonthNumber4,
    M: formatUTCMinutes4,
    p: formatUTCPeriod,
    q: formatUTCQuarter,
    Q: formatUnixTimestamp4,
    s: formatUnixTimestampSeconds4,
    S: formatUTCSeconds4,
    u: formatUTCWeekdayNumberMonday4,
    U: formatUTCWeekNumberSunday4,
    V: formatUTCWeekNumberISO4,
    w: formatUTCWeekdayNumberSunday4,
    W: formatUTCWeekNumberMonday4,
    x: null,
    X: null,
    y: formatUTCYear4,
    Y: formatUTCFullYear4,
    Z: formatUTCZone4,
    "%": formatLiteralPercent4
  };
  var parses = {
    a: parseShortWeekday,
    A: parseWeekday,
    b: parseShortMonth,
    B: parseMonth,
    c: parseLocaleDateTime,
    d: parseDayOfMonth4,
    e: parseDayOfMonth4,
    f: parseMicroseconds4,
    g: parseYear4,
    G: parseFullYear4,
    H: parseHour244,
    I: parseHour244,
    j: parseDayOfYear4,
    L: parseMilliseconds4,
    m: parseMonthNumber4,
    M: parseMinutes4,
    p: parsePeriod,
    q: parseQuarter4,
    Q: parseUnixTimestamp4,
    s: parseUnixTimestampSeconds4,
    S: parseSeconds4,
    u: parseWeekdayNumberMonday4,
    U: parseWeekNumberSunday4,
    V: parseWeekNumberISO4,
    w: parseWeekdayNumberSunday4,
    W: parseWeekNumberMonday4,
    x: parseLocaleDate,
    X: parseLocaleTime,
    y: parseYear4,
    Y: parseFullYear4,
    Z: parseZone4,
    "%": parseLiteralPercent4
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date6) {
      var string2 = [], i = -1, j2 = 0, n3 = specifier.length, c5, pad6, format6;
      if (!(date6 instanceof Date))
        date6 = new Date(+date6);
      while (++i < n3) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j2, i));
          if ((pad6 = pads4[c5 = specifier.charAt(++i)]) != null)
            c5 = specifier.charAt(++i);
          else
            pad6 = c5 === "e" ? " " : "0";
          if (format6 = formats2[c5])
            c5 = format6(date6, pad6);
          string2.push(c5);
          j2 = i + 1;
        }
      }
      string2.push(specifier.slice(j2, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z4) {
    return function(string2) {
      var d2 = newDate4(1900, void 0, 1), i = parseSpecifier(d2, specifier, string2 += "", 0), week, day$1;
      if (i != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z4 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate4(newDate4(d2.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate4(newDate4(d2.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
          week = day.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day$1 = "Z" in d2 ? utcDate4(newDate4(d2.y, 0, 1)).getUTCDay() : localDate4(newDate4(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day$1 + 5) % 7 : d2.w + d2.U * 7 - (day$1 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate4(d2);
      }
      return localDate4(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j2) {
    var i = 0, n3 = specifier.length, m3 = string2.length, c5, parse2;
    while (i < n3) {
      if (j2 >= m3)
        return -1;
      c5 = specifier.charCodeAt(i++);
      if (c5 === 37) {
        c5 = specifier.charAt(i++);
        parse2 = parses[c5 in pads4 ? specifier.charAt(i++) : c5];
        if (!parse2 || (j2 = parse2(d2, string2, j2)) < 0)
          return -1;
      } else if (c5 != string2.charCodeAt(j2++)) {
        return -1;
      }
    }
    return j2;
  }
  function parsePeriod(d2, string2, i) {
    var n3 = periodRe.exec(string2.slice(i));
    return n3 ? (d2.p = periodLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i) {
    var n3 = shortWeekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = shortWeekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseWeekday(d2, string2, i) {
    var n3 = weekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = weekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i) {
    var n3 = shortMonthRe.exec(string2.slice(i));
    return n3 ? (d2.m = shortMonthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseMonth(d2, string2, i) {
    var n3 = monthRe.exec(string2.slice(i));
    return n3 ? (d2.m = monthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i) {
    return parseSpecifier(d2, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d2, string2, i) {
    return parseSpecifier(d2, locale_date, string2, i);
  }
  function parseLocaleTime(d2, string2, i) {
    return parseSpecifier(d2, locale_time, string2, i);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f3 = newFormat(specifier += "", formats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    parse: function(specifier) {
      var p3 = newParse(specifier += "", false);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    },
    utcFormat: function(specifier) {
      var f3 = newFormat(specifier += "", utcFormats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    utcParse: function(specifier) {
      var p3 = newParse(specifier += "", true);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    }
  };
}
var pads4 = {"-": "", _: " ", "0": "0"};
var numberRe4 = /^\s*\d+/;
var percentRe4 = /^%/;
var requoteRe4 = /[\\^$*+?|[\]().{}]/g;
function pad5(value2, fill, width) {
  var sign5 = value2 < 0 ? "-" : "", string2 = (sign5 ? -value2 : value2) + "", length = string2.length;
  return sign5 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote4(s4) {
  return s4.replace(requoteRe4, "\\$&");
}
function formatRe4(names) {
  return new RegExp("^(?:" + names.map(requote4).join("|") + ")", "i");
}
function formatLookup4(names) {
  var map7 = {}, i = -1, n3 = names.length;
  while (++i < n3)
    map7[names[i].toLowerCase()] = i;
  return map7;
}
function parseWeekdayNumberSunday4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 1));
  return n3 ? (d2.w = +n3[0], i + n3[0].length) : -1;
}
function parseWeekdayNumberMonday4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 1));
  return n3 ? (d2.u = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberSunday4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.U = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberISO4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.V = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberMonday4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.W = +n3[0], i + n3[0].length) : -1;
}
function parseFullYear4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 4));
  return n3 ? (d2.y = +n3[0], i + n3[0].length) : -1;
}
function parseYear4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.y = +n3[0] + (+n3[0] > 68 ? 1900 : 2e3), i + n3[0].length) : -1;
}
function parseZone4(d2, string2, i) {
  var n3 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n3 ? (d2.Z = n3[1] ? 0 : -(n3[2] + (n3[3] || "00")), i + n3[0].length) : -1;
}
function parseQuarter4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 1));
  return n3 ? (d2.q = n3[0] * 3 - 3, i + n3[0].length) : -1;
}
function parseMonthNumber4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.m = n3[0] - 1, i + n3[0].length) : -1;
}
function parseDayOfMonth4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseDayOfYear4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 3));
  return n3 ? (d2.m = 0, d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseHour244(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.H = +n3[0], i + n3[0].length) : -1;
}
function parseMinutes4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.M = +n3[0], i + n3[0].length) : -1;
}
function parseSeconds4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 2));
  return n3 ? (d2.S = +n3[0], i + n3[0].length) : -1;
}
function parseMilliseconds4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 3));
  return n3 ? (d2.L = +n3[0], i + n3[0].length) : -1;
}
function parseMicroseconds4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i, i + 6));
  return n3 ? (d2.L = Math.floor(n3[0] / 1e3), i + n3[0].length) : -1;
}
function parseLiteralPercent4(d2, string2, i) {
  var n3 = percentRe4.exec(string2.slice(i, i + 1));
  return n3 ? i + n3[0].length : -1;
}
function parseUnixTimestamp4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i));
  return n3 ? (d2.Q = +n3[0], i + n3[0].length) : -1;
}
function parseUnixTimestampSeconds4(d2, string2, i) {
  var n3 = numberRe4.exec(string2.slice(i));
  return n3 ? (d2.s = +n3[0], i + n3[0].length) : -1;
}
function formatDayOfMonth4(d2, p3) {
  return pad5(d2.getDate(), p3, 2);
}
function formatHour244(d2, p3) {
  return pad5(d2.getHours(), p3, 2);
}
function formatHour124(d2, p3) {
  return pad5(d2.getHours() % 12 || 12, p3, 2);
}
function formatDayOfYear4(d2, p3) {
  return pad5(1 + day.count(year(d2), d2), p3, 3);
}
function formatMilliseconds4(d2, p3) {
  return pad5(d2.getMilliseconds(), p3, 3);
}
function formatMicroseconds4(d2, p3) {
  return formatMilliseconds4(d2, p3) + "000";
}
function formatMonthNumber4(d2, p3) {
  return pad5(d2.getMonth() + 1, p3, 2);
}
function formatMinutes4(d2, p3) {
  return pad5(d2.getMinutes(), p3, 2);
}
function formatSeconds4(d2, p3) {
  return pad5(d2.getSeconds(), p3, 2);
}
function formatWeekdayNumberMonday4(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday4(d2, p3) {
  return pad5(sunday.count(year(d2) - 1, d2), p3, 2);
}
function dISO4(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO4(d2, p3) {
  d2 = dISO4(d2);
  return pad5(thursday.count(year(d2), d2) + (year(d2).getDay() === 4), p3, 2);
}
function formatWeekdayNumberSunday4(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday4(d2, p3) {
  return pad5(monday.count(year(d2) - 1, d2), p3, 2);
}
function formatYear5(d2, p3) {
  return pad5(d2.getFullYear() % 100, p3, 2);
}
function formatYearISO4(d2, p3) {
  d2 = dISO4(d2);
  return pad5(d2.getFullYear() % 100, p3, 2);
}
function formatFullYear4(d2, p3) {
  return pad5(d2.getFullYear() % 1e4, p3, 4);
}
function formatFullYearISO4(d2, p3) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad5(d2.getFullYear() % 1e4, p3, 4);
}
function formatZone4(d2) {
  var z3 = d2.getTimezoneOffset();
  return (z3 > 0 ? "-" : (z3 *= -1, "+")) + pad5(z3 / 60 | 0, "0", 2) + pad5(z3 % 60, "0", 2);
}
function formatUTCDayOfMonth4(d2, p3) {
  return pad5(d2.getUTCDate(), p3, 2);
}
function formatUTCHour244(d2, p3) {
  return pad5(d2.getUTCHours(), p3, 2);
}
function formatUTCHour124(d2, p3) {
  return pad5(d2.getUTCHours() % 12 || 12, p3, 2);
}
function formatUTCDayOfYear4(d2, p3) {
  return pad5(1 + utcDay.count(utcYear(d2), d2), p3, 3);
}
function formatUTCMilliseconds4(d2, p3) {
  return pad5(d2.getUTCMilliseconds(), p3, 3);
}
function formatUTCMicroseconds4(d2, p3) {
  return formatUTCMilliseconds4(d2, p3) + "000";
}
function formatUTCMonthNumber4(d2, p3) {
  return pad5(d2.getUTCMonth() + 1, p3, 2);
}
function formatUTCMinutes4(d2, p3) {
  return pad5(d2.getUTCMinutes(), p3, 2);
}
function formatUTCSeconds4(d2, p3) {
  return pad5(d2.getUTCSeconds(), p3, 2);
}
function formatUTCWeekdayNumberMonday4(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday4(d2, p3) {
  return pad5(utcSunday.count(utcYear(d2) - 1, d2), p3, 2);
}
function UTCdISO4(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO4(d2, p3) {
  d2 = UTCdISO4(d2);
  return pad5(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p3, 2);
}
function formatUTCWeekdayNumberSunday4(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday4(d2, p3) {
  return pad5(utcMonday.count(utcYear(d2) - 1, d2), p3, 2);
}
function formatUTCYear4(d2, p3) {
  return pad5(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCYearISO4(d2, p3) {
  d2 = UTCdISO4(d2);
  return pad5(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCFullYear4(d2, p3) {
  return pad5(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCFullYearISO4(d2, p3) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad5(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCZone4() {
  return "+0000";
}
function formatLiteralPercent4() {
  return "%";
}
function formatUnixTimestamp4(d2) {
  return +d2;
}
function formatUnixTimestampSeconds4(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale$13;
var timeFormat4;
defaultLocale$13({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale$13(definition) {
  locale$13 = formatLocale$13(definition);
  timeFormat4 = locale$13.format;
  locale$13.parse;
  locale$13.utcFormat;
  locale$13.utcParse;
  return locale$13;
}
var interopRequireDefault = createCommonjsModule(function(module) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  module.exports = _interopRequireDefault;
});
var _extends_1 = createCommonjsModule(function(module) {
  function _extends13() {
    module.exports = _extends13 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends13.apply(this, arguments);
  }
  module.exports = _extends13;
});
var getDisplayName_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var getDisplayName5 = function getDisplayName6(Component) {
    if (typeof Component === "string") {
      return Component;
    }
    if (!Component) {
      return void 0;
    }
    return Component.displayName || Component.name || "Component";
  };
  var _default = getDisplayName5;
  exports.default = _default;
});
var wrapDisplayName_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _getDisplayName = interopRequireDefault(getDisplayName_1);
  var wrapDisplayName = function wrapDisplayName2(BaseComponent, hocName) {
    return hocName + "(" + (0, _getDisplayName.default)(BaseComponent) + ")";
  };
  var _default = wrapDisplayName;
  exports.default = _default;
});
var setStatic_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var setStatic = function setStatic2(key, value2) {
    return function(BaseComponent) {
      BaseComponent[key] = value2;
      return BaseComponent;
    };
  };
  var _default = setStatic;
  exports.default = _default;
});
var setDisplayName_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _setStatic = interopRequireDefault(setStatic_1);
  var setDisplayName = function setDisplayName2(displayName) {
    return (0, _setStatic.default)("displayName", displayName);
  };
  var _default = setDisplayName;
  exports.default = _default;
});
var mapProps_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  interopRequireDefault(setDisplayName_1);
  interopRequireDefault(wrapDisplayName_1);
  var mapProps = function mapProps2(propsMapper) {
    return function(BaseComponent) {
      var factory = (0, react.createFactory)(BaseComponent);
      var MapProps = function MapProps2(props) {
        return factory(propsMapper(props));
      };
      return MapProps;
    };
  };
  var _default = mapProps;
  exports.default = _default;
});
createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _extends22 = interopRequireDefault(_extends_1);
  interopRequireDefault(wrapDisplayName_1);
  interopRequireDefault(setDisplayName_1);
  var _mapProps = interopRequireDefault(mapProps_1);
  var withProps = function withProps2(input) {
    var hoc = (0, _mapProps.default)(function(props) {
      return (0, _extends22.default)({}, props, typeof input === "function" ? input(props) : input);
    });
    return hoc;
  };
  var _default = withProps;
  exports.default = _default;
});
createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var compose4 = function compose5() {
    for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }
    return funcs.reduce(function(a3, b10) {
      return function() {
        return a3(b10.apply(void 0, arguments));
      };
    }, function(arg) {
      return arg;
    });
  };
  var _default = compose4;
  exports.default = _default;
});
createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _setStatic = interopRequireDefault(setStatic_1);
  var setPropTypes = function setPropTypes2(propTypes3) {
    return (0, _setStatic.default)("propTypes", propTypes3);
  };
  var _default = setPropTypes;
  exports.default = _default;
});
createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  interopRequireDefault(setDisplayName_1);
  interopRequireDefault(wrapDisplayName_1);
  var defaultProps4 = function defaultProps5(props) {
    return function(BaseComponent) {
      var factory = (0, react.createFactory)(BaseComponent);
      var DefaultProps = function DefaultProps2(ownerProps) {
        return factory(ownerProps);
      };
      DefaultProps.defaultProps = props;
      return DefaultProps;
    };
  };
  var _default = defaultProps4;
  exports.default = _default;
});
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
var inheritsLoose = _inheritsLoose;
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;
function polyfill2(Component) {
  var prototype = Component.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component.displayName || Component.name;
    var newApiName = typeof Component.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
  }
  if (typeof Component.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
    }
    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component;
}
var reactLifecyclesCompat_es = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  polyfill: polyfill2
});
var pick_12 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var pick2 = function pick3(obj, keys4) {
    var result = {};
    for (var i = 0; i < keys4.length; i++) {
      var key = keys4[i];
      if (obj.hasOwnProperty(key)) {
        result[key] = obj[key];
      }
    }
    return result;
  };
  var _default = pick2;
  exports.default = _default;
});
var hasOwnProperty7 = Object.prototype.hasOwnProperty;
function is$1(x5, y7) {
  if (x5 === y7) {
    return x5 !== 0 || y7 !== 0 || 1 / x5 === 1 / y7;
  } else {
    return x5 !== x5 && y7 !== y7;
  }
}
function shallowEqual2(objA, objB) {
  if (is$1(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty7.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }
  return true;
}
var shallowEqual_1 = shallowEqual2;
var shallowEqual$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _shallowEqual = interopRequireDefault(shallowEqual_1);
  var _default = _shallowEqual.default;
  exports.default = _default;
});
createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _extends22 = interopRequireDefault(_extends_1);
  var _inheritsLoose22 = interopRequireDefault(inheritsLoose);
  var _pick = interopRequireDefault(pick_12);
  var _shallowEqual = interopRequireDefault(shallowEqual$1);
  interopRequireDefault(setDisplayName_1);
  interopRequireDefault(wrapDisplayName_1);
  var withPropsOnChange = function withPropsOnChange2(shouldMapOrKeys, propsMapper) {
    return function(BaseComponent) {
      var factory = (0, react.createFactory)(BaseComponent);
      var shouldMap = typeof shouldMapOrKeys === "function" ? shouldMapOrKeys : function(props, nextProps) {
        return !(0, _shallowEqual.default)((0, _pick.default)(props, shouldMapOrKeys), (0, _pick.default)(nextProps, shouldMapOrKeys));
      };
      var WithPropsOnChange = /* @__PURE__ */ function(_Component) {
        (0, _inheritsLoose22.default)(WithPropsOnChange2, _Component);
        function WithPropsOnChange2() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.state = {
            computedProps: propsMapper(_this.props),
            prevProps: _this.props
          };
          return _this;
        }
        WithPropsOnChange2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
          if (shouldMap(prevState.prevProps, nextProps)) {
            return {
              computedProps: propsMapper(nextProps),
              prevProps: nextProps
            };
          }
          return {
            prevProps: nextProps
          };
        };
        var _proto = WithPropsOnChange2.prototype;
        _proto.render = function render2() {
          return factory((0, _extends22.default)({}, this.props, this.state.computedProps));
        };
        return WithPropsOnChange2;
      }(react.Component);
      (0, reactLifecyclesCompat_es.polyfill)(WithPropsOnChange);
      return WithPropsOnChange;
    };
  };
  var _default = withPropsOnChange;
  exports.default = _default;
});
function _defineProperty$14(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys$12(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread2$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$12(Object(source), true).forEach(function(key) {
        _defineProperty$14(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$12(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var textProps = {
  fill: propTypes.string,
  fontSize: propTypes.number,
  fontFamily: propTypes.string
};
var axisThemePropType = propTypes.shape({
  domain: propTypes.shape({
    line: propTypes.shape({
      stroke: propTypes.string.isRequired,
      strokeWidth: propTypes.number.isRequired,
      strokeDasharray: propTypes.string
    }).isRequired
  }).isRequired,
  ticks: propTypes.shape({
    line: propTypes.shape({
      stroke: propTypes.string.isRequired,
      strokeWidth: propTypes.number.isRequired,
      strokeDasharray: propTypes.string
    }).isRequired,
    text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
  }).isRequired,
  legend: propTypes.shape({
    text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
  }).isRequired
});
var gridThemePropType = propTypes.shape({
  line: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    strokeDasharray: propTypes.string
  }).isRequired
});
var legendsThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
});
var labelsThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
});
var dotsThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
});
var markersThemePropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$1({}, textProps)).isRequired
});
var crosshairPropType = propTypes.shape({
  line: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    strokeDasharray: propTypes.string
  }).isRequired
});
var annotationsPropType = propTypes.shape({
  text: propTypes.shape(_objectSpread2$1(_objectSpread2$1({}, textProps), {}, {
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  })).isRequired,
  link: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired,
  outline: propTypes.shape({
    stroke: propTypes.string.isRequired,
    strokeWidth: propTypes.number.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired,
  symbol: propTypes.shape({
    fill: propTypes.string.isRequired,
    outlineWidth: propTypes.number.isRequired,
    outlineColor: propTypes.string.isRequired
  }).isRequired
});
propTypes.shape({
  background: propTypes.string.isRequired,
  fontFamily: propTypes.string.isRequired,
  fontSize: propTypes.number.isRequired,
  textColor: propTypes.string.isRequired,
  axis: axisThemePropType.isRequired,
  grid: gridThemePropType.isRequired,
  legends: legendsThemePropType.isRequired,
  labels: labelsThemePropType.isRequired,
  dots: dotsThemePropType.isRequired,
  markers: markersThemePropType,
  crosshair: crosshairPropType.isRequired,
  annotations: annotationsPropType.isRequired
});
var defaultTheme = {
  background: "transparent",
  fontFamily: "sans-serif",
  fontSize: 11,
  textColor: "#333333",
  axis: {
    domain: {
      line: {
        stroke: "transparent",
        strokeWidth: 1
      }
    },
    ticks: {
      line: {
        stroke: "#777777",
        strokeWidth: 1
      },
      text: {}
    },
    legend: {
      text: {
        fontSize: 12
      }
    }
  },
  grid: {
    line: {
      stroke: "#dddddd",
      strokeWidth: 1
    }
  },
  legends: {
    text: {}
  },
  labels: {
    text: {}
  },
  markers: {
    lineColor: "#000000",
    lineStrokeWidth: 1,
    text: {}
  },
  dots: {
    text: {}
  },
  tooltip: {
    container: {
      background: "white",
      color: "inherit",
      fontSize: "inherit",
      borderRadius: "2px",
      boxShadow: "0 1px 2px rgba(0, 0, 0, 0.25)",
      padding: "5px 9px"
    },
    basic: {
      whiteSpace: "pre",
      display: "flex",
      alignItems: "center"
    },
    chip: {
      marginRight: 7
    },
    table: {},
    tableCell: {
      padding: "3px 5px"
    }
  },
  crosshair: {
    line: {
      stroke: "#000000",
      strokeWidth: 1,
      strokeOpacity: 0.75,
      strokeDasharray: "6 6"
    }
  },
  annotations: {
    text: {
      fontSize: 13,
      outlineWidth: 2,
      outlineColor: "#ffffff"
    },
    link: {
      stroke: "#000000",
      strokeWidth: 1,
      outlineWidth: 2,
      outlineColor: "#ffffff"
    },
    outline: {
      fill: "none",
      stroke: "#000000",
      strokeWidth: 2,
      outlineWidth: 2,
      outlineColor: "#ffffff"
    },
    symbol: {
      fill: "#000000",
      outlineWidth: 2,
      outlineColor: "#ffffff"
    }
  }
};
var fontProps = ["axis.ticks.text", "axis.legend.text", "legends.text", "labels.text", "dots.text", "markers.text", "annotations.text"];
var extendDefaultTheme = function extendDefaultTheme2(defaultTheme2, customTheme) {
  var theme = merge_1({}, defaultTheme2, customTheme);
  fontProps.forEach(function(prop) {
    if (get_1(theme, "".concat(prop, ".fontFamily")) === void 0) {
      set_1(theme, "".concat(prop, ".fontFamily"), theme.fontFamily);
    }
    if (get_1(theme, "".concat(prop, ".fontSize")) === void 0) {
      set_1(theme, "".concat(prop, ".fontSize"), theme.fontSize);
    }
    if (get_1(theme, "".concat(prop, ".fill")) === void 0) {
      set_1(theme, "".concat(prop, ".fill"), theme.textColor);
    }
  });
  return theme;
};
var motionConfigContext = react.createContext();
var MotionConfigProvider = function MotionConfigProvider2(_ref) {
  var children2 = _ref.children, animate = _ref.animate, stiffness = _ref.stiffness, damping = _ref.damping, config$1 = _ref.config;
  var value2 = react.useMemo(function() {
    var reactSpringConfig = isString_1(config$1) ? config3[config$1] : config$1;
    return {
      animate,
      springConfig: {
        stiffness,
        damping
      },
      config: reactSpringConfig
    };
  }, [animate, stiffness, damping, config$1]);
  return react.createElement(motionConfigContext.Provider, {
    value: value2
  }, children2);
};
({
  animate: propTypes.bool,
  motionStiffness: propTypes.number,
  motionDamping: propTypes.number,
  motionConfig: propTypes.oneOfType([propTypes.oneOf(Object.keys(config3)), propTypes.shape({
    mass: propTypes.number,
    tension: propTypes.number,
    friction: propTypes.number,
    clamp: propTypes.bool,
    precision: propTypes.number,
    velocity: propTypes.number,
    duration: propTypes.number,
    easing: propTypes.func
  })])
});
var motionDefaultProps = {
  animate: true,
  stiffness: 90,
  damping: 15,
  config: "default"
};
MotionConfigProvider.defaultProps = motionDefaultProps;
var useMotionConfig = function useMotionConfig2() {
  return react.useContext(motionConfigContext);
};
var quantizeColorScales = {
  nivo: ["#d76445", "#f47560", "#e8c1a0", "#97e3d5", "#61cdbb", "#00b0a7"],
  BrBG: last_1(scheme),
  PRGn: last_1(scheme$1),
  PiYG: last_1(scheme$2),
  PuOr: last_1(scheme$3),
  RdBu: last_1(scheme$4),
  RdGy: last_1(scheme$5),
  RdYlBu: last_1(scheme$6),
  RdYlGn: last_1(scheme$7),
  spectral: last_1(scheme$8),
  blues: last_1(scheme$l),
  greens: last_1(scheme$m),
  greys: last_1(scheme$n),
  oranges: last_1(scheme$q),
  purples: last_1(scheme$o),
  reds: last_1(scheme$p),
  BuGn: last_1(scheme$9),
  BuPu: last_1(scheme$a),
  GnBu: last_1(scheme$b),
  OrRd: last_1(scheme$c),
  PuBuGn: last_1(scheme$d),
  PuBu: last_1(scheme$e),
  PuRd: last_1(scheme$f),
  RdPu: last_1(scheme$g),
  YlGnBu: last_1(scheme$h),
  YlGn: last_1(scheme$i),
  YlOrBr: last_1(scheme$j),
  YlOrRd: last_1(scheme$k)
};
var quantizeColorScalesKeys = Object.keys(quantizeColorScales);
var colorSchemes = {
  nivo: ["#e8c1a0", "#f47560", "#f1e15b", "#e8a838", "#61cdbb", "#97e3d5"],
  category10: schemeCategory10,
  accent: schemeAccent,
  dark2: schemeDark2,
  paired: schemePaired,
  pastel1: schemePastel1,
  pastel2: schemePastel2,
  set1: schemeSet1,
  set2: schemeSet2,
  set3: schemeSet3,
  brown_blueGreen: last_1(scheme),
  purpleRed_green: last_1(scheme$1),
  pink_yellowGreen: last_1(scheme$2),
  purple_orange: last_1(scheme$3),
  red_blue: last_1(scheme$4),
  red_grey: last_1(scheme$5),
  red_yellow_blue: last_1(scheme$6),
  red_yellow_green: last_1(scheme$7),
  spectral: last_1(scheme$8),
  blues: last_1(scheme$l),
  greens: last_1(scheme$m),
  greys: last_1(scheme$n),
  oranges: last_1(scheme$q),
  purples: last_1(scheme$o),
  reds: last_1(scheme$p),
  blue_green: last_1(scheme$9),
  blue_purple: last_1(scheme$a),
  green_blue: last_1(scheme$b),
  orange_red: last_1(scheme$c),
  purple_blue_green: last_1(scheme$d),
  purple_blue: last_1(scheme$e),
  purple_red: last_1(scheme$f),
  red_purple: last_1(scheme$g),
  yellow_green_blue: last_1(scheme$h),
  yellow_green: last_1(scheme$i),
  yellow_orange_brown: last_1(scheme$j),
  yellow_orange_red: last_1(scheme$k)
};
var colorInterpolators = {
  brown_blueGreen: interpolateBrBG,
  purpleRed_green: interpolatePRGn,
  pink_yellowGreen: interpolatePiYG,
  purple_orange: interpolatePuOr,
  red_blue: interpolateRdBu,
  red_grey: interpolateRdGy,
  red_yellow_blue: interpolateRdYlBu,
  red_yellow_green: interpolateRdYlGn,
  spectral: interpolateSpectral,
  blues: interpolateBlues,
  greens: interpolateGreens,
  greys: interpolateGreys,
  oranges: interpolateOranges,
  purples: interpolatePurples,
  reds: interpolateReds,
  viridis: interpolateViridis,
  inferno,
  magma,
  plasma,
  warm,
  cool,
  cubehelixDefault: interpolateCubehelixDefault,
  blue_green: interpolateBuGn,
  blue_purple: interpolateBuPu,
  green_blue: interpolateGnBu,
  orange_red: interpolateOrRd,
  purple_blue_green: interpolatePuBuGn,
  purple_blue: interpolatePuBu,
  purple_red: interpolatePuRd,
  red_purple: interpolateRdPu,
  yellow_green_blue: interpolateYlGnBu,
  yellow_green: interpolateYlGn,
  yellow_orange_brown: interpolateYlOrBr,
  yellow_orange_red: interpolateYlOrRd,
  rainbow: interpolateRainbow,
  sinebow: interpolateSinebow
};
var getColorScale2 = function getColorScale3(colors5, dataScale) {
  if (isString_1(colors5)) {
    var scheme2 = colorSchemes[colors5];
    if (scheme2 !== void 0) {
      var scale = ordinal(scheme2);
      scale.type = "ordinal";
      return scale;
    }
    if (dataScale !== void 0 && colors5.indexOf("seq:") === 0) {
      var interpolator = colorInterpolators[colors5.slice(4)];
      if (interpolator !== void 0) {
        var _scale = sequential(interpolator).domain(dataScale.domain());
        _scale.type = "sequential";
        return _scale;
      }
    }
  }
  if (isArray_1(colors5)) {
    var _scale2 = ordinal(colors5);
    _scale2.type = "ordinal";
    return _scale2;
  }
  return function() {
    return colors5;
  };
};
propTypes.oneOfType([propTypes.oneOf(quantizeColorScalesKeys), propTypes.func, propTypes.arrayOf(propTypes.string)]);
var curvePropMapping = {
  basis: curveBasis,
  basisClosed: curveBasisClosed,
  basisOpen: curveBasisOpen,
  bundle: curveBundle,
  cardinal: curveCardinal,
  cardinalClosed: curveCardinalClosed,
  cardinalOpen: curveCardinalOpen,
  catmullRom: curveCatmullRom,
  catmullRomClosed: curveCatmullRomClosed,
  catmullRomOpen: curveCatmullRomOpen,
  linear: curveLinear,
  linearClosed: curveLinearClosed,
  monotoneX,
  monotoneY,
  natural: curveNatural,
  step: curveStep,
  stepAfter,
  stepBefore
};
var curvePropKeys = Object.keys(curvePropMapping);
propTypes.oneOf(curvePropKeys);
var closedCurvePropKeys = curvePropKeys.filter(function(c5) {
  return c5.endsWith("Closed");
});
propTypes.oneOf(closedCurvePropKeys);
var areaCurvePropKeys = without_1(curvePropKeys, "bundle", "basisClosed", "basisOpen", "cardinalClosed", "cardinalOpen", "catmullRomClosed", "catmullRomOpen", "linearClosed");
propTypes.oneOf(areaCurvePropKeys);
var lineCurvePropKeys = without_1(curvePropKeys, "bundle", "basisClosed", "basisOpen", "cardinalClosed", "cardinalOpen", "catmullRomClosed", "catmullRomOpen", "linearClosed");
propTypes.oneOf(lineCurvePropKeys);
({
  defs: propTypes.arrayOf(propTypes.shape({
    id: propTypes.string.isRequired
  })).isRequired,
  fill: propTypes.arrayOf(propTypes.shape({
    id: propTypes.string.isRequired,
    match: propTypes.oneOfType([propTypes.oneOf(["*"]), propTypes.object, propTypes.func]).isRequired
  })).isRequired
});
var stackOrderPropMapping = {
  ascending: stackOrderAscending,
  descending: stackOrderDescending,
  insideOut: stackOrderInsideOut,
  none: stackOrderNone,
  reverse: stackOrderReverse
};
var stackOrderPropKeys = Object.keys(stackOrderPropMapping);
propTypes.oneOf(stackOrderPropKeys);
var stackOffsetPropMapping = {
  expand: stackOffsetExpand,
  diverging: stackOffsetDiverging,
  none: stackOffsetNone,
  silhouette: stackOffsetSilhouette,
  wiggle: stackOffsetWiggle
};
var stackOffsetPropKeys = Object.keys(stackOffsetPropMapping);
propTypes.oneOf(stackOffsetPropKeys);
var treeMapTilePropMapping = {
  binary: treemapBinary,
  dice: treemapDice2,
  slice: treemapSlice2,
  sliceDice: treemapSliceDice,
  squarify: treemapSquarify,
  resquarify: treemapResquarify
};
var treeMapTilePropKeys = Object.keys(treeMapTilePropMapping);
propTypes.oneOf(treeMapTilePropKeys);
propTypes.shape({
  top: propTypes.number,
  right: propTypes.number,
  bottom: propTypes.number,
  left: propTypes.number
}).isRequired;
var blendModes = ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"];
propTypes.oneOf(blendModes);
ordinal(schemeSet3);
var defaultMargin2 = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var useDimensions = function useDimensions2(width, height) {
  var partialMargin = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return react.useMemo(function() {
    var margin = _objectSpread2$1(_objectSpread2$1({}, defaultMargin2), partialMargin);
    return {
      margin,
      innerWidth: width - margin.left - margin.right,
      innerHeight: height - margin.top - margin.bottom,
      outerWidth: width,
      outerHeight: height
    };
  }, [width, height, partialMargin.top, partialMargin.right, partialMargin.bottom, partialMargin.left]);
};
function _arrayWithHoles$12(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit$12(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayLikeToArray$12(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _unsupportedIterableToArray$12(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$12(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(n3);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$12(o, minLen);
}
function _nonIterableRest$12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray$13(arr, i) {
  return _arrayWithHoles$12(arr) || _iterableToArrayLimit$12(arr, i) || _unsupportedIterableToArray$12(arr, i) || _nonIterableRest$12();
}
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result = -1;
    arr.some(function(entry, index4) {
      if (entry[0] === key) {
        result = index4;
        return true;
      }
      return false;
    });
    return result;
  }
  return function() {
    function class_1() {
      this.__entries__ = [];
    }
    Object.defineProperty(class_1.prototype, "size", {
      get: function() {
        return this.__entries__.length;
      },
      enumerable: true,
      configurable: true
    });
    class_1.prototype.get = function(key) {
      var index4 = getIndex(this.__entries__, key);
      var entry = this.__entries__[index4];
      return entry && entry[1];
    };
    class_1.prototype.set = function(key, value2) {
      var index4 = getIndex(this.__entries__, key);
      if (~index4) {
        this.__entries__[index4][1] = value2;
      } else {
        this.__entries__.push([key, value2]);
      }
    };
    class_1.prototype.delete = function(key) {
      var entries = this.__entries__;
      var index4 = getIndex(entries, key);
      if (~index4) {
        entries.splice(index4, 1);
      }
    };
    class_1.prototype.has = function(key) {
      return !!~getIndex(this.__entries__, key);
    };
    class_1.prototype.clear = function() {
      this.__entries__.splice(0);
    };
    class_1.prototype.forEach = function(callback, ctx2) {
      if (ctx2 === void 0) {
        ctx2 = null;
      }
      for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
        var entry = _a[_i];
        callback.call(ctx2, entry[1], entry[0]);
      }
    };
    return class_1;
  }();
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle2(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = function() {
  function ResizeObserverController2() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle2(this.refresh.bind(this), REFRESH_DELAY);
  }
  ResizeObserverController2.prototype.addObserver = function(observer) {
    if (!~this.observers_.indexOf(observer)) {
      this.observers_.push(observer);
    }
    if (!this.connected_) {
      this.connect_();
    }
  };
  ResizeObserverController2.prototype.removeObserver = function(observer) {
    var observers2 = this.observers_;
    var index4 = observers2.indexOf(observer);
    if (~index4) {
      observers2.splice(index4, 1);
    }
    if (!observers2.length && this.connected_) {
      this.disconnect_();
    }
  };
  ResizeObserverController2.prototype.refresh = function() {
    var changesDetected = this.updateObservers_();
    if (changesDetected) {
      this.refresh();
    }
  };
  ResizeObserverController2.prototype.updateObservers_ = function() {
    var activeObservers = this.observers_.filter(function(observer) {
      return observer.gatherActive(), observer.hasActive();
    });
    activeObservers.forEach(function(observer) {
      return observer.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  ResizeObserverController2.prototype.connect_ = function() {
    if (!isBrowser || this.connected_) {
      return;
    }
    document.addEventListener("transitionend", this.onTransitionEnd_);
    window.addEventListener("resize", this.refresh);
    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener("DOMSubtreeModified", this.refresh);
      this.mutationEventsAdded_ = true;
    }
    this.connected_ = true;
  };
  ResizeObserverController2.prototype.disconnect_ = function() {
    if (!isBrowser || !this.connected_) {
      return;
    }
    document.removeEventListener("transitionend", this.onTransitionEnd_);
    window.removeEventListener("resize", this.refresh);
    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }
    if (this.mutationEventsAdded_) {
      document.removeEventListener("DOMSubtreeModified", this.refresh);
    }
    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
    var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
    var isReflowProperty = transitionKeys.some(function(key) {
      return !!~propertyName.indexOf(key);
    });
    if (isReflowProperty) {
      this.refresh();
    }
  };
  ResizeObserverController2.getInstance = function() {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController2();
    }
    return this.instance_;
  };
  ResizeObserverController2.instance_ = null;
  return ResizeObserverController2;
}();
var defineConfigurable = function(target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value2) {
  return parseFloat(value2) || 0;
}
function getBordersSize(styles2) {
  var positions2 = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions2[_i - 1] = arguments[_i];
  }
  return positions2.reduce(function(size, position) {
    var value2 = styles2["border-" + position + "-width"];
    return size + toFloat(value2);
  }, 0);
}
function getPaddings(styles2) {
  var positions2 = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions2; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value2 = styles2["padding-" + position];
    paddings[position] = toFloat(value2);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles2 = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles2);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles2.width), height = toFloat(styles2.height);
  if (styles2.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles2, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles2, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
  var x5 = _a.x, y7 = _a.y, width = _a.width, height = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x: x5,
    y: y7,
    width,
    height,
    top: y7,
    right: x5 + width,
    bottom: height + y7,
    left: x5
  });
  return rect;
}
function createRectInit(x5, y7, width, height) {
  return {x: x5, y: y7, width, height};
}
var ResizeObservation = function() {
  function ResizeObservation2(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target;
  }
  ResizeObservation2.prototype.isActive = function() {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  ResizeObservation2.prototype.broadcastRect = function() {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };
  return ResizeObservation2;
}();
var ResizeObserverEntry = function() {
  function ResizeObserverEntry2(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);
    defineConfigurable(this, {target, contentRect});
  }
  return ResizeObserverEntry2;
}();
var ResizeObserverSPI = function() {
  function ResizeObserverSPI2(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();
    if (typeof callback !== "function") {
      throw new TypeError("The callback provided as parameter 1 is not a function.");
    }
    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  ResizeObserverSPI2.prototype.observe = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (observations.has(target)) {
      return;
    }
    observations.set(target, new ResizeObservation(target));
    this.controller_.addObserver(this);
    this.controller_.refresh();
  };
  ResizeObserverSPI2.prototype.unobserve = function(target) {
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    if (typeof Element === "undefined" || !(Element instanceof Object)) {
      return;
    }
    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }
    var observations = this.observations_;
    if (!observations.has(target)) {
      return;
    }
    observations.delete(target);
    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  ResizeObserverSPI2.prototype.disconnect = function() {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  ResizeObserverSPI2.prototype.gatherActive = function() {
    var _this = this;
    this.clearActive();
    this.observations_.forEach(function(observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  ResizeObserverSPI2.prototype.broadcastActive = function() {
    if (!this.hasActive()) {
      return;
    }
    var ctx2 = this.callbackCtx_;
    var entries = this.activeObservations_.map(function(observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx2, entries, ctx2);
    this.clearActive();
  };
  ResizeObserverSPI2.prototype.clearActive = function() {
    this.activeObservations_.splice(0);
  };
  ResizeObserverSPI2.prototype.hasActive = function() {
    return this.activeObservations_.length > 0;
  };
  return ResizeObserverSPI2;
}();
var observers = typeof WeakMap !== "undefined" ? new WeakMap() : new MapShim();
var ResizeObserver = function() {
  function ResizeObserver2(callback) {
    if (!(this instanceof ResizeObserver2)) {
      throw new TypeError("Cannot call a class as a function.");
    }
    if (!arguments.length) {
      throw new TypeError("1 argument required, but only 0 present.");
    }
    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer);
  }
  return ResizeObserver2;
}();
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method) {
  ResizeObserver.prototype[method] = function() {
    var _a;
    return (_a = observers.get(this))[method].apply(_a, arguments);
  };
});
var index2 = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver;
}();
var useMeasure = function useMeasure2() {
  var measureRef = react.useRef(null);
  var _useState = react.useState({
    left: 0,
    top: 0,
    width: 0,
    height: 0
  }), _useState2 = _slicedToArray$13(_useState, 2), bounds = _useState2[0], setBounds = _useState2[1];
  var _useState3 = react.useState(function() {
    return new index2(function(_ref) {
      var _ref2 = _slicedToArray$13(_ref, 1), entry = _ref2[0];
      return setBounds(entry.contentRect);
    });
  }), _useState4 = _slicedToArray$13(_useState3, 1), observer = _useState4[0];
  react.useEffect(function() {
    if (measureRef.current) {
      observer.observe(measureRef.current);
    }
    return function() {
      return observer.disconnect();
    };
  }, []);
  return [measureRef, bounds];
};
var usePartialTheme = function usePartialTheme2(partialTheme) {
  return react.useMemo(function() {
    return extendDefaultTheme(defaultTheme, partialTheme);
  }, [partialTheme]);
};
var getValueFormatter = function getValueFormatter2(format$12) {
  if (typeof format$12 === "function")
    return format$12;
  if (typeof format$12 === "string") {
    if (format$12.indexOf("time:") === 0) {
      return timeFormat4(format$12.slice("5"));
    }
    return format5(format$12);
  }
  return function(v3) {
    return v3;
  };
};
var useValueFormatter = function useValueFormatter2(format6) {
  return react.useMemo(function() {
    return getValueFormatter(format6);
  }, [format6]);
};
var themeContext = react.createContext();
var defaultPartialTheme = {};
var ThemeProvider = function ThemeProvider2(_ref) {
  var _ref$theme = _ref.theme, partialTheme = _ref$theme === void 0 ? defaultPartialTheme : _ref$theme, children2 = _ref.children;
  var theme = usePartialTheme(partialTheme);
  return react.createElement(themeContext.Provider, {
    value: theme
  }, children2);
};
var useTheme = function useTheme2() {
  return react.useContext(themeContext);
};
var ConditionalWrapper = function ConditionalWrapper2(_ref) {
  var children2 = _ref.children, condition = _ref.condition, wrapper = _ref.wrapper;
  if (!condition)
    return children2;
  return react.cloneElement(wrapper, {}, children2);
};
var containerStyle = {
  position: "relative"
};
var Container = function Container2(_ref) {
  var children2 = _ref.children, theme = _ref.theme, _ref$renderWrapper = _ref.renderWrapper, renderWrapper = _ref$renderWrapper === void 0 ? true : _ref$renderWrapper, _ref$isInteractive = _ref.isInteractive, isInteractive = _ref$isInteractive === void 0 ? true : _ref$isInteractive, animate = _ref.animate, motionStiffness = _ref.motionStiffness, motionDamping = _ref.motionDamping, motionConfig = _ref.motionConfig;
  var container = react.useRef(null);
  return react.createElement(ThemeProvider, {
    theme
  }, react.createElement(MotionConfigProvider, {
    animate,
    stiffness: motionStiffness,
    damping: motionDamping,
    config: motionConfig
  }, react.createElement(TooltipProvider, {
    container
  }, react.createElement(ConditionalWrapper, {
    condition: renderWrapper,
    wrapper: react.createElement("div", {
      style: containerStyle,
      ref: container
    })
  }, children2, isInteractive && react.createElement(Tooltip2, null)))));
};
var ResponsiveWrapper = function ResponsiveWrapper2(_ref) {
  var children2 = _ref.children;
  var _useMeasure = useMeasure(), _useMeasure2 = _slicedToArray$13(_useMeasure, 2), measureRef = _useMeasure2[0], bounds = _useMeasure2[1];
  var shouldRender = bounds.width > 0 && bounds.height > 0;
  return react.createElement("div", {
    ref: measureRef,
    style: {
      width: "100%",
      height: "100%"
    }
  }, shouldRender && children2({
    width: bounds.width,
    height: bounds.height
  }));
};
var LinearGradient = function LinearGradient2(_ref) {
  var id3 = _ref.id, colors5 = _ref.colors;
  return react.createElement("linearGradient", {
    id: id3,
    x1: 0,
    x2: 0,
    y1: 0,
    y2: 1
  }, colors5.map(function(_ref2) {
    var offset = _ref2.offset, color3 = _ref2.color, opacity = _ref2.opacity;
    return react.createElement("stop", {
      key: offset,
      offset: "".concat(offset, "%"),
      stopColor: color3,
      stopOpacity: opacity !== void 0 ? opacity : 1
    });
  }));
};
var gradientTypes = {
  linearGradient: LinearGradient
};
var PatternDots = react.memo(function(_ref) {
  var id3 = _ref.id, background3 = _ref.background, color3 = _ref.color, size = _ref.size, padding2 = _ref.padding, stagger = _ref.stagger;
  var fullSize = size + padding2;
  var radius = size / 2;
  var halfPadding = padding2 / 2;
  if (stagger === true) {
    fullSize = size * 2 + padding2 * 2;
  }
  return react.createElement("pattern", {
    id: id3,
    width: fullSize,
    height: fullSize,
    patternUnits: "userSpaceOnUse"
  }, react.createElement("rect", {
    width: fullSize,
    height: fullSize,
    fill: background3
  }), react.createElement("circle", {
    cx: halfPadding + radius,
    cy: halfPadding + radius,
    r: radius,
    fill: color3
  }), stagger && react.createElement("circle", {
    cx: padding2 * 1.5 + size + radius,
    cy: padding2 * 1.5 + size + radius,
    r: radius,
    fill: color3
  }));
});
PatternDots.displayName = "PatternDots";
PatternDots.defaultProps = {
  color: "#000000",
  background: "#ffffff",
  size: 4,
  padding: 4,
  stagger: false
};
var degreesToRadians2 = function degreesToRadians3(degrees3) {
  return degrees3 * Math.PI / 180;
};
var textPropsByEngine = {
  svg: {
    align: {
      left: "start",
      center: "middle",
      right: "end"
    },
    baseline: {
      top: "text-before-edge",
      center: "central",
      bottom: "alphabetic"
    }
  },
  canvas: {
    align: {
      left: "left",
      center: "center",
      right: "right"
    },
    baseline: {
      top: "top",
      center: "middle",
      bottom: "bottom"
    }
  }
};
var PatternLines = react.memo(function(_ref) {
  var id3 = _ref.id, _spacing = _ref.spacing, _rotation = _ref.rotation, background3 = _ref.background, color3 = _ref.color, lineWidth = _ref.lineWidth;
  var rotation2 = Math.round(_rotation) % 360;
  var spacing = Math.abs(_spacing);
  if (rotation2 > 180)
    rotation2 = rotation2 - 360;
  else if (rotation2 > 90)
    rotation2 = rotation2 - 180;
  else if (rotation2 < -180)
    rotation2 = rotation2 + 360;
  else if (rotation2 < -90)
    rotation2 = rotation2 + 180;
  var width = spacing;
  var height = spacing;
  var path3;
  if (rotation2 === 0) {
    path3 = "\n                M 0 0 L ".concat(width, " 0\n                M 0 ").concat(height, " L ").concat(width, " ").concat(height, "\n            ");
  } else if (rotation2 === 90) {
    path3 = "\n                M 0 0 L 0 ".concat(height, "\n                M ").concat(width, " 0 L ").concat(width, " ").concat(height, "\n            ");
  } else {
    width = Math.abs(spacing / Math.sin(degreesToRadians2(rotation2)));
    height = spacing / Math.sin(degreesToRadians2(90 - rotation2));
    if (rotation2 > 0) {
      path3 = "\n                    M 0 ".concat(-height, " L ").concat(width * 2, " ").concat(height, "\n                    M ").concat(-width, " ").concat(-height, " L ").concat(width, " ").concat(height, "\n                    M ").concat(-width, " 0 L ").concat(width, " ").concat(height * 2, "\n                ");
    } else {
      path3 = "\n                    M ".concat(-width, " ").concat(height, " L ").concat(width, " ").concat(-height, "\n                    M ").concat(-width, " ").concat(height * 2, " L ").concat(width * 2, " ").concat(-height, "\n                    M 0 ").concat(height * 2, " L ").concat(width * 2, " 0\n                ");
    }
  }
  return react.createElement("pattern", {
    id: id3,
    width,
    height,
    patternUnits: "userSpaceOnUse"
  }, react.createElement("rect", {
    width,
    height,
    fill: background3,
    stroke: "rgba(255, 0, 0, 0.1)",
    strokeWidth: 0
  }), react.createElement("path", {
    d: path3,
    strokeWidth: lineWidth,
    stroke: color3,
    strokeLinecap: "square"
  }));
});
PatternLines.displayName = "PatternLines";
PatternLines.defaultProps = {
  spacing: 5,
  rotation: 0,
  color: "#000000",
  background: "#ffffff",
  lineWidth: 2
};
var PatternSquares = react.memo(function(_ref) {
  var id3 = _ref.id, background3 = _ref.background, color3 = _ref.color, size = _ref.size, padding2 = _ref.padding, stagger = _ref.stagger;
  var fullSize = size + padding2;
  var halfPadding = padding2 / 2;
  if (stagger === true) {
    fullSize = size * 2 + padding2 * 2;
  }
  return react.createElement("pattern", {
    id: id3,
    width: fullSize,
    height: fullSize,
    patternUnits: "userSpaceOnUse"
  }, react.createElement("rect", {
    width: fullSize,
    height: fullSize,
    fill: background3
  }), react.createElement("rect", {
    x: halfPadding,
    y: halfPadding,
    width: size,
    height: size,
    fill: color3
  }), stagger && react.createElement("rect", {
    x: padding2 * 1.5 + size,
    y: padding2 * 1.5 + size,
    width: size,
    height: size,
    fill: color3
  }));
});
PatternSquares.displayName = "PatternSquares";
PatternSquares.defaultProps = {
  color: "#000000",
  background: "#ffffff",
  size: 4,
  padding: 4,
  stagger: false
};
var patternTypes = {
  patternDots: PatternDots,
  patternLines: PatternLines,
  patternSquares: PatternSquares
};
function _objectWithoutPropertiesLoose$16(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties4(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$16(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var defsMapping = _objectSpread2$1(_objectSpread2$1({}, gradientTypes), patternTypes);
var Defs = function Defs2(_ref) {
  var definitions = _ref.defs;
  if (!definitions || definitions.length < 1)
    return null;
  return react.createElement("defs", null, definitions.map(function(_ref2) {
    var type3 = _ref2.type, def = _objectWithoutProperties4(_ref2, ["type"]);
    if (defsMapping[type3])
      return react.createElement(defsMapping[type3], _objectSpread2$1({
        key: def.id
      }, def));
    return null;
  }));
};
var Defs$1 = react.memo(Defs);
var SvgWrapper = function SvgWrapper2(_ref) {
  var width = _ref.width, height = _ref.height, margin = _ref.margin, defs = _ref.defs, children2 = _ref.children, role = _ref.role;
  var theme = useTheme();
  return react.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    role,
    width,
    height
  }, react.createElement(Defs$1, {
    defs
  }), react.createElement("rect", {
    width,
    height,
    fill: theme.background
  }), react.createElement("g", {
    transform: "translate(".concat(margin.left, ",").concat(margin.top, ")")
  }, children2));
};
var DotsItemSymbol = function DotsItemSymbol2(_ref) {
  var size = _ref.size, color3 = _ref.color, borderWidth = _ref.borderWidth, borderColor = _ref.borderColor;
  return react.createElement("circle", {
    r: size / 2,
    fill: color3,
    stroke: borderColor,
    strokeWidth: borderWidth,
    style: {
      pointerEvents: "none"
    }
  });
};
var DotsItemSymbol$1 = react.memo(DotsItemSymbol);
var DotsItem = function DotsItem2(_ref) {
  var x5 = _ref.x, y7 = _ref.y, symbol2 = _ref.symbol, size = _ref.size, datum2 = _ref.datum, color3 = _ref.color, borderWidth = _ref.borderWidth, borderColor = _ref.borderColor, label = _ref.label, labelTextAnchor = _ref.labelTextAnchor, labelYOffset = _ref.labelYOffset, theme = _ref.theme;
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var animatedProps2 = useSpring({
    transform: "translate(".concat(x5, ", ").concat(y7, ")"),
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(animated.g, {
    transform: animatedProps2.transform,
    style: {
      pointerEvents: "none"
    }
  }, react.createElement(symbol2, {
    size,
    color: color3,
    datum: datum2,
    borderWidth,
    borderColor
  }), label && react.createElement("text", {
    textAnchor: labelTextAnchor,
    y: labelYOffset,
    style: theme.dots.text
  }, label));
};
var DotsItemDefaultProps = {
  symbol: DotsItemSymbol$1,
  labelTextAnchor: "middle",
  labelYOffset: -12
};
DotsItem.defaultProps = DotsItemDefaultProps;
react.memo(DotsItem);
var computeLabel = function computeLabel2(_ref) {
  var axis2 = _ref.axis, width = _ref.width, height = _ref.height, position = _ref.position, offsetX = _ref.offsetX, offsetY = _ref.offsetY, orientation = _ref.orientation;
  var x5 = 0;
  var y7 = 0;
  var rotation2 = orientation === "vertical" ? -90 : 0;
  var textAnchor = "start";
  if (axis2 === "x") {
    switch (position) {
      case "top-left":
        x5 = -offsetX;
        y7 = offsetY;
        textAnchor = "end";
        break;
      case "top":
        y7 = -offsetY;
        if (orientation === "horizontal") {
          textAnchor = "middle";
        } else {
          textAnchor = "start";
        }
        break;
      case "top-right":
        x5 = offsetX;
        y7 = offsetY;
        if (orientation === "horizontal") {
          textAnchor = "start";
        } else {
          textAnchor = "end";
        }
        break;
      case "right":
        x5 = offsetX;
        y7 = height / 2;
        if (orientation === "horizontal") {
          textAnchor = "start";
        } else {
          textAnchor = "middle";
        }
        break;
      case "bottom-right":
        x5 = offsetX;
        y7 = height - offsetY;
        textAnchor = "start";
        break;
      case "bottom":
        y7 = height + offsetY;
        if (orientation === "horizontal") {
          textAnchor = "middle";
        } else {
          textAnchor = "end";
        }
        break;
      case "bottom-left":
        y7 = height - offsetY;
        x5 = -offsetX;
        if (orientation === "horizontal") {
          textAnchor = "end";
        } else {
          textAnchor = "start";
        }
        break;
      case "left":
        x5 = -offsetX;
        y7 = height / 2;
        if (orientation === "horizontal") {
          textAnchor = "end";
        } else {
          textAnchor = "middle";
        }
        break;
    }
  } else {
    switch (position) {
      case "top-left":
        x5 = offsetX;
        y7 = -offsetY;
        textAnchor = "start";
        break;
      case "top":
        x5 = width / 2;
        y7 = -offsetY;
        if (orientation === "horizontal") {
          textAnchor = "middle";
        } else {
          textAnchor = "start";
        }
        break;
      case "top-right":
        x5 = width - offsetX;
        y7 = -offsetY;
        if (orientation === "horizontal") {
          textAnchor = "end";
        } else {
          textAnchor = "start";
        }
        break;
      case "right":
        x5 = width + offsetX;
        if (orientation === "horizontal") {
          textAnchor = "start";
        } else {
          textAnchor = "middle";
        }
        break;
      case "bottom-right":
        x5 = width - offsetX;
        y7 = offsetY;
        textAnchor = "end";
        break;
      case "bottom":
        x5 = width / 2;
        y7 = offsetY;
        if (orientation === "horizontal") {
          textAnchor = "middle";
        } else {
          textAnchor = "end";
        }
        break;
      case "bottom-left":
        x5 = offsetX;
        y7 = offsetY;
        if (orientation === "horizontal") {
          textAnchor = "start";
        } else {
          textAnchor = "end";
        }
        break;
      case "left":
        x5 = -offsetX;
        if (orientation === "horizontal") {
          textAnchor = "end";
        } else {
          textAnchor = "middle";
        }
        break;
    }
  }
  return {
    x: x5,
    y: y7,
    rotation: rotation2,
    textAnchor
  };
};
var CartesianMarkersItem = function CartesianMarkersItem2(_ref2) {
  var width = _ref2.width, height = _ref2.height, axis2 = _ref2.axis, scale = _ref2.scale, value2 = _ref2.value, lineStyle = _ref2.lineStyle, textStyle = _ref2.textStyle, legend = _ref2.legend, legendPosition = _ref2.legendPosition, legendOffsetX = _ref2.legendOffsetX, legendOffsetY = _ref2.legendOffsetY, legendOrientation = _ref2.legendOrientation;
  var theme = useTheme();
  var x5 = 0;
  var x22 = 0;
  var y7 = 0;
  var y22 = 0;
  if (axis2 === "y") {
    y7 = scale(value2);
    x22 = width;
  } else {
    x5 = scale(value2);
    y22 = height;
  }
  var legendNode = null;
  if (legend) {
    var legendProps = computeLabel({
      axis: axis2,
      width,
      height,
      position: legendPosition,
      offsetX: legendOffsetX,
      offsetY: legendOffsetY,
      orientation: legendOrientation
    });
    legendNode = react.createElement("text", {
      transform: "translate(".concat(legendProps.x, ", ").concat(legendProps.y, ") rotate(").concat(legendProps.rotation, ")"),
      textAnchor: legendProps.textAnchor,
      dominantBaseline: "central",
      style: textStyle
    }, legend);
  }
  return react.createElement("g", {
    transform: "translate(".concat(x5, ", ").concat(y7, ")")
  }, react.createElement("line", {
    x1: 0,
    x2: x22,
    y1: 0,
    y2: y22,
    stroke: theme.markers.lineColor,
    strokeWidth: theme.markers.lineStrokeWidth,
    style: lineStyle
  }), legendNode);
};
CartesianMarkersItem.defaultProps = {
  legendPosition: "top-right",
  legendOffsetX: 14,
  legendOffsetY: 14,
  legendOrientation: "horizontal"
};
var CartesianMarkersItem$1 = react.memo(CartesianMarkersItem);
var CartesianMarkers = function CartesianMarkers2(_ref) {
  var markers = _ref.markers, width = _ref.width, height = _ref.height, xScale = _ref.xScale, yScale = _ref.yScale;
  if (!markers || markers.length === 0)
    return null;
  return markers.map(function(marker, i) {
    return react.createElement(CartesianMarkersItem$1, Object.assign({
      key: i
    }, marker, {
      width,
      height,
      scale: marker.axis === "y" ? yScale : xScale
    }));
  });
};
react.memo(CartesianMarkers);
function localDate$1(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date6.setFullYear(d2.y);
    return date6;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate$1(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date6 = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date6.setUTCFullYear(d2.y);
    return date6;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate$1(y7, m3, d2) {
  return {y: y7, m: m3, d: d2, H: 0, M: 0, S: 0, L: 0};
}
function formatLocale$2(locale6) {
  var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
  var periodRe = formatRe$1(locale_periods), periodLookup = formatLookup$1(locale_periods), weekdayRe = formatRe$1(locale_weekdays), weekdayLookup = formatLookup$1(locale_weekdays), shortWeekdayRe = formatRe$1(locale_shortWeekdays), shortWeekdayLookup = formatLookup$1(locale_shortWeekdays), monthRe = formatRe$1(locale_months), monthLookup = formatLookup$1(locale_months), shortMonthRe = formatRe$1(locale_shortMonths), shortMonthLookup = formatLookup$1(locale_shortMonths);
  var formats = {
    a: formatShortWeekday,
    A: formatWeekday,
    b: formatShortMonth,
    B: formatMonth,
    c: null,
    d: formatDayOfMonth$1,
    e: formatDayOfMonth$1,
    f: formatMicroseconds$1,
    g: formatYearISO$1,
    G: formatFullYearISO$1,
    H: formatHour24$1,
    I: formatHour12$1,
    j: formatDayOfYear$1,
    L: formatMilliseconds$1,
    m: formatMonthNumber$1,
    M: formatMinutes$1,
    p: formatPeriod,
    q: formatQuarter,
    Q: formatUnixTimestamp$1,
    s: formatUnixTimestampSeconds$1,
    S: formatSeconds$1,
    u: formatWeekdayNumberMonday$1,
    U: formatWeekNumberSunday$1,
    V: formatWeekNumberISO$1,
    w: formatWeekdayNumberSunday$1,
    W: formatWeekNumberMonday$1,
    x: null,
    X: null,
    y: formatYear$1,
    Y: formatFullYear$1,
    Z: formatZone$1,
    "%": formatLiteralPercent$1
  };
  var utcFormats = {
    a: formatUTCShortWeekday,
    A: formatUTCWeekday,
    b: formatUTCShortMonth,
    B: formatUTCMonth,
    c: null,
    d: formatUTCDayOfMonth$1,
    e: formatUTCDayOfMonth$1,
    f: formatUTCMicroseconds$1,
    g: formatUTCYearISO$1,
    G: formatUTCFullYearISO$1,
    H: formatUTCHour24$1,
    I: formatUTCHour12$1,
    j: formatUTCDayOfYear$1,
    L: formatUTCMilliseconds$1,
    m: formatUTCMonthNumber$1,
    M: formatUTCMinutes$1,
    p: formatUTCPeriod,
    q: formatUTCQuarter,
    Q: formatUnixTimestamp$1,
    s: formatUnixTimestampSeconds$1,
    S: formatUTCSeconds$1,
    u: formatUTCWeekdayNumberMonday$1,
    U: formatUTCWeekNumberSunday$1,
    V: formatUTCWeekNumberISO$1,
    w: formatUTCWeekdayNumberSunday$1,
    W: formatUTCWeekNumberMonday$1,
    x: null,
    X: null,
    y: formatUTCYear$1,
    Y: formatUTCFullYear$1,
    Z: formatUTCZone$1,
    "%": formatLiteralPercent$1
  };
  var parses = {
    a: parseShortWeekday,
    A: parseWeekday,
    b: parseShortMonth,
    B: parseMonth,
    c: parseLocaleDateTime,
    d: parseDayOfMonth$1,
    e: parseDayOfMonth$1,
    f: parseMicroseconds$1,
    g: parseYear$1,
    G: parseFullYear$1,
    H: parseHour24$1,
    I: parseHour24$1,
    j: parseDayOfYear$1,
    L: parseMilliseconds$1,
    m: parseMonthNumber$1,
    M: parseMinutes$1,
    p: parsePeriod,
    q: parseQuarter$1,
    Q: parseUnixTimestamp$1,
    s: parseUnixTimestampSeconds$1,
    S: parseSeconds$1,
    u: parseWeekdayNumberMonday$1,
    U: parseWeekNumberSunday$1,
    V: parseWeekNumberISO$1,
    w: parseWeekdayNumberSunday$1,
    W: parseWeekNumberMonday$1,
    x: parseLocaleDate,
    X: parseLocaleTime,
    y: parseYear$1,
    Y: parseFullYear$1,
    Z: parseZone$1,
    "%": parseLiteralPercent$1
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date6) {
      var string2 = [], i = -1, j2 = 0, n3 = specifier.length, c5, pad6, format6;
      if (!(date6 instanceof Date))
        date6 = new Date(+date6);
      while (++i < n3) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j2, i));
          if ((pad6 = pads$1[c5 = specifier.charAt(++i)]) != null)
            c5 = specifier.charAt(++i);
          else
            pad6 = c5 === "e" ? " " : "0";
          if (format6 = formats2[c5])
            c5 = format6(date6, pad6);
          string2.push(c5);
          j2 = i + 1;
        }
      }
      string2.push(specifier.slice(j2, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z4) {
    return function(string2) {
      var d2 = newDate$1(1900, void 0, 1), i = parseSpecifier(d2, specifier, string2 += "", 0), week, day$1;
      if (i != string2.length)
        return null;
      if ("Q" in d2)
        return new Date(d2.Q);
      if ("s" in d2)
        return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z4 && !("Z" in d2))
        d2.Z = 0;
      if ("p" in d2)
        d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0)
        d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53)
          return null;
        if (!("w" in d2))
          d2.w = 1;
        if ("Z" in d2) {
          week = utcDate$1(newDate$1(d2.y, 0, 1)), day$1 = week.getUTCDay();
          week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate$1(newDate$1(d2.y, 0, 1)), day$1 = week.getDay();
          week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
          week = day.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2))
          d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day$1 = "Z" in d2 ? utcDate$1(newDate$1(d2.y, 0, 1)).getUTCDay() : localDate$1(newDate$1(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day$1 + 5) % 7 : d2.w + d2.U * 7 - (day$1 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate$1(d2);
      }
      return localDate$1(d2);
    };
  }
  function parseSpecifier(d2, specifier, string2, j2) {
    var i = 0, n3 = specifier.length, m3 = string2.length, c5, parse2;
    while (i < n3) {
      if (j2 >= m3)
        return -1;
      c5 = specifier.charCodeAt(i++);
      if (c5 === 37) {
        c5 = specifier.charAt(i++);
        parse2 = parses[c5 in pads$1 ? specifier.charAt(i++) : c5];
        if (!parse2 || (j2 = parse2(d2, string2, j2)) < 0)
          return -1;
      } else if (c5 != string2.charCodeAt(j2++)) {
        return -1;
      }
    }
    return j2;
  }
  function parsePeriod(d2, string2, i) {
    var n3 = periodRe.exec(string2.slice(i));
    return n3 ? (d2.p = periodLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortWeekday(d2, string2, i) {
    var n3 = shortWeekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = shortWeekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseWeekday(d2, string2, i) {
    var n3 = weekdayRe.exec(string2.slice(i));
    return n3 ? (d2.w = weekdayLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseShortMonth(d2, string2, i) {
    var n3 = shortMonthRe.exec(string2.slice(i));
    return n3 ? (d2.m = shortMonthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseMonth(d2, string2, i) {
    var n3 = monthRe.exec(string2.slice(i));
    return n3 ? (d2.m = monthLookup[n3[0].toLowerCase()], i + n3[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string2, i) {
    return parseSpecifier(d2, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d2, string2, i) {
    return parseSpecifier(d2, locale_date, string2, i);
  }
  function parseLocaleTime(d2, string2, i) {
    return parseSpecifier(d2, locale_time, string2, i);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f3 = newFormat(specifier += "", formats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    parse: function(specifier) {
      var p3 = newParse(specifier += "", false);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    },
    utcFormat: function(specifier) {
      var f3 = newFormat(specifier += "", utcFormats);
      f3.toString = function() {
        return specifier;
      };
      return f3;
    },
    utcParse: function(specifier) {
      var p3 = newParse(specifier += "", true);
      p3.toString = function() {
        return specifier;
      };
      return p3;
    }
  };
}
var pads$1 = {"-": "", _: " ", "0": "0"};
var numberRe$1 = /^\s*\d+/;
var percentRe$1 = /^%/;
var requoteRe$1 = /[\\^$*+?|[\]().{}]/g;
function pad$1(value2, fill, width) {
  var sign5 = value2 < 0 ? "-" : "", string2 = (sign5 ? -value2 : value2) + "", length = string2.length;
  return sign5 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote$1(s4) {
  return s4.replace(requoteRe$1, "\\$&");
}
function formatRe$1(names) {
  return new RegExp("^(?:" + names.map(requote$1).join("|") + ")", "i");
}
function formatLookup$1(names) {
  var map7 = {}, i = -1, n3 = names.length;
  while (++i < n3)
    map7[names[i].toLowerCase()] = i;
  return map7;
}
function parseWeekdayNumberSunday$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 1));
  return n3 ? (d2.w = +n3[0], i + n3[0].length) : -1;
}
function parseWeekdayNumberMonday$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 1));
  return n3 ? (d2.u = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberSunday$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.U = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberISO$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.V = +n3[0], i + n3[0].length) : -1;
}
function parseWeekNumberMonday$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.W = +n3[0], i + n3[0].length) : -1;
}
function parseFullYear$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 4));
  return n3 ? (d2.y = +n3[0], i + n3[0].length) : -1;
}
function parseYear$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.y = +n3[0] + (+n3[0] > 68 ? 1900 : 2e3), i + n3[0].length) : -1;
}
function parseZone$1(d2, string2, i) {
  var n3 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n3 ? (d2.Z = n3[1] ? 0 : -(n3[2] + (n3[3] || "00")), i + n3[0].length) : -1;
}
function parseQuarter$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 1));
  return n3 ? (d2.q = n3[0] * 3 - 3, i + n3[0].length) : -1;
}
function parseMonthNumber$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.m = n3[0] - 1, i + n3[0].length) : -1;
}
function parseDayOfMonth$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseDayOfYear$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 3));
  return n3 ? (d2.m = 0, d2.d = +n3[0], i + n3[0].length) : -1;
}
function parseHour24$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.H = +n3[0], i + n3[0].length) : -1;
}
function parseMinutes$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.M = +n3[0], i + n3[0].length) : -1;
}
function parseSeconds$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 2));
  return n3 ? (d2.S = +n3[0], i + n3[0].length) : -1;
}
function parseMilliseconds$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 3));
  return n3 ? (d2.L = +n3[0], i + n3[0].length) : -1;
}
function parseMicroseconds$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i, i + 6));
  return n3 ? (d2.L = Math.floor(n3[0] / 1e3), i + n3[0].length) : -1;
}
function parseLiteralPercent$1(d2, string2, i) {
  var n3 = percentRe$1.exec(string2.slice(i, i + 1));
  return n3 ? i + n3[0].length : -1;
}
function parseUnixTimestamp$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i));
  return n3 ? (d2.Q = +n3[0], i + n3[0].length) : -1;
}
function parseUnixTimestampSeconds$1(d2, string2, i) {
  var n3 = numberRe$1.exec(string2.slice(i));
  return n3 ? (d2.s = +n3[0], i + n3[0].length) : -1;
}
function formatDayOfMonth$1(d2, p3) {
  return pad$1(d2.getDate(), p3, 2);
}
function formatHour24$1(d2, p3) {
  return pad$1(d2.getHours(), p3, 2);
}
function formatHour12$1(d2, p3) {
  return pad$1(d2.getHours() % 12 || 12, p3, 2);
}
function formatDayOfYear$1(d2, p3) {
  return pad$1(1 + day.count(year(d2), d2), p3, 3);
}
function formatMilliseconds$1(d2, p3) {
  return pad$1(d2.getMilliseconds(), p3, 3);
}
function formatMicroseconds$1(d2, p3) {
  return formatMilliseconds$1(d2, p3) + "000";
}
function formatMonthNumber$1(d2, p3) {
  return pad$1(d2.getMonth() + 1, p3, 2);
}
function formatMinutes$1(d2, p3) {
  return pad$1(d2.getMinutes(), p3, 2);
}
function formatSeconds$1(d2, p3) {
  return pad$1(d2.getSeconds(), p3, 2);
}
function formatWeekdayNumberMonday$1(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday$1(d2, p3) {
  return pad$1(sunday.count(year(d2) - 1, d2), p3, 2);
}
function dISO$1(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO$1(d2, p3) {
  d2 = dISO$1(d2);
  return pad$1(thursday.count(year(d2), d2) + (year(d2).getDay() === 4), p3, 2);
}
function formatWeekdayNumberSunday$1(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday$1(d2, p3) {
  return pad$1(monday.count(year(d2) - 1, d2), p3, 2);
}
function formatYear$1(d2, p3) {
  return pad$1(d2.getFullYear() % 100, p3, 2);
}
function formatYearISO$1(d2, p3) {
  d2 = dISO$1(d2);
  return pad$1(d2.getFullYear() % 100, p3, 2);
}
function formatFullYear$1(d2, p3) {
  return pad$1(d2.getFullYear() % 1e4, p3, 4);
}
function formatFullYearISO$1(d2, p3) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad$1(d2.getFullYear() % 1e4, p3, 4);
}
function formatZone$1(d2) {
  var z3 = d2.getTimezoneOffset();
  return (z3 > 0 ? "-" : (z3 *= -1, "+")) + pad$1(z3 / 60 | 0, "0", 2) + pad$1(z3 % 60, "0", 2);
}
function formatUTCDayOfMonth$1(d2, p3) {
  return pad$1(d2.getUTCDate(), p3, 2);
}
function formatUTCHour24$1(d2, p3) {
  return pad$1(d2.getUTCHours(), p3, 2);
}
function formatUTCHour12$1(d2, p3) {
  return pad$1(d2.getUTCHours() % 12 || 12, p3, 2);
}
function formatUTCDayOfYear$1(d2, p3) {
  return pad$1(1 + utcDay.count(utcYear(d2), d2), p3, 3);
}
function formatUTCMilliseconds$1(d2, p3) {
  return pad$1(d2.getUTCMilliseconds(), p3, 3);
}
function formatUTCMicroseconds$1(d2, p3) {
  return formatUTCMilliseconds$1(d2, p3) + "000";
}
function formatUTCMonthNumber$1(d2, p3) {
  return pad$1(d2.getUTCMonth() + 1, p3, 2);
}
function formatUTCMinutes$1(d2, p3) {
  return pad$1(d2.getUTCMinutes(), p3, 2);
}
function formatUTCSeconds$1(d2, p3) {
  return pad$1(d2.getUTCSeconds(), p3, 2);
}
function formatUTCWeekdayNumberMonday$1(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday$1(d2, p3) {
  return pad$1(utcSunday.count(utcYear(d2) - 1, d2), p3, 2);
}
function UTCdISO$1(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO$1(d2, p3) {
  d2 = UTCdISO$1(d2);
  return pad$1(utcThursday.count(utcYear(d2), d2) + (utcYear(d2).getUTCDay() === 4), p3, 2);
}
function formatUTCWeekdayNumberSunday$1(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday$1(d2, p3) {
  return pad$1(utcMonday.count(utcYear(d2) - 1, d2), p3, 2);
}
function formatUTCYear$1(d2, p3) {
  return pad$1(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCYearISO$1(d2, p3) {
  d2 = UTCdISO$1(d2);
  return pad$1(d2.getUTCFullYear() % 100, p3, 2);
}
function formatUTCFullYear$1(d2, p3) {
  return pad$1(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCFullYearISO$1(d2, p3) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad$1(d2.getUTCFullYear() % 1e4, p3, 4);
}
function formatUTCZone$1() {
  return "+0000";
}
function formatLiteralPercent$1() {
  return "%";
}
function formatUnixTimestamp$1(d2) {
  return +d2;
}
function formatUnixTimestampSeconds$1(d2) {
  return Math.floor(+d2 / 1e3);
}
var locale$2;
var timeFormat$1;
defaultLocale$2({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale$2(definition) {
  locale$2 = formatLocale$2(definition);
  timeFormat$1 = locale$2.format;
  locale$2.parse;
  locale$2.utcFormat;
  locale$2.utcParse;
  return locale$2;
}
function formatDecimal$1(x5) {
  return Math.abs(x5 = Math.round(x5)) >= 1e21 ? x5.toLocaleString("en").replace(/,/g, "") : x5.toString(10);
}
function formatDecimalParts$1(x5, p3) {
  if ((i = (x5 = p3 ? x5.toExponential(p3 - 1) : x5.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x5.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x5.slice(i + 1)
  ];
}
function exponent$12(x5) {
  return x5 = formatDecimalParts$1(Math.abs(x5)), x5 ? x5[1] : NaN;
}
function formatGroup$1(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t4 = [], j2 = 0, g2 = grouping[0], length = 0;
    while (i > 0 && g2 > 0) {
      if (length + g2 + 1 > width)
        g2 = Math.max(1, width - length);
      t4.push(value2.substring(i -= g2, i + g2));
      if ((length += g2 + 1) > width)
        break;
      g2 = grouping[j2 = (j2 + 1) % grouping.length];
    }
    return t4.reverse().join(thousands);
  };
}
function formatNumerals$1(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re$1 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier$1(specifier) {
  if (!(match2 = re$1.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier$1({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier$1.prototype = FormatSpecifier$1.prototype;
function FormatSpecifier$1(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier$1.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim$1(s4) {
  out:
    for (var n3 = s4.length, i = 1, i0 = -1, i1; i < n3; ++i) {
      switch (s4[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s4[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
}
var prefixExponent$1;
function formatPrefixAuto$1(x5, p3) {
  var d2 = formatDecimalParts$1(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1], i = exponent6 - (prefixExponent$1 = Math.max(-8, Math.min(8, Math.floor(exponent6 / 3))) * 3) + 1, n3 = coefficient.length;
  return i === n3 ? coefficient : i > n3 ? coefficient + new Array(i - n3 + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts$1(x5, Math.max(0, p3 + i - 1))[0];
}
function formatRounded$1(x5, p3) {
  var d2 = formatDecimalParts$1(x5, p3);
  if (!d2)
    return x5 + "";
  var coefficient = d2[0], exponent6 = d2[1];
  return exponent6 < 0 ? "0." + new Array(-exponent6).join("0") + coefficient : coefficient.length > exponent6 + 1 ? coefficient.slice(0, exponent6 + 1) + "." + coefficient.slice(exponent6 + 1) : coefficient + new Array(exponent6 - coefficient.length + 2).join("0");
}
var formatTypes$1 = {
  "%": function(x5, p3) {
    return (x5 * 100).toFixed(p3);
  },
  b: function(x5) {
    return Math.round(x5).toString(2);
  },
  c: function(x5) {
    return x5 + "";
  },
  d: formatDecimal$1,
  e: function(x5, p3) {
    return x5.toExponential(p3);
  },
  f: function(x5, p3) {
    return x5.toFixed(p3);
  },
  g: function(x5, p3) {
    return x5.toPrecision(p3);
  },
  o: function(x5) {
    return Math.round(x5).toString(8);
  },
  p: function(x5, p3) {
    return formatRounded$1(x5 * 100, p3);
  },
  r: formatRounded$1,
  s: formatPrefixAuto$1,
  X: function(x5) {
    return Math.round(x5).toString(16).toUpperCase();
  },
  x: function(x5) {
    return Math.round(x5).toString(16);
  }
};
function identity$16(x5) {
  return x5;
}
var map$14 = Array.prototype.map;
var prefixes$2 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale$3(locale6) {
  var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity$16 : formatGroup$1(map$14.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity$16 : formatNumerals$1(map$14.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus2 = locale6.minus === void 0 ? "-" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier$1(specifier);
    var fill = specifier.fill, align = specifier.align, sign5 = specifier.sign, symbol2 = specifier.symbol, zero3 = specifier.zero, width = specifier.width, comma2 = specifier.comma, precision = specifier.precision, trim = specifier.trim, type3 = specifier.type;
    if (type3 === "n")
      comma2 = true, type3 = "g";
    else if (!formatTypes$1[type3])
      precision === void 0 && (precision = 12), trim = true, type3 = "g";
    if (zero3 || fill === "0" && align === "=")
      zero3 = true, fill = "0", align = "=";
    var prefix3 = symbol2 === "$" ? currencyPrefix : symbol2 === "#" && /[boxX]/.test(type3) ? "0" + type3.toLowerCase() : "", suffix2 = symbol2 === "$" ? currencySuffix : /[%p]/.test(type3) ? percent : "";
    var formatType = formatTypes$1[type3], maybeSuffix = /[defgprs%]/.test(type3);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type3) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format6(value2) {
      var valuePrefix = prefix3, valueSuffix = suffix2, i, n3, c5;
      if (type3 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim)
          value2 = formatTrim$1(value2);
        if (valueNegative && +value2 === 0 && sign5 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign5 === "(" ? sign5 : minus2 : sign5 === "-" || sign5 === "(" ? "" : sign5) + valuePrefix;
        valueSuffix = (type3 === "s" ? prefixes$2[8 + prefixExponent$1 / 3] : "") + valueSuffix + (valueNegative && sign5 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n3 = value2.length;
          while (++i < n3) {
            if (c5 = value2.charCodeAt(i), 48 > c5 || c5 > 57) {
              valueSuffix = (c5 === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma2 && !zero3)
        value2 = group(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding2 = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma2 && zero3)
        value2 = group(padding2 + value2, padding2.length ? width - valueSuffix.length : Infinity), padding2 = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding2;
          break;
        case "=":
          value2 = valuePrefix + padding2 + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding2.slice(0, length = padding2.length >> 1) + valuePrefix + value2 + valueSuffix + padding2.slice(length);
          break;
        default:
          value2 = padding2 + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format6.toString = function() {
      return specifier + "";
    };
    return format6;
  }
  function formatPrefix4(specifier, value2) {
    var f3 = newFormat((specifier = formatSpecifier$1(specifier), specifier.type = "f", specifier)), e3 = Math.max(-8, Math.min(8, Math.floor(exponent$12(value2) / 3))) * 3, k6 = Math.pow(10, -e3), prefix3 = prefixes$2[8 + e3 / 3];
    return function(value3) {
      return f3(k6 * value3) + prefix3;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix4
  };
}
var locale$3;
var format$1;
defaultLocale$3({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});
function defaultLocale$3(definition) {
  locale$3 = formatLocale$3(definition);
  format$1 = locale$3.format;
  locale$3.formatPrefix;
  return locale$3;
}
function _defineProperty$24(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys$22(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread2$2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$22(Object(source), true).forEach(function(key) {
        _defineProperty$24(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$22(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var centerScale = function centerScale2(scale) {
  var bandwidth = scale.bandwidth();
  if (bandwidth === 0)
    return scale;
  var offset = bandwidth / 2;
  if (scale.round()) {
    offset = Math.round(offset);
  }
  return function(d2) {
    return scale(d2) + offset;
  };
};
var timeByType = {
  millisecond: [millisecond, millisecond],
  second: [second, second],
  minute: [minute, utcMinute],
  hour: [hour, utcHour],
  day: [day, utcDay],
  week: [sunday, utcSunday],
  sunday: [sunday, utcSunday],
  monday: [monday, utcMonday],
  tuesday: [tuesday, utcTuesday],
  wednesday: [wednesday, utcWednesday],
  thursday: [thursday, utcThursday],
  friday: [friday, utcFriday],
  saturday: [saturday, utcSaturday],
  month: [month, utcMonth],
  year: [year, utcYear]
};
var timeTypes = Object.keys(timeByType);
var timeIntervalRegexp = new RegExp("^every\\s*(\\d+)?\\s*(".concat(timeTypes.join("|"), ")s?$"), "i");
var isInteger = function isInteger2(value2) {
  return typeof value2 === "number" && isFinite(value2) && Math.floor(value2) === value2;
};
var getScaleTicks = function getScaleTicks2(scale, spec) {
  if (Array.isArray(spec)) {
    return spec;
  }
  if (scale.ticks) {
    if (spec === void 0) {
      return scale.ticks();
    }
    if (isInteger(spec)) {
      return scale.ticks(spec);
    }
    if (typeof spec === "string") {
      var matches = spec.match(timeIntervalRegexp);
      if (matches) {
        var timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0];
        if (matches[1] === void 0) {
          return scale.ticks(timeType);
        }
        return scale.ticks(timeType.every(Number(matches[1])));
      }
      throw new Error("Invalid tickValues: ".concat(spec));
    }
  }
  return scale.domain();
};
var computeCartesianTicks = function computeCartesianTicks2(_ref) {
  var axis2 = _ref.axis, scale = _ref.scale, ticksPosition = _ref.ticksPosition, tickValues = _ref.tickValues, tickSize = _ref.tickSize, tickPadding = _ref.tickPadding, tickRotation = _ref.tickRotation, _ref$engine = _ref.engine, engine = _ref$engine === void 0 ? "svg" : _ref$engine;
  var values2 = getScaleTicks(scale, tickValues);
  var textProps2 = textPropsByEngine[engine];
  var position = scale.bandwidth ? centerScale(scale) : scale;
  var line2 = {
    lineX: 0,
    lineY: 0
  };
  var text2 = {
    textX: 0,
    textY: 0
  };
  var translate3;
  var textAlign = textProps2.align.center;
  var textBaseline = textProps2.baseline.center;
  if (axis2 === "x") {
    translate3 = function translate4(d2) {
      return {
        x: position(d2),
        y: 0
      };
    };
    line2.lineY = tickSize * (ticksPosition === "after" ? 1 : -1);
    text2.textY = (tickSize + tickPadding) * (ticksPosition === "after" ? 1 : -1);
    if (ticksPosition === "after") {
      textBaseline = textProps2.baseline.top;
    } else {
      textBaseline = textProps2.baseline.bottom;
    }
    if (tickRotation === 0) {
      textAlign = textProps2.align.center;
    } else if (ticksPosition === "after" && tickRotation < 0 || ticksPosition === "before" && tickRotation > 0) {
      textAlign = textProps2.align.right;
      textBaseline = textProps2.baseline.center;
    } else if (ticksPosition === "after" && tickRotation > 0 || ticksPosition === "before" && tickRotation < 0) {
      textAlign = textProps2.align.left;
      textBaseline = textProps2.baseline.center;
    }
  } else {
    translate3 = function translate4(d2) {
      return {
        x: 0,
        y: position(d2)
      };
    };
    line2.lineX = tickSize * (ticksPosition === "after" ? 1 : -1);
    text2.textX = (tickSize + tickPadding) * (ticksPosition === "after" ? 1 : -1);
    if (ticksPosition === "after") {
      textAlign = textProps2.align.left;
    } else {
      textAlign = textProps2.align.right;
    }
  }
  var ticks4 = values2.map(function(value2) {
    return _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
      key: value2,
      value: value2
    }, translate3(value2)), line2), text2);
  });
  return {
    ticks: ticks4,
    textAlign,
    textBaseline
  };
};
var getFormatter = function getFormatter2(format$1$1, scale) {
  if (!format$1$1 || typeof format$1$1 === "function")
    return format$1$1;
  if (scale.type === "time") {
    var f3 = timeFormat$1(format$1$1);
    return function(d2) {
      return f3(new Date(d2));
    };
  }
  return format$1(format$1$1);
};
var computeGridLines = function computeGridLines2(_ref2) {
  var width = _ref2.width, height = _ref2.height, scale = _ref2.scale, axis2 = _ref2.axis, _values = _ref2.values;
  var lineValues = Array.isArray(_values) ? _values : void 0;
  var lineCount = isInteger(_values) ? _values : void 0;
  var values2 = lineValues || getScaleTicks(scale, lineCount);
  var position = scale.bandwidth ? centerScale(scale) : scale;
  var lines;
  if (axis2 === "x") {
    lines = values2.map(function(v3) {
      return {
        key: "".concat(v3),
        x1: position(v3),
        x2: position(v3),
        y1: 0,
        y2: height
      };
    });
  } else if (axis2 === "y") {
    lines = values2.map(function(v3) {
      return {
        key: "".concat(v3),
        x1: 0,
        x2: width,
        y1: position(v3),
        y2: position(v3)
      };
    });
  }
  return lines;
};
var axisPropTypes = {
  ticksPosition: propTypes.oneOf(["before", "after"]),
  tickValues: propTypes.oneOfType([propTypes.number, propTypes.arrayOf(propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.instanceOf(Date)])), propTypes.string]),
  tickSize: propTypes.number,
  tickPadding: propTypes.number,
  tickRotation: propTypes.number,
  format: propTypes.oneOfType([propTypes.func, propTypes.string]),
  renderTick: propTypes.func,
  legend: propTypes.node,
  legendPosition: propTypes.oneOf(["start", "middle", "end"]),
  legendOffset: propTypes.number,
  ariaHidden: propTypes.bool
};
propTypes.shape(axisPropTypes);
var AxisTick = function AxisTick2(_ref) {
  var _value = _ref.value, format6 = _ref.format, lineX = _ref.lineX, lineY = _ref.lineY, _onClick = _ref.onClick, textBaseline = _ref.textBaseline, textAnchor = _ref.textAnchor, animatedProps2 = _ref.animatedProps;
  var theme = useTheme();
  var value2 = _value;
  if (format6 !== void 0) {
    value2 = format6(value2);
  }
  var gStyle = {
    opacity: animatedProps2.opacity
  };
  if (_onClick) {
    gStyle["cursor"] = "pointer";
  }
  return react.createElement(animated.g, Object.assign({
    transform: animatedProps2.transform
  }, _onClick ? {
    onClick: function onClick(e3) {
      return _onClick(e3, value2);
    }
  } : {}, {
    style: gStyle
  }), react.createElement("line", {
    x1: 0,
    x2: lineX,
    y1: 0,
    y2: lineY,
    style: theme.axis.ticks.line
  }), react.createElement(animated.text, {
    dominantBaseline: textBaseline,
    textAnchor,
    transform: animatedProps2.textTransform,
    style: theme.axis.ticks.text
  }, value2));
};
AxisTick.defaultProps = {
  opacity: 1,
  rotate: 0
};
var AxisTick$1 = react.memo(AxisTick);
var defaultTickRenderer = function defaultTickRenderer2(props) {
  return react.createElement(AxisTick$1, props);
};
var Axis4 = function Axis5(_ref) {
  var axis2 = _ref.axis, scale = _ref.scale, x5 = _ref.x, y7 = _ref.y, length = _ref.length, ticksPosition = _ref.ticksPosition, tickValues = _ref.tickValues, tickSize = _ref.tickSize, tickPadding = _ref.tickPadding, tickRotation = _ref.tickRotation, format6 = _ref.format, renderTick = _ref.renderTick, legend = _ref.legend, legendPosition = _ref.legendPosition, legendOffset = _ref.legendOffset, onClick = _ref.onClick, ariaHidden = _ref.ariaHidden;
  var theme = useTheme();
  var formatValue = react.useMemo(function() {
    return getFormatter(format6, scale);
  }, [format6, scale]);
  var _computeCartesianTick = computeCartesianTicks({
    axis: axis2,
    scale,
    ticksPosition,
    tickValues,
    tickSize,
    tickPadding,
    tickRotation
  }), ticks4 = _computeCartesianTick.ticks, textAlign = _computeCartesianTick.textAlign, textBaseline = _computeCartesianTick.textBaseline;
  var legendNode = null;
  if (legend !== void 0) {
    var legendX = 0;
    var legendY = 0;
    var legendRotation = 0;
    var textAnchor;
    if (axis2 === "y") {
      legendRotation = -90;
      legendX = legendOffset;
      if (legendPosition === "start") {
        textAnchor = "start";
        legendY = length;
      } else if (legendPosition === "middle") {
        textAnchor = "middle";
        legendY = length / 2;
      } else if (legendPosition === "end") {
        textAnchor = "end";
      }
    } else {
      legendY = legendOffset;
      if (legendPosition === "start") {
        textAnchor = "start";
      } else if (legendPosition === "middle") {
        textAnchor = "middle";
        legendX = length / 2;
      } else if (legendPosition === "end") {
        textAnchor = "end";
        legendX = length;
      }
    }
    legendNode = react.createElement("text", {
      transform: "translate(".concat(legendX, ", ").concat(legendY, ") rotate(").concat(legendRotation, ")"),
      textAnchor,
      style: _objectSpread2$2({
        dominantBaseline: "central"
      }, theme.axis.legend.text)
    }, legend);
  }
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var animatedProps2 = useSpring({
    transform: "translate(".concat(x5, ",").concat(y7, ")"),
    lineX2: axis2 === "x" ? length : 0,
    lineY2: axis2 === "x" ? 0 : length,
    config: springConfig,
    immediate: !animate
  });
  var transition2 = useTransition(ticks4, {
    key: function key(tick) {
      return tick.key;
    },
    initial: function initial(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    from: function from(tick) {
      return {
        opacity: 0,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    enter: function enter(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    update: function update(tick) {
      return {
        opacity: 1,
        transform: "translate(".concat(tick.x, ",").concat(tick.y, ")"),
        textTransform: "translate(".concat(tick.textX, ",").concat(tick.textY, ") rotate(").concat(tickRotation, ")")
      };
    },
    leave: {
      opacity: 0
    },
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(animated.g, {
    transform: animatedProps2.transform,
    "aria-hidden": ariaHidden
  }, transition2(function(transitionProps, tick, state, tickIndex) {
    return react.createElement(renderTick, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
      tickIndex,
      format: formatValue,
      rotate: tickRotation,
      textBaseline,
      textAnchor: textAlign,
      animatedProps: transitionProps
    }, tick), onClick ? {
      onClick
    } : {}), {}, {
      key: tick.key
    }));
  }), react.createElement(animated.line, {
    style: theme.axis.domain.line,
    x1: 0,
    x2: animatedProps2.lineX2,
    y1: 0,
    y2: animatedProps2.lineY2
  }), legendNode);
};
Axis4.defaultProps = {
  x: 0,
  y: 0,
  tickSize: 5,
  tickPadding: 5,
  tickRotation: 0,
  renderTick: defaultTickRenderer,
  legendPosition: "end",
  legendOffset: 0
};
var Axis$1 = react.memo(Axis4);
var positions = ["top", "right", "bottom", "left"];
var Axes = function Axes2(_ref) {
  var xScale = _ref.xScale, yScale = _ref.yScale, width = _ref.width, height = _ref.height, top2 = _ref.top, right2 = _ref.right, bottom2 = _ref.bottom, left2 = _ref.left;
  var axes = {
    top: top2,
    right: right2,
    bottom: bottom2,
    left: left2
  };
  return positions.map(function(position) {
    var axis2 = axes[position];
    if (!axis2)
      return null;
    var isXAxis = position === "top" || position === "bottom";
    var ticksPosition = position === "top" || position === "left" ? "before" : "after";
    return react.createElement(Axis$1, Object.assign({
      key: position
    }, axis2, {
      axis: isXAxis ? "x" : "y",
      x: position === "right" ? width : 0,
      y: position === "bottom" ? height : 0,
      scale: isXAxis ? xScale : yScale,
      length: isXAxis ? width : height,
      ticksPosition
    }));
  });
};
react.memo(Axes);
var GridLine = function GridLine2(_ref) {
  var animatedProps2 = _ref.animatedProps;
  var theme = useTheme();
  return react.createElement(animated.line, Object.assign({}, animatedProps2, theme.grid.line));
};
GridLine.defaultProps = {
  x1: 0,
  x2: 0,
  y1: 0,
  y2: 0
};
var GridLine$1 = react.memo(GridLine);
var GridLines2 = function GridLines3(_ref) {
  var lines = _ref.lines;
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var transition2 = useTransition(lines, {
    key: function key(line2) {
      return line2.key;
    },
    initial: function initial(line2) {
      return {
        opacity: 1,
        x1: line2.x1,
        x2: line2.x2,
        y1: line2.y1,
        y2: line2.y2
      };
    },
    from: function from(line2) {
      return {
        opacity: 0,
        x1: line2.x1,
        x2: line2.x2,
        y1: line2.y1,
        y2: line2.y2
      };
    },
    enter: function enter(line2) {
      return {
        opacity: 1,
        x1: line2.x1,
        x2: line2.x2,
        y1: line2.y1,
        y2: line2.y2
      };
    },
    update: function update(line2) {
      return {
        opacity: 1,
        x1: line2.x1,
        x2: line2.x2,
        y1: line2.y1,
        y2: line2.y2
      };
    },
    leave: {
      opacity: 0
    },
    config: springConfig,
    immediate: !animate
  });
  return react.createElement("g", null, transition2(function(animatedProps2, line2) {
    return react.createElement(GridLine$1, Object.assign({}, line2, {
      key: line2.key,
      animatedProps: animatedProps2
    }));
  }));
};
var GridLines$1 = react.memo(GridLines2);
var Grid2 = function Grid3(_ref) {
  var width = _ref.width, height = _ref.height, xScale = _ref.xScale, yScale = _ref.yScale, xValues = _ref.xValues, yValues = _ref.yValues;
  var xLines = react.useMemo(function() {
    if (!xScale)
      return false;
    return computeGridLines({
      width,
      height,
      scale: xScale,
      axis: "x",
      values: xValues
    });
  }, [xScale, xValues, width, height]);
  var yLines = yScale ? computeGridLines({
    width,
    height,
    scale: yScale,
    axis: "y",
    values: yValues
  }) : false;
  return react.createElement(react.Fragment, null, xLines && react.createElement(GridLines$1, {
    type: "x",
    lines: xLines
  }), yLines && react.createElement(GridLines$1, {
    type: "y",
    lines: yLines
  }));
};
react.memo(Grid2);
function _defineProperty$34(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys$32(object2, enumerableOnly) {
  var keys4 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys4.push.apply(keys4, symbols2);
  }
  return keys4;
}
function _objectSpread2$3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$32(Object(source), true).forEach(function(key) {
        _defineProperty$34(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$32(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var BulletMarkersItem = function BulletMarkersItem2(_ref) {
  var _ref$animatedProps = _ref.animatedProps, color3 = _ref$animatedProps.color, transform = _ref$animatedProps.transform, x5 = _ref$animatedProps.x, y14 = _ref$animatedProps.y1, y22 = _ref$animatedProps.y2, data3 = _ref.data, _onMouseEnter = _ref.onMouseEnter, _onMouseMove = _ref.onMouseMove, _onMouseLeave = _ref.onMouseLeave, _onClick = _ref.onClick;
  return react.createElement(animated.line, {
    transform,
    x1: x5,
    x2: x5,
    y1: y14,
    y2: y22,
    fill: "none",
    stroke: color3,
    strokeWidth: "5",
    onMouseMove: function onMouseMove(event) {
      return _onMouseMove(data3, event);
    },
    onMouseEnter: function onMouseEnter(event) {
      return _onMouseEnter(data3, event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return _onMouseLeave(data3, event);
    },
    onClick: function onClick(event) {
      return _onClick(data3, event);
    }
  });
};
var BulletRectsItem = function BulletRectsItem2(_ref) {
  var _ref$animatedProps = _ref.animatedProps, x5 = _ref$animatedProps.x, y7 = _ref$animatedProps.y, width = _ref$animatedProps.width, height = _ref$animatedProps.height, color3 = _ref$animatedProps.color, data3 = _ref.data, _onMouseEnter = _ref.onMouseEnter, _onMouseMove = _ref.onMouseMove, _onMouseLeave = _ref.onMouseLeave, _onClick = _ref.onClick;
  return react.createElement(animated.rect, {
    x: x5,
    y: y7,
    width: to$1(width, function(value2) {
      return Math.max(value2, 0);
    }),
    height: to$1(height, function(value2) {
      return Math.max(value2, 0);
    }),
    fill: color3,
    onMouseMove: function onMouseMove(event) {
      return _onMouseMove(data3, event);
    },
    onMouseEnter: function onMouseEnter(event) {
      return _onMouseEnter(data3, event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return _onMouseLeave(data3, event);
    },
    onClick: function onClick(event) {
      return _onClick(data3, event);
    }
  });
};
var defaultProps3 = {
  layout: "horizontal",
  reverse: false,
  spacing: 30,
  axisPosition: "after",
  titlePosition: "before",
  titleAlign: "middle",
  titleRotation: 0,
  titleOffsetX: 0,
  titleOffsetY: 0,
  rangeComponent: BulletRectsItem,
  rangeColors: "seq:cool",
  measureComponent: BulletRectsItem,
  measureColors: "seq:red_purple",
  markers: [],
  markerComponent: BulletMarkersItem,
  markerColors: "seq:red_purple",
  rangeBorderWidth: 0,
  rangeBorderColor: {
    from: "color"
  },
  measureSize: 0.4,
  measureBorderWidth: 0,
  measureBorderColor: {
    from: "color"
  },
  markerSize: 0.6,
  isInteractive: true,
  animate: motionDefaultProps.animate,
  motionConfig: motionDefaultProps.config,
  margin: defaultMargin2,
  role: "img"
};
function _arrayWithHoles$22(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit$22(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e2 = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayLikeToArray$22(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _unsupportedIterableToArray$22(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$22(o, minLen);
  var n3 = Object.prototype.toString.call(o).slice(8, -1);
  if (n3 === "Object" && o.constructor)
    n3 = o.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(n3);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray$22(o, minLen);
}
function _nonIterableRest$22() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray$22(arr, i) {
  return _arrayWithHoles$22(arr) || _iterableToArrayLimit$22(arr, i) || _unsupportedIterableToArray$22(arr, i) || _nonIterableRest$22();
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$22(arr);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
    return Array.from(iter);
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray$22(arr) || _nonIterableSpread3();
}
var stackValues = function stackValues2(values2, colorScale3) {
  var useAverage = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var normalized = _toConsumableArray4(values2).filter(function(v3) {
    return v3 !== 0;
  }).sort(function(a3, b10) {
    return a3 - b10;
  });
  return normalized.reduce(function(acc, v1, index4) {
    var _last$v;
    var _acc$slice = acc.slice(-1), _acc$slice2 = _slicedToArray$22(_acc$slice, 1), last2 = _acc$slice2[0];
    var v0 = (_last$v = last2 === null || last2 === void 0 ? void 0 : last2.v1) !== null && _last$v !== void 0 ? _last$v : 0;
    var sequentialValue = useAverage === true ? v0 + (v1 - v0) / 2 : v1;
    return [].concat(_toConsumableArray4(acc), [{
      index: index4,
      v0,
      v1,
      color: colorScale3(colorScale3.type === "sequential" ? sequentialValue : index4)
    }]);
  }, []);
};
var getComputeRect = function getComputeRect2(_ref) {
  var layout = _ref.layout, reverse3 = _ref.reverse, scale = _ref.scale, height = _ref.height;
  if (layout === "horizontal") {
    if (reverse3 === true) {
      return function(d2) {
        var x5 = scale(d2.v1);
        var w3 = scale(d2.v0) - x5;
        return {
          x: x5,
          y: 0,
          width: w3,
          height
        };
      };
    }
    return function(d2) {
      var x5 = scale(d2.v0);
      var w3 = scale(d2.v1) - x5;
      return {
        x: x5,
        y: 0,
        width: w3,
        height
      };
    };
  }
  if (reverse3 === true) {
    return function(d2) {
      var y7 = scale(d2.v0);
      var h2 = scale(d2.v1) - y7;
      return {
        x: 0,
        y: y7,
        width: height,
        height: h2
      };
    };
  }
  return function(d2) {
    var y7 = scale(d2.v1);
    var h2 = scale(d2.v0) - y7;
    return {
      x: 0,
      y: y7,
      width: height,
      height: h2
    };
  };
};
var computeRects = function computeRects2(_ref2) {
  var data3 = _ref2.data, layout = _ref2.layout, reverse3 = _ref2.reverse, scale = _ref2.scale, height = _ref2.height;
  var computeRect = getComputeRect({
    layout,
    reverse: reverse3,
    scale,
    height
  });
  return data3.map(function(d2) {
    return _objectSpread2$3({
      data: d2
    }, computeRect(d2));
  });
};
function _objectWithoutPropertiesLoose$26(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties$14(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$26(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var getPositionGenerator = function getPositionGenerator2(_ref) {
  var layout = _ref.layout, reverse3 = _ref.reverse, scale = _ref.scale, height = _ref.height, markerSize = _ref.markerSize;
  if (layout === "horizontal") {
    return function(marker) {
      var x5 = scale(marker.value);
      var y7 = height / 2;
      var rotation2 = reverse3 === true ? 180 : 0;
      return {
        x: x5,
        y: y7,
        size: markerSize,
        rotation: rotation2
      };
    };
  }
  return function(marker) {
    var x5 = height / 2;
    var y7 = scale(marker.value);
    var rotation2 = reverse3 === true ? 270 : 90;
    return {
      x: x5,
      y: y7,
      size: markerSize,
      rotation: rotation2
    };
  };
};
var BulletMarkers = function BulletMarkers2(_ref2) {
  var scale = _ref2.scale, layout = _ref2.layout, reverse3 = _ref2.reverse, markers = _ref2.markers, height = _ref2.height, markerSize = _ref2.markerSize, component = _ref2.component, onMouseEnter = _ref2.onMouseEnter, onMouseLeave = _ref2.onMouseLeave, onClick = _ref2.onClick;
  var getPosition2 = react.useMemo(function() {
    return getPositionGenerator({
      layout,
      reverse: reverse3,
      scale,
      height,
      markerSize
    });
  }, [layout, reverse3, scale, height, markerSize]);
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var transition2 = useTransition(markers.map(function(marker) {
    return _objectSpread2$3(_objectSpread2$3({}, marker), {}, {
      position: getPosition2(marker)
    });
  }), {
    key: function key(marker) {
      return "".concat(marker.index);
    },
    enter: function enter(_ref3) {
      var color3 = _ref3.color, position = _ref3.position;
      return {
        color: color3,
        transform: "rotate(".concat(position.rotation, ", ").concat(position.x, ", ").concat(position.y, ")"),
        x: position.x,
        y1: position.y - position.size / 2,
        y2: position.y + position.size / 2
      };
    },
    update: function update(_ref4) {
      var color3 = _ref4.color, position = _ref4.position;
      return {
        color: color3,
        transform: "rotate(".concat(position.rotation, ", ").concat(position.x, ", ").concat(position.y, ")"),
        x: position.x,
        y1: position.y - position.size / 2,
        y2: position.y + position.size / 2
      };
    },
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(react.Fragment, null, transition2(function(props, _ref5) {
    var position = _ref5.position, marker = _objectWithoutProperties$14(_ref5, ["position"]);
    return react.createElement(component, _objectSpread2$3(_objectSpread2$3(_objectSpread2$3({
      key: marker.index
    }, marker), position), {}, {
      animatedProps: props,
      data: marker,
      onMouseEnter,
      onMouseMove: onMouseEnter,
      onMouseLeave,
      onClick
    }));
  }));
};
var BulletRects = function BulletRects2(_ref) {
  var animatedProps2 = _ref.animatedProps, data3 = _ref.data, layout = _ref.layout, y7 = _ref.y, component = _ref.component, reverse3 = _ref.reverse, scale = _ref.scale, height = _ref.height, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, onClick = _ref.onClick;
  var rects = react.useMemo(function() {
    return computeRects({
      data: data3,
      layout,
      reverse: reverse3,
      scale,
      height
    });
  }, [data3, layout, reverse3, scale, height]);
  var getTransform2 = function getTransform3(value2) {
    return "translate(".concat(layout === "horizontal" ? 0 : value2, ",").concat(layout === "horizontal" ? value2 : 0, ")");
  };
  var transform = animatedProps2 ? to$1(animatedProps2.measuresY, getTransform2) : getTransform2(y7);
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var transition2 = useTransition(rects, {
    key: function key(rect) {
      return "".concat(rect.data.index);
    },
    enter: function enter(rect) {
      return {
        x: rect.x,
        y: rect.y,
        width: rect.width,
        height: rect.height,
        color: rect.data.color
      };
    },
    update: function update(rect) {
      return {
        x: rect.x,
        y: rect.y,
        width: rect.width,
        height: rect.height,
        color: rect.data.color
      };
    },
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(animated.g, {
    transform
  }, transition2(function(props, rect) {
    return react.createElement(component, {
      key: rect.data.index,
      index: rect.data.index,
      animatedProps: props,
      data: rect.data,
      x: props.x.get(),
      y: props.y.get(),
      width: to$1(props.width, function(value2) {
        return Math.max(value2, 0);
      }).get(),
      height: to$1(props.height, function(value2) {
        return Math.max(value2, 0);
      }).get(),
      color: props.color.get(),
      onMouseEnter,
      onMouseMove: onMouseEnter,
      onMouseLeave,
      onClick
    });
  }));
};
var BulletItem = function BulletItem2(_ref) {
  var _theme$labels;
  var id3 = _ref.id, scale = _ref.scale, layout = _ref.layout, reverse3 = _ref.reverse, axisPosition = _ref.axisPosition, x5 = _ref.x, y7 = _ref.y, width = _ref.width, height = _ref.height, _ref$title = _ref.title, title2 = _ref$title === void 0 ? id3 : _ref$title, titlePosition = _ref.titlePosition, titleAlign = _ref.titleAlign, titleOffsetX = _ref.titleOffsetX, titleOffsetY = _ref.titleOffsetY, titleRotation = _ref.titleRotation, rangeComponent = _ref.rangeComponent, rangeColors = _ref.rangeColors, ranges = _ref.ranges, measureComponent = _ref.measureComponent, measureHeight = _ref.measureHeight, measureColors = _ref.measureColors, measures = _ref.measures, markerComponent = _ref.markerComponent, markerColors = _ref.markerColors, markerHeight = _ref.markerHeight, _ref$markers = _ref.markers, markers = _ref$markers === void 0 ? [] : _ref$markers, onRangeClick = _ref.onRangeClick, onMeasureClick = _ref.onMeasureClick, onMarkerClick = _ref.onMarkerClick;
  var theme = useTheme();
  var _useTooltip = useTooltip2(), showTooltipFromEvent2 = _useTooltip.showTooltipFromEvent, hideTooltip2 = _useTooltip.hideTooltip;
  var computedRanges = react.useMemo(function() {
    var rangeColorScale = getColorScale2(rangeColors, scale);
    return stackValues(ranges, rangeColorScale);
  }, [rangeColors, ranges, scale]);
  var computedMeasures = react.useMemo(function() {
    var measureColorScale = getColorScale2(measureColors, scale);
    return stackValues(measures, measureColorScale);
  }, [measureColors, measures, scale]);
  var computedMarkers = react.useMemo(function() {
    var markerColorScale = getColorScale2(markerColors, scale);
    return markers.map(function(marker, index4) {
      return {
        value: marker,
        index: index4,
        color: markerColorScale(markerColorScale.type === "sequential" ? marker : index4)
      };
    });
  }, [markerColors, markers, scale]);
  var rangeNodes = react.createElement(BulletRects, {
    data: computedRanges,
    scale,
    layout,
    reverse: reverse3,
    x: 0,
    y: 0,
    width,
    height,
    component: rangeComponent,
    onMouseEnter: function onMouseEnter(range7, event) {
      showTooltipFromEvent2(react.createElement(BasicTooltip, {
        id: react.createElement("span", null, react.createElement("strong", null, range7.v0), " to ", react.createElement("strong", null, range7.v1)),
        enableChip: true,
        color: range7.color
      }), event);
    },
    onMouseLeave: hideTooltip2,
    onClick: function onClick(range7, event) {
      onRangeClick === null || onRangeClick === void 0 ? void 0 : onRangeClick(_objectSpread2$3({
        id: id3
      }, range7), event);
    }
  });
  var markerNodes = react.createElement(BulletMarkers, {
    markers: computedMarkers,
    scale,
    layout,
    reverse: reverse3,
    height,
    markerSize: markerHeight,
    component: markerComponent,
    onMouseEnter: function onMouseEnter(marker, event) {
      showTooltipFromEvent2(react.createElement(BasicTooltip, {
        id: react.createElement("strong", null, marker.value),
        enableChip: true,
        color: marker.color
      }), event);
    },
    onMouseLeave: hideTooltip2,
    onClick: function onClick(marker, event) {
      onMarkerClick === null || onMarkerClick === void 0 ? void 0 : onMarkerClick(_objectSpread2$3({
        id: id3
      }, marker), event);
    }
  });
  var axisX = layout === "vertical" && axisPosition === "after" ? height : 0;
  var axisY = layout === "horizontal" && axisPosition === "after" ? height : 0;
  var axis2 = react.createElement("g", {
    transform: "translate(".concat(axisX, ",").concat(axisY, ")")
  }, react.createElement(Axis$1, {
    axis: layout === "horizontal" ? "x" : "y",
    length: layout === "horizontal" ? width : height,
    scale,
    ticksPosition: axisPosition
  }));
  var titleX = layout === "horizontal" ? titlePosition === "before" ? titleOffsetX : width + titleOffsetX : height / 2 + titleOffsetX;
  var titleY = layout === "horizontal" ? height / 2 + titleOffsetY : titlePosition === "before" ? titleOffsetY : width + titleOffsetY;
  var titleNode = react.createElement("g", {
    transform: "translate(".concat(titleX, ",").concat(titleY, ") rotate(").concat(titleRotation, ")")
  }, typeof title2 === "string" ? react.createElement("text", {
    style: _objectSpread2$3(_objectSpread2$3({}, theme === null || theme === void 0 ? void 0 : (_theme$labels = theme.labels) === null || _theme$labels === void 0 ? void 0 : _theme$labels.text), {}, {
      dominantBaseline: "central",
      textAnchor: titleAlign
    })
  }, title2) : title2);
  var _useMotionConfig = useMotionConfig(), animate = _useMotionConfig.animate, springConfig = _useMotionConfig.config;
  var animatedProps2 = useSpring({
    measuresY: (height - measureHeight) / 2,
    transform: "translate(".concat(x5, ",").concat(y7, ")"),
    config: springConfig,
    immediate: !animate
  });
  return react.createElement(animated.g, {
    transform: animatedProps2.transform
  }, rangeNodes, react.createElement(BulletRects, {
    animatedProps: animatedProps2,
    data: computedMeasures,
    scale,
    layout,
    reverse: reverse3,
    x: 0,
    y: 0,
    width,
    height: measureHeight,
    component: measureComponent,
    onMouseEnter: function onMouseEnter(measure, event) {
      showTooltipFromEvent2(react.createElement(BasicTooltip, {
        id: react.createElement("strong", null, measure.v1),
        enableChip: true,
        color: measure.color
      }), event);
    },
    onMouseLeave: hideTooltip2,
    onClick: function onClick(measure, event) {
      onMeasureClick === null || onMeasureClick === void 0 ? void 0 : onMeasureClick(_objectSpread2$3({
        id: id3
      }, measure), event);
    }
  }), axis2, markerNodes, titleNode);
};
var useEnhancedData = function useEnhancedData2(data3, _ref) {
  var layout = _ref.layout, reverse3 = _ref.reverse, height = _ref.height, width = _ref.width;
  return react.useMemo(function() {
    return data3.map(function(d2) {
      var _d$markers;
      var all = [].concat(_toConsumableArray4(d2.ranges), _toConsumableArray4(d2.measures), _toConsumableArray4((_d$markers = d2.markers) !== null && _d$markers !== void 0 ? _d$markers : []));
      var max6 = Math.max.apply(Math, _toConsumableArray4(all));
      var min5 = Math.min.apply(Math, _toConsumableArray4(all).concat([0]));
      var scale = linear2().domain([min5, max6]);
      if (layout === "horizontal") {
        scale.range(reverse3 === true ? [width, 0] : [0, width]);
      } else {
        scale.range(reverse3 === true ? [0, height] : [height, 0]);
      }
      return _objectSpread2$3(_objectSpread2$3({}, d2), {}, {
        scale
      });
    });
  }, [data3, height, layout, reverse3, width]);
};
var Bullet = function Bullet2(props) {
  var _defaultProps$props = _objectSpread2$3(_objectSpread2$3({}, defaultProps3), props), data3 = _defaultProps$props.data, layout = _defaultProps$props.layout, spacing = _defaultProps$props.spacing, measureSize = _defaultProps$props.measureSize, markerSize = _defaultProps$props.markerSize, reverse3 = _defaultProps$props.reverse, axisPosition = _defaultProps$props.axisPosition, partialMargin = _defaultProps$props.margin, width = _defaultProps$props.width, height = _defaultProps$props.height, titlePosition = _defaultProps$props.titlePosition, titleAlign = _defaultProps$props.titleAlign, titleOffsetX = _defaultProps$props.titleOffsetX, titleOffsetY = _defaultProps$props.titleOffsetY, titleRotation = _defaultProps$props.titleRotation, rangeComponent = _defaultProps$props.rangeComponent, rangeColors = _defaultProps$props.rangeColors, measureComponent = _defaultProps$props.measureComponent, measureColors = _defaultProps$props.measureColors, markerComponent = _defaultProps$props.markerComponent, markerColors = _defaultProps$props.markerColors, theme = _defaultProps$props.theme, animate = _defaultProps$props.animate, motionConfig = _defaultProps$props.motionConfig, isInteractive = _defaultProps$props.isInteractive, onRangeClick = _defaultProps$props.onRangeClick, onMeasureClick = _defaultProps$props.onMeasureClick, onMarkerClick = _defaultProps$props.onMarkerClick, role = _defaultProps$props.role;
  var _useDimensions = useDimensions(width, height, partialMargin), margin = _useDimensions.margin, innerWidth = _useDimensions.innerWidth, innerHeight = _useDimensions.innerHeight;
  var itemHeight = layout === "horizontal" ? (innerHeight - spacing * (data3.length - 1)) / data3.length : (innerWidth - spacing * (data3.length - 1)) / data3.length;
  var measureHeight = itemHeight * measureSize;
  var markerHeight = itemHeight * markerSize;
  var enhancedData = useEnhancedData(data3, {
    layout,
    reverse: reverse3,
    width: innerWidth,
    height: innerHeight
  });
  return react.createElement(Container, {
    isInteractive,
    theme,
    animate,
    motionConfig
  }, react.createElement(SvgWrapper, {
    width,
    height,
    margin,
    role
  }, enhancedData.map(function(d2, i) {
    return react.createElement(BulletItem, Object.assign({
      key: d2.id
    }, d2, {
      layout,
      reverse: reverse3,
      x: layout === "vertical" ? itemHeight * i + spacing * i : 0,
      y: layout === "horizontal" ? itemHeight * i + spacing * i : 0,
      width: innerWidth,
      height: itemHeight,
      titlePosition,
      titleAlign,
      titleOffsetX,
      titleOffsetY,
      titleRotation,
      measureHeight,
      markerHeight,
      rangeComponent,
      rangeColors,
      measureComponent,
      measureColors,
      markerComponent,
      markerColors,
      axisPosition,
      onRangeClick,
      onMeasureClick,
      onMarkerClick
    }));
  })));
};
var ResponsiveBullet = function ResponsiveBullet2(props) {
  return react.createElement(ResponsiveWrapper, null, function(_ref) {
    var width = _ref.width, height = _ref.height;
    return react.createElement(Bullet, Object.assign({
      width,
      height
    }, props));
  });
};

// dist/components/nivo.js
function NivoBullet({data: data3}) {
  return /* @__PURE__ */ react.createElement("div", {
    style: {height: "500px"}
  }, /* @__PURE__ */ react.createElement(ResponsiveBullet, {
    data: data3,
    margin: {top: 50, right: 90, bottom: 50, left: 90},
    spacing: 46,
    titleAlign: "start",
    titleOffsetX: -70,
    measureSize: 0.2
  }));
}

// snowpack/pkg/@vx/scale.js
function applyDomain2(scale, config4) {
  if (config4.domain) {
    if ("nice" in scale || "quantiles" in scale) {
      scale.domain(config4.domain);
    } else if ("padding" in scale) {
      scale.domain(config4.domain);
    } else {
      scale.domain(config4.domain);
    }
  }
}
function applyRange2(scale, config4) {
  if (config4.range) {
    if ("padding" in scale) {
      scale.range(config4.range);
    } else {
      scale.range(config4.range);
    }
  }
}
function applyAlign2(scale, config4) {
  if ("align" in scale && "align" in config4 && typeof config4.align !== "undefined") {
    scale.align(config4.align);
  }
}
function applyBase2(scale, config4) {
  if ("base" in scale && "base" in config4 && typeof config4.base !== "undefined") {
    scale.base(config4.base);
  }
}
function applyClamp2(scale, config4) {
  if ("clamp" in scale && "clamp" in config4 && typeof config4.clamp !== "undefined") {
    scale.clamp(config4.clamp);
  }
}
function applyConstant2(scale, config4) {
  if ("constant" in scale && "constant" in config4 && typeof config4.constant !== "undefined") {
    scale.constant(config4.constant);
  }
}
function applyExponent2(scale, config4) {
  if ("exponent" in scale && "exponent" in config4 && typeof config4.exponent !== "undefined") {
    scale.exponent(config4.exponent);
  }
}
var interpolatorMap2 = {
  lab: lab$1,
  hcl: interpolateHcl,
  "hcl-long": hclLong,
  hsl: interpolateHsl,
  "hsl-long": hslLong,
  cubehelix: interpolateCubehelix,
  "cubehelix-long": cubehelixLong,
  rgb: interpolateRgb
};
function createColorInterpolator2(interpolate3) {
  switch (interpolate3) {
    case "lab":
    case "hcl":
    case "hcl-long":
    case "hsl":
    case "hsl-long":
    case "cubehelix":
    case "cubehelix-long":
    case "rgb":
      return interpolatorMap2[interpolate3];
  }
  var type3 = interpolate3.type, gamma3 = interpolate3.gamma;
  var interpolator = interpolatorMap2[type3];
  return typeof gamma3 === "undefined" ? interpolator : interpolator.gamma(gamma3);
}
function applyInterpolate2(scale, config4) {
  if ("interpolate" in config4 && "interpolate" in scale && typeof config4.interpolate !== "undefined") {
    var interpolator = createColorInterpolator2(config4.interpolate);
    scale.interpolate(interpolator);
  }
}
var TEST_TIME2 = new Date(Date.UTC(2020, 1, 2, 3, 4, 5));
var TEST_FORMAT2 = "%Y-%m-%d %H:%M";
function isUtcScale2(scale) {
  var output = scale.tickFormat(1, TEST_FORMAT2)(TEST_TIME2);
  return output === "2020-02-02 03:04";
}
var localTimeIntervals2 = {
  day,
  hour,
  minute,
  month,
  second,
  week: sunday,
  year
};
var utcIntervals2 = {
  day: utcDay,
  hour: utcHour,
  minute: utcMinute,
  month: utcMonth,
  second,
  week: utcSunday,
  year: utcYear
};
function applyNice2(scale, config4) {
  if ("nice" in config4 && typeof config4.nice !== "undefined" && "nice" in scale) {
    var nice4 = config4.nice;
    if (typeof nice4 === "boolean") {
      if (nice4) {
        scale.nice();
      }
    } else if (typeof nice4 === "number") {
      scale.nice(nice4);
    } else {
      var timeScale = scale;
      var isUtc = isUtcScale2(timeScale);
      if (typeof nice4 === "string") {
        timeScale.nice(isUtc ? utcIntervals2[nice4] : localTimeIntervals2[nice4]);
      } else {
        var interval3 = nice4.interval, step = nice4.step;
        var parsedInterval = (isUtc ? utcIntervals2[interval3] : localTimeIntervals2[interval3]).every(step);
        if (parsedInterval != null) {
          timeScale.nice(parsedInterval);
        }
      }
    }
  }
}
function applyPadding2(scale, config4) {
  if ("padding" in scale && "padding" in config4 && typeof config4.padding !== "undefined") {
    scale.padding(config4.padding);
  }
  if ("paddingInner" in scale && "paddingInner" in config4 && typeof config4.paddingInner !== "undefined") {
    scale.paddingInner(config4.paddingInner);
  }
  if ("paddingOuter" in scale && "paddingOuter" in config4 && typeof config4.paddingOuter !== "undefined") {
    scale.paddingOuter(config4.paddingOuter);
  }
}
function applyReverse2(scale, config4) {
  if (config4.reverse) {
    var reversedRange = scale.range().slice().reverse();
    if ("padding" in scale) {
      scale.range(reversedRange);
    } else {
      scale.range(reversedRange);
    }
  }
}
function applyRound2(scale, config4) {
  if ("round" in config4 && typeof config4.round !== "undefined") {
    if (config4.round && "interpolate" in config4 && typeof config4.interpolate !== "undefined") {
      console.warn("[vx/scale/applyRound] ignoring round: scale config contains round and interpolate. only applying interpolate. config:", config4);
    } else if ("round" in scale) {
      scale.round(config4.round);
    } else if ("interpolate" in scale && config4.round) {
      scale.interpolate(interpolateRound);
    }
  }
}
function applyUnknown2(scale, config4) {
  if ("unknown" in scale && "unknown" in config4 && typeof config4.unknown !== "undefined") {
    scale.unknown(config4.unknown);
  }
}
function applyZero2(scale, config4) {
  if ("zero" in config4 && config4.zero === true) {
    var domain = scale.domain();
    var a3 = domain[0], b10 = domain[1];
    var isDescending = b10 < a3;
    var _ref = isDescending ? [b10, a3] : [a3, b10], min5 = _ref[0], max6 = _ref[1];
    var domainWithZero = [Math.min(0, min5), Math.max(0, max6)];
    scale.domain(isDescending ? domainWithZero.reverse() : domainWithZero);
  }
}
var ALL_OPERATORS2 = [
  "domain",
  "nice",
  "zero",
  "interpolate",
  "round",
  "range",
  "reverse",
  "align",
  "base",
  "clamp",
  "constant",
  "exponent",
  "padding",
  "unknown"
];
var operators2 = {
  domain: applyDomain2,
  nice: applyNice2,
  zero: applyZero2,
  interpolate: applyInterpolate2,
  round: applyRound2,
  align: applyAlign2,
  base: applyBase2,
  clamp: applyClamp2,
  constant: applyConstant2,
  exponent: applyExponent2,
  padding: applyPadding2,
  range: applyRange2,
  reverse: applyReverse2,
  unknown: applyUnknown2
};
function scaleOperator2() {
  for (var _len = arguments.length, ops = new Array(_len), _key = 0; _key < _len; _key++) {
    ops[_key] = arguments[_key];
  }
  var selection2 = new Set(ops);
  var selectedOps = ALL_OPERATORS2.filter(function(o) {
    return selection2.has(o);
  });
  return function applyOperators(scale, config4) {
    if (typeof config4 !== "undefined") {
      selectedOps.forEach(function(op) {
        operators2[op](scale, config4);
      });
    }
    return scale;
  };
}
var updateLinearScale2 = scaleOperator2("domain", "range", "reverse", "clamp", "interpolate", "nice", "round", "zero");
function createLinearScale2(config4) {
  return updateLinearScale2(linear2(), config4);
}
var updateTimeScale = scaleOperator2("domain", "range", "reverse", "clamp", "interpolate", "nice", "round");
function createTimeScale(config4) {
  return updateTimeScale(time(), config4);
}

// snowpack/pkg/@vx/mock-data/lib/mocks/appleStock.js
var appleStock_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var appleStock = [{
    date: "2007-04-24T07:00:00.000Z",
    close: 93.24
  }, {
    date: "2007-04-25T07:00:00.000Z",
    close: 95.35
  }, {
    date: "2007-04-26T07:00:00.000Z",
    close: 98.84
  }, {
    date: "2007-04-27T07:00:00.000Z",
    close: 99.92
  }, {
    date: "2007-04-30T07:00:00.000Z",
    close: 99.8
  }, {
    date: "2007-05-01T07:00:00.000Z",
    close: 99.47
  }, {
    date: "2007-05-02T07:00:00.000Z",
    close: 100.39
  }, {
    date: "2007-05-03T07:00:00.000Z",
    close: 100.4
  }, {
    date: "2007-05-04T07:00:00.000Z",
    close: 100.81
  }, {
    date: "2007-05-07T07:00:00.000Z",
    close: 103.92
  }, {
    date: "2007-05-08T07:00:00.000Z",
    close: 105.06
  }, {
    date: "2007-05-09T07:00:00.000Z",
    close: 106.88
  }, {
    date: "2007-05-10T07:00:00.000Z",
    close: 107.34
  }, {
    date: "2007-05-11T07:00:00.000Z",
    close: 108.74
  }, {
    date: "2007-05-14T07:00:00.000Z",
    close: 109.36
  }, {
    date: "2007-05-15T07:00:00.000Z",
    close: 107.52
  }, {
    date: "2007-05-16T07:00:00.000Z",
    close: 107.34
  }, {
    date: "2007-05-17T07:00:00.000Z",
    close: 109.44
  }, {
    date: "2007-05-18T07:00:00.000Z",
    close: 110.02
  }, {
    date: "2007-05-21T07:00:00.000Z",
    close: 111.98
  }, {
    date: "2007-05-22T07:00:00.000Z",
    close: 113.54
  }, {
    date: "2007-05-23T07:00:00.000Z",
    close: 112.89
  }, {
    date: "2007-05-24T07:00:00.000Z",
    close: 110.69
  }, {
    date: "2007-05-25T07:00:00.000Z",
    close: 113.62
  }, {
    date: "2007-05-29T07:00:00.000Z",
    close: 114.35
  }, {
    date: "2007-05-30T07:00:00.000Z",
    close: 118.77
  }, {
    date: "2007-05-31T07:00:00.000Z",
    close: 121.19
  }, {
    date: "2007-06-01T07:00:00.000Z",
    close: 118.4
  }, {
    date: "2007-06-04T07:00:00.000Z",
    close: 121.33
  }, {
    date: "2007-06-05T07:00:00.000Z",
    close: 122.67
  }, {
    date: "2007-06-06T07:00:00.000Z",
    close: 123.64
  }, {
    date: "2007-06-07T07:00:00.000Z",
    close: 124.07
  }, {
    date: "2007-06-08T07:00:00.000Z",
    close: 124.49
  }, {
    date: "2007-06-11T07:00:00.000Z",
    close: 120.19
  }, {
    date: "2007-06-12T07:00:00.000Z",
    close: 120.38
  }, {
    date: "2007-06-13T07:00:00.000Z",
    close: 117.5
  }, {
    date: "2007-06-14T07:00:00.000Z",
    close: 118.75
  }, {
    date: "2007-06-15T07:00:00.000Z",
    close: 120.5
  }, {
    date: "2007-06-18T07:00:00.000Z",
    close: 125.09
  }, {
    date: "2007-06-19T07:00:00.000Z",
    close: 123.66
  }, {
    date: "2007-06-20T07:00:00.000Z",
    close: 121.55
  }, {
    date: "2007-06-21T07:00:00.000Z",
    close: 123.9
  }, {
    date: "2007-06-22T07:00:00.000Z",
    close: 123
  }, {
    date: "2007-06-25T07:00:00.000Z",
    close: 122.34
  }, {
    date: "2007-06-26T07:00:00.000Z",
    close: 119.65
  }, {
    date: "2007-06-27T07:00:00.000Z",
    close: 121.89
  }, {
    date: "2007-06-28T07:00:00.000Z",
    close: 120.56
  }, {
    date: "2007-06-29T07:00:00.000Z",
    close: 122.04
  }, {
    date: "2007-07-02T07:00:00.000Z",
    close: 121.26
  }, {
    date: "2007-07-03T07:00:00.000Z",
    close: 127.17
  }, {
    date: "2007-07-05T07:00:00.000Z",
    close: 132.75
  }, {
    date: "2007-07-06T07:00:00.000Z",
    close: 132.3
  }, {
    date: "2007-07-09T07:00:00.000Z",
    close: 130.33
  }, {
    date: "2007-07-10T07:00:00.000Z",
    close: 132.35
  }, {
    date: "2007-07-11T07:00:00.000Z",
    close: 132.39
  }, {
    date: "2007-07-12T07:00:00.000Z",
    close: 134.07
  }, {
    date: "2007-07-13T07:00:00.000Z",
    close: 137.73
  }, {
    date: "2007-07-16T07:00:00.000Z",
    close: 138.1
  }, {
    date: "2007-07-17T07:00:00.000Z",
    close: 138.91
  }, {
    date: "2007-07-18T07:00:00.000Z",
    close: 138.12
  }, {
    date: "2007-07-19T07:00:00.000Z",
    close: 140
  }, {
    date: "2007-07-20T07:00:00.000Z",
    close: 143.75
  }, {
    date: "2007-07-23T07:00:00.000Z",
    close: 143.7
  }, {
    date: "2007-07-24T07:00:00.000Z",
    close: 134.89
  }, {
    date: "2007-07-25T07:00:00.000Z",
    close: 137.26
  }, {
    date: "2007-07-26T07:00:00.000Z",
    close: 146
  }, {
    date: "2007-07-27T07:00:00.000Z",
    close: 143.85
  }, {
    date: "2007-07-30T07:00:00.000Z",
    close: 141.43
  }, {
    date: "2007-07-31T07:00:00.000Z",
    close: 131.76
  }, {
    date: "2007-08-01T07:00:00.000Z",
    close: 135
  }, {
    date: "2007-08-02T07:00:00.000Z",
    close: 136.49
  }, {
    date: "2007-08-03T07:00:00.000Z",
    close: 131.85
  }, {
    date: "2007-08-06T07:00:00.000Z",
    close: 135.25
  }, {
    date: "2007-08-07T07:00:00.000Z",
    close: 135.03
  }, {
    date: "2007-08-08T07:00:00.000Z",
    close: 134.01
  }, {
    date: "2007-08-09T07:00:00.000Z",
    close: 126.39
  }, {
    date: "2007-08-10T07:00:00.000Z",
    close: 125
  }, {
    date: "2007-08-13T07:00:00.000Z",
    close: 127.79
  }, {
    date: "2007-08-14T07:00:00.000Z",
    close: 124.03
  }, {
    date: "2007-08-15T07:00:00.000Z",
    close: 119.9
  }, {
    date: "2007-08-16T07:00:00.000Z",
    close: 117.05
  }, {
    date: "2007-08-17T07:00:00.000Z",
    close: 122.06
  }, {
    date: "2007-08-20T07:00:00.000Z",
    close: 122.22
  }, {
    date: "2007-08-21T07:00:00.000Z",
    close: 127.57
  }, {
    date: "2007-08-22T07:00:00.000Z",
    close: 132.51
  }, {
    date: "2007-08-23T07:00:00.000Z",
    close: 131.07
  }, {
    date: "2007-08-24T07:00:00.000Z",
    close: 135.3
  }, {
    date: "2007-08-27T07:00:00.000Z",
    close: 132.25
  }, {
    date: "2007-08-28T07:00:00.000Z",
    close: 126.82
  }, {
    date: "2007-08-29T07:00:00.000Z",
    close: 134.08
  }, {
    date: "2007-08-30T07:00:00.000Z",
    close: 136.25
  }, {
    date: "2007-08-31T07:00:00.000Z",
    close: 138.48
  }, {
    date: "2007-09-04T07:00:00.000Z",
    close: 144.16
  }, {
    date: "2007-09-05T07:00:00.000Z",
    close: 136.76
  }, {
    date: "2007-09-06T07:00:00.000Z",
    close: 135.01
  }, {
    date: "2007-09-07T07:00:00.000Z",
    close: 131.77
  }, {
    date: "2007-09-10T07:00:00.000Z",
    close: 136.71
  }, {
    date: "2007-09-11T07:00:00.000Z",
    close: 135.49
  }, {
    date: "2007-09-12T07:00:00.000Z",
    close: 136.85
  }, {
    date: "2007-09-13T07:00:00.000Z",
    close: 137.2
  }, {
    date: "2007-09-14T07:00:00.000Z",
    close: 138.81
  }, {
    date: "2007-09-17T07:00:00.000Z",
    close: 138.41
  }, {
    date: "2007-09-18T07:00:00.000Z",
    close: 140.92
  }, {
    date: "2007-09-19T07:00:00.000Z",
    close: 140.77
  }, {
    date: "2007-09-20T07:00:00.000Z",
    close: 140.31
  }, {
    date: "2007-09-21T07:00:00.000Z",
    close: 144.15
  }, {
    date: "2007-09-24T07:00:00.000Z",
    close: 148.28
  }, {
    date: "2007-09-25T07:00:00.000Z",
    close: 153.18
  }, {
    date: "2007-09-26T07:00:00.000Z",
    close: 152.77
  }, {
    date: "2007-09-27T07:00:00.000Z",
    close: 154.5
  }, {
    date: "2007-09-28T07:00:00.000Z",
    close: 153.47
  }, {
    date: "2007-10-01T07:00:00.000Z",
    close: 156.34
  }, {
    date: "2007-10-02T07:00:00.000Z",
    close: 158.45
  }, {
    date: "2007-10-03T07:00:00.000Z",
    close: 157.92
  }, {
    date: "2007-10-04T07:00:00.000Z",
    close: 156.24
  }, {
    date: "2007-10-05T07:00:00.000Z",
    close: 161.45
  }, {
    date: "2007-10-08T07:00:00.000Z",
    close: 167.91
  }, {
    date: "2007-10-09T07:00:00.000Z",
    close: 167.86
  }, {
    date: "2007-10-10T07:00:00.000Z",
    close: 166.79
  }, {
    date: "2007-10-11T07:00:00.000Z",
    close: 162.23
  }, {
    date: "2007-10-12T07:00:00.000Z",
    close: 167.25
  }, {
    date: "2007-10-15T07:00:00.000Z",
    close: 166.98
  }, {
    date: "2007-10-16T07:00:00.000Z",
    close: 169.58
  }, {
    date: "2007-10-17T07:00:00.000Z",
    close: 172.75
  }, {
    date: "2007-10-18T07:00:00.000Z",
    close: 173.5
  }, {
    date: "2007-10-19T07:00:00.000Z",
    close: 170.42
  }, {
    date: "2007-10-22T07:00:00.000Z",
    close: 174.36
  }, {
    date: "2007-10-23T07:00:00.000Z",
    close: 186.16
  }, {
    date: "2007-10-24T07:00:00.000Z",
    close: 185.93
  }, {
    date: "2007-10-25T07:00:00.000Z",
    close: 182.78
  }, {
    date: "2007-10-26T07:00:00.000Z",
    close: 184.7
  }, {
    date: "2007-10-29T07:00:00.000Z",
    close: 185.09
  }, {
    date: "2007-10-30T07:00:00.000Z",
    close: 187
  }, {
    date: "2007-10-31T07:00:00.000Z",
    close: 189.95
  }, {
    date: "2007-11-01T07:00:00.000Z",
    close: 187.44
  }, {
    date: "2007-11-02T07:00:00.000Z",
    close: 187.87
  }, {
    date: "2007-11-05T08:00:00.000Z",
    close: 186.18
  }, {
    date: "2007-11-06T08:00:00.000Z",
    close: 191.79
  }, {
    date: "2007-11-07T08:00:00.000Z",
    close: 186.3
  }, {
    date: "2007-11-08T08:00:00.000Z",
    close: 175.47
  }, {
    date: "2007-11-09T08:00:00.000Z",
    close: 165.37
  }, {
    date: "2007-11-12T08:00:00.000Z",
    close: 153.76
  }, {
    date: "2007-11-13T08:00:00.000Z",
    close: 169.96
  }, {
    date: "2007-11-14T08:00:00.000Z",
    close: 166.11
  }, {
    date: "2007-11-15T08:00:00.000Z",
    close: 164.3
  }, {
    date: "2007-11-16T08:00:00.000Z",
    close: 166.39
  }, {
    date: "2007-11-19T08:00:00.000Z",
    close: 163.95
  }, {
    date: "2007-11-20T08:00:00.000Z",
    close: 168.85
  }, {
    date: "2007-11-21T08:00:00.000Z",
    close: 168.46
  }, {
    date: "2007-11-23T08:00:00.000Z",
    close: 171.54
  }, {
    date: "2007-11-26T08:00:00.000Z",
    close: 172.54
  }, {
    date: "2007-11-27T08:00:00.000Z",
    close: 174.81
  }, {
    date: "2007-11-28T08:00:00.000Z",
    close: 180.22
  }, {
    date: "2007-11-29T08:00:00.000Z",
    close: 184.29
  }, {
    date: "2007-11-30T08:00:00.000Z",
    close: 182.22
  }, {
    date: "2007-12-03T08:00:00.000Z",
    close: 178.86
  }, {
    date: "2007-12-04T08:00:00.000Z",
    close: 179.81
  }, {
    date: "2007-12-05T08:00:00.000Z",
    close: 185.5
  }, {
    date: "2007-12-06T08:00:00.000Z",
    close: 189.95
  }, {
    date: "2007-12-07T08:00:00.000Z",
    close: 194.3
  }, {
    date: "2007-12-10T08:00:00.000Z",
    close: 194.21
  }, {
    date: "2007-12-11T08:00:00.000Z",
    close: 188.54
  }, {
    date: "2007-12-12T08:00:00.000Z",
    close: 190.86
  }, {
    date: "2007-12-13T08:00:00.000Z",
    close: 191.83
  }, {
    date: "2007-12-14T08:00:00.000Z",
    close: 190.39
  }, {
    date: "2007-12-17T08:00:00.000Z",
    close: 184.4
  }, {
    date: "2007-12-18T08:00:00.000Z",
    close: 182.98
  }, {
    date: "2007-12-19T08:00:00.000Z",
    close: 183.12
  }, {
    date: "2007-12-20T08:00:00.000Z",
    close: 187.21
  }, {
    date: "2007-12-21T08:00:00.000Z",
    close: 193.91
  }, {
    date: "2007-12-24T08:00:00.000Z",
    close: 198.8
  }, {
    date: "2007-12-26T08:00:00.000Z",
    close: 198.95
  }, {
    date: "2007-12-27T08:00:00.000Z",
    close: 198.57
  }, {
    date: "2007-12-28T08:00:00.000Z",
    close: 199.83
  }, {
    date: "2007-12-31T08:00:00.000Z",
    close: 198.08
  }, {
    date: "2008-01-02T08:00:00.000Z",
    close: 194.84
  }, {
    date: "2008-01-03T08:00:00.000Z",
    close: 194.93
  }, {
    date: "2008-01-04T08:00:00.000Z",
    close: 180.05
  }, {
    date: "2008-01-07T08:00:00.000Z",
    close: 177.64
  }, {
    date: "2008-01-08T08:00:00.000Z",
    close: 171.25
  }, {
    date: "2008-01-09T08:00:00.000Z",
    close: 179.4
  }, {
    date: "2008-01-10T08:00:00.000Z",
    close: 178.02
  }, {
    date: "2008-01-11T08:00:00.000Z",
    close: 172.69
  }, {
    date: "2008-01-14T08:00:00.000Z",
    close: 178.78
  }, {
    date: "2008-01-15T08:00:00.000Z",
    close: 169.04
  }, {
    date: "2008-01-16T08:00:00.000Z",
    close: 159.64
  }, {
    date: "2008-01-17T08:00:00.000Z",
    close: 160.89
  }, {
    date: "2008-01-18T08:00:00.000Z",
    close: 161.36
  }, {
    date: "2008-01-22T08:00:00.000Z",
    close: 155.64
  }, {
    date: "2008-01-23T08:00:00.000Z",
    close: 139.07
  }, {
    date: "2008-01-24T08:00:00.000Z",
    close: 135.6
  }, {
    date: "2008-01-25T08:00:00.000Z",
    close: 130.01
  }, {
    date: "2008-01-28T08:00:00.000Z",
    close: 130.01
  }, {
    date: "2008-01-29T08:00:00.000Z",
    close: 131.54
  }, {
    date: "2008-01-30T08:00:00.000Z",
    close: 132.18
  }, {
    date: "2008-01-31T08:00:00.000Z",
    close: 135.36
  }, {
    date: "2008-02-01T08:00:00.000Z",
    close: 133.75
  }, {
    date: "2008-02-04T08:00:00.000Z",
    close: 131.65
  }, {
    date: "2008-02-05T08:00:00.000Z",
    close: 129.36
  }, {
    date: "2008-02-06T08:00:00.000Z",
    close: 122
  }, {
    date: "2008-02-07T08:00:00.000Z",
    close: 121.24
  }, {
    date: "2008-02-08T08:00:00.000Z",
    close: 125.48
  }, {
    date: "2008-02-11T08:00:00.000Z",
    close: 129.45
  }, {
    date: "2008-02-12T08:00:00.000Z",
    close: 124.86
  }, {
    date: "2008-02-13T08:00:00.000Z",
    close: 129.4
  }, {
    date: "2008-02-14T08:00:00.000Z",
    close: 127.46
  }, {
    date: "2008-02-15T08:00:00.000Z",
    close: 124.63
  }, {
    date: "2008-02-19T08:00:00.000Z",
    close: 122.18
  }, {
    date: "2008-02-20T08:00:00.000Z",
    close: 123.82
  }, {
    date: "2008-02-21T08:00:00.000Z",
    close: 121.54
  }, {
    date: "2008-02-22T08:00:00.000Z",
    close: 119.46
  }, {
    date: "2008-02-25T08:00:00.000Z",
    close: 119.74
  }, {
    date: "2008-02-26T08:00:00.000Z",
    close: 119.15
  }, {
    date: "2008-02-27T08:00:00.000Z",
    close: 122.96
  }, {
    date: "2008-02-28T08:00:00.000Z",
    close: 129.91
  }, {
    date: "2008-02-29T08:00:00.000Z",
    close: 125.02
  }, {
    date: "2008-03-03T08:00:00.000Z",
    close: 121.73
  }, {
    date: "2008-03-04T08:00:00.000Z",
    close: 124.62
  }, {
    date: "2008-03-05T08:00:00.000Z",
    close: 124.49
  }, {
    date: "2008-03-06T08:00:00.000Z",
    close: 120.93
  }, {
    date: "2008-03-07T08:00:00.000Z",
    close: 122.25
  }, {
    date: "2008-03-10T07:00:00.000Z",
    close: 119.69
  }, {
    date: "2008-03-11T07:00:00.000Z",
    close: 127.35
  }, {
    date: "2008-03-12T07:00:00.000Z",
    close: 126.03
  }, {
    date: "2008-03-13T07:00:00.000Z",
    close: 127.94
  }, {
    date: "2008-03-14T07:00:00.000Z",
    close: 126.61
  }, {
    date: "2008-03-17T07:00:00.000Z",
    close: 126.73
  }, {
    date: "2008-03-18T07:00:00.000Z",
    close: 132.82
  }, {
    date: "2008-03-19T07:00:00.000Z",
    close: 129.67
  }, {
    date: "2008-03-20T07:00:00.000Z",
    close: 133.27
  }, {
    date: "2008-03-24T07:00:00.000Z",
    close: 139.53
  }, {
    date: "2008-03-25T07:00:00.000Z",
    close: 140.98
  }, {
    date: "2008-03-26T07:00:00.000Z",
    close: 145.06
  }, {
    date: "2008-03-27T07:00:00.000Z",
    close: 140.25
  }, {
    date: "2008-03-28T07:00:00.000Z",
    close: 143.01
  }, {
    date: "2008-03-31T07:00:00.000Z",
    close: 143.5
  }, {
    date: "2008-04-01T07:00:00.000Z",
    close: 149.53
  }, {
    date: "2008-04-02T07:00:00.000Z",
    close: 147.49
  }, {
    date: "2008-04-03T07:00:00.000Z",
    close: 151.61
  }, {
    date: "2008-04-04T07:00:00.000Z",
    close: 153.08
  }, {
    date: "2008-04-07T07:00:00.000Z",
    close: 155.89
  }, {
    date: "2008-04-08T07:00:00.000Z",
    close: 152.84
  }, {
    date: "2008-04-09T07:00:00.000Z",
    close: 151.44
  }, {
    date: "2008-04-10T07:00:00.000Z",
    close: 154.55
  }, {
    date: "2008-04-11T07:00:00.000Z",
    close: 147.14
  }, {
    date: "2008-04-14T07:00:00.000Z",
    close: 147.78
  }, {
    date: "2008-04-15T07:00:00.000Z",
    close: 148.38
  }, {
    date: "2008-04-16T07:00:00.000Z",
    close: 153.7
  }, {
    date: "2008-04-17T07:00:00.000Z",
    close: 154.49
  }, {
    date: "2008-04-18T07:00:00.000Z",
    close: 161.04
  }, {
    date: "2008-04-21T07:00:00.000Z",
    close: 168.16
  }, {
    date: "2008-04-22T07:00:00.000Z",
    close: 160.2
  }, {
    date: "2008-04-23T07:00:00.000Z",
    close: 162.89
  }, {
    date: "2008-04-24T07:00:00.000Z",
    close: 168.94
  }, {
    date: "2008-04-25T07:00:00.000Z",
    close: 169.73
  }, {
    date: "2008-04-28T07:00:00.000Z",
    close: 172.24
  }, {
    date: "2008-04-29T07:00:00.000Z",
    close: 175.05
  }, {
    date: "2008-04-30T07:00:00.000Z",
    close: 173.95
  }, {
    date: "2008-05-01T07:00:00.000Z",
    close: 180
  }, {
    date: "2008-05-02T07:00:00.000Z",
    close: 180.94
  }, {
    date: "2008-05-05T07:00:00.000Z",
    close: 184.73
  }, {
    date: "2008-05-06T07:00:00.000Z",
    close: 186.66
  }, {
    date: "2008-05-07T07:00:00.000Z",
    close: 182.59
  }, {
    date: "2008-05-08T07:00:00.000Z",
    close: 185.06
  }, {
    date: "2008-05-09T07:00:00.000Z",
    close: 183.45
  }, {
    date: "2008-05-12T07:00:00.000Z",
    close: 188.16
  }, {
    date: "2008-05-13T07:00:00.000Z",
    close: 189.96
  }, {
    date: "2008-05-14T07:00:00.000Z",
    close: 186.26
  }, {
    date: "2008-05-15T07:00:00.000Z",
    close: 189.73
  }, {
    date: "2008-05-16T07:00:00.000Z",
    close: 187.62
  }, {
    date: "2008-05-19T07:00:00.000Z",
    close: 183.6
  }, {
    date: "2008-05-20T07:00:00.000Z",
    close: 185.9
  }, {
    date: "2008-05-21T07:00:00.000Z",
    close: 178.19
  }, {
    date: "2008-05-22T07:00:00.000Z",
    close: 177.05
  }, {
    date: "2008-05-23T07:00:00.000Z",
    close: 181.17
  }, {
    date: "2008-05-27T07:00:00.000Z",
    close: 186.43
  }, {
    date: "2008-05-28T07:00:00.000Z",
    close: 187.01
  }, {
    date: "2008-05-29T07:00:00.000Z",
    close: 186.69
  }, {
    date: "2008-05-30T07:00:00.000Z",
    close: 188.75
  }, {
    date: "2008-06-02T07:00:00.000Z",
    close: 186.1
  }, {
    date: "2008-06-03T07:00:00.000Z",
    close: 185.37
  }, {
    date: "2008-06-04T07:00:00.000Z",
    close: 185.19
  }, {
    date: "2008-06-05T07:00:00.000Z",
    close: 189.43
  }, {
    date: "2008-06-06T07:00:00.000Z",
    close: 185.64
  }, {
    date: "2008-06-09T07:00:00.000Z",
    close: 181.61
  }, {
    date: "2008-06-10T07:00:00.000Z",
    close: 185.64
  }, {
    date: "2008-06-11T07:00:00.000Z",
    close: 180.81
  }, {
    date: "2008-06-12T07:00:00.000Z",
    close: 173.26
  }, {
    date: "2008-06-13T07:00:00.000Z",
    close: 172.37
  }, {
    date: "2008-06-16T07:00:00.000Z",
    close: 176.84
  }, {
    date: "2008-06-17T07:00:00.000Z",
    close: 181.43
  }, {
    date: "2008-06-18T07:00:00.000Z",
    close: 178.75
  }, {
    date: "2008-06-19T07:00:00.000Z",
    close: 180.9
  }, {
    date: "2008-06-20T07:00:00.000Z",
    close: 175.27
  }, {
    date: "2008-06-23T07:00:00.000Z",
    close: 173.16
  }, {
    date: "2008-06-24T07:00:00.000Z",
    close: 173.25
  }, {
    date: "2008-06-25T07:00:00.000Z",
    close: 177.39
  }, {
    date: "2008-06-26T07:00:00.000Z",
    close: 168.26
  }, {
    date: "2008-06-27T07:00:00.000Z",
    close: 170.09
  }, {
    date: "2008-06-30T07:00:00.000Z",
    close: 167.44
  }, {
    date: "2008-07-01T07:00:00.000Z",
    close: 174.68
  }, {
    date: "2008-07-02T07:00:00.000Z",
    close: 168.18
  }, {
    date: "2008-07-03T07:00:00.000Z",
    close: 170.12
  }, {
    date: "2008-07-07T07:00:00.000Z",
    close: 175.16
  }, {
    date: "2008-07-08T07:00:00.000Z",
    close: 179.55
  }, {
    date: "2008-07-09T07:00:00.000Z",
    close: 174.25
  }, {
    date: "2008-07-10T07:00:00.000Z",
    close: 176.63
  }, {
    date: "2008-07-11T07:00:00.000Z",
    close: 172.58
  }, {
    date: "2008-07-14T07:00:00.000Z",
    close: 173.88
  }, {
    date: "2008-07-15T07:00:00.000Z",
    close: 169.64
  }, {
    date: "2008-07-16T07:00:00.000Z",
    close: 172.81
  }, {
    date: "2008-07-17T07:00:00.000Z",
    close: 171.81
  }, {
    date: "2008-07-18T07:00:00.000Z",
    close: 165.15
  }, {
    date: "2008-07-21T07:00:00.000Z",
    close: 166.29
  }, {
    date: "2008-07-22T07:00:00.000Z",
    close: 162.02
  }, {
    date: "2008-07-23T07:00:00.000Z",
    close: 166.26
  }, {
    date: "2008-07-24T07:00:00.000Z",
    close: 159.03
  }, {
    date: "2008-07-25T07:00:00.000Z",
    close: 162.12
  }, {
    date: "2008-07-28T07:00:00.000Z",
    close: 154.4
  }, {
    date: "2008-07-29T07:00:00.000Z",
    close: 157.08
  }, {
    date: "2008-07-30T07:00:00.000Z",
    close: 159.88
  }, {
    date: "2008-07-31T07:00:00.000Z",
    close: 158.95
  }, {
    date: "2008-08-01T07:00:00.000Z",
    close: 156.66
  }, {
    date: "2008-08-04T07:00:00.000Z",
    close: 153.23
  }, {
    date: "2008-08-05T07:00:00.000Z",
    close: 160.64
  }, {
    date: "2008-08-06T07:00:00.000Z",
    close: 164.19
  }, {
    date: "2008-08-07T07:00:00.000Z",
    close: 163.57
  }, {
    date: "2008-08-08T07:00:00.000Z",
    close: 169.55
  }, {
    date: "2008-08-11T07:00:00.000Z",
    close: 173.56
  }, {
    date: "2008-08-12T07:00:00.000Z",
    close: 176.73
  }, {
    date: "2008-08-13T07:00:00.000Z",
    close: 179.3
  }, {
    date: "2008-08-14T07:00:00.000Z",
    close: 179.32
  }, {
    date: "2008-08-15T07:00:00.000Z",
    close: 175.74
  }, {
    date: "2008-08-18T07:00:00.000Z",
    close: 175.39
  }, {
    date: "2008-08-19T07:00:00.000Z",
    close: 173.53
  }, {
    date: "2008-08-20T07:00:00.000Z",
    close: 175.84
  }, {
    date: "2008-08-21T07:00:00.000Z",
    close: 174.29
  }, {
    date: "2008-08-22T07:00:00.000Z",
    close: 176.79
  }, {
    date: "2008-08-25T07:00:00.000Z",
    close: 172.55
  }, {
    date: "2008-08-26T07:00:00.000Z",
    close: 173.64
  }, {
    date: "2008-08-27T07:00:00.000Z",
    close: 174.67
  }, {
    date: "2008-08-28T07:00:00.000Z",
    close: 173.74
  }, {
    date: "2008-08-29T07:00:00.000Z",
    close: 169.53
  }, {
    date: "2008-09-02T07:00:00.000Z",
    close: 166.19
  }, {
    date: "2008-09-03T07:00:00.000Z",
    close: 166.96
  }, {
    date: "2008-09-04T07:00:00.000Z",
    close: 161.22
  }, {
    date: "2008-09-05T07:00:00.000Z",
    close: 160.18
  }, {
    date: "2008-09-08T07:00:00.000Z",
    close: 157.92
  }, {
    date: "2008-09-09T07:00:00.000Z",
    close: 151.68
  }, {
    date: "2008-09-10T07:00:00.000Z",
    close: 151.61
  }, {
    date: "2008-09-11T07:00:00.000Z",
    close: 152.65
  }, {
    date: "2008-09-12T07:00:00.000Z",
    close: 148.94
  }, {
    date: "2008-09-15T07:00:00.000Z",
    close: 140.36
  }, {
    date: "2008-09-16T07:00:00.000Z",
    close: 139.88
  }, {
    date: "2008-09-17T07:00:00.000Z",
    close: 127.83
  }, {
    date: "2008-09-18T07:00:00.000Z",
    close: 134.09
  }, {
    date: "2008-09-19T07:00:00.000Z",
    close: 140.91
  }, {
    date: "2008-09-22T07:00:00.000Z",
    close: 131.05
  }, {
    date: "2008-09-23T07:00:00.000Z",
    close: 126.84
  }, {
    date: "2008-09-24T07:00:00.000Z",
    close: 128.71
  }, {
    date: "2008-09-25T07:00:00.000Z",
    close: 131.93
  }, {
    date: "2008-09-26T07:00:00.000Z",
    close: 128.24
  }, {
    date: "2008-09-29T07:00:00.000Z",
    close: 105.26
  }, {
    date: "2008-09-30T07:00:00.000Z",
    close: 113.66
  }, {
    date: "2008-10-01T07:00:00.000Z",
    close: 109.12
  }, {
    date: "2008-10-02T07:00:00.000Z",
    close: 100.1
  }, {
    date: "2008-10-03T07:00:00.000Z",
    close: 97.07
  }, {
    date: "2008-10-06T07:00:00.000Z",
    close: 98.14
  }, {
    date: "2008-10-07T07:00:00.000Z",
    close: 89.16
  }, {
    date: "2008-10-08T07:00:00.000Z",
    close: 89.79
  }, {
    date: "2008-10-09T07:00:00.000Z",
    close: 88.74
  }, {
    date: "2008-10-10T07:00:00.000Z",
    close: 96.8
  }, {
    date: "2008-10-13T07:00:00.000Z",
    close: 110.26
  }, {
    date: "2008-10-14T07:00:00.000Z",
    close: 104.08
  }, {
    date: "2008-10-15T07:00:00.000Z",
    close: 97.95
  }, {
    date: "2008-10-16T07:00:00.000Z",
    close: 101.89
  }, {
    date: "2008-10-17T07:00:00.000Z",
    close: 97.4
  }, {
    date: "2008-10-20T07:00:00.000Z",
    close: 98.44
  }, {
    date: "2008-10-21T07:00:00.000Z",
    close: 91.49
  }, {
    date: "2008-10-22T07:00:00.000Z",
    close: 96.87
  }, {
    date: "2008-10-23T07:00:00.000Z",
    close: 98.23
  }, {
    date: "2008-10-24T07:00:00.000Z",
    close: 96.38
  }, {
    date: "2008-10-27T07:00:00.000Z",
    close: 92.09
  }, {
    date: "2008-10-28T07:00:00.000Z",
    close: 99.91
  }, {
    date: "2008-10-29T07:00:00.000Z",
    close: 104.55
  }, {
    date: "2008-10-30T07:00:00.000Z",
    close: 111.04
  }, {
    date: "2008-10-31T07:00:00.000Z",
    close: 107.59
  }, {
    date: "2008-11-03T08:00:00.000Z",
    close: 106.96
  }, {
    date: "2008-11-04T08:00:00.000Z",
    close: 110.99
  }, {
    date: "2008-11-05T08:00:00.000Z",
    close: 103.3
  }, {
    date: "2008-11-06T08:00:00.000Z",
    close: 99.1
  }, {
    date: "2008-11-07T08:00:00.000Z",
    close: 98.24
  }, {
    date: "2008-11-10T08:00:00.000Z",
    close: 95.88
  }, {
    date: "2008-11-11T08:00:00.000Z",
    close: 94.77
  }, {
    date: "2008-11-12T08:00:00.000Z",
    close: 90.12
  }, {
    date: "2008-11-13T08:00:00.000Z",
    close: 96.44
  }, {
    date: "2008-11-14T08:00:00.000Z",
    close: 90.24
  }, {
    date: "2008-11-17T08:00:00.000Z",
    close: 88.14
  }, {
    date: "2008-11-18T08:00:00.000Z",
    close: 89.91
  }, {
    date: "2008-11-19T08:00:00.000Z",
    close: 86.29
  }, {
    date: "2008-11-20T08:00:00.000Z",
    close: 80.49
  }, {
    date: "2008-11-21T08:00:00.000Z",
    close: 82.58
  }, {
    date: "2008-11-24T08:00:00.000Z",
    close: 92.95
  }, {
    date: "2008-11-25T08:00:00.000Z",
    close: 90.8
  }, {
    date: "2008-11-26T08:00:00.000Z",
    close: 95
  }, {
    date: "2008-11-27T08:00:00.000Z",
    close: 95
  }, {
    date: "2008-11-28T08:00:00.000Z",
    close: 92.67
  }, {
    date: "2008-12-01T08:00:00.000Z",
    close: 88.93
  }, {
    date: "2008-12-02T08:00:00.000Z",
    close: 92.47
  }, {
    date: "2008-12-03T08:00:00.000Z",
    close: 95.9
  }, {
    date: "2008-12-04T08:00:00.000Z",
    close: 91.41
  }, {
    date: "2008-12-05T08:00:00.000Z",
    close: 94
  }, {
    date: "2008-12-08T08:00:00.000Z",
    close: 99.72
  }, {
    date: "2008-12-09T08:00:00.000Z",
    close: 100.06
  }, {
    date: "2008-12-10T08:00:00.000Z",
    close: 98.21
  }, {
    date: "2008-12-11T08:00:00.000Z",
    close: 95
  }, {
    date: "2008-12-12T08:00:00.000Z",
    close: 98.27
  }, {
    date: "2008-12-15T08:00:00.000Z",
    close: 94.75
  }, {
    date: "2008-12-16T08:00:00.000Z",
    close: 95.43
  }, {
    date: "2008-12-17T08:00:00.000Z",
    close: 89.16
  }, {
    date: "2008-12-18T08:00:00.000Z",
    close: 89.43
  }, {
    date: "2008-12-19T08:00:00.000Z",
    close: 90
  }, {
    date: "2008-12-22T08:00:00.000Z",
    close: 85.74
  }, {
    date: "2008-12-23T08:00:00.000Z",
    close: 86.38
  }, {
    date: "2008-12-24T08:00:00.000Z",
    close: 85.04
  }, {
    date: "2008-12-25T08:00:00.000Z",
    close: 85.04
  }, {
    date: "2008-12-26T08:00:00.000Z",
    close: 85.81
  }, {
    date: "2008-12-29T08:00:00.000Z",
    close: 86.61
  }, {
    date: "2008-12-30T08:00:00.000Z",
    close: 86.29
  }, {
    date: "2008-12-31T08:00:00.000Z",
    close: 85.35
  }, {
    date: "2009-01-01T08:00:00.000Z",
    close: 85.35
  }, {
    date: "2009-01-02T08:00:00.000Z",
    close: 90.75
  }, {
    date: "2009-01-05T08:00:00.000Z",
    close: 94.58
  }, {
    date: "2009-01-06T08:00:00.000Z",
    close: 93.02
  }, {
    date: "2009-01-07T08:00:00.000Z",
    close: 91.01
  }, {
    date: "2009-01-08T08:00:00.000Z",
    close: 92.7
  }, {
    date: "2009-01-09T08:00:00.000Z",
    close: 90.58
  }, {
    date: "2009-01-12T08:00:00.000Z",
    close: 88.66
  }, {
    date: "2009-01-13T08:00:00.000Z",
    close: 87.71
  }, {
    date: "2009-01-14T08:00:00.000Z",
    close: 85.33
  }, {
    date: "2009-01-15T08:00:00.000Z",
    close: 83.38
  }, {
    date: "2009-01-16T08:00:00.000Z",
    close: 82.33
  }, {
    date: "2009-01-20T08:00:00.000Z",
    close: 78.2
  }, {
    date: "2009-01-21T08:00:00.000Z",
    close: 82.83
  }, {
    date: "2009-01-22T08:00:00.000Z",
    close: 88.36
  }, {
    date: "2009-01-23T08:00:00.000Z",
    close: 88.36
  }, {
    date: "2009-01-26T08:00:00.000Z",
    close: 89.64
  }, {
    date: "2009-01-27T08:00:00.000Z",
    close: 90.73
  }, {
    date: "2009-01-28T08:00:00.000Z",
    close: 94.2
  }, {
    date: "2009-01-29T08:00:00.000Z",
    close: 93
  }, {
    date: "2009-01-30T08:00:00.000Z",
    close: 90.13
  }, {
    date: "2009-02-02T08:00:00.000Z",
    close: 91.51
  }, {
    date: "2009-02-03T08:00:00.000Z",
    close: 92.98
  }, {
    date: "2009-02-04T08:00:00.000Z",
    close: 93.55
  }, {
    date: "2009-02-05T08:00:00.000Z",
    close: 96.46
  }, {
    date: "2009-02-06T08:00:00.000Z",
    close: 99.72
  }, {
    date: "2009-02-09T08:00:00.000Z",
    close: 102.51
  }, {
    date: "2009-02-10T08:00:00.000Z",
    close: 97.83
  }, {
    date: "2009-02-11T08:00:00.000Z",
    close: 96.82
  }, {
    date: "2009-02-12T08:00:00.000Z",
    close: 99.27
  }, {
    date: "2009-02-13T08:00:00.000Z",
    close: 99.16
  }, {
    date: "2009-02-17T08:00:00.000Z",
    close: 94.53
  }, {
    date: "2009-02-18T08:00:00.000Z",
    close: 94.37
  }, {
    date: "2009-02-19T08:00:00.000Z",
    close: 90.64
  }, {
    date: "2009-02-20T08:00:00.000Z",
    close: 91.2
  }, {
    date: "2009-02-23T08:00:00.000Z",
    close: 86.95
  }, {
    date: "2009-02-24T08:00:00.000Z",
    close: 90.25
  }, {
    date: "2009-02-25T08:00:00.000Z",
    close: 91.16
  }, {
    date: "2009-02-26T08:00:00.000Z",
    close: 89.19
  }, {
    date: "2009-02-27T08:00:00.000Z",
    close: 89.31
  }, {
    date: "2009-03-02T08:00:00.000Z",
    close: 87.94
  }, {
    date: "2009-03-03T08:00:00.000Z",
    close: 88.37
  }, {
    date: "2009-03-04T08:00:00.000Z",
    close: 91.17
  }, {
    date: "2009-03-05T08:00:00.000Z",
    close: 88.84
  }, {
    date: "2009-03-06T08:00:00.000Z",
    close: 85.3
  }, {
    date: "2009-03-09T07:00:00.000Z",
    close: 83.11
  }, {
    date: "2009-03-10T07:00:00.000Z",
    close: 88.63
  }, {
    date: "2009-03-11T07:00:00.000Z",
    close: 92.68
  }, {
    date: "2009-03-12T07:00:00.000Z",
    close: 96.35
  }, {
    date: "2009-03-13T07:00:00.000Z",
    close: 95.93
  }, {
    date: "2009-03-16T07:00:00.000Z",
    close: 95.42
  }, {
    date: "2009-03-17T07:00:00.000Z",
    close: 99.66
  }, {
    date: "2009-03-18T07:00:00.000Z",
    close: 101.52
  }, {
    date: "2009-03-19T07:00:00.000Z",
    close: 101.62
  }, {
    date: "2009-03-20T07:00:00.000Z",
    close: 101.59
  }, {
    date: "2009-03-23T07:00:00.000Z",
    close: 107.66
  }, {
    date: "2009-03-24T07:00:00.000Z",
    close: 106.5
  }, {
    date: "2009-03-25T07:00:00.000Z",
    close: 106.49
  }, {
    date: "2009-03-26T07:00:00.000Z",
    close: 109.87
  }, {
    date: "2009-03-27T07:00:00.000Z",
    close: 106.85
  }, {
    date: "2009-03-30T07:00:00.000Z",
    close: 104.49
  }, {
    date: "2009-03-31T07:00:00.000Z",
    close: 105.12
  }, {
    date: "2009-04-01T07:00:00.000Z",
    close: 108.69
  }, {
    date: "2009-04-02T07:00:00.000Z",
    close: 112.71
  }, {
    date: "2009-04-03T07:00:00.000Z",
    close: 115.99
  }, {
    date: "2009-04-06T07:00:00.000Z",
    close: 118.45
  }, {
    date: "2009-04-07T07:00:00.000Z",
    close: 115
  }, {
    date: "2009-04-08T07:00:00.000Z",
    close: 116.32
  }, {
    date: "2009-04-09T07:00:00.000Z",
    close: 119.57
  }, {
    date: "2009-04-10T07:00:00.000Z",
    close: 119.57
  }, {
    date: "2009-04-13T07:00:00.000Z",
    close: 120.22
  }, {
    date: "2009-04-14T07:00:00.000Z",
    close: 118.31
  }, {
    date: "2009-04-15T07:00:00.000Z",
    close: 117.64
  }, {
    date: "2009-04-16T07:00:00.000Z",
    close: 121.45
  }, {
    date: "2009-04-17T07:00:00.000Z",
    close: 123.42
  }, {
    date: "2009-04-20T07:00:00.000Z",
    close: 120.5
  }, {
    date: "2009-04-21T07:00:00.000Z",
    close: 121.76
  }, {
    date: "2009-04-22T07:00:00.000Z",
    close: 121.51
  }, {
    date: "2009-04-23T07:00:00.000Z",
    close: 125.4
  }, {
    date: "2009-04-24T07:00:00.000Z",
    close: 123.9
  }, {
    date: "2009-04-27T07:00:00.000Z",
    close: 124.73
  }, {
    date: "2009-04-28T07:00:00.000Z",
    close: 123.9
  }, {
    date: "2009-04-29T07:00:00.000Z",
    close: 125.14
  }, {
    date: "2009-04-30T07:00:00.000Z",
    close: 125.83
  }, {
    date: "2009-05-01T07:00:00.000Z",
    close: 127.24
  }, {
    date: "2009-05-04T07:00:00.000Z",
    close: 132.07
  }, {
    date: "2009-05-05T07:00:00.000Z",
    close: 132.71
  }, {
    date: "2009-05-06T07:00:00.000Z",
    close: 132.5
  }, {
    date: "2009-05-07T07:00:00.000Z",
    close: 129.06
  }, {
    date: "2009-05-08T07:00:00.000Z",
    close: 129.19
  }, {
    date: "2009-05-11T07:00:00.000Z",
    close: 129.57
  }, {
    date: "2009-05-12T07:00:00.000Z",
    close: 124.42
  }, {
    date: "2009-05-13T07:00:00.000Z",
    close: 119.49
  }, {
    date: "2009-05-14T07:00:00.000Z",
    close: 122.95
  }, {
    date: "2009-05-15T07:00:00.000Z",
    close: 122.42
  }, {
    date: "2009-05-18T07:00:00.000Z",
    close: 126.65
  }, {
    date: "2009-05-19T07:00:00.000Z",
    close: 127.45
  }, {
    date: "2009-05-20T07:00:00.000Z",
    close: 125.87
  }, {
    date: "2009-05-21T07:00:00.000Z",
    close: 124.18
  }, {
    date: "2009-05-22T07:00:00.000Z",
    close: 122.5
  }, {
    date: "2009-05-26T07:00:00.000Z",
    close: 130.78
  }, {
    date: "2009-05-27T07:00:00.000Z",
    close: 133.05
  }, {
    date: "2009-05-28T07:00:00.000Z",
    close: 135.07
  }, {
    date: "2009-05-29T07:00:00.000Z",
    close: 135.81
  }, {
    date: "2009-06-01T07:00:00.000Z",
    close: 139.35
  }, {
    date: "2009-06-02T07:00:00.000Z",
    close: 139.49
  }, {
    date: "2009-06-03T07:00:00.000Z",
    close: 140.95
  }, {
    date: "2009-06-04T07:00:00.000Z",
    close: 143.74
  }, {
    date: "2009-06-05T07:00:00.000Z",
    close: 144.67
  }, {
    date: "2009-06-08T07:00:00.000Z",
    close: 143.85
  }, {
    date: "2009-06-09T07:00:00.000Z",
    close: 142.72
  }, {
    date: "2009-06-10T07:00:00.000Z",
    close: 140.25
  }, {
    date: "2009-06-11T07:00:00.000Z",
    close: 139.95
  }, {
    date: "2009-06-12T07:00:00.000Z",
    close: 136.97
  }, {
    date: "2009-06-15T07:00:00.000Z",
    close: 136.09
  }, {
    date: "2009-06-16T07:00:00.000Z",
    close: 136.35
  }, {
    date: "2009-06-17T07:00:00.000Z",
    close: 135.58
  }, {
    date: "2009-06-18T07:00:00.000Z",
    close: 135.88
  }, {
    date: "2009-06-19T07:00:00.000Z",
    close: 139.48
  }, {
    date: "2009-06-22T07:00:00.000Z",
    close: 137.37
  }, {
    date: "2009-06-23T07:00:00.000Z",
    close: 134.01
  }, {
    date: "2009-06-24T07:00:00.000Z",
    close: 136.22
  }, {
    date: "2009-06-25T07:00:00.000Z",
    close: 139.86
  }, {
    date: "2009-06-26T07:00:00.000Z",
    close: 142.44
  }, {
    date: "2009-06-29T07:00:00.000Z",
    close: 141.97
  }, {
    date: "2009-06-30T07:00:00.000Z",
    close: 142.43
  }, {
    date: "2009-07-01T07:00:00.000Z",
    close: 142.83
  }, {
    date: "2009-07-02T07:00:00.000Z",
    close: 140.02
  }, {
    date: "2009-07-03T07:00:00.000Z",
    close: 140.02
  }, {
    date: "2009-07-06T07:00:00.000Z",
    close: 138.61
  }, {
    date: "2009-07-07T07:00:00.000Z",
    close: 135.4
  }, {
    date: "2009-07-08T07:00:00.000Z",
    close: 137.22
  }, {
    date: "2009-07-09T07:00:00.000Z",
    close: 136.36
  }, {
    date: "2009-07-10T07:00:00.000Z",
    close: 138.52
  }, {
    date: "2009-07-13T07:00:00.000Z",
    close: 142.34
  }, {
    date: "2009-07-14T07:00:00.000Z",
    close: 142.27
  }, {
    date: "2009-07-15T07:00:00.000Z",
    close: 146.88
  }, {
    date: "2009-07-16T07:00:00.000Z",
    close: 147.52
  }, {
    date: "2009-07-17T07:00:00.000Z",
    close: 151.75
  }, {
    date: "2009-07-20T07:00:00.000Z",
    close: 152.91
  }, {
    date: "2009-07-21T07:00:00.000Z",
    close: 151.51
  }, {
    date: "2009-07-22T07:00:00.000Z",
    close: 156.74
  }, {
    date: "2009-07-23T07:00:00.000Z",
    close: 157.82
  }, {
    date: "2009-07-24T07:00:00.000Z",
    close: 159.99
  }, {
    date: "2009-07-27T07:00:00.000Z",
    close: 160.1
  }, {
    date: "2009-07-28T07:00:00.000Z",
    close: 160
  }, {
    date: "2009-07-29T07:00:00.000Z",
    close: 160.03
  }, {
    date: "2009-07-30T07:00:00.000Z",
    close: 162.79
  }, {
    date: "2009-07-31T07:00:00.000Z",
    close: 163.39
  }, {
    date: "2009-08-03T07:00:00.000Z",
    close: 166.43
  }, {
    date: "2009-08-04T07:00:00.000Z",
    close: 165.55
  }, {
    date: "2009-08-05T07:00:00.000Z",
    close: 165.11
  }, {
    date: "2009-08-06T07:00:00.000Z",
    close: 163.91
  }, {
    date: "2009-08-07T07:00:00.000Z",
    close: 165.51
  }, {
    date: "2009-08-10T07:00:00.000Z",
    close: 164.72
  }, {
    date: "2009-08-12T07:00:00.000Z",
    close: 165.31
  }, {
    date: "2009-08-13T07:00:00.000Z",
    close: 168.42
  }, {
    date: "2009-08-14T07:00:00.000Z",
    close: 166.78
  }, {
    date: "2009-08-17T07:00:00.000Z",
    close: 159.59
  }, {
    date: "2009-08-18T07:00:00.000Z",
    close: 164
  }, {
    date: "2009-08-19T07:00:00.000Z",
    close: 164.6
  }, {
    date: "2009-08-20T07:00:00.000Z",
    close: 166.33
  }, {
    date: "2009-08-21T07:00:00.000Z",
    close: 169.22
  }, {
    date: "2009-08-24T07:00:00.000Z",
    close: 169.06
  }, {
    date: "2009-08-25T07:00:00.000Z",
    close: 169.4
  }, {
    date: "2009-08-26T07:00:00.000Z",
    close: 167.41
  }, {
    date: "2009-08-27T07:00:00.000Z",
    close: 169.45
  }, {
    date: "2009-08-28T07:00:00.000Z",
    close: 170.05
  }, {
    date: "2009-08-31T07:00:00.000Z",
    close: 168.21
  }, {
    date: "2009-09-01T07:00:00.000Z",
    close: 165.3
  }, {
    date: "2009-09-02T07:00:00.000Z",
    close: 165.18
  }, {
    date: "2009-09-03T07:00:00.000Z",
    close: 166.55
  }, {
    date: "2009-09-04T07:00:00.000Z",
    close: 170.31
  }, {
    date: "2009-09-08T07:00:00.000Z",
    close: 172.93
  }, {
    date: "2009-09-09T07:00:00.000Z",
    close: 171.14
  }, {
    date: "2009-09-10T07:00:00.000Z",
    close: 172.56
  }, {
    date: "2009-09-11T07:00:00.000Z",
    close: 172.16
  }, {
    date: "2009-09-14T07:00:00.000Z",
    close: 173.72
  }, {
    date: "2009-09-15T07:00:00.000Z",
    close: 175.16
  }, {
    date: "2009-09-16T07:00:00.000Z",
    close: 181.87
  }, {
    date: "2009-09-17T07:00:00.000Z",
    close: 184.55
  }, {
    date: "2009-09-18T07:00:00.000Z",
    close: 185.02
  }, {
    date: "2009-09-21T07:00:00.000Z",
    close: 184.02
  }, {
    date: "2009-09-22T07:00:00.000Z",
    close: 184.48
  }, {
    date: "2009-09-23T07:00:00.000Z",
    close: 185.5
  }, {
    date: "2009-09-24T07:00:00.000Z",
    close: 183.82
  }, {
    date: "2009-09-25T07:00:00.000Z",
    close: 182.37
  }, {
    date: "2009-09-28T07:00:00.000Z",
    close: 186.15
  }, {
    date: "2009-09-29T07:00:00.000Z",
    close: 185.38
  }, {
    date: "2009-09-30T07:00:00.000Z",
    close: 185.35
  }, {
    date: "2009-10-01T07:00:00.000Z",
    close: 180.86
  }, {
    date: "2009-10-02T07:00:00.000Z",
    close: 184.9
  }, {
    date: "2009-10-05T07:00:00.000Z",
    close: 186.02
  }, {
    date: "2009-10-06T07:00:00.000Z",
    close: 190.01
  }, {
    date: "2009-10-07T07:00:00.000Z",
    close: 190.25
  }, {
    date: "2009-10-08T07:00:00.000Z",
    close: 189.27
  }, {
    date: "2009-10-09T07:00:00.000Z",
    close: 190.47
  }, {
    date: "2009-10-12T07:00:00.000Z",
    close: 190.81
  }, {
    date: "2009-10-13T07:00:00.000Z",
    close: 190.02
  }, {
    date: "2009-10-14T07:00:00.000Z",
    close: 191.29
  }, {
    date: "2009-10-15T07:00:00.000Z",
    close: 190.56
  }, {
    date: "2009-10-16T07:00:00.000Z",
    close: 188.05
  }, {
    date: "2009-10-19T07:00:00.000Z",
    close: 189.86
  }, {
    date: "2009-10-20T07:00:00.000Z",
    close: 198.76
  }, {
    date: "2009-10-21T07:00:00.000Z",
    close: 204.92
  }, {
    date: "2009-10-22T07:00:00.000Z",
    close: 205.2
  }, {
    date: "2009-10-23T07:00:00.000Z",
    close: 203.94
  }, {
    date: "2009-10-26T07:00:00.000Z",
    close: 202.48
  }, {
    date: "2009-10-27T07:00:00.000Z",
    close: 197.37
  }, {
    date: "2009-10-28T07:00:00.000Z",
    close: 192.4
  }, {
    date: "2009-10-29T07:00:00.000Z",
    close: 196.35
  }, {
    date: "2009-10-30T07:00:00.000Z",
    close: 188.5
  }, {
    date: "2009-11-02T08:00:00.000Z",
    close: 189.31
  }, {
    date: "2009-11-03T08:00:00.000Z",
    close: 188.75
  }, {
    date: "2009-11-04T08:00:00.000Z",
    close: 190.81
  }, {
    date: "2009-11-05T08:00:00.000Z",
    close: 194.03
  }, {
    date: "2009-11-06T08:00:00.000Z",
    close: 194.34
  }, {
    date: "2009-11-09T08:00:00.000Z",
    close: 201.46
  }, {
    date: "2009-11-10T08:00:00.000Z",
    close: 202.98
  }, {
    date: "2009-11-11T08:00:00.000Z",
    close: 203.25
  }, {
    date: "2009-11-12T08:00:00.000Z",
    close: 201.99
  }, {
    date: "2009-11-13T08:00:00.000Z",
    close: 204.45
  }, {
    date: "2009-11-16T08:00:00.000Z",
    close: 206.63
  }, {
    date: "2009-11-17T08:00:00.000Z",
    close: 207
  }, {
    date: "2009-11-18T08:00:00.000Z",
    close: 205.96
  }, {
    date: "2009-11-19T08:00:00.000Z",
    close: 200.51
  }, {
    date: "2009-11-20T08:00:00.000Z",
    close: 199.92
  }, {
    date: "2009-11-23T08:00:00.000Z",
    close: 205.88
  }, {
    date: "2009-11-24T08:00:00.000Z",
    close: 204.44
  }, {
    date: "2009-11-25T08:00:00.000Z",
    close: 204.19
  }, {
    date: "2009-11-26T08:00:00.000Z",
    close: 204.19
  }, {
    date: "2009-11-27T08:00:00.000Z",
    close: 200.59
  }, {
    date: "2009-11-30T08:00:00.000Z",
    close: 199.91
  }, {
    date: "2009-12-01T08:00:00.000Z",
    close: 196.97
  }, {
    date: "2009-12-02T08:00:00.000Z",
    close: 196.23
  }, {
    date: "2009-12-03T08:00:00.000Z",
    close: 196.48
  }, {
    date: "2009-12-04T08:00:00.000Z",
    close: 193.32
  }, {
    date: "2009-12-07T08:00:00.000Z",
    close: 188.95
  }, {
    date: "2009-12-08T08:00:00.000Z",
    close: 189.87
  }, {
    date: "2009-12-09T08:00:00.000Z",
    close: 197.8
  }, {
    date: "2009-12-10T08:00:00.000Z",
    close: 196.43
  }, {
    date: "2009-12-11T08:00:00.000Z",
    close: 194.67
  }, {
    date: "2009-12-14T08:00:00.000Z",
    close: 196.98
  }, {
    date: "2009-12-15T08:00:00.000Z",
    close: 194.17
  }, {
    date: "2009-12-16T08:00:00.000Z",
    close: 195.03
  }, {
    date: "2009-12-17T08:00:00.000Z",
    close: 191.86
  }, {
    date: "2009-12-18T08:00:00.000Z",
    close: 195.43
  }, {
    date: "2009-12-21T08:00:00.000Z",
    close: 198.23
  }, {
    date: "2009-12-22T08:00:00.000Z",
    close: 200.36
  }, {
    date: "2009-12-23T08:00:00.000Z",
    close: 202.1
  }, {
    date: "2009-12-24T08:00:00.000Z",
    close: 209.04
  }, {
    date: "2009-12-25T08:00:00.000Z",
    close: 209.04
  }, {
    date: "2009-12-28T08:00:00.000Z",
    close: 211.61
  }, {
    date: "2009-12-29T08:00:00.000Z",
    close: 209.1
  }, {
    date: "2009-12-30T08:00:00.000Z",
    close: 211.64
  }, {
    date: "2009-12-31T08:00:00.000Z",
    close: 210.73
  }, {
    date: "2010-01-01T08:00:00.000Z",
    close: 210.73
  }, {
    date: "2010-01-04T08:00:00.000Z",
    close: 214.01
  }, {
    date: "2010-01-05T08:00:00.000Z",
    close: 214.38
  }, {
    date: "2010-01-06T08:00:00.000Z",
    close: 210.97
  }, {
    date: "2010-01-07T08:00:00.000Z",
    close: 210.58
  }, {
    date: "2010-01-08T08:00:00.000Z",
    close: 211.98
  }, {
    date: "2010-01-11T08:00:00.000Z",
    close: 210.11
  }, {
    date: "2010-01-12T08:00:00.000Z",
    close: 207.72
  }, {
    date: "2010-01-13T08:00:00.000Z",
    close: 210.65
  }, {
    date: "2010-01-14T08:00:00.000Z",
    close: 209.43
  }, {
    date: "2010-01-15T08:00:00.000Z",
    close: 205.93
  }, {
    date: "2010-01-18T08:00:00.000Z",
    close: 205.93
  }, {
    date: "2010-01-19T08:00:00.000Z",
    close: 215.04
  }, {
    date: "2010-01-20T08:00:00.000Z",
    close: 211.72
  }, {
    date: "2010-01-21T08:00:00.000Z",
    close: 208.07
  }, {
    date: "2010-01-22T08:00:00.000Z",
    close: 197.75
  }, {
    date: "2010-01-25T08:00:00.000Z",
    close: 203.08
  }, {
    date: "2010-01-26T08:00:00.000Z",
    close: 205.94
  }, {
    date: "2010-01-27T08:00:00.000Z",
    close: 207.88
  }, {
    date: "2010-01-28T08:00:00.000Z",
    close: 199.29
  }, {
    date: "2010-01-29T08:00:00.000Z",
    close: 192.06
  }, {
    date: "2010-02-01T08:00:00.000Z",
    close: 194.73
  }, {
    date: "2010-02-02T08:00:00.000Z",
    close: 195.86
  }, {
    date: "2010-02-03T08:00:00.000Z",
    close: 199.23
  }, {
    date: "2010-02-04T08:00:00.000Z",
    close: 192.05
  }, {
    date: "2010-02-05T08:00:00.000Z",
    close: 195.46
  }, {
    date: "2010-02-08T08:00:00.000Z",
    close: 194.12
  }, {
    date: "2010-02-09T08:00:00.000Z",
    close: 196.19
  }, {
    date: "2010-02-10T08:00:00.000Z",
    close: 195.12
  }, {
    date: "2010-02-11T08:00:00.000Z",
    close: 198.67
  }, {
    date: "2010-02-12T08:00:00.000Z",
    close: 200.38
  }, {
    date: "2010-02-15T08:00:00.000Z",
    close: 200.38
  }, {
    date: "2010-02-16T08:00:00.000Z",
    close: 203.4
  }, {
    date: "2010-02-17T08:00:00.000Z",
    close: 202.55
  }, {
    date: "2010-02-18T08:00:00.000Z",
    close: 202.93
  }, {
    date: "2010-02-19T08:00:00.000Z",
    close: 201.67
  }, {
    date: "2010-02-22T08:00:00.000Z",
    close: 200.42
  }, {
    date: "2010-02-23T08:00:00.000Z",
    close: 197.06
  }, {
    date: "2010-02-24T08:00:00.000Z",
    close: 200.66
  }, {
    date: "2010-02-25T08:00:00.000Z",
    close: 202
  }, {
    date: "2010-02-26T08:00:00.000Z",
    close: 204.62
  }, {
    date: "2010-03-01T08:00:00.000Z",
    close: 208.99
  }, {
    date: "2010-03-02T08:00:00.000Z",
    close: 208.85
  }, {
    date: "2010-03-03T08:00:00.000Z",
    close: 209.33
  }, {
    date: "2010-03-04T08:00:00.000Z",
    close: 210.71
  }, {
    date: "2010-03-05T08:00:00.000Z",
    close: 218.95
  }, {
    date: "2010-03-08T08:00:00.000Z",
    close: 219.08
  }, {
    date: "2010-03-09T08:00:00.000Z",
    close: 223.02
  }, {
    date: "2010-03-10T08:00:00.000Z",
    close: 224.84
  }, {
    date: "2010-03-11T08:00:00.000Z",
    close: 225.5
  }, {
    date: "2010-03-12T08:00:00.000Z",
    close: 226.6
  }, {
    date: "2010-03-15T07:00:00.000Z",
    close: 223.84
  }, {
    date: "2010-03-16T07:00:00.000Z",
    close: 224.45
  }, {
    date: "2010-03-17T07:00:00.000Z",
    close: 224.12
  }, {
    date: "2010-03-18T07:00:00.000Z",
    close: 224.65
  }, {
    date: "2010-03-19T07:00:00.000Z",
    close: 222.25
  }, {
    date: "2010-03-22T07:00:00.000Z",
    close: 224.75
  }, {
    date: "2010-03-23T07:00:00.000Z",
    close: 228.36
  }, {
    date: "2010-03-24T07:00:00.000Z",
    close: 229.37
  }, {
    date: "2010-03-25T07:00:00.000Z",
    close: 226.65
  }, {
    date: "2010-03-26T07:00:00.000Z",
    close: 230.9
  }, {
    date: "2010-03-29T07:00:00.000Z",
    close: 232.39
  }, {
    date: "2010-03-30T07:00:00.000Z",
    close: 235.84
  }, {
    date: "2010-03-31T07:00:00.000Z",
    close: 235
  }, {
    date: "2010-04-01T07:00:00.000Z",
    close: 235.97
  }, {
    date: "2010-04-02T07:00:00.000Z",
    close: 235.97
  }, {
    date: "2010-04-05T07:00:00.000Z",
    close: 238.49
  }, {
    date: "2010-04-06T07:00:00.000Z",
    close: 239.54
  }, {
    date: "2010-04-07T07:00:00.000Z",
    close: 240.6
  }, {
    date: "2010-04-08T07:00:00.000Z",
    close: 239.95
  }, {
    date: "2010-04-09T07:00:00.000Z",
    close: 241.79
  }, {
    date: "2010-04-12T07:00:00.000Z",
    close: 242.29
  }, {
    date: "2010-04-13T07:00:00.000Z",
    close: 242.43
  }, {
    date: "2010-04-14T07:00:00.000Z",
    close: 245.69
  }, {
    date: "2010-04-15T07:00:00.000Z",
    close: 248.92
  }, {
    date: "2010-04-16T07:00:00.000Z",
    close: 247.4
  }, {
    date: "2010-04-19T07:00:00.000Z",
    close: 247.07
  }, {
    date: "2010-04-20T07:00:00.000Z",
    close: 244.59
  }, {
    date: "2010-04-21T07:00:00.000Z",
    close: 259.22
  }, {
    date: "2010-04-22T07:00:00.000Z",
    close: 266.47
  }, {
    date: "2010-04-23T07:00:00.000Z",
    close: 270.83
  }, {
    date: "2010-04-26T07:00:00.000Z",
    close: 269.5
  }, {
    date: "2010-04-27T07:00:00.000Z",
    close: 262.04
  }, {
    date: "2010-04-28T07:00:00.000Z",
    close: 261.6
  }, {
    date: "2010-04-29T07:00:00.000Z",
    close: 268.64
  }, {
    date: "2010-04-30T07:00:00.000Z",
    close: 261.09
  }, {
    date: "2010-05-03T07:00:00.000Z",
    close: 266.35
  }, {
    date: "2010-05-04T07:00:00.000Z",
    close: 258.68
  }, {
    date: "2010-05-05T07:00:00.000Z",
    close: 255.98
  }, {
    date: "2010-05-06T07:00:00.000Z",
    close: 246.25
  }, {
    date: "2010-05-07T07:00:00.000Z",
    close: 235.86
  }, {
    date: "2010-05-10T07:00:00.000Z",
    close: 253.99
  }, {
    date: "2010-05-11T07:00:00.000Z",
    close: 256.52
  }, {
    date: "2010-05-12T07:00:00.000Z",
    close: 262.09
  }, {
    date: "2010-05-13T07:00:00.000Z",
    close: 258.36
  }, {
    date: "2010-05-14T07:00:00.000Z",
    close: 253.82
  }, {
    date: "2010-05-17T07:00:00.000Z",
    close: 254.22
  }, {
    date: "2010-05-18T07:00:00.000Z",
    close: 252.36
  }, {
    date: "2010-05-19T07:00:00.000Z",
    close: 248.34
  }, {
    date: "2010-05-20T07:00:00.000Z",
    close: 237.76
  }, {
    date: "2010-05-21T07:00:00.000Z",
    close: 242.32
  }, {
    date: "2010-05-24T07:00:00.000Z",
    close: 246.76
  }, {
    date: "2010-05-25T07:00:00.000Z",
    close: 245.22
  }, {
    date: "2010-05-26T07:00:00.000Z",
    close: 244.11
  }, {
    date: "2010-05-27T07:00:00.000Z",
    close: 253.35
  }, {
    date: "2010-05-28T07:00:00.000Z",
    close: 256.88
  }, {
    date: "2010-05-31T07:00:00.000Z",
    close: 256.88
  }, {
    date: "2010-06-01T07:00:00.000Z",
    close: 260.83
  }, {
    date: "2010-06-02T07:00:00.000Z",
    close: 263.95
  }, {
    date: "2010-06-03T07:00:00.000Z",
    close: 263.12
  }, {
    date: "2010-06-04T07:00:00.000Z",
    close: 255.96
  }, {
    date: "2010-06-07T07:00:00.000Z",
    close: 250.94
  }, {
    date: "2010-06-08T07:00:00.000Z",
    close: 249.33
  }, {
    date: "2010-06-09T07:00:00.000Z",
    close: 243.2
  }, {
    date: "2010-06-10T07:00:00.000Z",
    close: 250.51
  }, {
    date: "2010-06-11T07:00:00.000Z",
    close: 253.51
  }, {
    date: "2010-06-14T07:00:00.000Z",
    close: 254.28
  }, {
    date: "2010-06-15T07:00:00.000Z",
    close: 259.69
  }, {
    date: "2010-06-16T07:00:00.000Z",
    close: 267.25
  }, {
    date: "2010-06-17T07:00:00.000Z",
    close: 271.87
  }, {
    date: "2010-06-18T07:00:00.000Z",
    close: 274.07
  }, {
    date: "2010-06-21T07:00:00.000Z",
    close: 270.17
  }, {
    date: "2010-06-22T07:00:00.000Z",
    close: 273.85
  }, {
    date: "2010-06-23T07:00:00.000Z",
    close: 270.97
  }, {
    date: "2010-06-24T07:00:00.000Z",
    close: 269
  }, {
    date: "2010-06-25T07:00:00.000Z",
    close: 266.7
  }, {
    date: "2010-06-28T07:00:00.000Z",
    close: 268.3
  }, {
    date: "2010-06-29T07:00:00.000Z",
    close: 256.17
  }, {
    date: "2010-06-30T07:00:00.000Z",
    close: 251.53
  }, {
    date: "2010-07-01T07:00:00.000Z",
    close: 248.48
  }, {
    date: "2010-07-02T07:00:00.000Z",
    close: 246.94
  }, {
    date: "2010-07-05T07:00:00.000Z",
    close: 246.94
  }, {
    date: "2010-07-06T07:00:00.000Z",
    close: 248.63
  }, {
    date: "2010-07-07T07:00:00.000Z",
    close: 258.66
  }, {
    date: "2010-07-08T07:00:00.000Z",
    close: 258.09
  }, {
    date: "2010-07-09T07:00:00.000Z",
    close: 259.62
  }, {
    date: "2010-07-12T07:00:00.000Z",
    close: 257.28
  }, {
    date: "2010-07-13T07:00:00.000Z",
    close: 251.8
  }, {
    date: "2010-07-14T07:00:00.000Z",
    close: 252.73
  }, {
    date: "2010-07-15T07:00:00.000Z",
    close: 251.45
  }, {
    date: "2010-07-16T07:00:00.000Z",
    close: 249.9
  }, {
    date: "2010-07-19T07:00:00.000Z",
    close: 245.58
  }, {
    date: "2010-07-20T07:00:00.000Z",
    close: 251.89
  }, {
    date: "2010-07-21T07:00:00.000Z",
    close: 254.24
  }, {
    date: "2010-07-22T07:00:00.000Z",
    close: 259.02
  }, {
    date: "2010-07-23T07:00:00.000Z",
    close: 259.94
  }, {
    date: "2010-07-26T07:00:00.000Z",
    close: 259.28
  }, {
    date: "2010-07-27T07:00:00.000Z",
    close: 264.08
  }, {
    date: "2010-07-28T07:00:00.000Z",
    close: 260.96
  }, {
    date: "2010-07-29T07:00:00.000Z",
    close: 258.11
  }, {
    date: "2010-07-30T07:00:00.000Z",
    close: 257.25
  }, {
    date: "2010-08-02T07:00:00.000Z",
    close: 261.85
  }, {
    date: "2010-08-03T07:00:00.000Z",
    close: 261.93
  }, {
    date: "2010-08-04T07:00:00.000Z",
    close: 262.98
  }, {
    date: "2010-08-05T07:00:00.000Z",
    close: 261.7
  }, {
    date: "2010-08-06T07:00:00.000Z",
    close: 260.09
  }, {
    date: "2010-08-09T07:00:00.000Z",
    close: 261.75
  }, {
    date: "2010-08-10T07:00:00.000Z",
    close: 259.41
  }, {
    date: "2010-08-11T07:00:00.000Z",
    close: 250.19
  }, {
    date: "2010-08-12T07:00:00.000Z",
    close: 251.79
  }, {
    date: "2010-08-13T07:00:00.000Z",
    close: 249.1
  }, {
    date: "2010-08-16T07:00:00.000Z",
    close: 247.64
  }, {
    date: "2010-08-17T07:00:00.000Z",
    close: 251.97
  }, {
    date: "2010-08-18T07:00:00.000Z",
    close: 253.07
  }, {
    date: "2010-08-19T07:00:00.000Z",
    close: 249.88
  }, {
    date: "2010-08-20T07:00:00.000Z",
    close: 249.64
  }, {
    date: "2010-08-23T07:00:00.000Z",
    close: 245.8
  }, {
    date: "2010-08-24T07:00:00.000Z",
    close: 239.93
  }, {
    date: "2010-08-25T07:00:00.000Z",
    close: 242.89
  }, {
    date: "2010-08-26T07:00:00.000Z",
    close: 240.28
  }, {
    date: "2010-08-27T07:00:00.000Z",
    close: 241.62
  }, {
    date: "2010-08-30T07:00:00.000Z",
    close: 242.5
  }, {
    date: "2010-08-31T07:00:00.000Z",
    close: 243.1
  }, {
    date: "2010-09-01T07:00:00.000Z",
    close: 250.33
  }, {
    date: "2010-09-02T07:00:00.000Z",
    close: 252.17
  }, {
    date: "2010-09-03T07:00:00.000Z",
    close: 258.77
  }, {
    date: "2010-09-06T07:00:00.000Z",
    close: 258.77
  }, {
    date: "2010-09-07T07:00:00.000Z",
    close: 257.81
  }, {
    date: "2010-09-08T07:00:00.000Z",
    close: 262.92
  }, {
    date: "2010-09-09T07:00:00.000Z",
    close: 263.07
  }, {
    date: "2010-09-10T07:00:00.000Z",
    close: 263.41
  }, {
    date: "2010-09-13T07:00:00.000Z",
    close: 267.04
  }, {
    date: "2010-09-14T07:00:00.000Z",
    close: 268.06
  }, {
    date: "2010-09-15T07:00:00.000Z",
    close: 270.22
  }, {
    date: "2010-09-16T07:00:00.000Z",
    close: 276.57
  }, {
    date: "2010-09-17T07:00:00.000Z",
    close: 275.37
  }, {
    date: "2010-09-20T07:00:00.000Z",
    close: 283.23
  }, {
    date: "2010-09-21T07:00:00.000Z",
    close: 283.77
  }, {
    date: "2010-09-22T07:00:00.000Z",
    close: 287.75
  }, {
    date: "2010-09-23T07:00:00.000Z",
    close: 288.92
  }, {
    date: "2010-09-24T07:00:00.000Z",
    close: 292.32
  }, {
    date: "2010-09-27T07:00:00.000Z",
    close: 291.16
  }, {
    date: "2010-09-28T07:00:00.000Z",
    close: 286.86
  }, {
    date: "2010-09-29T07:00:00.000Z",
    close: 287.37
  }, {
    date: "2010-09-30T07:00:00.000Z",
    close: 283.75
  }, {
    date: "2010-10-01T07:00:00.000Z",
    close: 282.52
  }, {
    date: "2010-10-04T07:00:00.000Z",
    close: 278.64
  }, {
    date: "2010-10-05T07:00:00.000Z",
    close: 288.94
  }, {
    date: "2010-10-06T07:00:00.000Z",
    close: 289.19
  }, {
    date: "2010-10-07T07:00:00.000Z",
    close: 289.22
  }, {
    date: "2010-10-08T07:00:00.000Z",
    close: 294.07
  }, {
    date: "2010-10-11T07:00:00.000Z",
    close: 295.36
  }, {
    date: "2010-10-12T07:00:00.000Z",
    close: 298.54
  }, {
    date: "2010-10-13T07:00:00.000Z",
    close: 300.14
  }, {
    date: "2010-10-14T07:00:00.000Z",
    close: 302.31
  }, {
    date: "2010-10-15T07:00:00.000Z",
    close: 314.74
  }, {
    date: "2010-10-18T07:00:00.000Z",
    close: 318
  }, {
    date: "2010-10-19T07:00:00.000Z",
    close: 309.49
  }, {
    date: "2010-10-20T07:00:00.000Z",
    close: 310.53
  }, {
    date: "2010-10-21T07:00:00.000Z",
    close: 309.52
  }, {
    date: "2010-10-22T07:00:00.000Z",
    close: 307.47
  }, {
    date: "2010-10-25T07:00:00.000Z",
    close: 308.84
  }, {
    date: "2010-10-26T07:00:00.000Z",
    close: 308.05
  }, {
    date: "2010-10-27T07:00:00.000Z",
    close: 307.83
  }, {
    date: "2010-10-28T07:00:00.000Z",
    close: 305.24
  }, {
    date: "2010-10-29T07:00:00.000Z",
    close: 300.98
  }, {
    date: "2010-11-01T07:00:00.000Z",
    close: 304.18
  }, {
    date: "2010-11-02T07:00:00.000Z",
    close: 309.36
  }, {
    date: "2010-11-03T07:00:00.000Z",
    close: 312.8
  }, {
    date: "2010-11-04T07:00:00.000Z",
    close: 318.27
  }, {
    date: "2010-11-05T07:00:00.000Z",
    close: 317.13
  }, {
    date: "2010-11-08T08:00:00.000Z",
    close: 318.62
  }, {
    date: "2010-11-09T08:00:00.000Z",
    close: 316.08
  }, {
    date: "2010-11-10T08:00:00.000Z",
    close: 318.03
  }, {
    date: "2010-11-11T08:00:00.000Z",
    close: 316.66
  }, {
    date: "2010-11-12T08:00:00.000Z",
    close: 308.03
  }, {
    date: "2010-11-15T08:00:00.000Z",
    close: 307.04
  }, {
    date: "2010-11-16T08:00:00.000Z",
    close: 301.59
  }, {
    date: "2010-11-17T08:00:00.000Z",
    close: 300.5
  }, {
    date: "2010-11-18T08:00:00.000Z",
    close: 308.43
  }, {
    date: "2010-11-19T08:00:00.000Z",
    close: 306.73
  }, {
    date: "2010-11-22T08:00:00.000Z",
    close: 313.36
  }, {
    date: "2010-11-23T08:00:00.000Z",
    close: 308.73
  }, {
    date: "2010-11-24T08:00:00.000Z",
    close: 314.8
  }, {
    date: "2010-11-26T08:00:00.000Z",
    close: 315
  }, {
    date: "2010-11-29T08:00:00.000Z",
    close: 316.87
  }, {
    date: "2010-11-30T08:00:00.000Z",
    close: 311.15
  }, {
    date: "2010-12-01T08:00:00.000Z",
    close: 316.4
  }, {
    date: "2010-12-02T08:00:00.000Z",
    close: 318.15
  }, {
    date: "2010-12-03T08:00:00.000Z",
    close: 317.44
  }, {
    date: "2010-12-06T08:00:00.000Z",
    close: 320.15
  }, {
    date: "2010-12-07T08:00:00.000Z",
    close: 318.21
  }, {
    date: "2010-12-08T08:00:00.000Z",
    close: 321.01
  }, {
    date: "2010-12-09T08:00:00.000Z",
    close: 319.76
  }, {
    date: "2010-12-10T08:00:00.000Z",
    close: 320.56
  }, {
    date: "2010-12-13T08:00:00.000Z",
    close: 321.67
  }, {
    date: "2010-12-14T08:00:00.000Z",
    close: 320.29
  }, {
    date: "2010-12-15T08:00:00.000Z",
    close: 320.36
  }, {
    date: "2010-12-16T08:00:00.000Z",
    close: 321.25
  }, {
    date: "2010-12-17T08:00:00.000Z",
    close: 320.61
  }, {
    date: "2010-12-20T08:00:00.000Z",
    close: 322.21
  }, {
    date: "2010-12-21T08:00:00.000Z",
    close: 324.2
  }, {
    date: "2010-12-22T08:00:00.000Z",
    close: 325.16
  }, {
    date: "2010-12-23T08:00:00.000Z",
    close: 323.6
  }, {
    date: "2010-12-27T08:00:00.000Z",
    close: 324.68
  }, {
    date: "2010-12-28T08:00:00.000Z",
    close: 325.47
  }, {
    date: "2010-12-29T08:00:00.000Z",
    close: 325.29
  }, {
    date: "2010-12-30T08:00:00.000Z",
    close: 323.66
  }, {
    date: "2010-12-31T08:00:00.000Z",
    close: 322.56
  }, {
    date: "2011-01-03T08:00:00.000Z",
    close: 329.57
  }, {
    date: "2011-01-04T08:00:00.000Z",
    close: 331.29
  }, {
    date: "2011-01-05T08:00:00.000Z",
    close: 334
  }, {
    date: "2011-01-06T08:00:00.000Z",
    close: 333.73
  }, {
    date: "2011-01-07T08:00:00.000Z",
    close: 336.12
  }, {
    date: "2011-01-10T08:00:00.000Z",
    close: 342.46
  }, {
    date: "2011-01-11T08:00:00.000Z",
    close: 341.64
  }, {
    date: "2011-01-12T08:00:00.000Z",
    close: 344.42
  }, {
    date: "2011-01-13T08:00:00.000Z",
    close: 345.68
  }, {
    date: "2011-01-14T08:00:00.000Z",
    close: 348.48
  }, {
    date: "2011-01-18T08:00:00.000Z",
    close: 340.65
  }, {
    date: "2011-01-19T08:00:00.000Z",
    close: 338.84
  }, {
    date: "2011-01-20T08:00:00.000Z",
    close: 332.68
  }, {
    date: "2011-01-21T08:00:00.000Z",
    close: 326.72
  }, {
    date: "2011-01-24T08:00:00.000Z",
    close: 337.45
  }, {
    date: "2011-01-25T08:00:00.000Z",
    close: 341.4
  }, {
    date: "2011-01-26T08:00:00.000Z",
    close: 343.85
  }, {
    date: "2011-01-27T08:00:00.000Z",
    close: 343.21
  }, {
    date: "2011-01-28T08:00:00.000Z",
    close: 336.1
  }, {
    date: "2011-01-31T08:00:00.000Z",
    close: 339.32
  }, {
    date: "2011-02-01T08:00:00.000Z",
    close: 345.03
  }, {
    date: "2011-02-02T08:00:00.000Z",
    close: 344.32
  }, {
    date: "2011-02-03T08:00:00.000Z",
    close: 343.44
  }, {
    date: "2011-02-04T08:00:00.000Z",
    close: 346.5
  }, {
    date: "2011-02-07T08:00:00.000Z",
    close: 351.88
  }, {
    date: "2011-02-08T08:00:00.000Z",
    close: 355.2
  }, {
    date: "2011-02-09T08:00:00.000Z",
    close: 358.16
  }, {
    date: "2011-02-10T08:00:00.000Z",
    close: 354.54
  }, {
    date: "2011-02-11T08:00:00.000Z",
    close: 356.85
  }, {
    date: "2011-02-14T08:00:00.000Z",
    close: 359.18
  }, {
    date: "2011-02-15T08:00:00.000Z",
    close: 359.9
  }, {
    date: "2011-02-16T08:00:00.000Z",
    close: 363.13
  }, {
    date: "2011-02-17T08:00:00.000Z",
    close: 358.3
  }, {
    date: "2011-02-18T08:00:00.000Z",
    close: 350.56
  }, {
    date: "2011-02-22T08:00:00.000Z",
    close: 338.61
  }, {
    date: "2011-02-23T08:00:00.000Z",
    close: 342.62
  }, {
    date: "2011-02-24T08:00:00.000Z",
    close: 342.88
  }, {
    date: "2011-02-25T08:00:00.000Z",
    close: 348.16
  }, {
    date: "2011-02-28T08:00:00.000Z",
    close: 353.21
  }, {
    date: "2011-03-01T08:00:00.000Z",
    close: 349.31
  }, {
    date: "2011-03-02T08:00:00.000Z",
    close: 352.12
  }, {
    date: "2011-03-03T08:00:00.000Z",
    close: 359.56
  }, {
    date: "2011-03-04T08:00:00.000Z",
    close: 360
  }, {
    date: "2011-03-07T08:00:00.000Z",
    close: 355.36
  }, {
    date: "2011-03-08T08:00:00.000Z",
    close: 355.76
  }, {
    date: "2011-03-09T08:00:00.000Z",
    close: 352.47
  }, {
    date: "2011-03-10T08:00:00.000Z",
    close: 346.67
  }, {
    date: "2011-03-11T08:00:00.000Z",
    close: 351.99
  }, {
    date: "2011-03-14T07:00:00.000Z",
    close: 353.56
  }, {
    date: "2011-03-15T07:00:00.000Z",
    close: 345.43
  }, {
    date: "2011-03-16T07:00:00.000Z",
    close: 330.01
  }, {
    date: "2011-03-17T07:00:00.000Z",
    close: 334.64
  }, {
    date: "2011-03-18T07:00:00.000Z",
    close: 330.67
  }, {
    date: "2011-03-21T07:00:00.000Z",
    close: 339.3
  }, {
    date: "2011-03-22T07:00:00.000Z",
    close: 341.2
  }, {
    date: "2011-03-23T07:00:00.000Z",
    close: 339.19
  }, {
    date: "2011-03-24T07:00:00.000Z",
    close: 344.97
  }, {
    date: "2011-03-25T07:00:00.000Z",
    close: 351.54
  }, {
    date: "2011-03-28T07:00:00.000Z",
    close: 350.44
  }, {
    date: "2011-03-29T07:00:00.000Z",
    close: 350.96
  }, {
    date: "2011-03-30T07:00:00.000Z",
    close: 348.63
  }, {
    date: "2011-03-31T07:00:00.000Z",
    close: 348.51
  }, {
    date: "2011-04-01T07:00:00.000Z",
    close: 344.56
  }, {
    date: "2011-04-04T07:00:00.000Z",
    close: 341.19
  }, {
    date: "2011-04-05T07:00:00.000Z",
    close: 338.89
  }, {
    date: "2011-04-06T07:00:00.000Z",
    close: 338.04
  }, {
    date: "2011-04-07T07:00:00.000Z",
    close: 338.08
  }, {
    date: "2011-04-08T07:00:00.000Z",
    close: 335.06
  }, {
    date: "2011-04-11T07:00:00.000Z",
    close: 330.8
  }, {
    date: "2011-04-12T07:00:00.000Z",
    close: 332.4
  }, {
    date: "2011-04-13T07:00:00.000Z",
    close: 336.13
  }, {
    date: "2011-04-14T07:00:00.000Z",
    close: 332.42
  }, {
    date: "2011-04-15T07:00:00.000Z",
    close: 327.46
  }, {
    date: "2011-04-18T07:00:00.000Z",
    close: 331.85
  }, {
    date: "2011-04-19T07:00:00.000Z",
    close: 337.86
  }, {
    date: "2011-04-20T07:00:00.000Z",
    close: 342.41
  }, {
    date: "2011-04-21T07:00:00.000Z",
    close: 350.7
  }, {
    date: "2011-04-25T07:00:00.000Z",
    close: 353.01
  }, {
    date: "2011-04-26T07:00:00.000Z",
    close: 350.42
  }, {
    date: "2011-04-27T07:00:00.000Z",
    close: 350.15
  }, {
    date: "2011-04-28T07:00:00.000Z",
    close: 346.75
  }, {
    date: "2011-04-29T07:00:00.000Z",
    close: 350.13
  }, {
    date: "2011-05-02T07:00:00.000Z",
    close: 346.28
  }, {
    date: "2011-05-03T07:00:00.000Z",
    close: 348.2
  }, {
    date: "2011-05-04T07:00:00.000Z",
    close: 349.57
  }, {
    date: "2011-05-05T07:00:00.000Z",
    close: 346.75
  }, {
    date: "2011-05-06T07:00:00.000Z",
    close: 346.66
  }, {
    date: "2011-05-09T07:00:00.000Z",
    close: 347.6
  }, {
    date: "2011-05-10T07:00:00.000Z",
    close: 349.45
  }, {
    date: "2011-05-11T07:00:00.000Z",
    close: 347.23
  }, {
    date: "2011-05-12T07:00:00.000Z",
    close: 346.57
  }, {
    date: "2011-05-13T07:00:00.000Z",
    close: 340.5
  }, {
    date: "2011-05-16T07:00:00.000Z",
    close: 333.3
  }, {
    date: "2011-05-17T07:00:00.000Z",
    close: 336.14
  }, {
    date: "2011-05-18T07:00:00.000Z",
    close: 339.87
  }, {
    date: "2011-05-19T07:00:00.000Z",
    close: 340.53
  }, {
    date: "2011-05-20T07:00:00.000Z",
    close: 335.22
  }, {
    date: "2011-05-23T07:00:00.000Z",
    close: 334.4
  }, {
    date: "2011-05-24T07:00:00.000Z",
    close: 332.19
  }, {
    date: "2011-05-25T07:00:00.000Z",
    close: 336.78
  }, {
    date: "2011-05-26T07:00:00.000Z",
    close: 335
  }, {
    date: "2011-05-27T07:00:00.000Z",
    close: 337.41
  }, {
    date: "2011-05-31T07:00:00.000Z",
    close: 347.83
  }, {
    date: "2011-06-01T07:00:00.000Z",
    close: 345.51
  }, {
    date: "2011-06-02T07:00:00.000Z",
    close: 346.1
  }, {
    date: "2011-06-03T07:00:00.000Z",
    close: 343.44
  }, {
    date: "2011-06-06T07:00:00.000Z",
    close: 338.04
  }, {
    date: "2011-06-07T07:00:00.000Z",
    close: 332.04
  }, {
    date: "2011-06-08T07:00:00.000Z",
    close: 332.24
  }, {
    date: "2011-06-09T07:00:00.000Z",
    close: 331.49
  }, {
    date: "2011-06-10T07:00:00.000Z",
    close: 325.9
  }, {
    date: "2011-06-13T07:00:00.000Z",
    close: 326.6
  }, {
    date: "2011-06-14T07:00:00.000Z",
    close: 332.44
  }, {
    date: "2011-06-15T07:00:00.000Z",
    close: 326.75
  }, {
    date: "2011-06-16T07:00:00.000Z",
    close: 325.16
  }, {
    date: "2011-06-17T07:00:00.000Z",
    close: 320.26
  }, {
    date: "2011-06-20T07:00:00.000Z",
    close: 315.32
  }, {
    date: "2011-06-21T07:00:00.000Z",
    close: 325.3
  }, {
    date: "2011-06-22T07:00:00.000Z",
    close: 322.61
  }, {
    date: "2011-06-23T07:00:00.000Z",
    close: 331.23
  }, {
    date: "2011-06-24T07:00:00.000Z",
    close: 326.35
  }, {
    date: "2011-06-27T07:00:00.000Z",
    close: 332.04
  }, {
    date: "2011-06-28T07:00:00.000Z",
    close: 335.26
  }, {
    date: "2011-06-29T07:00:00.000Z",
    close: 334.04
  }, {
    date: "2011-06-30T07:00:00.000Z",
    close: 335.67
  }, {
    date: "2011-07-01T07:00:00.000Z",
    close: 343.26
  }, {
    date: "2011-07-05T07:00:00.000Z",
    close: 349.43
  }, {
    date: "2011-07-06T07:00:00.000Z",
    close: 351.76
  }, {
    date: "2011-07-07T07:00:00.000Z",
    close: 357.2
  }, {
    date: "2011-07-08T07:00:00.000Z",
    close: 359.71
  }, {
    date: "2011-07-11T07:00:00.000Z",
    close: 354
  }, {
    date: "2011-07-12T07:00:00.000Z",
    close: 353.75
  }, {
    date: "2011-07-13T07:00:00.000Z",
    close: 358.02
  }, {
    date: "2011-07-14T07:00:00.000Z",
    close: 357.77
  }, {
    date: "2011-07-15T07:00:00.000Z",
    close: 364.92
  }, {
    date: "2011-07-18T07:00:00.000Z",
    close: 373.8
  }, {
    date: "2011-07-19T07:00:00.000Z",
    close: 376.85
  }, {
    date: "2011-07-20T07:00:00.000Z",
    close: 386.9
  }, {
    date: "2011-07-21T07:00:00.000Z",
    close: 387.29
  }, {
    date: "2011-07-22T07:00:00.000Z",
    close: 393.3
  }, {
    date: "2011-07-25T07:00:00.000Z",
    close: 398.5
  }, {
    date: "2011-07-26T07:00:00.000Z",
    close: 403.41
  }, {
    date: "2011-07-27T07:00:00.000Z",
    close: 392.59
  }, {
    date: "2011-07-28T07:00:00.000Z",
    close: 391.82
  }, {
    date: "2011-07-29T07:00:00.000Z",
    close: 390.48
  }, {
    date: "2011-08-01T07:00:00.000Z",
    close: 396.75
  }, {
    date: "2011-08-02T07:00:00.000Z",
    close: 388.91
  }, {
    date: "2011-08-03T07:00:00.000Z",
    close: 392.57
  }, {
    date: "2011-08-04T07:00:00.000Z",
    close: 377.37
  }, {
    date: "2011-08-05T07:00:00.000Z",
    close: 373.62
  }, {
    date: "2011-08-08T07:00:00.000Z",
    close: 353.21
  }, {
    date: "2011-08-09T07:00:00.000Z",
    close: 374.01
  }, {
    date: "2011-08-10T07:00:00.000Z",
    close: 363.69
  }, {
    date: "2011-08-11T07:00:00.000Z",
    close: 373.7
  }, {
    date: "2011-08-12T07:00:00.000Z",
    close: 376.99
  }, {
    date: "2011-08-15T07:00:00.000Z",
    close: 383.41
  }, {
    date: "2011-08-16T07:00:00.000Z",
    close: 380.48
  }, {
    date: "2011-08-17T07:00:00.000Z",
    close: 380.44
  }, {
    date: "2011-08-18T07:00:00.000Z",
    close: 366.05
  }, {
    date: "2011-08-19T07:00:00.000Z",
    close: 356.03
  }, {
    date: "2011-08-22T07:00:00.000Z",
    close: 356.44
  }, {
    date: "2011-08-23T07:00:00.000Z",
    close: 373.6
  }, {
    date: "2011-08-24T07:00:00.000Z",
    close: 376.18
  }, {
    date: "2011-08-25T07:00:00.000Z",
    close: 373.72
  }, {
    date: "2011-08-26T07:00:00.000Z",
    close: 383.58
  }, {
    date: "2011-08-29T07:00:00.000Z",
    close: 389.97
  }, {
    date: "2011-08-30T07:00:00.000Z",
    close: 389.99
  }, {
    date: "2011-08-31T07:00:00.000Z",
    close: 384.83
  }, {
    date: "2011-09-01T07:00:00.000Z",
    close: 381.03
  }, {
    date: "2011-09-02T07:00:00.000Z",
    close: 374.05
  }, {
    date: "2011-09-06T07:00:00.000Z",
    close: 379.74
  }, {
    date: "2011-09-07T07:00:00.000Z",
    close: 383.93
  }, {
    date: "2011-09-08T07:00:00.000Z",
    close: 384.14
  }, {
    date: "2011-09-09T07:00:00.000Z",
    close: 377.48
  }, {
    date: "2011-09-12T07:00:00.000Z",
    close: 379.94
  }, {
    date: "2011-09-13T07:00:00.000Z",
    close: 384.62
  }, {
    date: "2011-09-14T07:00:00.000Z",
    close: 389.3
  }, {
    date: "2011-09-15T07:00:00.000Z",
    close: 392.96
  }, {
    date: "2011-09-16T07:00:00.000Z",
    close: 400.5
  }, {
    date: "2011-09-19T07:00:00.000Z",
    close: 411.63
  }, {
    date: "2011-09-20T07:00:00.000Z",
    close: 413.45
  }, {
    date: "2011-09-21T07:00:00.000Z",
    close: 412.14
  }, {
    date: "2011-09-22T07:00:00.000Z",
    close: 401.82
  }, {
    date: "2011-09-23T07:00:00.000Z",
    close: 404.3
  }, {
    date: "2011-09-26T07:00:00.000Z",
    close: 403.17
  }, {
    date: "2011-09-27T07:00:00.000Z",
    close: 399.26
  }, {
    date: "2011-09-28T07:00:00.000Z",
    close: 397.01
  }, {
    date: "2011-09-29T07:00:00.000Z",
    close: 390.57
  }, {
    date: "2011-09-30T07:00:00.000Z",
    close: 381.32
  }, {
    date: "2011-10-03T07:00:00.000Z",
    close: 374.6
  }, {
    date: "2011-10-04T07:00:00.000Z",
    close: 372.5
  }, {
    date: "2011-10-05T07:00:00.000Z",
    close: 378.25
  }, {
    date: "2011-10-06T07:00:00.000Z",
    close: 377.37
  }, {
    date: "2011-10-07T07:00:00.000Z",
    close: 369.8
  }, {
    date: "2011-10-10T07:00:00.000Z",
    close: 388.81
  }, {
    date: "2011-10-11T07:00:00.000Z",
    close: 400.29
  }, {
    date: "2011-10-12T07:00:00.000Z",
    close: 402.19
  }, {
    date: "2011-10-13T07:00:00.000Z",
    close: 408.43
  }, {
    date: "2011-10-14T07:00:00.000Z",
    close: 422
  }, {
    date: "2011-10-17T07:00:00.000Z",
    close: 419.99
  }, {
    date: "2011-10-18T07:00:00.000Z",
    close: 422.24
  }, {
    date: "2011-10-19T07:00:00.000Z",
    close: 398.62
  }, {
    date: "2011-10-20T07:00:00.000Z",
    close: 395.31
  }, {
    date: "2011-10-21T07:00:00.000Z",
    close: 392.87
  }, {
    date: "2011-10-24T07:00:00.000Z",
    close: 405.77
  }, {
    date: "2011-10-25T07:00:00.000Z",
    close: 397.77
  }, {
    date: "2011-10-26T07:00:00.000Z",
    close: 400.6
  }, {
    date: "2011-10-27T07:00:00.000Z",
    close: 404.69
  }, {
    date: "2011-10-28T07:00:00.000Z",
    close: 404.95
  }, {
    date: "2011-10-31T07:00:00.000Z",
    close: 404.78
  }, {
    date: "2011-11-01T07:00:00.000Z",
    close: 396.51
  }, {
    date: "2011-11-02T07:00:00.000Z",
    close: 397.41
  }, {
    date: "2011-11-03T07:00:00.000Z",
    close: 403.07
  }, {
    date: "2011-11-04T07:00:00.000Z",
    close: 400.24
  }, {
    date: "2011-11-07T08:00:00.000Z",
    close: 399.73
  }, {
    date: "2011-11-08T08:00:00.000Z",
    close: 406.23
  }, {
    date: "2011-11-09T08:00:00.000Z",
    close: 395.28
  }, {
    date: "2011-11-10T08:00:00.000Z",
    close: 385.22
  }, {
    date: "2011-11-11T08:00:00.000Z",
    close: 384.62
  }, {
    date: "2011-11-14T08:00:00.000Z",
    close: 379.26
  }, {
    date: "2011-11-15T08:00:00.000Z",
    close: 388.83
  }, {
    date: "2011-11-16T08:00:00.000Z",
    close: 384.77
  }, {
    date: "2011-11-17T08:00:00.000Z",
    close: 377.41
  }, {
    date: "2011-11-18T08:00:00.000Z",
    close: 374.94
  }, {
    date: "2011-11-21T08:00:00.000Z",
    close: 369.01
  }, {
    date: "2011-11-22T08:00:00.000Z",
    close: 376.51
  }, {
    date: "2011-11-23T08:00:00.000Z",
    close: 366.99
  }, {
    date: "2011-11-25T08:00:00.000Z",
    close: 363.57
  }, {
    date: "2011-11-28T08:00:00.000Z",
    close: 376.12
  }, {
    date: "2011-11-29T08:00:00.000Z",
    close: 373.2
  }, {
    date: "2011-11-30T08:00:00.000Z",
    close: 382.2
  }, {
    date: "2011-12-01T08:00:00.000Z",
    close: 387.93
  }, {
    date: "2011-12-02T08:00:00.000Z",
    close: 389.7
  }, {
    date: "2011-12-05T08:00:00.000Z",
    close: 393.01
  }, {
    date: "2011-12-06T08:00:00.000Z",
    close: 390.95
  }, {
    date: "2011-12-07T08:00:00.000Z",
    close: 389.09
  }, {
    date: "2011-12-08T08:00:00.000Z",
    close: 390.66
  }, {
    date: "2011-12-09T08:00:00.000Z",
    close: 393.62
  }, {
    date: "2011-12-12T08:00:00.000Z",
    close: 391.84
  }, {
    date: "2011-12-13T08:00:00.000Z",
    close: 388.81
  }, {
    date: "2011-12-14T08:00:00.000Z",
    close: 380.19
  }, {
    date: "2011-12-15T08:00:00.000Z",
    close: 378.94
  }, {
    date: "2011-12-16T08:00:00.000Z",
    close: 381.02
  }, {
    date: "2011-12-19T08:00:00.000Z",
    close: 382.21
  }, {
    date: "2011-12-20T08:00:00.000Z",
    close: 395.95
  }, {
    date: "2011-12-21T08:00:00.000Z",
    close: 396.44
  }, {
    date: "2011-12-22T08:00:00.000Z",
    close: 398.55
  }, {
    date: "2011-12-23T08:00:00.000Z",
    close: 403.43
  }, {
    date: "2011-12-27T08:00:00.000Z",
    close: 406.53
  }, {
    date: "2011-12-28T08:00:00.000Z",
    close: 402.64
  }, {
    date: "2011-12-29T08:00:00.000Z",
    close: 405.12
  }, {
    date: "2011-12-30T08:00:00.000Z",
    close: 405
  }, {
    date: "2012-01-03T08:00:00.000Z",
    close: 411.23
  }, {
    date: "2012-01-04T08:00:00.000Z",
    close: 413.44
  }, {
    date: "2012-01-05T08:00:00.000Z",
    close: 418.03
  }, {
    date: "2012-01-06T08:00:00.000Z",
    close: 422.4
  }, {
    date: "2012-01-09T08:00:00.000Z",
    close: 421.73
  }, {
    date: "2012-01-10T08:00:00.000Z",
    close: 423.24
  }, {
    date: "2012-01-11T08:00:00.000Z",
    close: 422.55
  }, {
    date: "2012-01-12T08:00:00.000Z",
    close: 421.39
  }, {
    date: "2012-01-13T08:00:00.000Z",
    close: 419.81
  }, {
    date: "2012-01-17T08:00:00.000Z",
    close: 424.7
  }, {
    date: "2012-01-18T08:00:00.000Z",
    close: 429.11
  }, {
    date: "2012-01-19T08:00:00.000Z",
    close: 427.75
  }, {
    date: "2012-01-20T08:00:00.000Z",
    close: 420.3
  }, {
    date: "2012-01-23T08:00:00.000Z",
    close: 427.41
  }, {
    date: "2012-01-24T08:00:00.000Z",
    close: 420.41
  }, {
    date: "2012-01-25T08:00:00.000Z",
    close: 446.66
  }, {
    date: "2012-01-26T08:00:00.000Z",
    close: 444.63
  }, {
    date: "2012-01-27T08:00:00.000Z",
    close: 447.28
  }, {
    date: "2012-01-30T08:00:00.000Z",
    close: 453.01
  }, {
    date: "2012-01-31T08:00:00.000Z",
    close: 456.48
  }, {
    date: "2012-02-01T08:00:00.000Z",
    close: 456.19
  }, {
    date: "2012-02-02T08:00:00.000Z",
    close: 455.12
  }, {
    date: "2012-02-03T08:00:00.000Z",
    close: 459.68
  }, {
    date: "2012-02-06T08:00:00.000Z",
    close: 463.97
  }, {
    date: "2012-02-07T08:00:00.000Z",
    close: 468.83
  }, {
    date: "2012-02-08T08:00:00.000Z",
    close: 476.68
  }, {
    date: "2012-02-09T08:00:00.000Z",
    close: 493.17
  }, {
    date: "2012-02-10T08:00:00.000Z",
    close: 493.42
  }, {
    date: "2012-02-13T08:00:00.000Z",
    close: 502.6
  }, {
    date: "2012-02-14T08:00:00.000Z",
    close: 509.46
  }, {
    date: "2012-02-15T08:00:00.000Z",
    close: 497.67
  }, {
    date: "2012-02-16T08:00:00.000Z",
    close: 502.21
  }, {
    date: "2012-02-17T08:00:00.000Z",
    close: 502.12
  }, {
    date: "2012-02-21T08:00:00.000Z",
    close: 514.85
  }, {
    date: "2012-02-22T08:00:00.000Z",
    close: 513.04
  }, {
    date: "2012-02-23T08:00:00.000Z",
    close: 516.39
  }, {
    date: "2012-02-24T08:00:00.000Z",
    close: 522.41
  }, {
    date: "2012-02-27T08:00:00.000Z",
    close: 525.76
  }, {
    date: "2012-02-28T08:00:00.000Z",
    close: 535.41
  }, {
    date: "2012-02-29T08:00:00.000Z",
    close: 542.44
  }, {
    date: "2012-03-01T08:00:00.000Z",
    close: 544.47
  }, {
    date: "2012-03-02T08:00:00.000Z",
    close: 545.18
  }, {
    date: "2012-03-05T08:00:00.000Z",
    close: 533.16
  }, {
    date: "2012-03-06T08:00:00.000Z",
    close: 530.26
  }, {
    date: "2012-03-07T08:00:00.000Z",
    close: 530.69
  }, {
    date: "2012-03-08T08:00:00.000Z",
    close: 541.99
  }, {
    date: "2012-03-09T08:00:00.000Z",
    close: 545.17
  }, {
    date: "2012-03-12T07:00:00.000Z",
    close: 552
  }, {
    date: "2012-03-13T07:00:00.000Z",
    close: 568.1
  }, {
    date: "2012-03-14T07:00:00.000Z",
    close: 589.58
  }, {
    date: "2012-03-15T07:00:00.000Z",
    close: 585.56
  }, {
    date: "2012-03-16T07:00:00.000Z",
    close: 585.57
  }, {
    date: "2012-03-19T07:00:00.000Z",
    close: 601.1
  }, {
    date: "2012-03-20T07:00:00.000Z",
    close: 605.96
  }, {
    date: "2012-03-21T07:00:00.000Z",
    close: 602.5
  }, {
    date: "2012-03-22T07:00:00.000Z",
    close: 599.34
  }, {
    date: "2012-03-23T07:00:00.000Z",
    close: 596.05
  }, {
    date: "2012-03-26T07:00:00.000Z",
    close: 606.98
  }, {
    date: "2012-03-27T07:00:00.000Z",
    close: 614.48
  }, {
    date: "2012-03-28T07:00:00.000Z",
    close: 617.62
  }, {
    date: "2012-03-29T07:00:00.000Z",
    close: 609.86
  }, {
    date: "2012-03-30T07:00:00.000Z",
    close: 599.55
  }, {
    date: "2012-04-02T07:00:00.000Z",
    close: 618.63
  }, {
    date: "2012-04-03T07:00:00.000Z",
    close: 629.32
  }, {
    date: "2012-04-04T07:00:00.000Z",
    close: 624.31
  }, {
    date: "2012-04-05T07:00:00.000Z",
    close: 633.68
  }, {
    date: "2012-04-09T07:00:00.000Z",
    close: 636.23
  }, {
    date: "2012-04-10T07:00:00.000Z",
    close: 628.44
  }, {
    date: "2012-04-11T07:00:00.000Z",
    close: 626.2
  }, {
    date: "2012-04-12T07:00:00.000Z",
    close: 622.77
  }, {
    date: "2012-04-13T07:00:00.000Z",
    close: 605.23
  }, {
    date: "2012-04-16T07:00:00.000Z",
    close: 580.13
  }, {
    date: "2012-04-17T07:00:00.000Z",
    close: 609.7
  }, {
    date: "2012-04-18T07:00:00.000Z",
    close: 608.34
  }, {
    date: "2012-04-19T07:00:00.000Z",
    close: 587.44
  }, {
    date: "2012-04-20T07:00:00.000Z",
    close: 572.98
  }, {
    date: "2012-04-23T07:00:00.000Z",
    close: 571.7
  }, {
    date: "2012-04-24T07:00:00.000Z",
    close: 560.28
  }, {
    date: "2012-04-25T07:00:00.000Z",
    close: 610
  }, {
    date: "2012-04-26T07:00:00.000Z",
    close: 607.7
  }, {
    date: "2012-04-27T07:00:00.000Z",
    close: 603
  }, {
    date: "2012-04-30T07:00:00.000Z",
    close: 583.98
  }, {
    date: "2012-05-01T07:00:00.000Z",
    close: 582.13
  }];
  var _default = appleStock;
  exports.default = _default;
});
var __pika_web_default_export_for_treeshaking__ = /* @__PURE__ */ getDefaultExportFromCjs(appleStock_1);
var appleStock_default = __pika_web_default_export_for_treeshaking__;

// snowpack/pkg/@vx/brush.js
function _extends10() {
  _extends10 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutPropertiesLoose8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Group2(_ref) {
  var _ref$top = _ref.top, top2 = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left2 = _ref$left === void 0 ? 0 : _ref$left, transform = _ref.transform, className = _ref.className, children2 = _ref.children, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose8(_ref, ["top", "left", "transform", "className", "children", "innerRef"]);
  return /* @__PURE__ */ react.createElement("g", _extends10({
    ref: innerRef,
    className: classnames("vx-group", className),
    transform: transform || "translate(" + left2 + ", " + top2 + ")"
  }, restProps), children2);
}
Group2.propTypes = {
  top: propTypes.number,
  left: propTypes.number,
  transform: propTypes.string,
  className: propTypes.string,
  children: propTypes.node,
  innerRef: propTypes.oneOfType([propTypes.string, propTypes.func, propTypes.object])
};
function _extends$18() {
  _extends$18 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$18.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$17(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Bar2(_ref) {
  var className = _ref.className, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose$17(_ref, ["className", "innerRef"]);
  return /* @__PURE__ */ react.createElement("rect", _extends$18({
    ref: innerRef,
    className: classnames("vx-bar", className)
  }, restProps));
}
function _defineProperty7(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var Point2 = /* @__PURE__ */ function() {
  function Point3(_ref) {
    var _ref$x = _ref.x, x5 = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y7 = _ref$y === void 0 ? 0 : _ref$y;
    _defineProperty7(this, "x", 0);
    _defineProperty7(this, "y", 0);
    this.x = x5;
    this.y = y7;
  }
  var _proto = Point3.prototype;
  _proto.value = function value2() {
    return {
      x: this.x,
      y: this.y
    };
  };
  _proto.toArray = function toArray2() {
    return [this.x, this.y];
  };
  return Point3;
}();
function isElement(elem) {
  return !!elem && elem instanceof Element;
}
function isSVGElement(elem) {
  return !!elem && (elem instanceof SVGElement || "ownerSVGElement" in elem);
}
function isSVGSVGElement(elem) {
  return !!elem && "createSVGPoint" in elem;
}
function isSVGGraphicsElement2(elem) {
  return !!elem && "getScreenCTM" in elem;
}
function isTouchEvent(event) {
  return !!event && "changedTouches" in event;
}
function isEvent(event) {
  return !!event && (event instanceof Event || "nativeEvent" in event && event.nativeEvent instanceof Event);
}
function _extends$28() {
  _extends$28 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$28.apply(this, arguments);
}
var DEFAULT_POINT = {
  x: 0,
  y: 0
};
function getXAndYFromEvent(event) {
  if (!event)
    return _extends$28({}, DEFAULT_POINT);
  if (isTouchEvent(event)) {
    return event.changedTouches.length > 0 ? {
      x: event.changedTouches[0].clientX,
      y: event.changedTouches[0].clientY
    } : _extends$28({}, DEFAULT_POINT);
  }
  return {
    x: event.clientX,
    y: event.clientY
  };
}
function localPoint(node, event) {
  if (!node || !event)
    return null;
  var coords = getXAndYFromEvent(event);
  var svg2 = isSVGElement(node) ? node.ownerSVGElement : node;
  var screenCTM = isSVGGraphicsElement2(svg2) ? svg2.getScreenCTM() : null;
  if (isSVGSVGElement(svg2) && screenCTM) {
    var point8 = svg2.createSVGPoint();
    point8.x = coords.x;
    point8.y = coords.y;
    point8 = point8.matrixTransform(screenCTM.inverse());
    return new Point2({
      x: point8.x,
      y: point8.y
    });
  }
  var rect = node.getBoundingClientRect();
  return new Point2({
    x: coords.x - rect.left - node.clientLeft,
    y: coords.y - rect.top - node.clientTop
  });
}
function localPoint$1(nodeOrEvent, maybeEvent) {
  if (isElement(nodeOrEvent) && maybeEvent) {
    return localPoint(nodeOrEvent, maybeEvent);
  }
  if (isEvent(nodeOrEvent)) {
    var event = nodeOrEvent;
    var node = event.target;
    if (node)
      return localPoint(node, event);
  }
  return null;
}
var esm = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  localPoint: localPoint$1,
  touchPoint: localPoint
});
var Drag_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _propTypes = _interopRequireDefault(propTypes);
  var _react = _interopRequireDefault(react);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _extends13() {
    _extends13 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends13.apply(this, arguments);
  }
  function _assertThisInitialized4(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  function _inheritsLoose3(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _defineProperty8(obj, key, value2) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value2;
    }
    return obj;
  }
  var Drag2 = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose3(Drag3, _React$Component);
    function Drag3() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _defineProperty8(_assertThisInitialized4(_this), "state", {
        x: void 0,
        y: void 0,
        dx: 0,
        dy: 0,
        isDragging: false
      });
      _defineProperty8(_assertThisInitialized4(_this), "handleDragStart", function(event) {
        var _this$props = _this.props, onDragStart = _this$props.onDragStart, resetOnStart = _this$props.resetOnStart;
        event.persist();
        _this.setState(function(_ref) {
          var dx = _ref.dx, dy = _ref.dy;
          var point8 = (0, esm.localPoint)(event) || {
            x: 0,
            y: 0
          };
          return {
            isDragging: true,
            dx: resetOnStart ? 0 : dx,
            dy: resetOnStart ? 0 : dy,
            x: resetOnStart ? point8.x : point8.x - dx,
            y: resetOnStart ? point8.y : point8.y - dy
          };
        }, onDragStart && function() {
          onDragStart(_extends13({}, _this.state, {
            event
          }));
        });
      });
      _defineProperty8(_assertThisInitialized4(_this), "handleDragMove", function(event) {
        var onDragMove = _this.props.onDragMove;
        event.persist();
        _this.setState(function(_ref2) {
          var x5 = _ref2.x, y7 = _ref2.y, isDragging = _ref2.isDragging;
          var point8 = (0, esm.localPoint)(event) || {
            x: 0,
            y: 0
          };
          return isDragging ? {
            isDragging: true,
            dx: point8.x - (x5 || 0),
            dy: point8.y - (y7 || 0)
          } : null;
        }, onDragMove && function() {
          if (_this.state.isDragging)
            onDragMove(_extends13({}, _this.state, {
              event
            }));
        });
      });
      _defineProperty8(_assertThisInitialized4(_this), "handleDragEnd", function(event) {
        var onDragEnd = _this.props.onDragEnd;
        event.persist();
        _this.setState({
          isDragging: false
        }, onDragEnd && function() {
          onDragEnd(_extends13({}, _this.state, {
            event
          }));
        });
      });
      return _this;
    }
    var _proto = Drag3.prototype;
    _proto.render = function render2() {
      var _this$state = this.state, x5 = _this$state.x, y7 = _this$state.y, dx = _this$state.dx, dy = _this$state.dy, isDragging = _this$state.isDragging;
      var _this$props2 = this.props, children2 = _this$props2.children, width = _this$props2.width, height = _this$props2.height, captureDragArea = _this$props2.captureDragArea;
      return /* @__PURE__ */ _react.default.createElement(_react.default.Fragment, null, isDragging && captureDragArea && /* @__PURE__ */ _react.default.createElement("rect", {
        width,
        height,
        onMouseMove: this.handleDragMove,
        onMouseUp: this.handleDragEnd,
        fill: "transparent"
      }), children2({
        x: x5,
        y: y7,
        dx,
        dy,
        isDragging,
        dragEnd: this.handleDragEnd,
        dragMove: this.handleDragMove,
        dragStart: this.handleDragStart
      }));
    };
    return Drag3;
  }(_react.default.Component);
  exports.default = Drag2;
  _defineProperty8(Drag2, "propTypes", {
    children: _propTypes.default.func.isRequired,
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    captureDragArea: _propTypes.default.bool,
    resetOnStart: _propTypes.default.bool,
    onDragEnd: _propTypes.default.func,
    onDragMove: _propTypes.default.func,
    onDragStart: _propTypes.default.func
  });
  _defineProperty8(Drag2, "defaultProps", {
    captureDragArea: true,
    resetOnStart: false
  });
});
var Drag = /* @__PURE__ */ getDefaultExportFromCjs(Drag_1);
function _extends$36() {
  _extends$36 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$36.apply(this, arguments);
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inheritsLoose2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _defineProperty$15(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var BrushHandle = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose2(BrushHandle2, _React$Component);
  function BrushHandle2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty$15(_assertThisInitialized3(_this), "handleDragMove", function(drag) {
      var _this$props = _this.props, updateBrush = _this$props.updateBrush, type3 = _this$props.type;
      if (!drag.isDragging)
        return;
      updateBrush(function(prevBrush) {
        var start2 = prevBrush.start, end = prevBrush.end;
        var move = 0;
        var xMax = Math.max(start2.x, end.x);
        var xMin = Math.min(start2.x, end.x);
        var yMax = Math.max(start2.y, end.y);
        var yMin = Math.min(start2.y, end.y);
        switch (type3) {
          case "right":
            move = xMax + drag.dx;
            return _extends$36({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$36({}, prevBrush.extent, {
                x0: Math.max(Math.min(move, start2.x), prevBrush.bounds.x0),
                x1: Math.min(Math.max(move, start2.x), prevBrush.bounds.x1)
              })
            });
          case "left":
            move = xMin + drag.dx;
            return _extends$36({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$36({}, prevBrush.extent, {
                x0: Math.min(move, end.x),
                x1: Math.max(move, end.x)
              })
            });
          case "bottom":
            move = yMax + drag.dy;
            return _extends$36({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$36({}, prevBrush.extent, {
                y0: Math.min(move, start2.y),
                y1: Math.max(move, start2.y)
              })
            });
          case "top":
            move = yMin + drag.dy;
            return _extends$36({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$36({}, prevBrush.extent, {
                y0: Math.min(move, end.y),
                y1: Math.max(move, end.y)
              })
            });
          default:
            return prevBrush;
        }
      });
    });
    _defineProperty$15(_assertThisInitialized3(_this), "handleDragEnd", function() {
      var _this$props2 = _this.props, updateBrush = _this$props2.updateBrush, onBrushEnd = _this$props2.onBrushEnd;
      updateBrush(function(prevBrush) {
        var start2 = prevBrush.start, end = prevBrush.end, extent3 = prevBrush.extent;
        start2.x = Math.min(extent3.x0, extent3.x1);
        start2.y = Math.min(extent3.y0, extent3.y0);
        end.x = Math.max(extent3.x0, extent3.x1);
        end.y = Math.max(extent3.y0, extent3.y1);
        var nextBrush = _extends$36({}, prevBrush, {
          start: start2,
          end,
          activeHandle: null,
          isBrushing: false,
          extent: {
            x0: Math.min(start2.x, end.x),
            x1: Math.max(start2.x, end.x),
            y0: Math.min(start2.y, end.y),
            y1: Math.max(start2.y, end.y)
          }
        });
        if (onBrushEnd) {
          onBrushEnd(nextBrush);
        }
        return nextBrush;
      });
    });
    return _this;
  }
  var _proto = BrushHandle2.prototype;
  _proto.render = function render2() {
    var _this$props3 = this.props, stageWidth = _this$props3.stageWidth, stageHeight = _this$props3.stageHeight, brush = _this$props3.brush, type3 = _this$props3.type, handle = _this$props3.handle;
    var x5 = handle.x, y7 = handle.y, width = handle.width, height = handle.height;
    var cursor2 = type3 === "right" || type3 === "left" ? "ew-resize" : "ns-resize";
    return /* @__PURE__ */ react.createElement(Drag, {
      width: stageWidth,
      height: stageHeight,
      onDragMove: this.handleDragMove,
      onDragEnd: this.handleDragEnd,
      resetOnStart: true
    }, function(_ref) {
      var dragStart = _ref.dragStart, dragEnd = _ref.dragEnd, dragMove = _ref.dragMove, isDragging = _ref.isDragging;
      return /* @__PURE__ */ react.createElement("g", null, isDragging && /* @__PURE__ */ react.createElement("rect", {
        fill: "transparent",
        width: stageWidth,
        height: stageHeight,
        style: {
          cursor: cursor2
        },
        onMouseMove: dragMove,
        onMouseUp: dragEnd,
        onMouseLeave: dragEnd
      }), /* @__PURE__ */ react.createElement("rect", {
        x: x5,
        y: y7,
        width,
        height,
        fill: "transparent",
        className: "vx-brush-handle-" + type3,
        onMouseDown: dragStart,
        onMouseMove: dragMove,
        onMouseUp: dragEnd,
        style: {
          cursor: cursor2,
          pointerEvents: !!brush.activeHandle || !!brush.isBrushing ? "none" : "all"
        }
      }));
    });
  };
  return BrushHandle2;
}(react.Component);
_defineProperty$15(BrushHandle, "propTypes", {
  stageWidth: propTypes.number.isRequired,
  stageHeight: propTypes.number.isRequired,
  updateBrush: propTypes.func.isRequired,
  onBrushEnd: propTypes.func,
  handle: propTypes.shape({
    x: propTypes.number.isRequired,
    y: propTypes.number.isRequired,
    width: propTypes.number.isRequired,
    height: propTypes.number.isRequired
  }).isRequired
});
function _extends$46() {
  _extends$46 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$46.apply(this, arguments);
}
function _assertThisInitialized$13(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _defineProperty$25(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var BrushCorner = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose$1(BrushCorner2, _React$Component);
  function BrushCorner2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty$25(_assertThisInitialized$13(_this), "cornerDragMove", function(drag) {
      var _this$props = _this.props, updateBrush = _this$props.updateBrush, type3 = _this$props.type;
      if (!drag.isDragging)
        return;
      updateBrush(function(prevBrush) {
        var start2 = prevBrush.start, end = prevBrush.end;
        var xMax = Math.max(start2.x, end.x);
        var xMin = Math.min(start2.x, end.x);
        var yMax = Math.max(start2.y, end.y);
        var yMin = Math.min(start2.y, end.y);
        var moveX = 0;
        var moveY = 0;
        switch (type3) {
          case "topRight":
            moveX = xMax + drag.dx;
            moveY = yMin + drag.dy;
            return _extends$46({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$46({}, prevBrush.extent, {
                x0: Math.max(Math.min(moveX, start2.x), prevBrush.bounds.x0),
                x1: Math.min(Math.max(moveX, start2.x), prevBrush.bounds.x1),
                y0: Math.max(Math.min(moveY, end.y), prevBrush.bounds.y0),
                y1: Math.min(Math.max(moveY, end.y), prevBrush.bounds.y1)
              })
            });
          case "topLeft":
            moveX = xMin + drag.dx;
            moveY = yMin + drag.dy;
            return _extends$46({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$46({}, prevBrush.extent, {
                x0: Math.max(Math.min(moveX, end.x), prevBrush.bounds.x0),
                x1: Math.min(Math.max(moveX, end.x), prevBrush.bounds.x1),
                y0: Math.max(Math.min(moveY, end.y), prevBrush.bounds.y0),
                y1: Math.min(Math.max(moveY, end.y), prevBrush.bounds.y1)
              })
            });
          case "bottomLeft":
            moveX = xMin + drag.dx;
            moveY = yMax + drag.dy;
            return _extends$46({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$46({}, prevBrush.extent, {
                x0: Math.max(Math.min(moveX, end.x), prevBrush.bounds.x0),
                x1: Math.min(Math.max(moveX, end.x), prevBrush.bounds.x1),
                y0: Math.max(Math.min(moveY, start2.y), prevBrush.bounds.y0),
                y1: Math.min(Math.max(moveY, start2.y), prevBrush.bounds.y1)
              })
            });
          case "bottomRight":
            moveX = xMax + drag.dx;
            moveY = yMax + drag.dy;
            return _extends$46({}, prevBrush, {
              activeHandle: type3,
              extent: _extends$46({}, prevBrush.extent, {
                x0: Math.max(Math.min(moveX, start2.x), prevBrush.bounds.x0),
                x1: Math.min(Math.max(moveX, start2.x), prevBrush.bounds.x1),
                y0: Math.max(Math.min(moveY, start2.y), prevBrush.bounds.y0),
                y1: Math.min(Math.max(moveY, start2.y), prevBrush.bounds.y1)
              })
            });
          default:
            return prevBrush;
        }
      });
    });
    _defineProperty$25(_assertThisInitialized$13(_this), "cornerDragEnd", function() {
      var _this$props2 = _this.props, updateBrush = _this$props2.updateBrush, onBrushEnd = _this$props2.onBrushEnd;
      updateBrush(function(prevBrush) {
        var start2 = prevBrush.start, end = prevBrush.end, extent3 = prevBrush.extent;
        start2.x = Math.min(extent3.x0, extent3.x1);
        start2.y = Math.min(extent3.y0, extent3.y0);
        end.x = Math.max(extent3.x0, extent3.x1);
        end.y = Math.max(extent3.y0, extent3.y1);
        var nextBrush = _extends$46({}, prevBrush, {
          start: start2,
          end,
          activeHandle: null,
          domain: {
            x0: Math.min(start2.x, end.x),
            x1: Math.max(start2.x, end.x),
            y0: Math.min(start2.y, end.y),
            y1: Math.max(start2.y, end.y)
          }
        });
        if (onBrushEnd) {
          onBrushEnd(nextBrush);
        }
        return nextBrush;
      });
    });
    return _this;
  }
  var _proto = BrushCorner2.prototype;
  _proto.render = function render2() {
    var _this$props3 = this.props, type3 = _this$props3.type, brush = _this$props3.brush, stageWidth = _this$props3.stageWidth, stageHeight = _this$props3.stageHeight, styleProp = _this$props3.style, corner = _this$props3.corner;
    var cursor2 = styleProp && styleProp.cursor || (type3 === "topLeft" || type3 === "bottomRight" ? "nwse-resize" : "nesw-resize");
    var pointerEvents = brush.activeHandle || brush.isBrushing ? "none" : "all";
    return /* @__PURE__ */ react.createElement(Drag, {
      width: stageWidth,
      height: stageHeight,
      onDragMove: this.cornerDragMove,
      onDragEnd: this.cornerDragEnd,
      resetOnStart: true
    }, function(_ref) {
      var dragMove = _ref.dragMove, dragEnd = _ref.dragEnd, dragStart = _ref.dragStart, isDragging = _ref.isDragging;
      return /* @__PURE__ */ react.createElement("g", null, isDragging && /* @__PURE__ */ react.createElement("rect", {
        fill: "transparent",
        width: stageWidth,
        height: stageHeight,
        style: {
          cursor: cursor2
        },
        onMouseMove: dragMove,
        onMouseUp: dragEnd
      }), /* @__PURE__ */ react.createElement("rect", _extends$46({
        fill: "transparent",
        onMouseDown: dragStart,
        onMouseMove: dragMove,
        onMouseUp: dragEnd,
        className: "vx-brush-corner-" + type3,
        style: _extends$46({
          cursor: cursor2,
          pointerEvents
        }, styleProp)
      }, corner)));
    });
  };
  return BrushCorner2;
}(react.Component);
_defineProperty$25(BrushCorner, "propTypes", {
  stageWidth: propTypes.number.isRequired,
  stageHeight: propTypes.number.isRequired,
  updateBrush: propTypes.func.isRequired,
  onBrushEnd: propTypes.func,
  corner: propTypes.shape({
    x: propTypes.number.isRequired,
    y: propTypes.number.isRequired,
    width: propTypes.number.isRequired,
    height: propTypes.number.isRequired
  }).isRequired
});
_defineProperty$25(BrushCorner, "defaultProps", {
  style: {}
});
function _extends$55() {
  _extends$55 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$55.apply(this, arguments);
}
function _assertThisInitialized$23(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inheritsLoose$2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _defineProperty$35(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var DRAGGING_OVERLAY_STYLES = {
  cursor: "move"
};
var BrushSelection = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose$2(BrushSelection2, _React$Component);
  function BrushSelection2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty$35(_assertThisInitialized$23(_this), "selectionDragMove", function(drag) {
      var updateBrush = _this.props.updateBrush;
      updateBrush(function(prevBrush) {
        var _prevBrush$start = prevBrush.start, x03 = _prevBrush$start.x, y03 = _prevBrush$start.y;
        var _prevBrush$end = prevBrush.end, x14 = _prevBrush$end.x, y14 = _prevBrush$end.y;
        var validDx = drag.dx > 0 ? Math.min(drag.dx, prevBrush.bounds.x1 - x14) : Math.max(drag.dx, prevBrush.bounds.x0 - x03);
        var validDy = drag.dy > 0 ? Math.min(drag.dy, prevBrush.bounds.y1 - y14) : Math.max(drag.dy, prevBrush.bounds.y0 - y03);
        return _extends$55({}, prevBrush, {
          isBrushing: true,
          extent: _extends$55({}, prevBrush.extent, {
            x0: x03 + validDx,
            x1: x14 + validDx,
            y0: y03 + validDy,
            y1: y14 + validDy
          })
        });
      });
    });
    _defineProperty$35(_assertThisInitialized$23(_this), "selectionDragEnd", function() {
      var _this$props = _this.props, updateBrush = _this$props.updateBrush, onBrushEnd = _this$props.onBrushEnd;
      updateBrush(function(prevBrush) {
        var nextBrush = _extends$55({}, prevBrush, {
          isBrushing: false,
          start: _extends$55({}, prevBrush.start, {
            x: Math.min(prevBrush.extent.x0, prevBrush.extent.x1),
            y: Math.min(prevBrush.extent.y0, prevBrush.extent.y1)
          }),
          end: _extends$55({}, prevBrush.end, {
            x: Math.max(prevBrush.extent.x0, prevBrush.extent.x1),
            y: Math.max(prevBrush.extent.y0, prevBrush.extent.y1)
          })
        });
        if (onBrushEnd) {
          onBrushEnd(nextBrush);
        }
        return nextBrush;
      });
    });
    return _this;
  }
  var _proto = BrushSelection2.prototype;
  _proto.render = function render2() {
    var _this$props2 = this.props, width = _this$props2.width, height = _this$props2.height, stageWidth = _this$props2.stageWidth, stageHeight = _this$props2.stageHeight, brush = _this$props2.brush, disableDraggingSelection = _this$props2.disableDraggingSelection, _onMouseLeave = _this$props2.onMouseLeave, _onMouseMove = _this$props2.onMouseMove, _onMouseUp = _this$props2.onMouseUp, _onClick = _this$props2.onClick, selectedBoxStyle = _this$props2.selectedBoxStyle;
    return /* @__PURE__ */ react.createElement(Drag, {
      width,
      height,
      resetOnStart: true,
      onDragMove: this.selectionDragMove,
      onDragEnd: this.selectionDragEnd
    }, function(_ref) {
      var isDragging = _ref.isDragging, dragStart = _ref.dragStart, dragEnd = _ref.dragEnd, dragMove = _ref.dragMove;
      return /* @__PURE__ */ react.createElement("g", null, isDragging && /* @__PURE__ */ react.createElement("rect", {
        width: stageWidth,
        height: stageHeight,
        fill: "transparent",
        onMouseUp: dragEnd,
        onMouseMove: dragMove,
        onMouseLeave: dragEnd,
        style: DRAGGING_OVERLAY_STYLES
      }), /* @__PURE__ */ react.createElement("rect", _extends$55({
        x: Math.min(brush.extent.x0, brush.extent.x1),
        y: Math.min(brush.extent.y0, brush.extent.y1),
        width,
        height,
        className: "vx-brush-selection",
        onMouseDown: disableDraggingSelection ? void 0 : dragStart,
        onMouseLeave: function onMouseLeave(event) {
          if (_onMouseLeave)
            _onMouseLeave(event);
        },
        onMouseMove: function onMouseMove(event) {
          dragMove(event);
          if (_onMouseMove)
            _onMouseMove(event);
        },
        onMouseUp: function onMouseUp(event) {
          dragEnd(event);
          if (_onMouseUp)
            _onMouseUp(event);
        },
        onClick: function onClick(event) {
          if (_onClick)
            _onClick(event);
        },
        style: {
          pointerEvents: brush.isBrushing || brush.activeHandle ? "none" : "all",
          cursor: disableDraggingSelection ? void 0 : "move"
        }
      }, selectedBoxStyle)));
    });
  };
  return BrushSelection2;
}(react.Component);
_defineProperty$35(BrushSelection, "propTypes", {
  width: propTypes.number.isRequired,
  height: propTypes.number.isRequired,
  stageWidth: propTypes.number.isRequired,
  stageHeight: propTypes.number.isRequired,
  updateBrush: propTypes.func.isRequired,
  onBrushEnd: propTypes.func,
  disableDraggingSelection: propTypes.bool.isRequired,
  onMouseLeave: propTypes.func,
  onMouseMove: propTypes.func,
  onMouseUp: propTypes.func,
  onClick: propTypes.func
});
_defineProperty$35(BrushSelection, "defaultProps", {
  onMouseLeave: null,
  onMouseUp: null,
  onMouseMove: null,
  onClick: null
});
function _extends$64() {
  _extends$64 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$64.apply(this, arguments);
}
function _assertThisInitialized$33(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inheritsLoose$3(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _defineProperty$44(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var BRUSH_OVERLAY_STYLES = {
  cursor: "crosshair"
};
var BaseBrush = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose$3(BaseBrush2, _React$Component);
  function BaseBrush2(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _defineProperty$44(_assertThisInitialized$33(_this), "mouseUpTime", 0);
    _defineProperty$44(_assertThisInitialized$33(_this), "mouseDownTime", 0);
    _defineProperty$44(_assertThisInitialized$33(_this), "getExtent", function(start2, end) {
      var _this$props = _this.props, brushDirection = _this$props.brushDirection, width = _this$props.width, height = _this$props.height;
      var x03 = brushDirection === "vertical" ? 0 : Math.min(start2.x || 0, end.x || 0);
      var x14 = brushDirection === "vertical" ? width : Math.max(start2.x || 0, end.x || 0);
      var y03 = brushDirection === "horizontal" ? 0 : Math.min(start2.y || 0, end.y || 0);
      var y14 = brushDirection === "horizontal" ? height : Math.max(start2.y || 0, end.y || 0);
      return {
        x0: x03,
        x1: x14,
        y0: y03,
        y1: y14
      };
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "handleDragStart", function(draw) {
      var _this$props2 = _this.props, onBrushStart = _this$props2.onBrushStart, left2 = _this$props2.left, top2 = _this$props2.top, inheritedMargin = _this$props2.inheritedMargin;
      var marginLeft = inheritedMargin && inheritedMargin.left ? inheritedMargin.left : 0;
      var marginTop = inheritedMargin && inheritedMargin.top ? inheritedMargin.top : 0;
      var start2 = {
        x: (draw.x || 0) + draw.dx - left2 - marginLeft,
        y: (draw.y || 0) + draw.dy - top2 - marginTop
      };
      var end = _extends$64({}, start2);
      if (onBrushStart) {
        onBrushStart(start2);
      }
      _this.updateBrush(function(prevBrush) {
        return _extends$64({}, prevBrush, {
          start: start2,
          end,
          extent: {
            x0: -1,
            x1: -1,
            y0: -1,
            y1: -1
          },
          isBrushing: true
        });
      });
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "handleDragMove", function(drag) {
      var _this$props3 = _this.props, left2 = _this$props3.left, top2 = _this$props3.top, inheritedMargin = _this$props3.inheritedMargin;
      if (!drag.isDragging)
        return;
      var marginLeft = inheritedMargin && inheritedMargin.left || 0;
      var marginTop = inheritedMargin && inheritedMargin.top || 0;
      var end = {
        x: (drag.x || 0) + drag.dx - left2 - marginLeft,
        y: (drag.y || 0) + drag.dy - top2 - marginTop
      };
      _this.updateBrush(function(prevBrush) {
        var start2 = prevBrush.start;
        var extent3 = _this.getExtent(start2, end);
        return _extends$64({}, prevBrush, {
          end,
          extent: extent3
        });
      });
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "handleDragEnd", function() {
      var _this$props4 = _this.props, onBrushEnd = _this$props4.onBrushEnd, resetOnEnd = _this$props4.resetOnEnd;
      _this.updateBrush(function(prevBrush) {
        var extent3 = prevBrush.extent;
        var newState = _extends$64({}, prevBrush, {
          start: {
            x: extent3.x0,
            y: extent3.y0
          },
          end: {
            x: extent3.x1,
            y: extent3.y1
          },
          isBrushing: false,
          activeHandle: null
        });
        if (onBrushEnd) {
          onBrushEnd(newState);
        }
        if (resetOnEnd) {
          _this.reset();
        }
        return newState;
      });
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "getBrushWidth", function() {
      var extent3 = _this.state.extent;
      var x03 = extent3.x0, x14 = extent3.x1;
      return Math.max(Math.max(x03, x14) - Math.min(x03, x14), 0);
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "getBrushHeight", function() {
      var extent3 = _this.state.extent;
      var y14 = extent3.y1, y03 = extent3.y0;
      return Math.max(Math.max(y03, y14) - Math.min(y03, y14), 0);
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "handles", function() {
      var handleSize = _this.props.handleSize;
      var extent3 = _this.state.extent;
      var x03 = extent3.x0, x14 = extent3.x1, y03 = extent3.y0, y14 = extent3.y1;
      var offset = handleSize / 2;
      var width = _this.getBrushWidth();
      var height = _this.getBrushHeight();
      return {
        top: {
          x: x03 - offset,
          y: y03 - offset,
          height: handleSize,
          width: width + handleSize
        },
        bottom: {
          x: x03 - offset,
          y: y14 - offset,
          height: handleSize,
          width: width + handleSize
        },
        right: {
          x: x14 - offset,
          y: y03 - offset,
          height: height + handleSize,
          width: handleSize
        },
        left: {
          x: x03 - offset,
          y: y03 - offset,
          height: height + handleSize,
          width: handleSize
        }
      };
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "corners", function() {
      var handleSize = _this.props.handleSize;
      var extent3 = _this.state.extent;
      var x03 = extent3.x0, x14 = extent3.x1, y03 = extent3.y0, y14 = extent3.y1;
      var offset = handleSize / 2;
      var width = handleSize;
      var height = handleSize;
      return {
        topLeft: {
          x: Math.min(x03, x14) - offset,
          y: Math.min(y03, y14) - offset,
          width,
          height
        },
        topRight: {
          x: Math.max(x03, x14) - offset,
          y: Math.min(y03, y14) - offset,
          width,
          height
        },
        bottomLeft: {
          x: Math.min(x03, x14) - offset,
          y: Math.max(y03, y14) - offset,
          width,
          height
        },
        bottomRight: {
          x: Math.max(x03, x14) - offset,
          y: Math.max(y03, y14) - offset,
          width,
          height
        }
      };
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "updateBrush", function(updater) {
      var onChange = _this.props.onChange;
      _this.setState(updater, function() {
        if (onChange) {
          onChange(_this.state);
        }
      });
    });
    _defineProperty$44(_assertThisInitialized$33(_this), "reset", function() {
      var _this$props5 = _this.props, width = _this$props5.width, height = _this$props5.height;
      _this.updateBrush(function() {
        return {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 0,
            y: 0
          },
          extent: {
            x0: -1,
            x1: -1,
            y0: -1,
            y1: -1
          },
          bounds: {
            x0: 0,
            x1: width,
            y0: 0,
            y1: height
          },
          isBrushing: false,
          activeHandle: null
        };
      });
    });
    var initialBrushPosition = props.initialBrushPosition;
    var _extent = initialBrushPosition ? _this.getExtent(initialBrushPosition.start, initialBrushPosition.end) : {
      x0: -1,
      x1: -1,
      y0: -1,
      y1: -1
    };
    _this.state = {
      start: {
        x: Math.max(0, _extent.x0),
        y: Math.max(0, _extent.y0)
      },
      end: {
        x: Math.max(0, _extent.x1),
        y: Math.max(0, _extent.y1)
      },
      extent: _extent,
      bounds: {
        x0: 0,
        x1: _this.props.width,
        y0: 0,
        y1: _this.props.height
      },
      isBrushing: false,
      activeHandle: null
    };
    return _this;
  }
  var _proto = BaseBrush2.prototype;
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this2 = this;
    if (this.props.width !== prevProps.width || this.props.height !== prevProps.height) {
      this.setState(function() {
        return {
          bounds: {
            x0: 0,
            x1: _this2.props.width,
            y0: 0,
            y1: _this2.props.height
          }
        };
      });
    }
  };
  _proto.render = function render2() {
    var _this3 = this;
    var _this$state = this.state, start2 = _this$state.start, end = _this$state.end;
    var _this$props6 = this.props, top2 = _this$props6.top, left2 = _this$props6.left, stageWidth = _this$props6.width, stageHeight = _this$props6.height, _onMouseLeave = _this$props6.onMouseLeave, _onMouseUp = _this$props6.onMouseUp, _onMouseMove = _this$props6.onMouseMove, onBrushEnd = _this$props6.onBrushEnd, _onClick = _this$props6.onClick, resizeTriggerAreas = _this$props6.resizeTriggerAreas, selectedBoxStyle = _this$props6.selectedBoxStyle, disableDraggingSelection = _this$props6.disableDraggingSelection, clickSensitivity = _this$props6.clickSensitivity;
    var handles = this.handles();
    var corners = this.corners();
    var width = this.getBrushWidth();
    var height = this.getBrushHeight();
    var resizeTriggerAreaSet = new Set(resizeTriggerAreas);
    return /* @__PURE__ */ react.createElement(Group2, {
      className: "vx-brush",
      top: top2,
      left: left2
    }, /* @__PURE__ */ react.createElement(Drag, {
      width: stageWidth,
      height: stageHeight,
      resetOnStart: true,
      onDragStart: this.handleDragStart,
      onDragMove: this.handleDragMove,
      onDragEnd: this.handleDragEnd
    }, function(_ref) {
      var dragStart = _ref.dragStart, isDragging = _ref.isDragging, dragMove = _ref.dragMove, dragEnd = _ref.dragEnd;
      return /* @__PURE__ */ react.createElement(Bar2, {
        className: "vx-brush-overlay",
        fill: "transparent",
        x: 0,
        y: 0,
        width: stageWidth,
        height: stageHeight,
        onDoubleClick: function onDoubleClick() {
          return _this3.reset();
        },
        onClick: function onClick(event) {
          var duration = _this3.mouseUpTime - _this3.mouseDownTime;
          if (_onClick && duration < clickSensitivity)
            _onClick(event);
        },
        onMouseDown: function onMouseDown(event) {
          _this3.mouseDownTime = Date.now();
          dragStart(event);
        },
        onMouseLeave: function onMouseLeave(event) {
          if (_onMouseLeave)
            _onMouseLeave(event);
        },
        onMouseMove: function onMouseMove(event) {
          if (!isDragging && _onMouseMove)
            _onMouseMove(event);
          if (isDragging)
            dragMove(event);
        },
        onMouseUp: function onMouseUp(event) {
          _this3.mouseUpTime = Date.now();
          if (_onMouseUp)
            _onMouseUp(event);
          dragEnd(event);
        },
        style: BRUSH_OVERLAY_STYLES
      });
    }), start2 && end && /* @__PURE__ */ react.createElement(BrushSelection, {
      updateBrush: this.updateBrush,
      width,
      height,
      stageWidth,
      stageHeight,
      brush: _extends$64({}, this.state),
      disableDraggingSelection,
      onBrushEnd,
      onMouseLeave: _onMouseLeave,
      onMouseMove: _onMouseMove,
      onMouseUp: _onMouseUp,
      onClick: _onClick,
      selectedBoxStyle
    }), start2 && end && Object.keys(handles).filter(function(handleKey) {
      return resizeTriggerAreaSet.has(handleKey);
    }).map(function(handleKey) {
      var handle = handles[handleKey];
      return handle && /* @__PURE__ */ react.createElement(BrushHandle, {
        key: "handle-" + handleKey,
        type: handleKey,
        handle,
        stageWidth,
        stageHeight,
        updateBrush: _this3.updateBrush,
        brush: _this3.state,
        onBrushEnd
      });
    }), start2 && end && Object.keys(corners).filter(function(cornerKey) {
      return resizeTriggerAreaSet.has(cornerKey);
    }).map(function(cornerKey) {
      var corner = corners[cornerKey];
      return corner && /* @__PURE__ */ react.createElement(BrushCorner, {
        key: "corner-" + cornerKey,
        type: cornerKey,
        brush: _this3.state,
        updateBrush: _this3.updateBrush,
        stageWidth,
        stageHeight,
        corner,
        onBrushEnd
      });
    }));
  };
  return BaseBrush2;
}(react.Component);
_defineProperty$44(BaseBrush, "propTypes", {
  brushDirection: propTypes.oneOf(["horizontal", "vertical", "both"]),
  width: propTypes.number.isRequired,
  height: propTypes.number.isRequired,
  left: propTypes.number.isRequired,
  top: propTypes.number.isRequired,
  onChange: propTypes.func,
  handleSize: propTypes.number,
  resizeTriggerAreas: propTypes.array,
  onBrushStart: propTypes.func,
  onBrushEnd: propTypes.func,
  onMouseLeave: propTypes.func,
  onMouseUp: propTypes.func,
  onMouseMove: propTypes.func,
  onClick: propTypes.func,
  clickSensitivity: propTypes.number,
  disableDraggingSelection: propTypes.bool,
  resetOnEnd: propTypes.bool
});
_defineProperty$44(BaseBrush, "defaultProps", {
  brushDirection: "both",
  inheritedMargin: {
    left: 0,
    top: 0,
    right: 0,
    bottom: 0
  },
  onChange: null,
  handleSize: 4,
  resizeTriggerAreas: ["left", "right"],
  onBrushStart: null,
  onBrushEnd: null,
  onMouseLeave: null,
  onMouseUp: null,
  onMouseMove: null,
  onClick: null,
  disableDraggingSelection: false,
  clickSensitivity: 200,
  resetOnEnd: false,
  initialBrushPosition: null
});
function scaleInvert(scale, value2) {
  if (!scale.invert) {
    var _scale$range = scale.range(), start2 = _scale$range[0], end = _scale$range[1];
    var i = 0;
    var width = scale.step() * (end - start2) / Math.abs(end - start2);
    if (width > 0) {
      while (value2 > start2 + width * (i + 1)) {
        i += 1;
      }
    } else {
      while (value2 < start2 + width * (i + 1)) {
        i += 1;
      }
    }
    return i;
  }
  return scale.invert(value2);
}
function getDomainFromExtent(scale, start2, end, tolerentDelta) {
  var domain;
  var invertedStart = scaleInvert(scale, start2 + (start2 < end ? -tolerentDelta : tolerentDelta));
  var invertedEnd = scaleInvert(scale, end + (end < start2 ? -tolerentDelta : tolerentDelta));
  var minValue = Math.min(invertedStart, invertedEnd);
  var maxValue = Math.max(invertedStart, invertedEnd);
  if (scale.invert) {
    domain = {
      start: minValue,
      end: maxValue
    };
  } else {
    var values2 = [];
    var scaleDomain = scale.domain();
    for (var i = minValue; i <= maxValue; i += 1) {
      values2.push(scaleDomain[i]);
    }
    domain = {
      values: values2
    };
  }
  return domain;
}
function _assertThisInitialized$43(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _inheritsLoose$4(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _defineProperty$54(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {value: value2, enumerable: true, configurable: true, writable: true});
  } else {
    obj[key] = value2;
  }
  return obj;
}
var SAFE_PIXEL = 2;
var DEFAULT_COLOR2 = "steelblue";
var Brush3 = /* @__PURE__ */ function(_Component) {
  _inheritsLoose$4(Brush4, _Component);
  function Brush4() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _defineProperty$54(_assertThisInitialized$43(_this), "handleChange", function(brush) {
      var onChange = _this.props.onChange;
      if (!onChange)
        return;
      var x03 = brush.extent.x0;
      if (typeof x03 === "undefined" || x03 < 0) {
        onChange(null);
        return;
      }
      var domain = _this.convertRangeToDomain(brush);
      onChange(domain);
    });
    _defineProperty$54(_assertThisInitialized$43(_this), "handleBrushStart", function(point8) {
      var onBrushStart = _this.props.onBrushStart;
      if (!onBrushStart)
        return;
      var x5 = point8.x, y7 = point8.y;
      var _this$props = _this.props, xScale = _this$props.xScale, yScale = _this$props.yScale;
      var invertedX = scaleInvert(xScale, x5);
      var invertedY = scaleInvert(yScale, y7);
      onBrushStart({
        x: xScale.invert ? invertedX : xScale.domain()[invertedX],
        y: yScale.invert ? invertedY : yScale.domain()[invertedY]
      });
    });
    _defineProperty$54(_assertThisInitialized$43(_this), "handleBrushEnd", function(brush) {
      var onBrushEnd = _this.props.onBrushEnd;
      if (!onBrushEnd)
        return;
      var x03 = brush.extent.x0;
      if (typeof x03 === "undefined" || x03 < 0) {
        onBrushEnd(null);
        return;
      }
      var domain = _this.convertRangeToDomain(brush);
      onBrushEnd(domain);
    });
    return _this;
  }
  var _proto = Brush4.prototype;
  _proto.convertRangeToDomain = function convertRangeToDomain(brush) {
    var _this$props2 = this.props, xScale = _this$props2.xScale, yScale = _this$props2.yScale;
    var _brush$extent = brush.extent, x03 = _brush$extent.x0, x14 = _brush$extent.x1, y03 = _brush$extent.y0, y14 = _brush$extent.y1;
    var xDomain = getDomainFromExtent(xScale, x03 || 0, x14 || 0, SAFE_PIXEL);
    var yDomain = getDomainFromExtent(yScale, y03 || 0, y14 || 0, SAFE_PIXEL);
    var domain = {
      x0: xDomain.start || 0,
      x1: xDomain.end || 0,
      xValues: xDomain.values,
      y0: yDomain.start || 0,
      y1: yDomain.end || 0,
      yValues: yDomain.values
    };
    return domain;
  };
  _proto.render = function render2() {
    var _this$props3 = this.props, xScale = _this$props3.xScale, yScale = _this$props3.yScale, height = _this$props3.height, width = _this$props3.width, margin = _this$props3.margin, brushDirection = _this$props3.brushDirection, initialBrushPosition = _this$props3.initialBrushPosition, resizeTriggerAreas = _this$props3.resizeTriggerAreas, brushRegion = _this$props3.brushRegion, yAxisOrientation = _this$props3.yAxisOrientation, xAxisOrientation = _this$props3.xAxisOrientation, selectedBoxStyle = _this$props3.selectedBoxStyle, disableDraggingSelection = _this$props3.disableDraggingSelection, resetOnEnd = _this$props3.resetOnEnd, onMouseLeave = _this$props3.onMouseLeave, onMouseMove = _this$props3.onMouseMove, onClick = _this$props3.onClick, handleSize = _this$props3.handleSize;
    if (!xScale || !yScale)
      return null;
    var brushRegionWidth;
    var brushRegionHeight;
    var left2;
    var top2;
    var marginLeft = margin && margin.left ? margin.left : 0;
    var marginTop = margin && margin.top ? margin.top : 0;
    var marginRight = margin && margin.right ? margin.right : 0;
    var marginBottom = margin && margin.bottom ? margin.bottom : 0;
    if (brushRegion === "chart") {
      left2 = 0;
      top2 = 0;
      brushRegionWidth = width;
      brushRegionHeight = height;
    } else if (brushRegion === "yAxis") {
      top2 = 0;
      brushRegionHeight = height;
      if (yAxisOrientation === "right") {
        left2 = width;
        brushRegionWidth = marginRight;
      } else {
        left2 = -marginLeft;
        brushRegionWidth = marginLeft;
      }
    } else {
      left2 = 0;
      brushRegionWidth = width;
      if (xAxisOrientation === "bottom") {
        top2 = height;
        brushRegionHeight = marginBottom;
      } else {
        top2 = -marginTop;
        brushRegionHeight = marginTop;
      }
    }
    return /* @__PURE__ */ react.createElement(BaseBrush, {
      width: brushRegionWidth,
      height: brushRegionHeight,
      left: left2,
      top: top2,
      inheritedMargin: margin,
      initialBrushPosition,
      onChange: this.handleChange,
      onBrushEnd: this.handleBrushEnd,
      onBrushStart: this.handleBrushStart,
      handleSize,
      resizeTriggerAreas,
      brushDirection,
      selectedBoxStyle,
      disableDraggingSelection,
      resetOnEnd,
      onMouseLeave,
      onMouseMove,
      onClick
    });
  };
  return Brush4;
}(react.Component);
_defineProperty$54(Brush3, "propTypes", {
  height: propTypes.number,
  width: propTypes.number,
  onChange: propTypes.func,
  onBrushEnd: propTypes.func,
  brushDirection: propTypes.oneOf(["vertical", "horizontal", "both"]),
  resizeTriggerAreas: propTypes.array,
  brushRegion: propTypes.oneOf(["xAxis", "yAxis", "chart"]),
  yAxisOrientation: propTypes.oneOf(["left", "right"]),
  xAxisOrientation: propTypes.oneOf(["top", "bottom"]),
  disableDraggingSelection: propTypes.bool,
  resetOnEnd: propTypes.bool,
  handleSize: propTypes.number
});
_defineProperty$54(Brush3, "defaultProps", {
  xScale: null,
  yScale: null,
  onChange: null,
  height: 0,
  width: 0,
  selectedBoxStyle: {
    fill: DEFAULT_COLOR2,
    fillOpacity: 0.2,
    stroke: DEFAULT_COLOR2,
    strokeWidth: 1,
    strokeOpacity: 0.8
  },
  margin: {
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  handleSize: 4,
  brushDirection: "horizontal",
  initialBrushPosition: null,
  resizeTriggerAreas: ["left", "right"],
  brushRegion: "chart",
  yAxisOrientation: "right",
  xAxisOrientation: "bottom",
  onBrushStart: null,
  onBrushEnd: null,
  disableDraggingSelection: false,
  resetOnEnd: false,
  onMouseMove: null,
  onMouseLeave: null,
  onClick: null
});

// snowpack/pkg/@vx/pattern.js
function Pattern(_ref) {
  var id3 = _ref.id, width = _ref.width, height = _ref.height, children2 = _ref.children;
  return /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("pattern", {
    id: id3,
    width,
    height,
    patternUnits: "userSpaceOnUse"
  }, children2));
}
Pattern.propTypes = {
  id: propTypes.string.isRequired,
  width: propTypes.number.isRequired,
  height: propTypes.number.isRequired,
  children: propTypes.node.isRequired
};
var PatternOrientation = {
  horizontal: "horizontal",
  vertical: "vertical",
  diagonal: "diagonal",
  diagonalRightToLeft: "diagonalRightToLeft"
};
function pathForOrientation(_ref) {
  var height = _ref.height, orientation = _ref.orientation;
  switch (orientation) {
    case PatternOrientation.vertical:
      return "M " + height / 2 + ", 0 l 0, " + height;
    case PatternOrientation.horizontal:
      return "M 0," + height / 2 + " l " + height + ",0";
    case PatternOrientation.diagonal:
      return "M 0," + height + " l " + height + "," + -height + " M " + -height / 4 + "," + height / 4 + " l " + height / 2 + "," + -height / 2 + "\n             M " + 3 / 4 * height + "," + 5 / 4 * height + " l " + height / 2 + "," + -height / 2;
    case PatternOrientation.diagonalRightToLeft:
      return "M 0,0 l " + height + "," + height + "\n        M " + -height / 4 + "," + 3 / 4 * height + " l " + height / 2 + "," + height / 2 + "\n        M " + 3 / 4 * height + "," + -height / 4 + " l " + height / 2 + "," + height / 2;
    default:
      return "M " + height / 2 + ", 0 l 0, " + height;
  }
}
function Lines(_ref2) {
  var id3 = _ref2.id, width = _ref2.width, height = _ref2.height, stroke = _ref2.stroke, strokeWidth = _ref2.strokeWidth, strokeDasharray2 = _ref2.strokeDasharray, _ref2$strokeLinecap = _ref2.strokeLinecap, strokeLinecap2 = _ref2$strokeLinecap === void 0 ? "square" : _ref2$strokeLinecap, _ref2$shapeRendering = _ref2.shapeRendering, shapeRendering = _ref2$shapeRendering === void 0 ? "auto" : _ref2$shapeRendering, _ref2$orientation = _ref2.orientation, orientation = _ref2$orientation === void 0 ? ["vertical"] : _ref2$orientation, background3 = _ref2.background, className = _ref2.className;
  var orientations = Array.isArray(orientation) ? orientation : [orientation];
  return /* @__PURE__ */ react.createElement(Pattern, {
    id: id3,
    width,
    height
  }, !!background3 && /* @__PURE__ */ react.createElement("rect", {
    className: classnames("vx-pattern-line-background"),
    width,
    height,
    fill: background3
  }), orientations.map(function(o, i) {
    return /* @__PURE__ */ react.createElement("path", {
      key: "vx-" + id3 + "-line-" + o + "-" + i,
      className: classnames("vx-pattern-line", className),
      d: pathForOrientation({
        orientation: o,
        height
      }),
      stroke,
      strokeWidth,
      strokeDasharray: strokeDasharray2,
      strokeLinecap: strokeLinecap2,
      shapeRendering
    });
  }));
}
Lines.propTypes = {
  id: propTypes.string.isRequired,
  width: propTypes.number.isRequired,
  height: propTypes.number.isRequired,
  className: propTypes.string,
  background: propTypes.string,
  stroke: propTypes.string,
  strokeWidth: propTypes.oneOfType([propTypes.number, propTypes.string]),
  strokeDasharray: propTypes.oneOfType([propTypes.string, propTypes.number]),
  strokeLinecap: propTypes.oneOf(["square", "butt", "round", "inherit"]),
  shapeRendering: propTypes.oneOfType([propTypes.string, propTypes.number]),
  orientation: propTypes.array
};

// snowpack/pkg/@vx/gradient.js
function _extends11() {
  _extends11 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
function _objectWithoutPropertiesLoose9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function LinearGradient3(_ref) {
  var children2 = _ref.children, id3 = _ref.id, from = _ref.from, to2 = _ref.to, _x1 = _ref.x1, _y1 = _ref.y1, _x2 = _ref.x2, _y2 = _ref.y2, _ref$fromOffset = _ref.fromOffset, fromOffset = _ref$fromOffset === void 0 ? "0%" : _ref$fromOffset, _ref$fromOpacity = _ref.fromOpacity, fromOpacity = _ref$fromOpacity === void 0 ? 1 : _ref$fromOpacity, _ref$toOffset = _ref.toOffset, toOffset = _ref$toOffset === void 0 ? "100%" : _ref$toOffset, _ref$toOpacity = _ref.toOpacity, toOpacity = _ref$toOpacity === void 0 ? 1 : _ref$toOpacity, rotate = _ref.rotate, transform = _ref.transform, _ref$vertical = _ref.vertical, vertical = _ref$vertical === void 0 ? true : _ref$vertical, restProps = _objectWithoutPropertiesLoose9(_ref, ["children", "id", "from", "to", "x1", "y1", "x2", "y2", "fromOffset", "fromOpacity", "toOffset", "toOpacity", "rotate", "transform", "vertical"]);
  var x14 = _x1;
  var x22 = _x2;
  var y14 = _y1;
  var y22 = _y2;
  if (vertical && !x14 && !x22 && !y14 && !y22) {
    x14 = "0";
    x22 = "0";
    y14 = "0";
    y22 = "1";
  }
  return /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("linearGradient", _extends11({
    id: id3,
    x1: x14,
    y1: y14,
    x2: x22,
    y2: y22,
    gradientTransform: rotate ? "rotate(" + rotate + ")" : transform
  }, restProps), !!children2 && children2, !children2 && /* @__PURE__ */ react.createElement("stop", {
    offset: fromOffset,
    stopColor: from,
    stopOpacity: fromOpacity
  }), !children2 && /* @__PURE__ */ react.createElement("stop", {
    offset: toOffset,
    stopColor: to2,
    stopOpacity: toOpacity
  })));
}
LinearGradient3.propTypes = {
  id: propTypes.string.isRequired,
  from: propTypes.string,
  to: propTypes.string,
  x1: propTypes.oneOfType([propTypes.string, propTypes.number]),
  x2: propTypes.oneOfType([propTypes.string, propTypes.number]),
  y1: propTypes.oneOfType([propTypes.string, propTypes.number]),
  y2: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fromOffset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fromOpacity: propTypes.oneOfType([propTypes.string, propTypes.number]),
  toOffset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  toOpacity: propTypes.oneOfType([propTypes.string, propTypes.number]),
  rotate: propTypes.oneOfType([propTypes.string, propTypes.number]),
  transform: propTypes.string,
  children: propTypes.node,
  vertical: propTypes.bool
};

// snowpack/pkg/@visx/gradient.js
function _extends12() {
  _extends12 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
function _objectWithoutPropertiesLoose10(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function LinearGradient4(_ref) {
  var children2 = _ref.children, id3 = _ref.id, from = _ref.from, to2 = _ref.to, _x1 = _ref.x1, _y1 = _ref.y1, _x2 = _ref.x2, _y2 = _ref.y2, _ref$fromOffset = _ref.fromOffset, fromOffset = _ref$fromOffset === void 0 ? "0%" : _ref$fromOffset, _ref$fromOpacity = _ref.fromOpacity, fromOpacity = _ref$fromOpacity === void 0 ? 1 : _ref$fromOpacity, _ref$toOffset = _ref.toOffset, toOffset = _ref$toOffset === void 0 ? "100%" : _ref$toOffset, _ref$toOpacity = _ref.toOpacity, toOpacity = _ref$toOpacity === void 0 ? 1 : _ref$toOpacity, rotate = _ref.rotate, transform = _ref.transform, _ref$vertical = _ref.vertical, vertical = _ref$vertical === void 0 ? true : _ref$vertical, restProps = _objectWithoutPropertiesLoose10(_ref, ["children", "id", "from", "to", "x1", "y1", "x2", "y2", "fromOffset", "fromOpacity", "toOffset", "toOpacity", "rotate", "transform", "vertical"]);
  var x14 = _x1;
  var x22 = _x2;
  var y14 = _y1;
  var y22 = _y2;
  if (vertical && !x14 && !x22 && !y14 && !y22) {
    x14 = "0";
    x22 = "0";
    y14 = "0";
    y22 = "1";
  }
  return /* @__PURE__ */ react.createElement("defs", null, /* @__PURE__ */ react.createElement("linearGradient", _extends12({
    id: id3,
    x1: x14,
    y1: y14,
    x2: x22,
    y2: y22,
    gradientTransform: rotate ? "rotate(" + rotate + ")" : transform
  }, restProps), !!children2 && children2, !children2 && /* @__PURE__ */ react.createElement("stop", {
    offset: fromOffset,
    stopColor: from,
    stopOpacity: fromOpacity
  }), !children2 && /* @__PURE__ */ react.createElement("stop", {
    offset: toOffset,
    stopColor: to2,
    stopOpacity: toOpacity
  })));
}
LinearGradient4.propTypes = {
  id: propTypes.string.isRequired,
  from: propTypes.string,
  to: propTypes.string,
  x1: propTypes.oneOfType([propTypes.string, propTypes.number]),
  x2: propTypes.oneOfType([propTypes.string, propTypes.number]),
  y1: propTypes.oneOfType([propTypes.string, propTypes.number]),
  y2: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fromOffset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  fromOpacity: propTypes.oneOfType([propTypes.string, propTypes.number]),
  toOffset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  toOpacity: propTypes.oneOfType([propTypes.string, propTypes.number]),
  rotate: propTypes.oneOfType([propTypes.string, propTypes.number]),
  transform: propTypes.string,
  children: propTypes.node,
  vertical: propTypes.bool
};

// dist/components/areachart.js
var axisColor = "#fff";
var axisBottomTickLabelProps = {
  textAnchor: "middle",
  fontFamily: "Arial",
  fontSize: 10,
  fill: axisColor
};
var axisLeftTickLabelProps = {
  dx: "-0.25em",
  dy: "0.25em",
  fontFamily: "Arial",
  fontSize: 10,
  textAnchor: "end",
  fill: axisColor
};
var getDate2 = (d2) => new Date(d2.date);
var getStockValue = (d2) => d2.close;
function AreaChart({
  data: data3,
  gradientColor,
  width,
  yMax,
  margin,
  xScale,
  yScale,
  hideBottomAxis = false,
  hideLeftAxis = false,
  top: top2,
  left: left2,
  children: children2
}) {
  if (width < 10)
    return null;
  return /* @__PURE__ */ react.createElement(Group, {
    left: left2 || margin.left,
    top: top2 || margin.top
  }, /* @__PURE__ */ react.createElement(LinearGradient4, {
    id: "gradient",
    from: gradientColor,
    fromOpacity: 1,
    to: gradientColor,
    toOpacity: 0.2
  }), /* @__PURE__ */ react.createElement(AreaClosed, {
    data: data3,
    x: (d2) => xScale(getDate2(d2)) || 0,
    y: (d2) => yScale(getStockValue(d2)) || 0,
    yScale,
    strokeWidth: 1,
    stroke: "url(#gradient)",
    fill: "url(#gradient)",
    curve: monotoneX
  }), !hideBottomAxis && /* @__PURE__ */ react.createElement(AxisBottom, {
    top: yMax,
    scale: xScale,
    numTicks: width > 520 ? 10 : 5,
    stroke: axisColor,
    tickStroke: axisColor,
    tickLabelProps: () => axisBottomTickLabelProps
  }), !hideLeftAxis && /* @__PURE__ */ react.createElement(AxisLeft, {
    scale: yScale,
    numTicks: 5,
    stroke: axisColor,
    tickStroke: axisColor,
    tickLabelProps: () => axisLeftTickLabelProps
  }), children2);
}

// dist/components/vx.js
var stock = appleStock_default.slice(1e3);
var brushMargin = {top: 10, bottom: 15, left: 50, right: 20};
var chartSeparation = 30;
var PATTERN_ID = "brush_pattern";
var GRADIENT_ID = "brush_gradient";
var accentColor = "#f6acc8";
var background2 = "#584153";
var background22 = "#af8baf";
var selectedBrushStyle = {
  fill: `url(#${PATTERN_ID})`,
  stroke: "white"
};
var getDate3 = (d2) => new Date(d2.date);
var getStockValue2 = (d2) => d2.close;
function BrushChart({
  compact = false,
  width,
  height,
  margin = {
    top: 20,
    left: 50,
    bottom: 20,
    right: 20
  }
}) {
  const [filteredStock, setFilteredStock] = useState(stock);
  const onBrushChange = (domain) => {
    if (!domain)
      return;
    const {x0: x03, x1: x14, y0: y03, y1: y14} = domain;
    const stockCopy = stock.filter((s4) => {
      const x5 = getDate3(s4).getTime();
      const y7 = getStockValue2(s4);
      return x5 > x03 && x5 < x14 && y7 > y03 && y7 < y14;
    });
    setFilteredStock(stockCopy);
  };
  const innerHeight = height - margin.top - margin.bottom;
  const topChartBottomMargin = compact ? chartSeparation / 2 : chartSeparation + 10;
  const topChartHeight = 0.8 * innerHeight - topChartBottomMargin;
  const bottomChartHeight = innerHeight - topChartHeight - chartSeparation;
  const xMax = Math.max(width - margin.left - margin.right, 0);
  const yMax = Math.max(topChartHeight, 0);
  const xBrushMax = Math.max(width - brushMargin.left - brushMargin.right, 0);
  const yBrushMax = Math.max(bottomChartHeight - brushMargin.top - brushMargin.bottom, 0);
  const dateScale2 = useMemo(() => createTimeScale({
    range: [0, xMax],
    domain: extent(filteredStock, getDate3)
  }), [xMax, filteredStock]);
  const stockScale = useMemo(() => createLinearScale2({
    range: [yMax, 0],
    domain: [0, max(filteredStock, getStockValue2) || 0],
    nice: true
  }), [yMax, filteredStock]);
  const brushDateScale = useMemo(() => createTimeScale({
    range: [0, xBrushMax],
    domain: extent(stock, getDate3)
  }), [xBrushMax]);
  const brushStockScale = useMemo(() => createLinearScale2({
    range: [yBrushMax, 0],
    domain: [0, max(stock, getStockValue2) || 0],
    nice: true
  }), [yBrushMax]);
  const initialBrushPosition = useMemo(() => ({
    start: {x: brushDateScale(getDate3(stock[50]))},
    end: {x: brushDateScale(getDate3(stock[100]))}
  }), [brushDateScale]);
  return /* @__PURE__ */ react.createElement("div", null, /* @__PURE__ */ react.createElement("h1", null, "Brush Chart"), /* @__PURE__ */ react.createElement("svg", {
    width,
    height
  }, /* @__PURE__ */ react.createElement(LinearGradient3, {
    id: GRADIENT_ID,
    from: background2,
    to: background22,
    rotate: 45
  }), /* @__PURE__ */ react.createElement("rect", {
    x: 0,
    y: 0,
    width,
    height,
    fill: `url(#${GRADIENT_ID})`,
    rx: 14
  }), /* @__PURE__ */ react.createElement(AreaChart, {
    hideBottomAxis: compact,
    data: filteredStock,
    width,
    margin: {...margin, bottom: topChartBottomMargin},
    yMax,
    xScale: dateScale2,
    yScale: stockScale,
    gradientColor: background22
  }), /* @__PURE__ */ react.createElement(AreaChart, {
    hideBottomAxis: true,
    hideLeftAxis: true,
    data: stock,
    width,
    yMax: yBrushMax,
    xScale: brushDateScale,
    yScale: brushStockScale,
    margin: brushMargin,
    top: topChartHeight + topChartBottomMargin + margin.top,
    gradientColor: background22
  }, /* @__PURE__ */ react.createElement(Lines, {
    id: PATTERN_ID,
    height: 8,
    width: 8,
    stroke: accentColor,
    strokeWidth: 1,
    orientation: ["diagonal"]
  }), /* @__PURE__ */ react.createElement(Brush3, {
    xScale: brushDateScale,
    yScale: brushStockScale,
    width: xBrushMax,
    height: yBrushMax,
    margin: brushMargin,
    handleSize: 8,
    resizeTriggerAreas: ["left", "right"],
    brushDirection: "horizontal",
    initialBrushPosition,
    onChange: onBrushChange,
    onClick: () => setFilteredStock(stock),
    selectedBoxStyle: selectedBrushStyle
  }))));
}
var vx_default = BrushChart;

// dist/components/wythe.js
var CoursePlot = (props) => {
  const {height, width, scale} = props;
  const interval3 = width / scale;
  const canvas = useRef();
  const [cursor2, setCursor] = useState(0);
  const colorScheme = ["royalblue", "wheat", "crimson"];
  const interp = piecewise2(rgb$1.gamma(2.2), colorScheme);
  useEffect(() => {
    const c5 = canvas.current.getContext("2d");
    clearBricks(c5);
    for (let i = 0; i < scale; i++)
      layBrick(c5, i * interval3, i / scale);
  }, [interval3, scale, layBrick]);
  function layBrick(ctx2, tick, value2) {
    ctx2.beginPath();
    ctx2.moveTo(tick, 10);
    ctx2.lineWidth = 20;
    ctx2.strokeStyle = interp(value2);
    ctx2.lineTo(tick + interval3 - 0.5, 10);
    ctx2.stroke();
  }
  function clearBricks(ctx2) {
    ctx2.beginPath();
    ctx2.moveTo(0, 10);
    ctx2.strokeStyle = "linen";
    ctx2.lineTo(width, 10);
    ctx2.stroke();
  }
  const handleMouseMove = (e3) => {
    setCursor("X: " + (e3.clientX - e3.target.offsetLeft));
  };
  return /* @__PURE__ */ react.createElement("canvas", {
    onMouseMove: handleMouseMove,
    ref: canvas,
    width,
    height
  });
};
function WythePlot(props) {
  const width = 900;
  const height = 10;
  const scale = 40;
  const streams = 20;
  const length = streams;
  return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("h1", null, "Heatmap"), /* @__PURE__ */ react.createElement("div", {
    className: "wythe"
  }, Array.from({length}, (_2, index4) => ({id: index4})).map((s4) => /* @__PURE__ */ react.createElement(CoursePlot, {
    key: s4.id,
    width,
    height,
    scale
  }))));
}

// dist/hooks/usePan.js
var ORIGIN = Object.freeze({x: 0, y: 0});
function usePan() {
  const [panState, setPanState] = useState(ORIGIN);
  const [deltas, setDeltas] = useState({x: 0, y: 0});
  const lastPointRef = useRef(ORIGIN);
  const pan = useCallback((e3) => {
    const lastPoint = lastPointRef.current;
    const point8 = {x: e3.pageX, y: e3.pageY};
    lastPointRef.current = point8;
    setPanState((panState2) => {
      const delta = {
        x: lastPoint.x - point8.x,
        y: lastPoint.y - point8.y
      };
      setDeltas(delta);
      const offset = {
        x: panState2.x + delta.x,
        y: panState2.y + delta.y
      };
      return offset;
    });
  }, []);
  const endPan = useCallback(() => {
    document.removeEventListener("mousemove", pan);
    document.removeEventListener("mouseup", endPan);
  }, [pan]);
  const startPan = useCallback((e3) => {
    document.addEventListener("mousemove", pan);
    document.addEventListener("mouseup", endPan);
    lastPointRef.current = {x: e3.pageX, y: e3.pageY};
  }, [pan, endPan]);
  return [panState, startPan, deltas];
}

// dist/hooks/useEventListener.js
function useEventListener(eventName, handler, element = window) {
  const savedHandler = useRef();
  useEffect(() => {
    savedHandler.current = handler;
  }, [handler]);
  useEffect(() => {
    const isSupported = element && element.addEventListener;
    if (!isSupported)
      return;
    const eventListener = (event) => savedHandler.current(event);
    element.addEventListener(eventName, eventListener);
    return () => element.removeEventListener(eventName, eventListener);
  }, [eventName, element]);
}

// dist/hooks/useMousePosition.js
function useMousePosition(el) {
  const [position, setPosition] = useState({x: 0, y: 0});
  const element = el ?? window;
  useEffect(() => {
    const setFromEvent = (e3) => setPosition({x: e3.clientX, y: e3.clientY});
    element.addEventListener("mousemove", setFromEvent);
    return () => {
      element.removeEventListener("mousemove", setFromEvent);
    };
  }, []);
  return position;
}

// dist/hooks/useScale.js
var MIN_SCALE = 0.2;
var MAX_SCALE = 5;
var reducer2 = {
  up: (prev, next) => Math.min(prev + next, MAX_SCALE),
  down: (prev, next) => Math.max(prev - next, MIN_SCALE)
};
function useScale(ref) {
  const [scale, setScale] = useState(1);
  const mousePos = useMousePosition(ref.current);
  const updateScale = ({direction, delta}) => {
    setScale((prevScale) => reducer2[direction](prevScale, delta) ?? prevScale);
  };
  useEventListener("wheel", (e3) => {
    e3.preventDefault();
    let dial = !e3.ctrlKey ? 0.1 : 0.1 * scale;
    updateScale({
      direction: e3.deltaY > 0 ? "up" : "down",
      delta: dial
    });
  }, ref.current, {passive: false});
  return [scale, mousePos];
}

// snowpack/pkg/styled-components.js
/** @license React v17.0.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = 60103;
var c4 = 60106;
var d = 60107;
var e = 60108;
var f2 = 60114;
var g = 60109;
var h = 60110;
var k5 = 60112;
var l2 = 60113;
var m2 = 60120;
var n2 = 60115;
var p2 = 60116;
var q = 60121;
var r2 = 60122;
var u = 60117;
var v2 = 60129;
var w2 = 60131;
if (typeof Symbol === "function" && Symbol.for) {
  x5 = Symbol.for;
  b = x5("react.element");
  c4 = x5("react.portal");
  d = x5("react.fragment");
  e = x5("react.strict_mode");
  f2 = x5("react.profiler");
  g = x5("react.provider");
  h = x5("react.context");
  k5 = x5("react.forward_ref");
  l2 = x5("react.suspense");
  m2 = x5("react.suspense_list");
  n2 = x5("react.memo");
  p2 = x5("react.lazy");
  q = x5("react.block");
  r2 = x5("react.server.block");
  u = x5("react.fundamental");
  v2 = x5("react.debug_trace_mode");
  w2 = x5("react.legacy_hidden");
}
var x5;
function y6(a3) {
  if (typeof a3 === "object" && a3 !== null) {
    var t4 = a3.$$typeof;
    switch (t4) {
      case b:
        switch (a3 = a3.type, a3) {
          case d:
          case f2:
          case e:
          case l2:
          case m2:
            return a3;
          default:
            switch (a3 = a3 && a3.$$typeof, a3) {
              case h:
              case k5:
              case p2:
              case n2:
              case g:
                return a3;
              default:
                return t4;
            }
        }
      case c4:
        return t4;
    }
  }
}
var z2 = g;
var A5 = b;
var B5 = k5;
var C4 = d;
var D5 = p2;
var E4 = n2;
var F3 = c4;
var G3 = f2;
var H3 = e;
var I2 = l2;
var ContextConsumer = h;
var ContextProvider = z2;
var Element2 = A5;
var ForwardRef = B5;
var Fragment = C4;
var Lazy = D5;
var Memo = E4;
var Portal2 = F3;
var Profiler = G3;
var StrictMode = H3;
var Suspense = I2;
var isAsyncMode = function() {
  return false;
};
var isConcurrentMode = function() {
  return false;
};
var isContextConsumer = function(a3) {
  return y6(a3) === h;
};
var isContextProvider = function(a3) {
  return y6(a3) === g;
};
var isElement2 = function(a3) {
  return typeof a3 === "object" && a3 !== null && a3.$$typeof === b;
};
var isForwardRef = function(a3) {
  return y6(a3) === k5;
};
var isFragment = function(a3) {
  return y6(a3) === d;
};
var isLazy = function(a3) {
  return y6(a3) === p2;
};
var isMemo = function(a3) {
  return y6(a3) === n2;
};
var isPortal = function(a3) {
  return y6(a3) === c4;
};
var isProfiler = function(a3) {
  return y6(a3) === f2;
};
var isStrictMode = function(a3) {
  return y6(a3) === e;
};
var isSuspense = function(a3) {
  return y6(a3) === l2;
};
var isValidElementType = function(a3) {
  return typeof a3 === "string" || typeof a3 === "function" || a3 === d || a3 === f2 || a3 === v2 || a3 === e || a3 === l2 || a3 === m2 || a3 === w2 || typeof a3 === "object" && a3 !== null && (a3.$$typeof === p2 || a3.$$typeof === n2 || a3.$$typeof === g || a3.$$typeof === h || a3.$$typeof === k5 || a3.$$typeof === u || a3.$$typeof === q || a3[0] === r2) ? true : false;
};
var typeOf = y6;
var reactIs_production_min = {
  ContextConsumer,
  ContextProvider,
  Element: Element2,
  ForwardRef,
  Fragment,
  Lazy,
  Memo,
  Portal: Portal2,
  Profiler,
  StrictMode,
  Suspense,
  isAsyncMode,
  isConcurrentMode,
  isContextConsumer,
  isContextProvider,
  isElement: isElement2,
  isForwardRef,
  isFragment,
  isLazy,
  isMemo,
  isPortal,
  isProfiler,
  isStrictMode,
  isSuspense,
  isValidElementType,
  typeOf
};
var reactIs = createCommonjsModule(function(module) {
  {
    module.exports = reactIs_production_min;
  }
});
function stylis_min(W4) {
  function M5(d2, c5, e3, h2, a3) {
    for (var m3 = 0, b10 = 0, v3 = 0, n3 = 0, q2, g2, x5 = 0, K5 = 0, k6, u2 = k6 = q2 = 0, l3 = 0, r3 = 0, I3 = 0, t4 = 0, B7 = e3.length, J3 = B7 - 1, y7, f3 = "", p3 = "", F5 = "", G5 = "", C5; l3 < B7; ) {
      g2 = e3.charCodeAt(l3);
      l3 === J3 && b10 + n3 + v3 + m3 !== 0 && (b10 !== 0 && (g2 = b10 === 47 ? 10 : 47), n3 = v3 = m3 = 0, B7++, J3++);
      if (b10 + n3 + v3 + m3 === 0) {
        if (l3 === J3 && (0 < r3 && (f3 = f3.replace(N3, "")), 0 < f3.trim().length)) {
          switch (g2) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f3 += e3.charAt(l3);
          }
          g2 = 59;
        }
        switch (g2) {
          case 123:
            f3 = f3.trim();
            q2 = f3.charCodeAt(0);
            k6 = 1;
            for (t4 = ++l3; l3 < B7; ) {
              switch (g2 = e3.charCodeAt(l3)) {
                case 123:
                  k6++;
                  break;
                case 125:
                  k6--;
                  break;
                case 47:
                  switch (g2 = e3.charCodeAt(l3 + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u2 = l3 + 1; u2 < J3; ++u2) {
                          switch (e3.charCodeAt(u2)) {
                            case 47:
                              if (g2 === 42 && e3.charCodeAt(u2 - 1) === 42 && l3 + 2 !== u2) {
                                l3 = u2 + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (g2 === 47) {
                                l3 = u2 + 1;
                                break a;
                              }
                          }
                        }
                        l3 = u2;
                      }
                  }
                  break;
                case 91:
                  g2++;
                case 40:
                  g2++;
                case 34:
                case 39:
                  for (; l3++ < J3 && e3.charCodeAt(l3) !== g2; ) {
                  }
              }
              if (k6 === 0)
                break;
              l3++;
            }
            k6 = e3.substring(t4, l3);
            q2 === 0 && (q2 = (f3 = f3.replace(ca2, "").trim()).charCodeAt(0));
            switch (q2) {
              case 64:
                0 < r3 && (f3 = f3.replace(N3, ""));
                g2 = f3.charCodeAt(1);
                switch (g2) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r3 = c5;
                    break;
                  default:
                    r3 = O3;
                }
                k6 = M5(c5, r3, k6, g2, a3 + 1);
                t4 = k6.length;
                0 < A6 && (r3 = X5(O3, f3, I3), C5 = H4(3, k6, r3, c5, D6, z3, t4, g2, a3, h2), f3 = r3.join(""), C5 !== void 0 && (t4 = (k6 = C5.trim()).length) === 0 && (g2 = 0, k6 = ""));
                if (0 < t4)
                  switch (g2) {
                    case 115:
                      f3 = f3.replace(da2, ea2);
                    case 100:
                    case 109:
                    case 45:
                      k6 = f3 + "{" + k6 + "}";
                      break;
                    case 107:
                      f3 = f3.replace(fa2, "$1 $2");
                      k6 = f3 + "{" + k6 + "}";
                      k6 = w3 === 1 || w3 === 2 && L3("@" + k6, 3) ? "@-webkit-" + k6 + "@" + k6 : "@" + k6;
                      break;
                    default:
                      k6 = f3 + k6, h2 === 112 && (k6 = (p3 += k6, ""));
                  }
                else
                  k6 = "";
                break;
              default:
                k6 = M5(c5, X5(c5, f3, I3), k6, h2, a3 + 1);
            }
            F5 += k6;
            k6 = I3 = r3 = u2 = q2 = 0;
            f3 = "";
            g2 = e3.charCodeAt(++l3);
            break;
          case 125:
          case 59:
            f3 = (0 < r3 ? f3.replace(N3, "") : f3).trim();
            if (1 < (t4 = f3.length))
              switch (u2 === 0 && (q2 = f3.charCodeAt(0), q2 === 45 || 96 < q2 && 123 > q2) && (t4 = (f3 = f3.replace(" ", ":")).length), 0 < A6 && (C5 = H4(1, f3, c5, d2, D6, z3, p3.length, h2, a3, h2)) !== void 0 && (t4 = (f3 = C5.trim()).length) === 0 && (f3 = "\0\0"), q2 = f3.charCodeAt(0), g2 = f3.charCodeAt(1), q2) {
                case 0:
                  break;
                case 64:
                  if (g2 === 105 || g2 === 99) {
                    G5 += f3 + e3.charAt(l3);
                    break;
                  }
                default:
                  f3.charCodeAt(t4 - 1) !== 58 && (p3 += P5(f3, q2, g2, f3.charCodeAt(2)));
              }
            I3 = r3 = u2 = q2 = 0;
            f3 = "";
            g2 = e3.charCodeAt(++l3);
        }
      }
      switch (g2) {
        case 13:
        case 10:
          b10 === 47 ? b10 = 0 : 1 + q2 === 0 && h2 !== 107 && 0 < f3.length && (r3 = 1, f3 += "\0");
          0 < A6 * Y5 && H4(0, f3, c5, d2, D6, z3, p3.length, h2, a3, h2);
          z3 = 1;
          D6++;
          break;
        case 59:
        case 125:
          if (b10 + n3 + v3 + m3 === 0) {
            z3++;
            break;
          }
        default:
          z3++;
          y7 = e3.charAt(l3);
          switch (g2) {
            case 9:
            case 32:
              if (n3 + m3 + b10 === 0)
                switch (x5) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y7 = "";
                    break;
                  default:
                    g2 !== 32 && (y7 = " ");
                }
              break;
            case 0:
              y7 = "\\0";
              break;
            case 12:
              y7 = "\\f";
              break;
            case 11:
              y7 = "\\v";
              break;
            case 38:
              n3 + b10 + m3 === 0 && (r3 = I3 = 1, y7 = "\f" + y7);
              break;
            case 108:
              if (n3 + b10 + m3 + E5 === 0 && 0 < u2)
                switch (l3 - u2) {
                  case 2:
                    x5 === 112 && e3.charCodeAt(l3 - 3) === 58 && (E5 = x5);
                  case 8:
                    K5 === 111 && (E5 = K5);
                }
              break;
            case 58:
              n3 + b10 + m3 === 0 && (u2 = l3);
              break;
            case 44:
              b10 + v3 + n3 + m3 === 0 && (r3 = 1, y7 += "\r");
              break;
            case 34:
            case 39:
              b10 === 0 && (n3 = n3 === g2 ? 0 : n3 === 0 ? g2 : n3);
              break;
            case 91:
              n3 + b10 + v3 === 0 && m3++;
              break;
            case 93:
              n3 + b10 + v3 === 0 && m3--;
              break;
            case 41:
              n3 + b10 + m3 === 0 && v3--;
              break;
            case 40:
              if (n3 + b10 + m3 === 0) {
                if (q2 === 0)
                  switch (2 * x5 + 3 * K5) {
                    case 533:
                      break;
                    default:
                      q2 = 1;
                  }
                v3++;
              }
              break;
            case 64:
              b10 + v3 + n3 + m3 + u2 + k6 === 0 && (k6 = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n3 + m3 + v3))
                switch (b10) {
                  case 0:
                    switch (2 * g2 + 3 * e3.charCodeAt(l3 + 1)) {
                      case 235:
                        b10 = 47;
                        break;
                      case 220:
                        t4 = l3, b10 = 42;
                    }
                    break;
                  case 42:
                    g2 === 47 && x5 === 42 && t4 + 2 !== l3 && (e3.charCodeAt(t4 + 2) === 33 && (p3 += e3.substring(t4, l3 + 1)), y7 = "", b10 = 0);
                }
          }
          b10 === 0 && (f3 += y7);
      }
      K5 = x5;
      x5 = g2;
      l3++;
    }
    t4 = p3.length;
    if (0 < t4) {
      r3 = c5;
      if (0 < A6 && (C5 = H4(2, p3, r3, d2, D6, z3, t4, h2, a3, h2), C5 !== void 0 && (p3 = C5).length === 0))
        return G5 + p3 + F5;
      p3 = r3.join(",") + "{" + p3 + "}";
      if (w3 * E5 !== 0) {
        w3 !== 2 || L3(p3, 2) || (E5 = 0);
        switch (E5) {
          case 111:
            p3 = p3.replace(ha2, ":-moz-$1") + p3;
            break;
          case 112:
            p3 = p3.replace(Q3, "::-webkit-input-$1") + p3.replace(Q3, "::-moz-$1") + p3.replace(Q3, ":-ms-input-$1") + p3;
        }
        E5 = 0;
      }
    }
    return G5 + p3 + F5;
  }
  function X5(d2, c5, e3) {
    var h2 = c5.trim().split(ia2);
    c5 = h2;
    var a3 = h2.length, m3 = d2.length;
    switch (m3) {
      case 0:
      case 1:
        var b10 = 0;
        for (d2 = m3 === 0 ? "" : d2[0] + " "; b10 < a3; ++b10) {
          c5[b10] = Z4(d2, c5[b10], e3).trim();
        }
        break;
      default:
        var v3 = b10 = 0;
        for (c5 = []; b10 < a3; ++b10) {
          for (var n3 = 0; n3 < m3; ++n3) {
            c5[v3++] = Z4(d2[n3] + " ", h2[b10], e3).trim();
          }
        }
    }
    return c5;
  }
  function Z4(d2, c5, e3) {
    var h2 = c5.charCodeAt(0);
    33 > h2 && (h2 = (c5 = c5.trim()).charCodeAt(0));
    switch (h2) {
      case 38:
        return c5.replace(F4, "$1" + d2.trim());
      case 58:
        return d2.trim() + c5.replace(F4, "$1" + d2.trim());
      default:
        if (0 < 1 * e3 && 0 < c5.indexOf("\f"))
          return c5.replace(F4, (d2.charCodeAt(0) === 58 ? "" : "$1") + d2.trim());
    }
    return d2 + c5;
  }
  function P5(d2, c5, e3, h2) {
    var a3 = d2 + ";", m3 = 2 * c5 + 3 * e3 + 4 * h2;
    if (m3 === 944) {
      d2 = a3.indexOf(":", 9) + 1;
      var b10 = a3.substring(d2, a3.length - 1).trim();
      b10 = a3.substring(0, d2).trim() + b10 + ";";
      return w3 === 1 || w3 === 2 && L3(b10, 1) ? "-webkit-" + b10 + b10 : b10;
    }
    if (w3 === 0 || w3 === 2 && !L3(a3, 1))
      return a3;
    switch (m3) {
      case 1015:
        return a3.charCodeAt(10) === 97 ? "-webkit-" + a3 + a3 : a3;
      case 951:
        return a3.charCodeAt(3) === 116 ? "-webkit-" + a3 + a3 : a3;
      case 963:
        return a3.charCodeAt(5) === 110 ? "-webkit-" + a3 + a3 : a3;
      case 1009:
        if (a3.charCodeAt(4) !== 100)
          break;
      case 969:
      case 942:
        return "-webkit-" + a3 + a3;
      case 978:
        return "-webkit-" + a3 + "-moz-" + a3 + a3;
      case 1019:
      case 983:
        return "-webkit-" + a3 + "-moz-" + a3 + "-ms-" + a3 + a3;
      case 883:
        if (a3.charCodeAt(8) === 45)
          return "-webkit-" + a3 + a3;
        if (0 < a3.indexOf("image-set(", 11))
          return a3.replace(ja2, "$1-webkit-$2") + a3;
        break;
      case 932:
        if (a3.charCodeAt(4) === 45)
          switch (a3.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a3.replace("-grow", "") + "-webkit-" + a3 + "-ms-" + a3.replace("grow", "positive") + a3;
            case 115:
              return "-webkit-" + a3 + "-ms-" + a3.replace("shrink", "negative") + a3;
            case 98:
              return "-webkit-" + a3 + "-ms-" + a3.replace("basis", "preferred-size") + a3;
          }
        return "-webkit-" + a3 + "-ms-" + a3 + a3;
      case 964:
        return "-webkit-" + a3 + "-ms-flex-" + a3 + a3;
      case 1023:
        if (a3.charCodeAt(8) !== 99)
          break;
        b10 = a3.substring(a3.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b10 + "-webkit-" + a3 + "-ms-flex-pack" + b10 + a3;
      case 1005:
        return ka4.test(a3) ? a3.replace(aa2, ":-webkit-") + a3.replace(aa2, ":-moz-") + a3 : a3;
      case 1e3:
        b10 = a3.substring(13).trim();
        c5 = b10.indexOf("-") + 1;
        switch (b10.charCodeAt(0) + b10.charCodeAt(c5)) {
          case 226:
            b10 = a3.replace(G4, "tb");
            break;
          case 232:
            b10 = a3.replace(G4, "tb-rl");
            break;
          case 220:
            b10 = a3.replace(G4, "lr");
            break;
          default:
            return a3;
        }
        return "-webkit-" + a3 + "-ms-" + b10 + a3;
      case 1017:
        if (a3.indexOf("sticky", 9) === -1)
          break;
      case 975:
        c5 = (a3 = d2).length - 10;
        b10 = (a3.charCodeAt(c5) === 33 ? a3.substring(0, c5) : a3).substring(d2.indexOf(":", 7) + 1).trim();
        switch (m3 = b10.charCodeAt(0) + (b10.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b10.charCodeAt(8))
              break;
          case 115:
            a3 = a3.replace(b10, "-webkit-" + b10) + ";" + a3;
            break;
          case 207:
          case 102:
            a3 = a3.replace(b10, "-webkit-" + (102 < m3 ? "inline-" : "") + "box") + ";" + a3.replace(b10, "-webkit-" + b10) + ";" + a3.replace(b10, "-ms-" + b10 + "box") + ";" + a3;
        }
        return a3 + ";";
      case 938:
        if (a3.charCodeAt(5) === 45)
          switch (a3.charCodeAt(6)) {
            case 105:
              return b10 = a3.replace("-items", ""), "-webkit-" + a3 + "-webkit-box-" + b10 + "-ms-flex-" + b10 + a3;
            case 115:
              return "-webkit-" + a3 + "-ms-flex-item-" + a3.replace(ba3, "") + a3;
            default:
              return "-webkit-" + a3 + "-ms-flex-line-pack" + a3.replace("align-content", "").replace(ba3, "") + a3;
          }
        break;
      case 973:
      case 989:
        if (a3.charCodeAt(3) !== 45 || a3.charCodeAt(4) === 122)
          break;
      case 931:
      case 953:
        if (la2.test(d2) === true)
          return (b10 = d2.substring(d2.indexOf(":") + 1)).charCodeAt(0) === 115 ? P5(d2.replace("stretch", "fill-available"), c5, e3, h2).replace(":fill-available", ":stretch") : a3.replace(b10, "-webkit-" + b10) + a3.replace(b10, "-moz-" + b10.replace("fill-", "")) + a3;
        break;
      case 962:
        if (a3 = "-webkit-" + a3 + (a3.charCodeAt(5) === 102 ? "-ms-" + a3 : "") + a3, e3 + h2 === 211 && a3.charCodeAt(13) === 105 && 0 < a3.indexOf("transform", 10))
          return a3.substring(0, a3.indexOf(";", 27) + 1).replace(ma2, "$1-webkit-$2") + a3;
    }
    return a3;
  }
  function L3(d2, c5) {
    var e3 = d2.indexOf(c5 === 1 ? ":" : "{"), h2 = d2.substring(0, c5 !== 3 ? e3 : 10);
    e3 = d2.substring(e3 + 1, d2.length - 1);
    return R3(c5 !== 2 ? h2 : h2.replace(na2, "$1"), e3, c5);
  }
  function ea2(d2, c5) {
    var e3 = P5(c5, c5.charCodeAt(0), c5.charCodeAt(1), c5.charCodeAt(2));
    return e3 !== c5 + ";" ? e3.replace(oa2, " or ($1)").substring(4) : "(" + c5 + ")";
  }
  function H4(d2, c5, e3, h2, a3, m3, b10, v3, n3, q2) {
    for (var g2 = 0, x5 = c5, w4; g2 < A6; ++g2) {
      switch (w4 = S4[g2].call(B6, d2, x5, e3, h2, a3, m3, b10, v3, n3, q2)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x5 = w4;
      }
    }
    if (x5 !== c5)
      return x5;
  }
  function T4(d2) {
    switch (d2) {
      case void 0:
      case null:
        A6 = S4.length = 0;
        break;
      default:
        if (typeof d2 === "function")
          S4[A6++] = d2;
        else if (typeof d2 === "object")
          for (var c5 = 0, e3 = d2.length; c5 < e3; ++c5) {
            T4(d2[c5]);
          }
        else
          Y5 = !!d2 | 0;
    }
    return T4;
  }
  function U4(d2) {
    d2 = d2.prefix;
    d2 !== void 0 && (R3 = null, d2 ? typeof d2 !== "function" ? w3 = 1 : (w3 = 2, R3 = d2) : w3 = 0);
    return U4;
  }
  function B6(d2, c5) {
    var e3 = d2;
    33 > e3.charCodeAt(0) && (e3 = e3.trim());
    V4 = e3;
    e3 = [V4];
    if (0 < A6) {
      var h2 = H4(-1, c5, e3, e3, D6, z3, 0, 0, 0, 0);
      h2 !== void 0 && typeof h2 === "string" && (c5 = h2);
    }
    var a3 = M5(O3, e3, c5, 0, 0);
    0 < A6 && (h2 = H4(-2, a3, e3, e3, D6, z3, a3.length, 0, 0, 0), h2 !== void 0 && (a3 = h2));
    V4 = "";
    E5 = 0;
    z3 = D6 = 1;
    return a3;
  }
  var ca2 = /^\0+/g, N3 = /[\0\r\f]/g, aa2 = /: */g, ka4 = /zoo|gra/, ma2 = /([,: ])(transform)/g, ia2 = /,\r+?/g, F4 = /([\t\r\n ])*\f?&/g, fa2 = /@(k\w+)\s*(\S*)\s*/, Q3 = /::(place)/g, ha2 = /:(read-only)/g, G4 = /[svh]\w+-[tblr]{2}/, da2 = /\(\s*(.*)\s*\)/g, oa2 = /([\s\S]*?);/g, ba3 = /-self|flex-/g, na2 = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la2 = /stretch|:\s*\w+\-(?:conte|avail)/, ja2 = /([^-])(image-set\()/, z3 = 1, D6 = 1, E5 = 0, w3 = 1, O3 = [], S4 = [], A6 = 0, R3 = null, Y5 = 0, V4 = "";
  B6.use = T4;
  B6.set = U4;
  W4 !== void 0 && U4(W4);
  return B6;
}
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
function memoize4(fn) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var index3 = memoize4(function(prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
});
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = typeof Symbol === "function" && Symbol.for;
var c$12 = b$1 ? Symbol.for("react.element") : 60103;
var d$1 = b$1 ? Symbol.for("react.portal") : 60106;
var e$1 = b$1 ? Symbol.for("react.fragment") : 60107;
var f$1 = b$1 ? Symbol.for("react.strict_mode") : 60108;
var g$1 = b$1 ? Symbol.for("react.profiler") : 60114;
var h$1 = b$1 ? Symbol.for("react.provider") : 60109;
var k$1 = b$1 ? Symbol.for("react.context") : 60110;
var l$1 = b$1 ? Symbol.for("react.async_mode") : 60111;
var m$1 = b$1 ? Symbol.for("react.concurrent_mode") : 60111;
var n$1 = b$1 ? Symbol.for("react.forward_ref") : 60112;
var p$1 = b$1 ? Symbol.for("react.suspense") : 60113;
var q$1 = b$1 ? Symbol.for("react.suspense_list") : 60120;
var r$1 = b$1 ? Symbol.for("react.memo") : 60115;
var t = b$1 ? Symbol.for("react.lazy") : 60116;
var v$1 = b$1 ? Symbol.for("react.block") : 60121;
var w$1 = b$1 ? Symbol.for("react.fundamental") : 60117;
var x$12 = b$1 ? Symbol.for("react.responder") : 60118;
var y$12 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a3) {
  if (typeof a3 === "object" && a3 !== null) {
    var u2 = a3.$$typeof;
    switch (u2) {
      case c$12:
        switch (a3 = a3.type, a3) {
          case l$1:
          case m$1:
          case e$1:
          case g$1:
          case f$1:
          case p$1:
            return a3;
          default:
            switch (a3 = a3 && a3.$$typeof, a3) {
              case k$1:
              case n$1:
              case t:
              case r$1:
              case h$1:
                return a3;
              default:
                return u2;
            }
        }
      case d$1:
        return u2;
    }
  }
}
function A$12(a3) {
  return z$1(a3) === m$1;
}
var AsyncMode = l$1;
var ConcurrentMode = m$1;
var ContextConsumer$1 = k$1;
var ContextProvider$1 = h$1;
var Element$1 = c$12;
var ForwardRef$1 = n$1;
var Fragment$1 = e$1;
var Lazy$1 = t;
var Memo$1 = r$1;
var Portal$1 = d$1;
var Profiler$1 = g$1;
var StrictMode$1 = f$1;
var Suspense$1 = p$1;
var isAsyncMode$1 = function(a3) {
  return A$12(a3) || z$1(a3) === l$1;
};
var isConcurrentMode$1 = A$12;
var isContextConsumer$1 = function(a3) {
  return z$1(a3) === k$1;
};
var isContextProvider$1 = function(a3) {
  return z$1(a3) === h$1;
};
var isElement$1 = function(a3) {
  return typeof a3 === "object" && a3 !== null && a3.$$typeof === c$12;
};
var isForwardRef$1 = function(a3) {
  return z$1(a3) === n$1;
};
var isFragment$1 = function(a3) {
  return z$1(a3) === e$1;
};
var isLazy$1 = function(a3) {
  return z$1(a3) === t;
};
var isMemo$1 = function(a3) {
  return z$1(a3) === r$1;
};
var isPortal$1 = function(a3) {
  return z$1(a3) === d$1;
};
var isProfiler$1 = function(a3) {
  return z$1(a3) === g$1;
};
var isStrictMode$1 = function(a3) {
  return z$1(a3) === f$1;
};
var isSuspense$1 = function(a3) {
  return z$1(a3) === p$1;
};
var isValidElementType$1 = function(a3) {
  return typeof a3 === "string" || typeof a3 === "function" || a3 === e$1 || a3 === m$1 || a3 === g$1 || a3 === f$1 || a3 === p$1 || a3 === q$1 || typeof a3 === "object" && a3 !== null && (a3.$$typeof === t || a3.$$typeof === r$1 || a3.$$typeof === h$1 || a3.$$typeof === k$1 || a3.$$typeof === n$1 || a3.$$typeof === w$1 || a3.$$typeof === x$12 || a3.$$typeof === y$12 || a3.$$typeof === v$1);
};
var typeOf$1 = z$1;
var reactIs_production_min$1 = {
  AsyncMode,
  ConcurrentMode,
  ContextConsumer: ContextConsumer$1,
  ContextProvider: ContextProvider$1,
  Element: Element$1,
  ForwardRef: ForwardRef$1,
  Fragment: Fragment$1,
  Lazy: Lazy$1,
  Memo: Memo$1,
  Portal: Portal$1,
  Profiler: Profiler$1,
  StrictMode: StrictMode$1,
  Suspense: Suspense$1,
  isAsyncMode: isAsyncMode$1,
  isConcurrentMode: isConcurrentMode$1,
  isContextConsumer: isContextConsumer$1,
  isContextProvider: isContextProvider$1,
  isElement: isElement$1,
  isForwardRef: isForwardRef$1,
  isFragment: isFragment$1,
  isLazy: isLazy$1,
  isMemo: isMemo$1,
  isPortal: isPortal$1,
  isProfiler: isProfiler$1,
  isStrictMode: isStrictMode$1,
  isSuspense: isSuspense$1,
  isValidElementType: isValidElementType$1,
  typeOf: typeOf$1
};
var reactIs$1 = createCommonjsModule(function(module) {
  {
    module.exports = reactIs_production_min$1;
  }
});
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  $$typeof: true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  $$typeof: true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs$1.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs$1.Memo] = MEMO_STATICS;
function getStatics(component) {
  if (reactIs$1.isMemo(component)) {
    return MEMO_STATICS;
  }
  return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
}
var defineProperty2 = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols2 = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys4 = getOwnPropertyNames(sourceComponent);
    if (getOwnPropertySymbols2) {
      keys4 = keys4.concat(getOwnPropertySymbols2(sourceComponent));
    }
    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);
    for (var i = 0; i < keys4.length; ++i) {
      var key = keys4[i];
      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        try {
          defineProperty2(targetComponent, key, descriptor);
        } catch (e3) {
        }
      }
    }
  }
  return targetComponent;
}
var hoistNonReactStatics_cjs = hoistNonReactStatics;
function v$2() {
  return (v$2 = Object.assign || function(e3) {
    for (var t4 = 1; t4 < arguments.length; t4++) {
      var n3 = arguments[t4];
      for (var r3 in n3)
        Object.prototype.hasOwnProperty.call(n3, r3) && (e3[r3] = n3[r3]);
    }
    return e3;
  }).apply(this, arguments);
}
var g$2 = function(e3, t4) {
  for (var n3 = [e3[0]], r3 = 0, o = t4.length; r3 < o; r3 += 1)
    n3.push(t4[r3], e3[r3 + 1]);
  return n3;
};
var S3 = function(t4) {
  return t4 !== null && typeof t4 == "object" && (t4.toString ? t4.toString() : Object.prototype.toString.call(t4)) === "[object Object]" && !reactIs.typeOf(t4);
};
var w$2 = Object.freeze([]);
var E$12 = Object.freeze({});
function b$2(e3) {
  return typeof e3 == "function";
}
function _(e3) {
  return e3.displayName || e3.name || "Component";
}
function N2(e3) {
  return e3 && typeof e3.styledComponentId == "string";
}
var A$2 = typeof process != "undefined" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
var I$1 = typeof window != "undefined" && "HTMLElement" in window;
var P4 = Boolean(typeof SC_DISABLE_SPEEDY == "boolean" ? SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.REACT_APP_SC_DISABLE_SPEEDY !== void 0 && process.env.REACT_APP_SC_DISABLE_SPEEDY !== "" ? process.env.REACT_APP_SC_DISABLE_SPEEDY !== "false" && process.env.REACT_APP_SC_DISABLE_SPEEDY : typeof process != "undefined" && process.env.SC_DISABLE_SPEEDY !== void 0 && process.env.SC_DISABLE_SPEEDY !== "" ? process.env.SC_DISABLE_SPEEDY !== "false" && process.env.SC_DISABLE_SPEEDY : false);
function j(e3) {
  for (var t4 = arguments.length, n3 = new Array(t4 > 1 ? t4 - 1 : 0), r3 = 1; r3 < t4; r3++)
    n3[r3 - 1] = arguments[r3];
  throw new Error("An error occurred. See https://git.io/JUIaE#" + e3 + " for more information." + (n3.length > 0 ? " Args: " + n3.join(", ") : ""));
}
var T3 = function() {
  function e3(e4) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e4;
  }
  var t4 = e3.prototype;
  return t4.indexOfGroup = function(e4) {
    for (var t5 = 0, n3 = 0; n3 < e4; n3++)
      t5 += this.groupSizes[n3];
    return t5;
  }, t4.insertRules = function(e4, t5) {
    if (e4 >= this.groupSizes.length) {
      for (var n3 = this.groupSizes, r3 = n3.length, o = r3; e4 >= o; )
        (o <<= 1) < 0 && j(16, "" + e4);
      this.groupSizes = new Uint32Array(o), this.groupSizes.set(n3), this.length = o;
      for (var s4 = r3; s4 < o; s4++)
        this.groupSizes[s4] = 0;
    }
    for (var i = this.indexOfGroup(e4 + 1), a3 = 0, c5 = t5.length; a3 < c5; a3++)
      this.tag.insertRule(i, t5[a3]) && (this.groupSizes[e4]++, i++);
  }, t4.clearGroup = function(e4) {
    if (e4 < this.length) {
      var t5 = this.groupSizes[e4], n3 = this.indexOfGroup(e4), r3 = n3 + t5;
      this.groupSizes[e4] = 0;
      for (var o = n3; o < r3; o++)
        this.tag.deleteRule(n3);
    }
  }, t4.getGroup = function(e4) {
    var t5 = "";
    if (e4 >= this.length || this.groupSizes[e4] === 0)
      return t5;
    for (var n3 = this.groupSizes[e4], r3 = this.indexOfGroup(e4), o = r3 + n3, s4 = r3; s4 < o; s4++)
      t5 += this.tag.getRule(s4) + "/*!sc*/\n";
    return t5;
  }, e3;
}();
var k$2 = new Map();
var x$2 = new Map();
var V3 = 1;
var B$12 = function(e3) {
  if (k$2.has(e3))
    return k$2.get(e3);
  for (; x$2.has(V3); )
    V3++;
  var t4 = V3++;
  return k$2.set(e3, t4), x$2.set(t4, e3), t4;
};
var M4 = function(e3) {
  return x$2.get(e3);
};
var z$2 = function(e3, t4) {
  k$2.set(e3, t4), x$2.set(t4, e3);
};
var L2 = "style[" + A$2 + '][data-styled-version="5.2.1"]';
var G$1 = new RegExp("^" + A$2 + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)');
var F$12 = function(e3, t4, n3) {
  for (var r3, o = n3.split(","), s4 = 0, i = o.length; s4 < i; s4++)
    (r3 = o[s4]) && e3.registerName(t4, r3);
};
var Y4 = function(e3, t4) {
  for (var n3 = t4.innerHTML.split("/*!sc*/\n"), r3 = [], o = 0, s4 = n3.length; o < s4; o++) {
    var i = n3[o].trim();
    if (i) {
      var a3 = i.match(G$1);
      if (a3) {
        var c5 = 0 | parseInt(a3[1], 10), u2 = a3[2];
        c5 !== 0 && (z$2(u2, c5), F$12(e3, u2, a3[3]), e3.getTag().insertRules(c5, r3)), r3.length = 0;
      } else
        r3.push(i);
    }
  }
};
var q$2 = function() {
  return typeof __webpack_nonce__ != "undefined" ? __webpack_nonce__ : null;
};
var H$1 = function(e3) {
  var t4 = document.head, n3 = e3 || t4, r3 = document.createElement("style"), o = function(e4) {
    for (var t5 = e4.childNodes, n4 = t5.length; n4 >= 0; n4--) {
      var r4 = t5[n4];
      if (r4 && r4.nodeType === 1 && r4.hasAttribute(A$2))
        return r4;
    }
  }(n3), s4 = o !== void 0 ? o.nextSibling : null;
  r3.setAttribute(A$2, "active"), r3.setAttribute("data-styled-version", "5.2.1");
  var i = q$2();
  return i && r3.setAttribute("nonce", i), n3.insertBefore(r3, s4), r3;
};
var $ = function() {
  function e3(e4) {
    var t5 = this.element = H$1(e4);
    t5.appendChild(document.createTextNode("")), this.sheet = function(e6) {
      if (e6.sheet)
        return e6.sheet;
      for (var t6 = document.styleSheets, n3 = 0, r3 = t6.length; n3 < r3; n3++) {
        var o = t6[n3];
        if (o.ownerNode === e6)
          return o;
      }
      j(17);
    }(t5), this.length = 0;
  }
  var t4 = e3.prototype;
  return t4.insertRule = function(e4, t5) {
    try {
      return this.sheet.insertRule(t5, e4), this.length++, true;
    } catch (e6) {
      return false;
    }
  }, t4.deleteRule = function(e4) {
    this.sheet.deleteRule(e4), this.length--;
  }, t4.getRule = function(e4) {
    var t5 = this.sheet.cssRules[e4];
    return t5 !== void 0 && typeof t5.cssText == "string" ? t5.cssText : "";
  }, e3;
}();
var W3 = function() {
  function e3(e4) {
    var t5 = this.element = H$1(e4);
    this.nodes = t5.childNodes, this.length = 0;
  }
  var t4 = e3.prototype;
  return t4.insertRule = function(e4, t5) {
    if (e4 <= this.length && e4 >= 0) {
      var n3 = document.createTextNode(t5), r3 = this.nodes[e4];
      return this.element.insertBefore(n3, r3 || null), this.length++, true;
    }
    return false;
  }, t4.deleteRule = function(e4) {
    this.element.removeChild(this.nodes[e4]), this.length--;
  }, t4.getRule = function(e4) {
    return e4 < this.length ? this.nodes[e4].textContent : "";
  }, e3;
}();
var U3 = function() {
  function e3(e4) {
    this.rules = [], this.length = 0;
  }
  var t4 = e3.prototype;
  return t4.insertRule = function(e4, t5) {
    return e4 <= this.length && (this.rules.splice(e4, 0, t5), this.length++, true);
  }, t4.deleteRule = function(e4) {
    this.rules.splice(e4, 1), this.length--;
  }, t4.getRule = function(e4) {
    return e4 < this.length ? this.rules[e4] : "";
  }, e3;
}();
var J2 = I$1;
var X4 = {isServer: !I$1, useCSSOMInjection: !P4};
var Z3 = function() {
  function e3(e4, t5, n3) {
    e4 === void 0 && (e4 = E$12), t5 === void 0 && (t5 = {}), this.options = v$2({}, X4, {}, e4), this.gs = t5, this.names = new Map(n3), !this.options.isServer && I$1 && J2 && (J2 = false, function(e6) {
      for (var t6 = document.querySelectorAll(L2), n4 = 0, r3 = t6.length; n4 < r3; n4++) {
        var o = t6[n4];
        o && o.getAttribute(A$2) !== "active" && (Y4(e6, o), o.parentNode && o.parentNode.removeChild(o));
      }
    }(this));
  }
  e3.registerId = function(e4) {
    return B$12(e4);
  };
  var t4 = e3.prototype;
  return t4.reconstructWithOptions = function(t5, n3) {
    return n3 === void 0 && (n3 = true), new e3(v$2({}, this.options, {}, t5), this.gs, n3 && this.names || void 0);
  }, t4.allocateGSInstance = function(e4) {
    return this.gs[e4] = (this.gs[e4] || 0) + 1;
  }, t4.getTag = function() {
    return this.tag || (this.tag = (n3 = (t5 = this.options).isServer, r3 = t5.useCSSOMInjection, o = t5.target, e4 = n3 ? new U3(o) : r3 ? new $(o) : new W3(o), new T3(e4)));
    var e4, t5, n3, r3, o;
  }, t4.hasNameForId = function(e4, t5) {
    return this.names.has(e4) && this.names.get(e4).has(t5);
  }, t4.registerName = function(e4, t5) {
    if (B$12(e4), this.names.has(e4))
      this.names.get(e4).add(t5);
    else {
      var n3 = new Set();
      n3.add(t5), this.names.set(e4, n3);
    }
  }, t4.insertRules = function(e4, t5, n3) {
    this.registerName(e4, t5), this.getTag().insertRules(B$12(e4), n3);
  }, t4.clearNames = function(e4) {
    this.names.has(e4) && this.names.get(e4).clear();
  }, t4.clearRules = function(e4) {
    this.getTag().clearGroup(B$12(e4)), this.clearNames(e4);
  }, t4.clearTag = function() {
    this.tag = void 0;
  }, t4.toString = function() {
    return function(e4) {
      for (var t5 = e4.getTag(), n3 = t5.length, r3 = "", o = 0; o < n3; o++) {
        var s4 = M4(o);
        if (s4 !== void 0) {
          var i = e4.names.get(s4), a3 = t5.getGroup(o);
          if (i !== void 0 && a3.length !== 0) {
            var c5 = A$2 + ".g" + o + '[id="' + s4 + '"]', u2 = "";
            i !== void 0 && i.forEach(function(e6) {
              e6.length > 0 && (u2 += e6 + ",");
            }), r3 += "" + a3 + c5 + '{content:"' + u2 + '"}/*!sc*/\n';
          }
        }
      }
      return r3;
    }(this);
  }, e3;
}();
var K4 = /(a)(d)/gi;
var Q2 = function(e3) {
  return String.fromCharCode(e3 + (e3 > 25 ? 39 : 97));
};
function ee2(e3) {
  var t4, n3 = "";
  for (t4 = Math.abs(e3); t4 > 52; t4 = t4 / 52 | 0)
    n3 = Q2(t4 % 52) + n3;
  return (Q2(t4 % 52) + n3).replace(K4, "$1-$2");
}
var te2 = function(e3, t4) {
  for (var n3 = t4.length; n3; )
    e3 = 33 * e3 ^ t4.charCodeAt(--n3);
  return e3;
};
var ne2 = function(e3) {
  return te2(5381, e3);
};
function re6(e3) {
  for (var t4 = 0; t4 < e3.length; t4 += 1) {
    var n3 = e3[t4];
    if (b$2(n3) && !N2(n3))
      return false;
  }
  return true;
}
var oe2 = ne2("5.2.1");
var se2 = function() {
  function e3(e4, t4, n3) {
    this.rules = e4, this.staticRulesId = "", this.isStatic = (n3 === void 0 || n3.isStatic) && re6(e4), this.componentId = t4, this.baseHash = te2(oe2, t4), this.baseStyle = n3, Z3.registerId(t4);
  }
  return e3.prototype.generateAndInjectStyles = function(e4, t4, n3) {
    var r3 = this.componentId, o = [];
    if (this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e4, t4, n3)), this.isStatic && !n3.hash)
      if (this.staticRulesId && t4.hasNameForId(r3, this.staticRulesId))
        o.push(this.staticRulesId);
      else {
        var s4 = Ne2(this.rules, e4, t4, n3).join(""), i = ee2(te2(this.baseHash, s4.length) >>> 0);
        if (!t4.hasNameForId(r3, i)) {
          var a3 = n3(s4, "." + i, void 0, r3);
          t4.insertRules(r3, i, a3);
        }
        o.push(i), this.staticRulesId = i;
      }
    else {
      for (var c5 = this.rules.length, u2 = te2(this.baseHash, n3.hash), l3 = "", d2 = 0; d2 < c5; d2++) {
        var h2 = this.rules[d2];
        if (typeof h2 == "string")
          l3 += h2, false;
        else if (h2) {
          var p3 = Ne2(h2, e4, t4, n3), f3 = Array.isArray(p3) ? p3.join("") : p3;
          u2 = te2(u2, f3 + d2), l3 += f3;
        }
      }
      if (l3) {
        var m3 = ee2(u2 >>> 0);
        if (!t4.hasNameForId(r3, m3)) {
          var y7 = n3(l3, "." + m3, void 0, r3);
          t4.insertRules(r3, m3, y7);
        }
        o.push(m3);
      }
    }
    return o.join(" ");
  }, e3;
}();
var ie2 = /^\s*\/\/.*$/gm;
var ae2 = [":", "[", ".", "#"];
function ce2(e3) {
  var t4, n3, r3, o, s4 = e3 === void 0 ? E$12 : e3, i = s4.options, a3 = i === void 0 ? E$12 : i, c5 = s4.plugins, u2 = c5 === void 0 ? w$2 : c5, l3 = new stylis_min(a3), d2 = [], h2 = function(e4) {
    function t5(t6) {
      if (t6)
        try {
          e4(t6 + "}");
        } catch (e6) {
        }
    }
    return function(n4, r4, o2, s5, i2, a4, c6, u3, l4, d4) {
      switch (n4) {
        case 1:
          if (l4 === 0 && r4.charCodeAt(0) === 64)
            return e4(r4 + ";"), "";
          break;
        case 2:
          if (u3 === 0)
            return r4 + "/*|*/";
          break;
        case 3:
          switch (u3) {
            case 102:
            case 112:
              return e4(o2[0] + r4), "";
            default:
              return r4 + (d4 === 0 ? "/*|*/" : "");
          }
        case -2:
          r4.split("/*|*/}").forEach(t5);
      }
    };
  }(function(e4) {
    d2.push(e4);
  }), f3 = function(e4, r4, s5) {
    return r4 === 0 && ae2.includes(s5[n3.length]) || s5.match(o) ? e4 : "." + t4;
  };
  function m3(e4, s5, i2, a4) {
    a4 === void 0 && (a4 = "&");
    var c6 = e4.replace(ie2, ""), u3 = s5 && i2 ? i2 + " " + s5 + " { " + c6 + " }" : c6;
    return t4 = a4, n3 = s5, r3 = new RegExp("\\" + n3 + "\\b", "g"), o = new RegExp("(\\" + n3 + "\\b){2,}"), l3(i2 || !s5 ? "" : s5, u3);
  }
  return l3.use([].concat(u2, [function(e4, t5, o2) {
    e4 === 2 && o2.length && o2[0].lastIndexOf(n3) > 0 && (o2[0] = o2[0].replace(r3, f3));
  }, h2, function(e4) {
    if (e4 === -2) {
      var t5 = d2;
      return d2 = [], t5;
    }
  }])), m3.hash = u2.length ? u2.reduce(function(e4, t5) {
    return t5.name || j(15), te2(e4, t5.name);
  }, 5381).toString() : "", m3;
}
var ue2 = react.createContext();
ue2.Consumer;
var de2 = react.createContext();
var he2 = (de2.Consumer, new Z3());
var pe2 = ce2();
function fe2() {
  return react.useContext(ue2) || he2;
}
function me2() {
  return react.useContext(de2) || pe2;
}
var ve2 = function() {
  function e3(e4, t4) {
    var n3 = this;
    this.inject = function(e6, t5) {
      t5 === void 0 && (t5 = pe2);
      var r3 = n3.name + t5.hash;
      e6.hasNameForId(n3.id, r3) || e6.insertRules(n3.id, r3, t5(n3.rules, r3, "@keyframes"));
    }, this.toString = function() {
      return j(12, String(n3.name));
    }, this.name = e4, this.id = "sc-keyframes-" + e4, this.rules = t4;
  }
  return e3.prototype.getName = function(e4) {
    return e4 === void 0 && (e4 = pe2), this.name + e4.hash;
  }, e3;
}();
var ge2 = /([A-Z])/;
var Se2 = /([A-Z])/g;
var we2 = /^ms-/;
var Ee2 = function(e3) {
  return "-" + e3.toLowerCase();
};
function be2(e3) {
  return ge2.test(e3) ? e3.replace(Se2, Ee2).replace(we2, "-ms-") : e3;
}
var _e = function(e3) {
  return e3 == null || e3 === false || e3 === "";
};
function Ne2(e3, n3, r3, o) {
  if (Array.isArray(e3)) {
    for (var s4, i = [], a3 = 0, c5 = e3.length; a3 < c5; a3 += 1)
      (s4 = Ne2(e3[a3], n3, r3, o)) !== "" && (Array.isArray(s4) ? i.push.apply(i, s4) : i.push(s4));
    return i;
  }
  if (_e(e3))
    return "";
  if (N2(e3))
    return "." + e3.styledComponentId;
  if (b$2(e3)) {
    if (typeof (l3 = e3) != "function" || l3.prototype && l3.prototype.isReactComponent || !n3)
      return e3;
    var u2 = e3(n3);
    return Ne2(u2, n3, r3, o);
  }
  var l3;
  return e3 instanceof ve2 ? r3 ? (e3.inject(r3, o), e3.getName(o)) : e3 : S3(e3) ? function e4(t4, n4) {
    var r4, o2, s5 = [];
    for (var i2 in t4)
      t4.hasOwnProperty(i2) && !_e(t4[i2]) && (S3(t4[i2]) ? s5.push.apply(s5, e4(t4[i2], i2)) : b$2(t4[i2]) ? s5.push(be2(i2) + ":", t4[i2], ";") : s5.push(be2(i2) + ": " + (r4 = i2, (o2 = t4[i2]) == null || typeof o2 == "boolean" || o2 === "" ? "" : typeof o2 != "number" || o2 === 0 || r4 in unitlessKeys ? String(o2).trim() : o2 + "px") + ";"));
    return n4 ? [n4 + " {"].concat(s5, ["}"]) : s5;
  }(e3) : e3.toString();
}
function Ae2(e3) {
  for (var t4 = arguments.length, n3 = new Array(t4 > 1 ? t4 - 1 : 0), r3 = 1; r3 < t4; r3++)
    n3[r3 - 1] = arguments[r3];
  return b$2(e3) || S3(e3) ? Ne2(g$2(w$2, [e3].concat(n3))) : n3.length === 0 && e3.length === 1 && typeof e3[0] == "string" ? e3 : Ne2(g$2(e3, n3));
}
var Oe2 = function(e3, t4, n3) {
  return n3 === void 0 && (n3 = E$12), e3.theme !== n3.theme && e3.theme || t4 || n3.theme;
};
var Re2 = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
var De2 = /(^-|-$)/g;
function je2(e3) {
  return e3.replace(Re2, "-").replace(De2, "");
}
var Te2 = function(e3) {
  return ee2(ne2(e3) >>> 0);
};
function ke2(e3) {
  return typeof e3 == "string" && true;
}
var xe = function(e3) {
  return typeof e3 == "function" || typeof e3 == "object" && e3 !== null && !Array.isArray(e3);
};
var Ve = function(e3) {
  return e3 !== "__proto__" && e3 !== "constructor" && e3 !== "prototype";
};
function Be2(e3, t4, n3) {
  var r3 = e3[n3];
  xe(t4) && xe(r3) ? Me2(r3, t4) : e3[n3] = t4;
}
function Me2(e3) {
  for (var t4 = arguments.length, n3 = new Array(t4 > 1 ? t4 - 1 : 0), r3 = 1; r3 < t4; r3++)
    n3[r3 - 1] = arguments[r3];
  for (var o = 0, s4 = n3; o < s4.length; o++) {
    var i = s4[o];
    if (xe(i))
      for (var a3 in i)
        Ve(a3) && Be2(e3, i[a3], a3);
  }
  return e3;
}
var ze = react.createContext();
ze.Consumer;
var Fe2 = {};
function Ye2(e3, t4, n3) {
  var o = N2(e3), i = !ke2(e3), a3 = t4.attrs, c5 = a3 === void 0 ? w$2 : a3, d2 = t4.componentId, h2 = d2 === void 0 ? function(e4, t5) {
    var n4 = typeof e4 != "string" ? "sc" : je2(e4);
    Fe2[n4] = (Fe2[n4] || 0) + 1;
    var r3 = n4 + "-" + Te2("5.2.1" + n4 + Fe2[n4]);
    return t5 ? t5 + "-" + r3 : r3;
  }(t4.displayName, t4.parentComponentId) : d2, p3 = t4.displayName, f3 = p3 === void 0 ? function(e4) {
    return ke2(e4) ? "styled." + e4 : "Styled(" + _(e4) + ")";
  }(e3) : p3, g2 = t4.displayName && t4.componentId ? je2(t4.displayName) + "-" + t4.componentId : t4.componentId || h2, S4 = o && e3.attrs ? Array.prototype.concat(e3.attrs, c5).filter(Boolean) : c5, A6 = t4.shouldForwardProp;
  o && e3.shouldForwardProp && (A6 = t4.shouldForwardProp ? function(n4, r3) {
    return e3.shouldForwardProp(n4, r3) && t4.shouldForwardProp(n4, r3);
  } : e3.shouldForwardProp);
  var C5, I3 = new se2(n3, g2, o ? e3.componentStyle : void 0), P5 = I3.isStatic && c5.length === 0, O3 = function(e4, t5) {
    return function(e6, t6, n4, r3) {
      var o2 = e6.attrs, i2 = e6.componentStyle, a4 = e6.defaultProps, c6 = e6.foldedComponentIds, d4 = e6.shouldForwardProp, h3 = e6.styledComponentId, p4 = e6.target;
      var f4 = function(e7, t7, n5) {
        e7 === void 0 && (e7 = E$12);
        var r4 = v$2({}, t7, {theme: e7}), o3 = {};
        return n5.forEach(function(e8) {
          var t8, n6, s4, i3 = e8;
          for (t8 in b$2(i3) && (i3 = i3(r4)), i3)
            r4[t8] = o3[t8] = t8 === "className" ? (n6 = o3[t8], s4 = i3[t8], n6 && s4 ? n6 + " " + s4 : n6 || s4) : i3[t8];
        }), [r4, o3];
      }(Oe2(t6, react.useContext(ze), a4) || E$12, t6, o2), y7 = f4[0], g3 = f4[1], S5 = function(e7, t7, n5, r4) {
        var o3 = fe2(), s4 = me2(), i3 = t7 ? e7.generateAndInjectStyles(E$12, o3, s4) : e7.generateAndInjectStyles(n5, o3, s4);
        return i3;
      }(i2, r3, y7), w3 = n4, _2 = g3.$as || t6.$as || g3.as || t6.as || p4, N3 = ke2(_2), A7 = g3 !== t6 ? v$2({}, t6, {}, g3) : t6, C6 = {};
      for (var I4 in A7)
        I4[0] !== "$" && I4 !== "as" && (I4 === "forwardedAs" ? C6.as = A7[I4] : (d4 ? d4(I4, index3) : !N3 || index3(I4)) && (C6[I4] = A7[I4]));
      return t6.style && g3.style !== t6.style && (C6.style = v$2({}, t6.style, {}, g3.style)), C6.className = Array.prototype.concat(c6, h3, S5 !== h3 ? S5 : null, t6.className, g3.className).filter(Boolean).join(" "), C6.ref = w3, react.createElement(_2, C6);
    }(C5, e4, t5, P5);
  };
  return O3.displayName = f3, (C5 = react.forwardRef(O3)).attrs = S4, C5.componentStyle = I3, C5.displayName = f3, C5.shouldForwardProp = A6, C5.foldedComponentIds = o ? Array.prototype.concat(e3.foldedComponentIds, e3.styledComponentId) : w$2, C5.styledComponentId = g2, C5.target = o ? e3.target : e3, C5.withComponent = function(e4) {
    var r3 = t4.componentId, o2 = function(e6, t5) {
      if (e6 == null)
        return {};
      var n4, r4, o3 = {}, s5 = Object.keys(e6);
      for (r4 = 0; r4 < s5.length; r4++)
        n4 = s5[r4], t5.indexOf(n4) >= 0 || (o3[n4] = e6[n4]);
      return o3;
    }(t4, ["componentId"]), s4 = r3 && r3 + "-" + (ke2(e4) ? e4 : je2(_(e4)));
    return Ye2(e4, v$2({}, o2, {attrs: S4, componentId: s4}), n3);
  }, Object.defineProperty(C5, "defaultProps", {get: function() {
    return this._foldedDefaultProps;
  }, set: function(t5) {
    this._foldedDefaultProps = o ? Me2({}, e3.defaultProps, t5) : t5;
  }}), C5.toString = function() {
    return "." + C5.styledComponentId;
  }, i && hoistNonReactStatics_cjs(C5, e3, {attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true}), C5;
}
var qe2 = function(e3) {
  return function e4(t4, r3, o) {
    if (o === void 0 && (o = E$12), !reactIs.isValidElementType(r3))
      return j(1, String(r3));
    var s4 = function() {
      return t4(r3, o, Ae2.apply(void 0, arguments));
    };
    return s4.withConfig = function(n3) {
      return e4(t4, r3, v$2({}, o, {}, n3));
    }, s4.attrs = function(n3) {
      return e4(t4, r3, v$2({}, o, {attrs: Array.prototype.concat(o.attrs, n3).filter(Boolean)}));
    }, s4;
  }(Ye2, e3);
};
["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"].forEach(function(e3) {
  qe2[e3] = qe2(e3);
});
var styled_components_default = qe2;

// dist/components/zoompan.js
var Hud = styled_components_default.span`
    z-index: 99;
`;
var HEIGHT = 400;
var WIDTH = 700;
var styles = {
  position: "relative",
  margin: "1rem auto",
  background: "black",
  color: "white",
  width: `${WIDTH}px`,
  height: `${HEIGHT}px`,
  display: "flex",
  flexDirection: "column",
  alignItems: "start",
  justifyContent: "flex-end",
  userSelect: "none",
  overflow: "hidden",
  padding: "4px"
};
var cursor = {
  cursor: "all-scroll"
};
var ptOps = {
  "+": (p1, p22) => ({x: p1.x + p22.x, y: p1.y + p22.y}),
  "-": (p1, p22) => ({x: p1.x - p22.x, y: p1.y - p22.y}),
  "-+": (p1, p22) => ({x: p1.x - p22.x, y: p1.y + p22.y}),
  x: (p1, p22) => ({x: p1.x * p22.x, y: p1.y * p22.y}),
  "*": (p1, p22) => ({x: p1.x * p22.x, y: p1.y * p22.y}),
  "/": (p1, p22) => ({x: p1.x / p22.x, y: p1.y / p22.y}),
  "==": (p1, p22) => p1.x === p22.x && p1.y === p22.y ? true : false,
  anchor: (p1) => Math.abs(p1.x) < 0.2 * HEIGHT && Math.abs(p1.y) < 0.2 * HEIGHT ? {x: 0, y: 0} : p1,
  cap: (p1) => ({x: Math.sign(p1.x) * Math.min(Math.abs(p1.x), WIDTH), y: Math.sign(p1.y) * Math.min(Math.abs(p1.y), HEIGHT)}),
  max: (p1) => Math.abs(p1.x) > Math.abs(p1.y) ? {x: p1.x, y: 0} : {x: 0, y: p1.y},
  scale: (p1, factor) => ({x: p1.x / factor, y: p1.y / factor}),
  translate: (p1, factor) => ({x: p1.x + factor, y: p1.y + factor})
};
var infixPts = (p1, operator, p22 = {x: 0, y: 0}) => ptOps[operator]?.(p1, p22) ?? console.error("Point Operation not found: " + operator);
var center2 = null;
var adjust = {x: 0, y: 0};
var ZoomPan = () => {
  const [freeZoom, setFreeZoom] = useState(true);
  const ref = useRef(null);
  const [inset, setInset] = useState({x: 0, y: 0});
  const [offset, startPan] = usePan();
  const [scale, mousePos] = useScale(ref);
  useLayoutEffect(() => {
    const height = ref.current?.clientHeight ?? 0;
    const width = ref.current?.clientWidth ?? 0;
    const marginTop = ref.current.offsetTop;
    const marginLeft = ref.current.offsetLeft;
    if (center2 === null) {
      center2 = {x: width / 2 + marginLeft, y: height / 2 + marginTop};
    } else {
      const focal = infixPts(mousePos, "-", center2);
      const anchored = infixPts(focal, "anchor");
      const maxOrd = infixPts(anchored, "max");
      const scaleFocal = infixPts(freeZoom ? anchored : maxOrd, "scale", scale);
      adjust = infixPts(infixPts(adjust, "+", freeZoom ? scaleFocal : maxOrd), "cap");
    }
    setInset({
      x: (width - width / scale) / 2,
      y: (height - height / scale) / 2
    });
  }, [scale, setInset]);
  const [interaction, setInteraction] = useState(null);
  useEventListener("mousedown", () => setInteraction("Panning"), ref.current);
  useEventListener("mouseup", () => setInteraction(null), ref.current);
  return /* @__PURE__ */ react.createElement(react.Fragment, null, /* @__PURE__ */ react.createElement("div", {
    onMouseDown: startPan,
    style: {...styles, ...cursor},
    ref
  }, /* @__PURE__ */ react.createElement("div", {
    className: "zoompan",
    style: {
      transition: `transform .2s ${interaction === "Panning" ? "" : ", background-position .45s"}`,
      inset: `${inset.y}px ${inset.x}px`,
      transform: `scale(${scale})`,
      backgroundPosition: `${-adjust.x - offset.x}px ${-adjust.y - offset.y}px`
    }
  }), /* @__PURE__ */ react.createElement(Hud, null, "Scale: ", scale.toFixed(1), " ", interaction ?? ""), /* @__PURE__ */ react.createElement(Hud, null, "Inset: ", `{x: ${inset.x.toFixed(0)}, y: ${inset.y.toFixed(0)}}`), /* @__PURE__ */ react.createElement(Hud, null, "Offset: ", `{x: ${offset.x}, y: ${offset.y}}`), /* @__PURE__ */ react.createElement(Hud, null, "Adjustment: ", `{x: ${adjust.x.toFixed(0)}, y: ${adjust.y.toFixed(0)}}`), /* @__PURE__ */ react.createElement(Hud, null, "Mouse: ", `{x: ${(mousePos.x - (center2?.x ?? 0)).toFixed(0)}, y: ${(mousePos.y - (center2?.y ?? 0)).toFixed(0)}}`)), /* @__PURE__ */ react.createElement("button", {
    onClick: () => setFreeZoom(!freeZoom)
  }, "Cardinal Zooming: ", freeZoom ? "Off" : "On"));
};

// data/nivo.js
var nivoData = [
  {
    id: "temp.",
    ranges: [
      42,
      17,
      109,
      0,
      140
    ],
    measures: [
      49
    ],
    markers: [
      121
    ]
  },
  {
    id: "power",
    ranges: [
      0.7487512652644422,
      0.008978541042848448,
      1.881386829448425,
      0,
      2
    ],
    measures: [
      0.7616903879782198,
      1.406703180792063
    ],
    markers: [
      1.9296471446514256
    ]
  },
  {
    id: "volume",
    ranges: [
      25,
      44,
      18,
      51,
      8,
      70,
      0,
      80
    ],
    measures: [
      56
    ],
    markers: [
      66
    ]
  },
  {
    id: "cost",
    ranges: [
      37258,
      106937,
      325506,
      0,
      5e5
    ],
    measures: [
      5638,
      106525
    ],
    markers: [
      313074
    ]
  },
  {
    id: "revenue",
    ranges: [
      7,
      1,
      5,
      0,
      13
    ],
    measures: [
      10
    ],
    markers: [
      12.624337014402919,
      11.719197681557215
    ]
  }
];

// data/quality.js
var quality = [
  {day: "2017-04-18", productPerceivedQuality: "2.8"},
  {day: "2017-04-19", productPerceivedQuality: "2.9"},
  {day: "2017-04-20", productPerceivedQuality: "2.7"},
  {day: "2017-04-21", productPerceivedQuality: "4.3"},
  {day: "2017-04-22", productPerceivedQuality: "4.6"},
  {day: "2017-04-23", productPerceivedQuality: "5"},
  {day: "2017-04-24", productPerceivedQuality: "5.2"},
  {day: "2017-04-25", productPerceivedQuality: "5.1"},
  {day: "2017-04-26", productPerceivedQuality: "4.8"},
  {day: "2017-04-27", productPerceivedQuality: "4.9"},
  {day: "2017-04-28", productPerceivedQuality: "5.1"},
  {day: "2017-04-29", productPerceivedQuality: "5.3"},
  {day: "2017-04-30", productPerceivedQuality: "5.6"},
  {day: "2017-05-01", productPerceivedQuality: "6.2"}
];

// dist/App.js
function App() {
  const [count2, setCount] = useState(0);
  useEffect(() => {
    const timer3 = setTimeout(() => setCount(count2 + 1), 1e3);
    return () => clearTimeout(timer3);
  }, [count2, setCount]);
  return /* @__PURE__ */ react.createElement("div", {
    className: "App"
  }, /* @__PURE__ */ react.createElement("header", {
    className: "App-header"
  }, /* @__PURE__ */ react.createElement("div", {
    className: "logo-box"
  }, /* @__PURE__ */ react.createElement("code", null, count2), /* @__PURE__ */ react.createElement(y$1, {
    to: "/",
    style: {width: "50px"}
  }, /* @__PURE__ */ react.createElement("img", {
    src: logo_svg_proxy_default,
    className: "App-logo",
    alt: "logo"
  }))), /* @__PURE__ */ react.createElement(Navigate, null)), /* @__PURE__ */ react.createElement(E$1, null, /* @__PURE__ */ react.createElement(D$1, {
    path: "/",
    element: /* @__PURE__ */ react.createElement(Home, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/d3",
    element: /* @__PURE__ */ react.createElement(D3react, {
      data: quality,
      height: 40,
      width: 200,
      margin: 20,
      selectX: (datum2) => new Date(datum2.day).setHours(0, 0, 0, 0),
      selectY: (datum2) => datum2.productPerceivedQuality
    })
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/dashboard",
    element: /* @__PURE__ */ react.createElement(dashboard_default, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/visx",
    element: /* @__PURE__ */ react.createElement(Visx, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/victory",
    element: /* @__PURE__ */ react.createElement(StackedArea, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/recharts",
    element: /* @__PURE__ */ react.createElement(LineRecharts, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/reactvis",
    element: /* @__PURE__ */ react.createElement(reactvis_default, null)
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/nivo",
    element: /* @__PURE__ */ react.createElement(NivoBullet, {
      data: nivoData
    })
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/vx",
    element: /* @__PURE__ */ react.createElement(vx_default, {
      height: 400,
      width: 600
    })
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/wythe",
    element: /* @__PURE__ */ react.createElement("div", {
      style: {margin: "1rem"}
    }, /* @__PURE__ */ react.createElement(WythePlot, null))
  }), /* @__PURE__ */ react.createElement(D$1, {
    path: "/zoompan",
    element: /* @__PURE__ */ react.createElement(ZoomPan, null)
  })));
}
var App_default = App;

// dist/index.js
import.meta.env = env_exports;
reactDom.render(/* @__PURE__ */ react.createElement(react.StrictMode, null, /* @__PURE__ */ react.createElement(w, null, /* @__PURE__ */ react.createElement(App_default, null))), document.getElementById("root"));
if (void 0) {
  (void 0).accept();
}
